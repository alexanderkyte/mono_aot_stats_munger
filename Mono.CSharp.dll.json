{
  "methods" : [
    {
      "name" : ".ctor",
      "signature" : "void Mono.CompilerServices.SymbolWriter.MonoSymbolFileException:.ctor ()",
      "code_size" : "18",
      "class" : "MonoSymbolFileException",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CompilerServices.SymbolWriter.MonoSymbolFileException:.ctor (string,object[])",
      "code_size" : "48",
      "class" : "MonoSymbolFileException",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CompilerServices.SymbolWriter.MonoSymbolFileException:.ctor (string,System.Exception)",
      "code_size" : "28",
      "class" : "MonoSymbolFileException",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CompilerServices.SymbolWriter.MyBinaryWriter:.ctor (System.IO.Stream)",
      "code_size" : "23",
      "class" : "MyBinaryWriter",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "WriteLeb128",
      "signature" : "void Mono.CompilerServices.SymbolWriter.MyBinaryWriter:WriteLeb128 (int)",
      "code_size" : "23",
      "class" : "MyBinaryWriter",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CompilerServices.SymbolWriter.MyBinaryReader:.ctor (System.IO.Stream)",
      "code_size" : "23",
      "class" : "MyBinaryReader",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "ReadLeb128",
      "signature" : "int Mono.CompilerServices.SymbolWriter.MyBinaryReader:ReadLeb128 ()",
      "code_size" : "18",
      "class" : "MyBinaryReader",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "ReadString",
      "signature" : "string Mono.CompilerServices.SymbolWriter.MyBinaryReader:ReadString (int)",
      "code_size" : "134",
      "class" : "MyBinaryReader",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CompilerServices.SymbolWriter.MonoSymbolFile:.ctor ()",
      "code_size" : "344",
      "class" : "MonoSymbolFile",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CompilerServices.SymbolWriter.MonoSymbolFile:.ctor (System.IO.Stream)",
      "code_size" : "1559",
      "class" : "MonoSymbolFile",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddSource",
      "signature" : "int Mono.CompilerServices.SymbolWriter.MonoSymbolFile:AddSource (Mono.CompilerServices.SymbolWriter.SourceFileEntry)",
      "code_size" : "59",
      "class" : "MonoSymbolFile",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddCompileUnit",
      "signature" : "int Mono.CompilerServices.SymbolWriter.MonoSymbolFile:AddCompileUnit (Mono.CompilerServices.SymbolWriter.CompileUnitEntry)",
      "code_size" : "59",
      "class" : "MonoSymbolFile",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddMethod",
      "signature" : "void Mono.CompilerServices.SymbolWriter.MonoSymbolFile:AddMethod (Mono.CompilerServices.SymbolWriter.MethodEntry)",
      "code_size" : "41",
      "class" : "MonoSymbolFile",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "DefineMethod",
      "signature" : "Mono.CompilerServices.SymbolWriter.MethodEntry Mono.CompilerServices.SymbolWriter.MonoSymbolFile:DefineMethod (Mono.CompilerServices.SymbolWriter.CompileUnitEntry,int,Mono.CompilerServices.SymbolWriter.ScopeVariable[],Mono.CompilerServices.SymbolWriter.LocalVariableEntry[],Mono.CompilerServices.SymbolWriter.LineNumberEntry[],Mono.CompilerServices.SymbolWriter.CodeBlockEntry[],string,Mono.CompilerServices.SymbolWriter.MethodEntry/Flags,int)",
      "code_size" : "191",
      "class" : "MonoSymbolFile",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "DefineAnonymousScope",
      "signature" : "void Mono.CompilerServices.SymbolWriter.MonoSymbolFile:DefineAnonymousScope (int)",
      "code_size" : "197",
      "class" : "MonoSymbolFile",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "DefineCapturedVariable",
      "signature" : "void Mono.CompilerServices.SymbolWriter.MonoSymbolFile:DefineCapturedVariable (int,string,string,Mono.CompilerServices.SymbolWriter.CapturedVariable/CapturedKind)",
      "code_size" : "130",
      "class" : "MonoSymbolFile",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "DefineCapturedScope",
      "signature" : "void Mono.CompilerServices.SymbolWriter.MonoSymbolFile:DefineCapturedScope (int,int,string)",
      "code_size" : "120",
      "class" : "MonoSymbolFile",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetNextTypeIndex",
      "signature" : "int Mono.CompilerServices.SymbolWriter.MonoSymbolFile:GetNextTypeIndex ()",
      "code_size" : "28",
      "class" : "MonoSymbolFile",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetNextMethodIndex",
      "signature" : "int Mono.CompilerServices.SymbolWriter.MonoSymbolFile:GetNextMethodIndex ()",
      "code_size" : "28",
      "class" : "MonoSymbolFile",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetNextNamespaceIndex",
      "signature" : "int Mono.CompilerServices.SymbolWriter.MonoSymbolFile:GetNextNamespaceIndex ()",
      "code_size" : "28",
      "class" : "MonoSymbolFile",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "Write",
      "signature" : "void Mono.CompilerServices.SymbolWriter.MonoSymbolFile:Write (Mono.CompilerServices.SymbolWriter.MyBinaryWriter,System.Guid)",
      "code_size" : "1895",
      "class" : "MonoSymbolFile",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateSymbolFile",
      "signature" : "void Mono.CompilerServices.SymbolWriter.MonoSymbolFile:CreateSymbolFile (System.Guid,System.IO.FileStream)",
      "code_size" : "121",
      "class" : "MonoSymbolFile",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "ReadSymbolFile",
      "signature" : "Mono.CompilerServices.SymbolWriter.MonoSymbolFile Mono.CompilerServices.SymbolWriter.MonoSymbolFile:ReadSymbolFile (System.Reflection.Assembly)",
      "code_size" : "127",
      "class" : "MonoSymbolFile",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "ReadSymbolFile",
      "signature" : "Mono.CompilerServices.SymbolWriter.MonoSymbolFile Mono.CompilerServices.SymbolWriter.MonoSymbolFile:ReadSymbolFile (string)",
      "code_size" : "62",
      "class" : "MonoSymbolFile",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "ReadSymbolFile",
      "signature" : "Mono.CompilerServices.SymbolWriter.MonoSymbolFile Mono.CompilerServices.SymbolWriter.MonoSymbolFile:ReadSymbolFile (string,System.Guid)",
      "code_size" : "219",
      "class" : "MonoSymbolFile",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "ReadSymbolFile",
      "signature" : "Mono.CompilerServices.SymbolWriter.MonoSymbolFile Mono.CompilerServices.SymbolWriter.MonoSymbolFile:ReadSymbolFile (System.IO.Stream)",
      "code_size" : "52",
      "class" : "MonoSymbolFile",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_CompileUnitCount",
      "signature" : "int Mono.CompilerServices.SymbolWriter.MonoSymbolFile:get_CompileUnitCount ()",
      "code_size" : "24",
      "class" : "MonoSymbolFile",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_SourceCount",
      "signature" : "int Mono.CompilerServices.SymbolWriter.MonoSymbolFile:get_SourceCount ()",
      "code_size" : "24",
      "class" : "MonoSymbolFile",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_MethodCount",
      "signature" : "int Mono.CompilerServices.SymbolWriter.MonoSymbolFile:get_MethodCount ()",
      "code_size" : "24",
      "class" : "MonoSymbolFile",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_TypeCount",
      "signature" : "int Mono.CompilerServices.SymbolWriter.MonoSymbolFile:get_TypeCount ()",
      "code_size" : "24",
      "class" : "MonoSymbolFile",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_AnonymousScopeCount",
      "signature" : "int Mono.CompilerServices.SymbolWriter.MonoSymbolFile:get_AnonymousScopeCount ()",
      "code_size" : "24",
      "class" : "MonoSymbolFile",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_NamespaceCount",
      "signature" : "int Mono.CompilerServices.SymbolWriter.MonoSymbolFile:get_NamespaceCount ()",
      "code_size" : "20",
      "class" : "MonoSymbolFile",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Guid",
      "signature" : "System.Guid Mono.CompilerServices.SymbolWriter.MonoSymbolFile:get_Guid ()",
      "code_size" : "65",
      "class" : "MonoSymbolFile",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_OffsetTable",
      "signature" : "Mono.CompilerServices.SymbolWriter.OffsetTable Mono.CompilerServices.SymbolWriter.MonoSymbolFile:get_OffsetTable ()",
      "code_size" : "20",
      "class" : "MonoSymbolFile",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSourceFile",
      "signature" : "Mono.CompilerServices.SymbolWriter.SourceFileEntry Mono.CompilerServices.SymbolWriter.MonoSymbolFile:GetSourceFile (int)",
      "code_size" : "508",
      "class" : "MonoSymbolFile",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Sources",
      "signature" : "Mono.CompilerServices.SymbolWriter.SourceFileEntry[] Mono.CompilerServices.SymbolWriter.MonoSymbolFile:get_Sources ()",
      "code_size" : "158",
      "class" : "MonoSymbolFile",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetCompileUnit",
      "signature" : "Mono.CompilerServices.SymbolWriter.CompileUnitEntry Mono.CompilerServices.SymbolWriter.MonoSymbolFile:GetCompileUnit (int)",
      "code_size" : "508",
      "class" : "MonoSymbolFile",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_CompileUnits",
      "signature" : "Mono.CompilerServices.SymbolWriter.CompileUnitEntry[] Mono.CompilerServices.SymbolWriter.MonoSymbolFile:get_CompileUnits ()",
      "code_size" : "158",
      "class" : "MonoSymbolFile",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "read_methods",
      "signature" : "void Mono.CompilerServices.SymbolWriter.MonoSymbolFile:read_methods ()",
      "code_size" : "589",
      "class" : "MonoSymbolFile",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetMethodByToken",
      "signature" : "Mono.CompilerServices.SymbolWriter.MethodEntry Mono.CompilerServices.SymbolWriter.MonoSymbolFile:GetMethodByToken (int)",
      "code_size" : "260",
      "class" : "MonoSymbolFile",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetMethod",
      "signature" : "Mono.CompilerServices.SymbolWriter.MethodEntry Mono.CompilerServices.SymbolWriter.MonoSymbolFile:GetMethod (int)",
      "code_size" : "289",
      "class" : "MonoSymbolFile",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Methods",
      "signature" : "Mono.CompilerServices.SymbolWriter.MethodEntry[] Mono.CompilerServices.SymbolWriter.MonoSymbolFile:get_Methods ()",
      "code_size" : "264",
      "class" : "MonoSymbolFile",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "FindSource",
      "signature" : "int Mono.CompilerServices.SymbolWriter.MonoSymbolFile:FindSource (string)",
      "code_size" : "438",
      "class" : "MonoSymbolFile",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetAnonymousScope",
      "signature" : "Mono.CompilerServices.SymbolWriter.AnonymousScopeEntry Mono.CompilerServices.SymbolWriter.MonoSymbolFile:GetAnonymousScope (int)",
      "code_size" : "507",
      "class" : "MonoSymbolFile",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_BinaryReader",
      "signature" : "Mono.CompilerServices.SymbolWriter.MyBinaryReader Mono.CompilerServices.SymbolWriter.MonoSymbolFile:get_BinaryReader ()",
      "code_size" : "51",
      "class" : "MonoSymbolFile",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "Dispose",
      "signature" : "void Mono.CompilerServices.SymbolWriter.MonoSymbolFile:Dispose ()",
      "code_size" : "28",
      "class" : "MonoSymbolFile",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "Dispose",
      "signature" : "void Mono.CompilerServices.SymbolWriter.MonoSymbolFile:Dispose (bool)",
      "code_size" : "72",
      "class" : "MonoSymbolFile",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CompilerServices.SymbolWriter.OffsetTable:.ctor ()",
      "code_size" : "97",
      "class" : "OffsetTable",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CompilerServices.SymbolWriter.OffsetTable:.ctor (System.IO.BinaryReader,int,int)",
      "code_size" : "377",
      "class" : "OffsetTable",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "Write",
      "signature" : "void Mono.CompilerServices.SymbolWriter.OffsetTable:Write (System.IO.BinaryWriter,int,int)",
      "code_size" : "353",
      "class" : "OffsetTable",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "ToString",
      "signature" : "string Mono.CompilerServices.SymbolWriter.OffsetTable:ToString ()",
      "code_size" : "898",
      "class" : "OffsetTable",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CompilerServices.SymbolWriter.LineNumberEntry:.ctor (int,int,int,int)",
      "code_size" : "41",
      "class" : "LineNumberEntry",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CompilerServices.SymbolWriter.LineNumberEntry:.ctor (int,int,int)",
      "code_size" : "51",
      "class" : "LineNumberEntry",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CompilerServices.SymbolWriter.LineNumberEntry:.ctor (int,int,int,int,bool)",
      "code_size" : "91",
      "class" : "LineNumberEntry",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CompilerServices.SymbolWriter.LineNumberEntry:.ctor (int,int,int,int,int,int,bool)",
      "code_size" : "87",
      "class" : "LineNumberEntry",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "ToString",
      "signature" : "string Mono.CompilerServices.SymbolWriter.LineNumberEntry:ToString ()",
      "code_size" : "530",
      "class" : "LineNumberEntry",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : ".cctor",
      "signature" : "void Mono.CompilerServices.SymbolWriter.LineNumberEntry:.cctor ()",
      "code_size" : "61",
      "class" : "LineNumberEntry",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CompilerServices.SymbolWriter.LineNumberEntry/LocationComparer:.ctor ()",
      "code_size" : "9",
      "class" : "LocationComparer",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Compare",
      "signature" : "int Mono.CompilerServices.SymbolWriter.LineNumberEntry/LocationComparer:Compare (Mono.CompilerServices.SymbolWriter.LineNumberEntry,Mono.CompilerServices.SymbolWriter.LineNumberEntry)",
      "code_size" : "123",
      "class" : "LocationComparer",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".cctor",
      "signature" : "void Mono.CompilerServices.SymbolWriter.LineNumberEntry/LocationComparer:.cctor ()",
      "code_size" : "39",
      "class" : "LocationComparer",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CompilerServices.SymbolWriter.CodeBlockEntry:.ctor (int,int,Mono.CompilerServices.SymbolWriter.CodeBlockEntry/Type,int)",
      "code_size" : "70",
      "class" : "CodeBlockEntry",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CompilerServices.SymbolWriter.CodeBlockEntry:.ctor (int,Mono.CompilerServices.SymbolWriter.MyBinaryReader)",
      "code_size" : "219",
      "class" : "CodeBlockEntry",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "Close",
      "signature" : "void Mono.CompilerServices.SymbolWriter.CodeBlockEntry:Close (int)",
      "code_size" : "28",
      "class" : "CodeBlockEntry",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "Write",
      "signature" : "void Mono.CompilerServices.SymbolWriter.CodeBlockEntry:Write (Mono.CompilerServices.SymbolWriter.MyBinaryWriter)",
      "code_size" : "97",
      "class" : "CodeBlockEntry",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "ToString",
      "signature" : "string Mono.CompilerServices.SymbolWriter.CodeBlockEntry:ToString ()",
      "code_size" : "438",
      "class" : "CodeBlockEntry",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CompilerServices.SymbolWriter.LocalVariableEntry:.ctor (int,string,int)",
      "code_size" : "77",
      "class" : "LocalVariableEntry",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CompilerServices.SymbolWriter.LocalVariableEntry:.ctor (Mono.CompilerServices.SymbolWriter.MonoSymbolFile,Mono.CompilerServices.SymbolWriter.MyBinaryReader)",
      "code_size" : "99",
      "class" : "LocalVariableEntry",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "Write",
      "signature" : "void Mono.CompilerServices.SymbolWriter.LocalVariableEntry:Write (Mono.CompilerServices.SymbolWriter.MonoSymbolFile,Mono.CompilerServices.SymbolWriter.MyBinaryWriter)",
      "code_size" : "82",
      "class" : "LocalVariableEntry",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "ToString",
      "signature" : "string Mono.CompilerServices.SymbolWriter.LocalVariableEntry:ToString ()",
      "code_size" : "142",
      "class" : "LocalVariableEntry",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CompilerServices.SymbolWriter.CapturedVariable:.ctor (string,string,Mono.CompilerServices.SymbolWriter.CapturedVariable/CapturedKind)",
      "code_size" : "90",
      "class" : "CapturedVariable",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CompilerServices.SymbolWriter.CapturedVariable:.ctor (Mono.CompilerServices.SymbolWriter.MyBinaryReader)",
      "code_size" : "117",
      "class" : "CapturedVariable",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "Write",
      "signature" : "void Mono.CompilerServices.SymbolWriter.CapturedVariable:Write (Mono.CompilerServices.SymbolWriter.MyBinaryWriter)",
      "code_size" : "79",
      "class" : "CapturedVariable",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "ToString",
      "signature" : "string Mono.CompilerServices.SymbolWriter.CapturedVariable:ToString ()",
      "code_size" : "106",
      "class" : "CapturedVariable",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CompilerServices.SymbolWriter.CapturedScope:.ctor (int,string)",
      "code_size" : "55",
      "class" : "CapturedScope",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CompilerServices.SymbolWriter.CapturedScope:.ctor (Mono.CompilerServices.SymbolWriter.MyBinaryReader)",
      "code_size" : "87",
      "class" : "CapturedScope",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "Write",
      "signature" : "void Mono.CompilerServices.SymbolWriter.CapturedScope:Write (Mono.CompilerServices.SymbolWriter.MyBinaryWriter)",
      "code_size" : "61",
      "class" : "CapturedScope",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "ToString",
      "signature" : "string Mono.CompilerServices.SymbolWriter.CapturedScope:ToString ()",
      "code_size" : "86",
      "class" : "CapturedScope",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CompilerServices.SymbolWriter.ScopeVariable:.ctor (int,int)",
      "code_size" : "40",
      "class" : "ScopeVariable",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CompilerServices.SymbolWriter.ScopeVariable:.ctor (Mono.CompilerServices.SymbolWriter.MyBinaryReader)",
      "code_size" : "70",
      "class" : "ScopeVariable",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "Write",
      "signature" : "void Mono.CompilerServices.SymbolWriter.ScopeVariable:Write (Mono.CompilerServices.SymbolWriter.MyBinaryWriter)",
      "code_size" : "64",
      "class" : "ScopeVariable",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "ToString",
      "signature" : "string Mono.CompilerServices.SymbolWriter.ScopeVariable:ToString ()",
      "code_size" : "126",
      "class" : "ScopeVariable",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CompilerServices.SymbolWriter.AnonymousScopeEntry:.ctor (int)",
      "code_size" : "206",
      "class" : "AnonymousScopeEntry",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CompilerServices.SymbolWriter.AnonymousScopeEntry:.ctor (Mono.CompilerServices.SymbolWriter.MyBinaryReader)",
      "code_size" : "490",
      "class" : "AnonymousScopeEntry",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddCapturedVariable",
      "signature" : "void Mono.CompilerServices.SymbolWriter.AnonymousScopeEntry:AddCapturedVariable (string,string,Mono.CompilerServices.SymbolWriter.CapturedVariable/CapturedKind)",
      "code_size" : "140",
      "class" : "AnonymousScopeEntry",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_CapturedVariables",
      "signature" : "Mono.CompilerServices.SymbolWriter.CapturedVariable[] Mono.CompilerServices.SymbolWriter.AnonymousScopeEntry:get_CapturedVariables ()",
      "code_size" : "79",
      "class" : "AnonymousScopeEntry",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddCapturedScope",
      "signature" : "void Mono.CompilerServices.SymbolWriter.AnonymousScopeEntry:AddCapturedScope (int,string)",
      "code_size" : "130",
      "class" : "AnonymousScopeEntry",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_CapturedScopes",
      "signature" : "Mono.CompilerServices.SymbolWriter.CapturedScope[] Mono.CompilerServices.SymbolWriter.AnonymousScopeEntry:get_CapturedScopes ()",
      "code_size" : "79",
      "class" : "AnonymousScopeEntry",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "Write",
      "signature" : "void Mono.CompilerServices.SymbolWriter.AnonymousScopeEntry:Write (Mono.CompilerServices.SymbolWriter.MyBinaryWriter)",
      "code_size" : "468",
      "class" : "AnonymousScopeEntry",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "ToString",
      "signature" : "string Mono.CompilerServices.SymbolWriter.AnonymousScopeEntry:ToString ()",
      "code_size" : "78",
      "class" : "AnonymousScopeEntry",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CompilerServices.SymbolWriter.CompileUnitEntry:.ctor (Mono.CompilerServices.SymbolWriter.MonoSymbolFile,Mono.CompilerServices.SymbolWriter.SourceFileEntry)",
      "code_size" : "184",
      "class" : "CompileUnitEntry",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CompilerServices.SymbolWriter.CompileUnitEntry:.ctor (Mono.CompilerServices.SymbolWriter.MonoSymbolFile,Mono.CompilerServices.SymbolWriter.MyBinaryReader)",
      "code_size" : "91",
      "class" : "CompileUnitEntry",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Size",
      "signature" : "int Mono.CompilerServices.SymbolWriter.CompileUnitEntry:get_Size ()",
      "code_size" : "14",
      "class" : "CompileUnitEntry",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mono.CompilerServices.SymbolWriter.ICompileUnit.get_Entry",
      "signature" : "Mono.CompilerServices.SymbolWriter.CompileUnitEntry Mono.CompilerServices.SymbolWriter.CompileUnitEntry:Mono.CompilerServices.SymbolWriter.ICompileUnit.get_Entry ()",
      "code_size" : "16",
      "class" : "CompileUnitEntry",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddFile",
      "signature" : "void Mono.CompilerServices.SymbolWriter.CompileUnitEntry:AddFile (Mono.CompilerServices.SymbolWriter.SourceFileEntry)",
      "code_size" : "175",
      "class" : "CompileUnitEntry",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_SourceFile",
      "signature" : "Mono.CompilerServices.SymbolWriter.SourceFileEntry Mono.CompilerServices.SymbolWriter.CompileUnitEntry:get_SourceFile ()",
      "code_size" : "47",
      "class" : "CompileUnitEntry",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "DefineNamespace",
      "signature" : "int Mono.CompilerServices.SymbolWriter.CompileUnitEntry:DefineNamespace (string,string[],int)",
      "code_size" : "210",
      "class" : "CompileUnitEntry",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "WriteData",
      "signature" : "void Mono.CompilerServices.SymbolWriter.CompileUnitEntry:WriteData (Mono.CompilerServices.SymbolWriter.MyBinaryWriter)",
      "code_size" : "521",
      "class" : "CompileUnitEntry",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "Write",
      "signature" : "void Mono.CompilerServices.SymbolWriter.CompileUnitEntry:Write (System.IO.BinaryWriter)",
      "code_size" : "65",
      "class" : "CompileUnitEntry",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "ReadAll",
      "signature" : "void Mono.CompilerServices.SymbolWriter.CompileUnitEntry:ReadAll ()",
      "code_size" : "18",
      "class" : "CompileUnitEntry",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "ReadData",
      "signature" : "void Mono.CompilerServices.SymbolWriter.CompileUnitEntry:ReadData ()",
      "code_size" : "899",
      "class" : "CompileUnitEntry",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Namespaces",
      "signature" : "Mono.CompilerServices.SymbolWriter.NamespaceEntry[] Mono.CompilerServices.SymbolWriter.CompileUnitEntry:get_Namespaces ()",
      "code_size" : "85",
      "class" : "CompileUnitEntry",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IncludeFiles",
      "signature" : "Mono.CompilerServices.SymbolWriter.SourceFileEntry[] Mono.CompilerServices.SymbolWriter.CompileUnitEntry:get_IncludeFiles ()",
      "code_size" : "140",
      "class" : "CompileUnitEntry",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CompilerServices.SymbolWriter.SourceFileEntry:.ctor (Mono.CompilerServices.SymbolWriter.MonoSymbolFile,string)",
      "code_size" : "98",
      "class" : "SourceFileEntry",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CompilerServices.SymbolWriter.SourceFileEntry:.ctor (Mono.CompilerServices.SymbolWriter.MonoSymbolFile,string,byte[],byte[])",
      "code_size" : "91",
      "class" : "SourceFileEntry",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CompilerServices.SymbolWriter.SourceFileEntry:.ctor (Mono.CompilerServices.SymbolWriter.MonoSymbolFile,Mono.CompilerServices.SymbolWriter.MyBinaryReader)",
      "code_size" : "322",
      "class" : "SourceFileEntry",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Size",
      "signature" : "int Mono.CompilerServices.SymbolWriter.SourceFileEntry:get_Size ()",
      "code_size" : "14",
      "class" : "SourceFileEntry",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Checksum",
      "signature" : "byte[] Mono.CompilerServices.SymbolWriter.SourceFileEntry:get_Checksum ()",
      "code_size" : "20",
      "class" : "SourceFileEntry",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "WriteData",
      "signature" : "void Mono.CompilerServices.SymbolWriter.SourceFileEntry:WriteData (Mono.CompilerServices.SymbolWriter.MyBinaryWriter)",
      "code_size" : "581",
      "class" : "SourceFileEntry",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "Write",
      "signature" : "void Mono.CompilerServices.SymbolWriter.SourceFileEntry:Write (System.IO.BinaryWriter)",
      "code_size" : "65",
      "class" : "SourceFileEntry",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_FileName",
      "signature" : "string Mono.CompilerServices.SymbolWriter.SourceFileEntry:get_FileName ()",
      "code_size" : "20",
      "class" : "SourceFileEntry",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_FileName",
      "signature" : "void Mono.CompilerServices.SymbolWriter.SourceFileEntry:set_FileName (string)",
      "code_size" : "43",
      "class" : "SourceFileEntry",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_AutoGenerated",
      "signature" : "bool Mono.CompilerServices.SymbolWriter.SourceFileEntry:get_AutoGenerated ()",
      "code_size" : "20",
      "class" : "SourceFileEntry",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetAutoGenerated",
      "signature" : "void Mono.CompilerServices.SymbolWriter.SourceFileEntry:SetAutoGenerated ()",
      "code_size" : "78",
      "class" : "SourceFileEntry",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "CheckChecksum",
      "signature" : "bool Mono.CompilerServices.SymbolWriter.SourceFileEntry:CheckChecksum ()",
      "code_size" : "338",
      "class" : "SourceFileEntry",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "ToString",
      "signature" : "string Mono.CompilerServices.SymbolWriter.SourceFileEntry:ToString ()",
      "code_size" : "127",
      "class" : "SourceFileEntry",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CompilerServices.SymbolWriter.LineNumberTable:.ctor (Mono.CompilerServices.SymbolWriter.MonoSymbolFile)",
      "code_size" : "104",
      "class" : "LineNumberTable",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CompilerServices.SymbolWriter.LineNumberTable:.ctor (Mono.CompilerServices.SymbolWriter.MonoSymbolFile,Mono.CompilerServices.SymbolWriter.LineNumberEntry[])",
      "code_size" : "55",
      "class" : "LineNumberTable",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_LineNumbers",
      "signature" : "Mono.CompilerServices.SymbolWriter.LineNumberEntry[] Mono.CompilerServices.SymbolWriter.LineNumberTable:get_LineNumbers ()",
      "code_size" : "20",
      "class" : "LineNumberTable",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "Write",
      "signature" : "void Mono.CompilerServices.SymbolWriter.LineNumberTable:Write (Mono.CompilerServices.SymbolWriter.MonoSymbolFile,Mono.CompilerServices.SymbolWriter.MyBinaryWriter,bool,bool)",
      "code_size" : "1316",
      "class" : "LineNumberTable",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "Read",
      "signature" : "Mono.CompilerServices.SymbolWriter.LineNumberTable Mono.CompilerServices.SymbolWriter.LineNumberTable:Read (Mono.CompilerServices.SymbolWriter.MonoSymbolFile,Mono.CompilerServices.SymbolWriter.MyBinaryReader,bool,bool)",
      "code_size" : "108",
      "class" : "LineNumberTable",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoRead",
      "signature" : "void Mono.CompilerServices.SymbolWriter.LineNumberTable:DoRead (Mono.CompilerServices.SymbolWriter.MonoSymbolFile,Mono.CompilerServices.SymbolWriter.MyBinaryReader,bool,bool)",
      "code_size" : "1489",
      "class" : "LineNumberTable",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetMethodBounds",
      "signature" : "bool Mono.CompilerServices.SymbolWriter.LineNumberTable:GetMethodBounds (Mono.CompilerServices.SymbolWriter.LineNumberEntry&,Mono.CompilerServices.SymbolWriter.LineNumberEntry&)",
      "code_size" : "252",
      "class" : "LineNumberTable",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CompilerServices.SymbolWriter.MethodEntry:.ctor (Mono.CompilerServices.SymbolWriter.MonoSymbolFile,Mono.CompilerServices.SymbolWriter.MyBinaryReader,int)",
      "code_size" : "379",
      "class" : "MethodEntry",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CompilerServices.SymbolWriter.MethodEntry:.ctor (Mono.CompilerServices.SymbolWriter.MonoSymbolFile,Mono.CompilerServices.SymbolWriter.CompileUnitEntry,int,Mono.CompilerServices.SymbolWriter.ScopeVariable[],Mono.CompilerServices.SymbolWriter.LocalVariableEntry[],Mono.CompilerServices.SymbolWriter.LineNumberEntry[],Mono.CompilerServices.SymbolWriter.CodeBlockEntry[],string,Mono.CompilerServices.SymbolWriter.MethodEntry/Flags,int)",
      "code_size" : "780",
      "class" : "MethodEntry",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_MethodFlags",
      "signature" : "Mono.CompilerServices.SymbolWriter.MethodEntry/Flags Mono.CompilerServices.SymbolWriter.MethodEntry:get_MethodFlags ()",
      "code_size" : "20",
      "class" : "MethodEntry",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Index",
      "signature" : "int Mono.CompilerServices.SymbolWriter.MethodEntry:get_Index ()",
      "code_size" : "20",
      "class" : "MethodEntry",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Index",
      "signature" : "void Mono.CompilerServices.SymbolWriter.MethodEntry:set_Index (int)",
      "code_size" : "28",
      "class" : "MethodEntry",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "CheckLineNumberTable",
      "signature" : "void Mono.CompilerServices.SymbolWriter.MethodEntry:CheckLineNumberTable (Mono.CompilerServices.SymbolWriter.LineNumberEntry[])",
      "code_size" : "310",
      "class" : "MethodEntry",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "Write",
      "signature" : "void Mono.CompilerServices.SymbolWriter.MethodEntry:Write (Mono.CompilerServices.SymbolWriter.MyBinaryWriter)",
      "code_size" : "123",
      "class" : "MethodEntry",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "WriteData",
      "signature" : "void Mono.CompilerServices.SymbolWriter.MethodEntry:WriteData (Mono.CompilerServices.SymbolWriter.MonoSymbolFile,Mono.CompilerServices.SymbolWriter.MyBinaryWriter)",
      "code_size" : "946",
      "class" : "MethodEntry",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "ReadAll",
      "signature" : "void Mono.CompilerServices.SymbolWriter.MethodEntry:ReadAll ()",
      "code_size" : "57",
      "class" : "MethodEntry",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetLineNumberTable",
      "signature" : "Mono.CompilerServices.SymbolWriter.LineNumberTable Mono.CompilerServices.SymbolWriter.MethodEntry:GetLineNumberTable ()",
      "code_size" : "439",
      "class" : "MethodEntry",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetLocals",
      "signature" : "Mono.CompilerServices.SymbolWriter.LocalVariableEntry[] Mono.CompilerServices.SymbolWriter.MethodEntry:GetLocals ()",
      "code_size" : "634",
      "class" : "MethodEntry",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetCodeBlocks",
      "signature" : "Mono.CompilerServices.SymbolWriter.CodeBlockEntry[] Mono.CompilerServices.SymbolWriter.MethodEntry:GetCodeBlocks ()",
      "code_size" : "509",
      "class" : "MethodEntry",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetScopeVariables",
      "signature" : "Mono.CompilerServices.SymbolWriter.ScopeVariable[] Mono.CompilerServices.SymbolWriter.MethodEntry:GetScopeVariables ()",
      "code_size" : "523",
      "class" : "MethodEntry",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetRealName",
      "signature" : "string Mono.CompilerServices.SymbolWriter.MethodEntry:GetRealName ()",
      "code_size" : "298",
      "class" : "MethodEntry",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "CompareTo",
      "signature" : "int Mono.CompilerServices.SymbolWriter.MethodEntry:CompareTo (object)",
      "code_size" : "140",
      "class" : "MethodEntry",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "ToString",
      "signature" : "string Mono.CompilerServices.SymbolWriter.MethodEntry:ToString ()",
      "code_size" : "312",
      "class" : "MethodEntry",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CompilerServices.SymbolWriter.NamespaceEntry:.ctor (string,int,string[],int)",
      "code_size" : "149",
      "class" : "NamespaceEntry",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CompilerServices.SymbolWriter.NamespaceEntry:.ctor (Mono.CompilerServices.SymbolWriter.MonoSymbolFile,Mono.CompilerServices.SymbolWriter.MyBinaryReader)",
      "code_size" : "236",
      "class" : "NamespaceEntry",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "Write",
      "signature" : "void Mono.CompilerServices.SymbolWriter.NamespaceEntry:Write (Mono.CompilerServices.SymbolWriter.MonoSymbolFile,Mono.CompilerServices.SymbolWriter.MyBinaryWriter)",
      "code_size" : "196",
      "class" : "NamespaceEntry",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "ToString",
      "signature" : "string Mono.CompilerServices.SymbolWriter.NamespaceEntry:ToString ()",
      "code_size" : "140",
      "class" : "NamespaceEntry",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CompilerServices.SymbolWriter.SourceMethodBuilder:.ctor (Mono.CompilerServices.SymbolWriter.ICompileUnit)",
      "code_size" : "132",
      "class" : "SourceMethodBuilder",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CompilerServices.SymbolWriter.SourceMethodBuilder:.ctor (Mono.CompilerServices.SymbolWriter.ICompileUnit,int,Mono.CompilerServices.SymbolWriter.IMethodDef)",
      "code_size" : "75",
      "class" : "SourceMethodBuilder",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "MarkSequencePoint",
      "signature" : "void Mono.CompilerServices.SymbolWriter.SourceMethodBuilder:MarkSequencePoint (int,Mono.CompilerServices.SymbolWriter.SourceFileEntry,int,int,bool)",
      "code_size" : "86",
      "class" : "SourceMethodBuilder",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "MarkSequencePoint",
      "signature" : "void Mono.CompilerServices.SymbolWriter.SourceMethodBuilder:MarkSequencePoint (int,Mono.CompilerServices.SymbolWriter.SourceFileEntry,int,int,int,int,bool)",
      "code_size" : "317",
      "class" : "SourceMethodBuilder",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "StartBlock",
      "signature" : "void Mono.CompilerServices.SymbolWriter.SourceMethodBuilder:StartBlock (Mono.CompilerServices.SymbolWriter.CodeBlockEntry/Type,int)",
      "code_size" : "123",
      "class" : "SourceMethodBuilder",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "StartBlock",
      "signature" : "void Mono.CompilerServices.SymbolWriter.SourceMethodBuilder:StartBlock (Mono.CompilerServices.SymbolWriter.CodeBlockEntry/Type,int,int)",
      "code_size" : "362",
      "class" : "SourceMethodBuilder",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "EndBlock",
      "signature" : "void Mono.CompilerServices.SymbolWriter.SourceMethodBuilder:EndBlock (int)",
      "code_size" : "47",
      "class" : "SourceMethodBuilder",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Blocks",
      "signature" : "Mono.CompilerServices.SymbolWriter.CodeBlockEntry[] Mono.CompilerServices.SymbolWriter.SourceMethodBuilder:get_Blocks ()",
      "code_size" : "140",
      "class" : "SourceMethodBuilder",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_CurrentBlock",
      "signature" : "Mono.CompilerServices.SymbolWriter.CodeBlockEntry Mono.CompilerServices.SymbolWriter.SourceMethodBuilder:get_CurrentBlock ()",
      "code_size" : "70",
      "class" : "SourceMethodBuilder",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Locals",
      "signature" : "Mono.CompilerServices.SymbolWriter.LocalVariableEntry[] Mono.CompilerServices.SymbolWriter.SourceMethodBuilder:get_Locals ()",
      "code_size" : "85",
      "class" : "SourceMethodBuilder",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_SourceFile",
      "signature" : "Mono.CompilerServices.SymbolWriter.ICompileUnit Mono.CompilerServices.SymbolWriter.SourceMethodBuilder:get_SourceFile ()",
      "code_size" : "20",
      "class" : "SourceMethodBuilder",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddLocal",
      "signature" : "void Mono.CompilerServices.SymbolWriter.SourceMethodBuilder:AddLocal (int,string)",
      "code_size" : "277",
      "class" : "SourceMethodBuilder",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ScopeVariables",
      "signature" : "Mono.CompilerServices.SymbolWriter.ScopeVariable[] Mono.CompilerServices.SymbolWriter.SourceMethodBuilder:get_ScopeVariables ()",
      "code_size" : "85",
      "class" : "SourceMethodBuilder",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddScopeVariable",
      "signature" : "void Mono.CompilerServices.SymbolWriter.SourceMethodBuilder:AddScopeVariable (int,int)",
      "code_size" : "184",
      "class" : "SourceMethodBuilder",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "DefineMethod",
      "signature" : "void Mono.CompilerServices.SymbolWriter.SourceMethodBuilder:DefineMethod (Mono.CompilerServices.SymbolWriter.MonoSymbolFile)",
      "code_size" : "58",
      "class" : "SourceMethodBuilder",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "DefineMethod",
      "signature" : "void Mono.CompilerServices.SymbolWriter.SourceMethodBuilder:DefineMethod (Mono.CompilerServices.SymbolWriter.MonoSymbolFile,int)",
      "code_size" : "382",
      "class" : "SourceMethodBuilder",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : "<DefineMethod>m__0",
      "signature" : "int Mono.CompilerServices.SymbolWriter.SourceMethodBuilder:<DefineMethod>m__0 (Mono.CompilerServices.SymbolWriter.CodeBlockEntry,Mono.CompilerServices.SymbolWriter.CodeBlockEntry)",
      "code_size" : "60",
      "class" : "SourceMethodBuilder",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.Security.Cryptography.CryptoConvert:.ctor ()",
      "code_size" : "9",
      "class" : "CryptoConvert",
      "namespace" : "Mono.Security.Cryptography",
      "wrapper_type" : "none",
    },
    {
      "name" : "ToInt32LE",
      "signature" : "int Mono.Security.Cryptography.CryptoConvert:ToInt32LE (byte[],int)",
      "code_size" : "180",
      "class" : "CryptoConvert",
      "namespace" : "Mono.Security.Cryptography",
      "wrapper_type" : "none",
    },
    {
      "name" : "ToUInt32LE",
      "signature" : "uint Mono.Security.Cryptography.CryptoConvert:ToUInt32LE (byte[],int)",
      "code_size" : "180",
      "class" : "CryptoConvert",
      "namespace" : "Mono.Security.Cryptography",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetBytesLE",
      "signature" : "byte[] Mono.Security.Cryptography.CryptoConvert:GetBytesLE (int)",
      "code_size" : "177",
      "class" : "CryptoConvert",
      "namespace" : "Mono.Security.Cryptography",
      "wrapper_type" : "none",
    },
    {
      "name" : "Trim",
      "signature" : "byte[] Mono.Security.Cryptography.CryptoConvert:Trim (byte[])",
      "code_size" : "156",
      "class" : "CryptoConvert",
      "namespace" : "Mono.Security.Cryptography",
      "wrapper_type" : "none",
    },
    {
      "name" : "FromCapiPrivateKeyBlob",
      "signature" : "System.Security.Cryptography.RSA Mono.Security.Cryptography.CryptoConvert:FromCapiPrivateKeyBlob (byte[])",
      "code_size" : "20",
      "class" : "CryptoConvert",
      "namespace" : "Mono.Security.Cryptography",
      "wrapper_type" : "none",
    },
    {
      "name" : "FromCapiPrivateKeyBlob",
      "signature" : "System.Security.Cryptography.RSA Mono.Security.Cryptography.CryptoConvert:FromCapiPrivateKeyBlob (byte[],int)",
      "code_size" : "2130",
      "class" : "CryptoConvert",
      "namespace" : "Mono.Security.Cryptography",
      "wrapper_type" : "none",
    },
    {
      "name" : "FromCapiPrivateKeyBlobDSA",
      "signature" : "System.Security.Cryptography.DSA Mono.Security.Cryptography.CryptoConvert:FromCapiPrivateKeyBlobDSA (byte[])",
      "code_size" : "20",
      "class" : "CryptoConvert",
      "namespace" : "Mono.Security.Cryptography",
      "wrapper_type" : "none",
    },
    {
      "name" : "FromCapiPrivateKeyBlobDSA",
      "signature" : "System.Security.Cryptography.DSA Mono.Security.Cryptography.CryptoConvert:FromCapiPrivateKeyBlobDSA (byte[],int)",
      "code_size" : "1809",
      "class" : "CryptoConvert",
      "namespace" : "Mono.Security.Cryptography",
      "wrapper_type" : "none",
    },
    {
      "name" : "ToCapiPrivateKeyBlob",
      "signature" : "byte[] Mono.Security.Cryptography.CryptoConvert:ToCapiPrivateKeyBlob (System.Security.Cryptography.RSA)",
      "code_size" : "954",
      "class" : "CryptoConvert",
      "namespace" : "Mono.Security.Cryptography",
      "wrapper_type" : "none",
    },
    {
      "name" : "ToCapiPrivateKeyBlob",
      "signature" : "byte[] Mono.Security.Cryptography.CryptoConvert:ToCapiPrivateKeyBlob (System.Security.Cryptography.DSA)",
      "code_size" : "1047",
      "class" : "CryptoConvert",
      "namespace" : "Mono.Security.Cryptography",
      "wrapper_type" : "none",
    },
    {
      "name" : "FromCapiPublicKeyBlob",
      "signature" : "System.Security.Cryptography.RSA Mono.Security.Cryptography.CryptoConvert:FromCapiPublicKeyBlob (byte[])",
      "code_size" : "20",
      "class" : "CryptoConvert",
      "namespace" : "Mono.Security.Cryptography",
      "wrapper_type" : "none",
    },
    {
      "name" : "FromCapiPublicKeyBlob",
      "signature" : "System.Security.Cryptography.RSA Mono.Security.Cryptography.CryptoConvert:FromCapiPublicKeyBlob (byte[],int)",
      "code_size" : "1542",
      "class" : "CryptoConvert",
      "namespace" : "Mono.Security.Cryptography",
      "wrapper_type" : "none",
    },
    {
      "name" : "FromCapiPublicKeyBlobDSA",
      "signature" : "System.Security.Cryptography.DSA Mono.Security.Cryptography.CryptoConvert:FromCapiPublicKeyBlobDSA (byte[])",
      "code_size" : "20",
      "class" : "CryptoConvert",
      "namespace" : "Mono.Security.Cryptography",
      "wrapper_type" : "none",
    },
    {
      "name" : "FromCapiPublicKeyBlobDSA",
      "signature" : "System.Security.Cryptography.DSA Mono.Security.Cryptography.CryptoConvert:FromCapiPublicKeyBlobDSA (byte[],int)",
      "code_size" : "1331",
      "class" : "CryptoConvert",
      "namespace" : "Mono.Security.Cryptography",
      "wrapper_type" : "none",
    },
    {
      "name" : "ToCapiPublicKeyBlob",
      "signature" : "byte[] Mono.Security.Cryptography.CryptoConvert:ToCapiPublicKeyBlob (System.Security.Cryptography.RSA)",
      "code_size" : "654",
      "class" : "CryptoConvert",
      "namespace" : "Mono.Security.Cryptography",
      "wrapper_type" : "none",
    },
    {
      "name" : "ToCapiPublicKeyBlob",
      "signature" : "byte[] Mono.Security.Cryptography.CryptoConvert:ToCapiPublicKeyBlob (System.Security.Cryptography.DSA)",
      "code_size" : "1065",
      "class" : "CryptoConvert",
      "namespace" : "Mono.Security.Cryptography",
      "wrapper_type" : "none",
    },
    {
      "name" : "FromCapiKeyBlob",
      "signature" : "System.Security.Cryptography.RSA Mono.Security.Cryptography.CryptoConvert:FromCapiKeyBlob (byte[])",
      "code_size" : "20",
      "class" : "CryptoConvert",
      "namespace" : "Mono.Security.Cryptography",
      "wrapper_type" : "none",
    },
    {
      "name" : "FromCapiKeyBlob",
      "signature" : "System.Security.Cryptography.RSA Mono.Security.Cryptography.CryptoConvert:FromCapiKeyBlob (byte[],int)",
      "code_size" : "327",
      "class" : "CryptoConvert",
      "namespace" : "Mono.Security.Cryptography",
      "wrapper_type" : "none",
    },
    {
      "name" : "FromCapiKeyBlobDSA",
      "signature" : "System.Security.Cryptography.DSA Mono.Security.Cryptography.CryptoConvert:FromCapiKeyBlobDSA (byte[])",
      "code_size" : "20",
      "class" : "CryptoConvert",
      "namespace" : "Mono.Security.Cryptography",
      "wrapper_type" : "none",
    },
    {
      "name" : "FromCapiKeyBlobDSA",
      "signature" : "System.Security.Cryptography.DSA Mono.Security.Cryptography.CryptoConvert:FromCapiKeyBlobDSA (byte[],int)",
      "code_size" : "260",
      "class" : "CryptoConvert",
      "namespace" : "Mono.Security.Cryptography",
      "wrapper_type" : "none",
    },
    {
      "name" : "ToCapiKeyBlob",
      "signature" : "byte[] Mono.Security.Cryptography.CryptoConvert:ToCapiKeyBlob (System.Security.Cryptography.AsymmetricAlgorithm,bool)",
      "code_size" : "293",
      "class" : "CryptoConvert",
      "namespace" : "Mono.Security.Cryptography",
      "wrapper_type" : "none",
    },
    {
      "name" : "ToCapiKeyBlob",
      "signature" : "byte[] Mono.Security.Cryptography.CryptoConvert:ToCapiKeyBlob (System.Security.Cryptography.RSA,bool)",
      "code_size" : "97",
      "class" : "CryptoConvert",
      "namespace" : "Mono.Security.Cryptography",
      "wrapper_type" : "none",
    },
    {
      "name" : "ToCapiKeyBlob",
      "signature" : "byte[] Mono.Security.Cryptography.CryptoConvert:ToCapiKeyBlob (System.Security.Cryptography.DSA,bool)",
      "code_size" : "97",
      "class" : "CryptoConvert",
      "namespace" : "Mono.Security.Cryptography",
      "wrapper_type" : "none",
    },
    {
      "name" : "ToHex",
      "signature" : "string Mono.Security.Cryptography.CryptoConvert:ToHex (byte[])",
      "code_size" : "269",
      "class" : "CryptoConvert",
      "namespace" : "Mono.Security.Cryptography",
      "wrapper_type" : "none",
    },
    {
      "name" : "FromHexChar",
      "signature" : "byte Mono.Security.Cryptography.CryptoConvert:FromHexChar (char)",
      "code_size" : "136",
      "class" : "CryptoConvert",
      "namespace" : "Mono.Security.Cryptography",
      "wrapper_type" : "none",
    },
    {
      "name" : "FromHex",
      "signature" : "byte[] Mono.Security.Cryptography.CryptoConvert:FromHex (string)",
      "code_size" : "348",
      "class" : "CryptoConvert",
      "namespace" : "Mono.Security.Cryptography",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Reflection.Emit.Label:.ctor (int)",
      "code_size" : "27",
      "class" : "Label",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "Equals",
      "signature" : "bool System.Reflection.Emit.Label:Equals (object)",
      "code_size" : "199",
      "class" : "Label",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "Equals",
      "signature" : "bool System.Reflection.Emit.Label:Equals (System.Reflection.Emit.Label)",
      "code_size" : "39",
      "class" : "Label",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "op_Equality",
      "signature" : "bool System.Reflection.Emit.Label:op_Equality (System.Reflection.Emit.Label,System.Reflection.Emit.Label)",
      "code_size" : "46",
      "class" : "Label",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "op_Inequality",
      "signature" : "bool System.Reflection.Emit.Label:op_Inequality (System.Reflection.Emit.Label,System.Reflection.Emit.Label)",
      "code_size" : "65",
      "class" : "Label",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetHashCode",
      "signature" : "int System.Reflection.Emit.Label:GetHashCode ()",
      "code_size" : "22",
      "class" : "Label",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Reflection.Emit.MethodToken:.ctor (int)",
      "code_size" : "27",
      "class" : "MethodToken",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "Equals",
      "signature" : "bool System.Reflection.Emit.MethodToken:Equals (object)",
      "code_size" : "199",
      "class" : "MethodToken",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "Equals",
      "signature" : "bool System.Reflection.Emit.MethodToken:Equals (System.Reflection.Emit.MethodToken)",
      "code_size" : "39",
      "class" : "MethodToken",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "op_Equality",
      "signature" : "bool System.Reflection.Emit.MethodToken:op_Equality (System.Reflection.Emit.MethodToken,System.Reflection.Emit.MethodToken)",
      "code_size" : "94",
      "class" : "MethodToken",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "op_Inequality",
      "signature" : "bool System.Reflection.Emit.MethodToken:op_Inequality (System.Reflection.Emit.MethodToken,System.Reflection.Emit.MethodToken)",
      "code_size" : "104",
      "class" : "MethodToken",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetHashCode",
      "signature" : "int System.Reflection.Emit.MethodToken:GetHashCode ()",
      "code_size" : "19",
      "class" : "MethodToken",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Token",
      "signature" : "int System.Reflection.Emit.MethodToken:get_Token ()",
      "code_size" : "19",
      "class" : "MethodToken",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : ".cctor",
      "signature" : "void System.Reflection.Emit.MethodToken:.cctor ()",
      "code_size" : "29",
      "class" : "MethodToken",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Reflection.Emit.OpCode:.ctor (int,int)",
      "code_size" : "166",
      "class" : "OpCode",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetHashCode",
      "signature" : "int System.Reflection.Emit.OpCode:GetHashCode ()",
      "code_size" : "27",
      "class" : "OpCode",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "Equals",
      "signature" : "bool System.Reflection.Emit.OpCode:Equals (object)",
      "code_size" : "329",
      "class" : "OpCode",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "Equals",
      "signature" : "bool System.Reflection.Emit.OpCode:Equals (System.Reflection.Emit.OpCode)",
      "code_size" : "66",
      "class" : "OpCode",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "ToString",
      "signature" : "string System.Reflection.Emit.OpCode:ToString ()",
      "code_size" : "18",
      "class" : "OpCode",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Name",
      "signature" : "string System.Reflection.Emit.OpCode:get_Name ()",
      "code_size" : "132",
      "class" : "OpCode",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Size",
      "signature" : "int System.Reflection.Emit.OpCode:get_Size ()",
      "code_size" : "20",
      "class" : "OpCode",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_OpCodeType",
      "signature" : "System.Reflection.Emit.OpCodeType System.Reflection.Emit.OpCode:get_OpCodeType ()",
      "code_size" : "20",
      "class" : "OpCode",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_OperandType",
      "signature" : "System.Reflection.Emit.OperandType System.Reflection.Emit.OpCode:get_OperandType ()",
      "code_size" : "20",
      "class" : "OpCode",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_FlowControl",
      "signature" : "System.Reflection.Emit.FlowControl System.Reflection.Emit.OpCode:get_FlowControl ()",
      "code_size" : "20",
      "class" : "OpCode",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_StackBehaviourPop",
      "signature" : "System.Reflection.Emit.StackBehaviour System.Reflection.Emit.OpCode:get_StackBehaviourPop ()",
      "code_size" : "20",
      "class" : "OpCode",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_StackBehaviourPush",
      "signature" : "System.Reflection.Emit.StackBehaviour System.Reflection.Emit.OpCode:get_StackBehaviourPush ()",
      "code_size" : "20",
      "class" : "OpCode",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Value",
      "signature" : "int16 System.Reflection.Emit.OpCode:get_Value ()",
      "code_size" : "55",
      "class" : "OpCode",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "op_Equality",
      "signature" : "bool System.Reflection.Emit.OpCode:op_Equality (System.Reflection.Emit.OpCode,System.Reflection.Emit.OpCode)",
      "code_size" : "69",
      "class" : "OpCode",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "op_Inequality",
      "signature" : "bool System.Reflection.Emit.OpCode:op_Inequality (System.Reflection.Emit.OpCode,System.Reflection.Emit.OpCode)",
      "code_size" : "82",
      "class" : "OpCode",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : ".cctor",
      "signature" : "void System.Reflection.Emit.OpCodeNames:.cctor ()",
      "code_size" : "9659",
      "class" : "OpCodeNames",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Reflection.Emit.OpCodes:.ctor ()",
      "code_size" : "9",
      "class" : "OpCodes",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "TakesSingleByteArgument",
      "signature" : "bool System.Reflection.Emit.OpCodes:TakesSingleByteArgument (System.Reflection.Emit.OpCode)",
      "code_size" : "71",
      "class" : "OpCodes",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : ".cctor",
      "signature" : "void System.Reflection.Emit.OpCodes:.cctor ()",
      "code_size" : "74503",
      "class" : "OpCodes",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.CompilerGeneratedContainer:.ctor (Mono.CSharp.TypeContainer,Mono.CSharp.MemberName,Mono.CSharp.Modifiers)",
      "code_size" : "39",
      "class" : "CompilerGeneratedContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.CompilerGeneratedContainer:.ctor (Mono.CSharp.TypeContainer,Mono.CSharp.MemberName,Mono.CSharp.Modifiers,Mono.CSharp.MemberKind)",
      "code_size" : "196",
      "class" : "CompilerGeneratedContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CheckMembersDefined",
      "signature" : "void Mono.CSharp.CompilerGeneratedContainer:CheckMembersDefined ()",
      "code_size" : "97",
      "class" : "CompilerGeneratedContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoDefineMembers",
      "signature" : "bool Mono.CSharp.CompilerGeneratedContainer:DoDefineMembers ()",
      "code_size" : "137",
      "class" : "CompilerGeneratedContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MakeMemberName",
      "signature" : "Mono.CSharp.MemberName Mono.CSharp.CompilerGeneratedContainer:MakeMemberName (Mono.CSharp.MemberBase,string,int,Mono.CSharp.TypeParameters,Mono.CSharp.Location)",
      "code_size" : "435",
      "class" : "CompilerGeneratedContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MakeName",
      "signature" : "string Mono.CSharp.CompilerGeneratedContainer:MakeName (string,string,string,int)",
      "code_size" : "319",
      "class" : "CompilerGeneratedContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveBaseTypes",
      "signature" : "Mono.CSharp.TypeSpec[] Mono.CSharp.CompilerGeneratedContainer:ResolveBaseTypes (Mono.CSharp.FullNamedExpression&)",
      "code_size" : "91",
      "class" : "CompilerGeneratedContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.HoistedStoreyClass:.ctor (Mono.CSharp.TypeDefinition,Mono.CSharp.MemberName,Mono.CSharp.TypeParameters,Mono.CSharp.Modifiers,Mono.CSharp.MemberKind)",
      "code_size" : "654",
      "class" : "HoistedStoreyClass",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Mutator",
      "signature" : "Mono.CSharp.TypeParameterMutator Mono.CSharp.HoistedStoreyClass:get_Mutator ()",
      "code_size" : "23",
      "class" : "HoistedStoreyClass",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Mutator",
      "signature" : "void Mono.CSharp.HoistedStoreyClass:set_Mutator (Mono.CSharp.TypeParameterMutator)",
      "code_size" : "49",
      "class" : "HoistedStoreyClass",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetGenericStorey",
      "signature" : "Mono.CSharp.HoistedStoreyClass Mono.CSharp.HoistedStoreyClass:GetGenericStorey ()",
      "code_size" : "115",
      "class" : "HoistedStoreyClass",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.HoistedStoreyClass/HoistedField:.ctor (Mono.CSharp.HoistedStoreyClass,Mono.CSharp.FullNamedExpression,Mono.CSharp.Modifiers,string,Mono.CSharp.Attributes,Mono.CSharp.Location)",
      "code_size" : "100",
      "class" : "HoistedField",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveMemberType",
      "signature" : "bool Mono.CSharp.HoistedStoreyClass/HoistedField:ResolveMemberType ()",
      "code_size" : "219",
      "class" : "HoistedField",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.AnonymousMethodStorey:.ctor (Mono.CSharp.ExplicitBlock,Mono.CSharp.TypeDefinition,Mono.CSharp.MemberBase,Mono.CSharp.TypeParameters,string,Mono.CSharp.MemberKind)",
      "code_size" : "187",
      "class" : "AnonymousMethodStorey",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddCapturedThisField",
      "signature" : "void Mono.CSharp.AnonymousMethodStorey:AddCapturedThisField (Mono.CSharp.EmitContext,Mono.CSharp.AnonymousMethodStorey)",
      "code_size" : "238",
      "class" : "AnonymousMethodStorey",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddCapturedVariable",
      "signature" : "Mono.CSharp.Field Mono.CSharp.AnonymousMethodStorey:AddCapturedVariable (string,Mono.CSharp.TypeSpec)",
      "code_size" : "233",
      "class" : "AnonymousMethodStorey",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddCompilerGeneratedField",
      "signature" : "Mono.CSharp.Field Mono.CSharp.AnonymousMethodStorey:AddCompilerGeneratedField (string,Mono.CSharp.FullNamedExpression)",
      "code_size" : "30",
      "class" : "AnonymousMethodStorey",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddCompilerGeneratedField",
      "signature" : "Mono.CSharp.Field Mono.CSharp.AnonymousMethodStorey:AddCompilerGeneratedField (string,Mono.CSharp.FullNamedExpression,bool)",
      "code_size" : "202",
      "class" : "AnonymousMethodStorey",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddReferenceFromChildrenBlock",
      "signature" : "void Mono.CSharp.AnonymousMethodStorey:AddReferenceFromChildrenBlock (Mono.CSharp.ExplicitBlock)",
      "code_size" : "183",
      "class" : "AnonymousMethodStorey",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddParentStoreyReference",
      "signature" : "void Mono.CSharp.AnonymousMethodStorey:AddParentStoreyReference (Mono.CSharp.EmitContext,Mono.CSharp.AnonymousMethodStorey)",
      "code_size" : "595",
      "class" : "AnonymousMethodStorey",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CaptureLocalVariable",
      "signature" : "void Mono.CSharp.AnonymousMethodStorey:CaptureLocalVariable (Mono.CSharp.ResolveContext,Mono.CSharp.LocalVariable)",
      "code_size" : "755",
      "class" : "AnonymousMethodStorey",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CaptureParameter",
      "signature" : "void Mono.CSharp.AnonymousMethodStorey:CaptureParameter (Mono.CSharp.ResolveContext,Mono.CSharp.ParametersBlock/ParameterInfo,Mono.CSharp.ParameterReference)",
      "code_size" : "996",
      "class" : "AnonymousMethodStorey",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateStoreyTypeExpression",
      "signature" : "Mono.CSharp.TypeExpr Mono.CSharp.AnonymousMethodStorey:CreateStoreyTypeExpression (Mono.CSharp.EmitContext)",
      "code_size" : "560",
      "class" : "AnonymousMethodStorey",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetNestedStoryParent",
      "signature" : "void Mono.CSharp.AnonymousMethodStorey:SetNestedStoryParent (Mono.CSharp.AnonymousMethodStorey)",
      "code_size" : "142",
      "class" : "AnonymousMethodStorey",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolveTypeParameters",
      "signature" : "bool Mono.CSharp.AnonymousMethodStorey:DoResolveTypeParameters ()",
      "code_size" : "564",
      "class" : "AnonymousMethodStorey",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitStoreyInstantiation",
      "signature" : "void Mono.CSharp.AnonymousMethodStorey:EmitStoreyInstantiation (Mono.CSharp.EmitContext,Mono.CSharp.ExplicitBlock)",
      "code_size" : "968",
      "class" : "AnonymousMethodStorey",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitHoistedFieldsInitialization",
      "signature" : "void Mono.CSharp.AnonymousMethodStorey:EmitHoistedFieldsInitialization (Mono.CSharp.ResolveContext,Mono.CSharp.EmitContext)",
      "code_size" : "726",
      "class" : "AnonymousMethodStorey",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitHoistedParameters",
      "signature" : "void Mono.CSharp.AnonymousMethodStorey:EmitHoistedParameters (Mono.CSharp.EmitContext,System.Collections.Generic.List`1<Mono.CSharp.HoistedParameter>)",
      "code_size" : "692",
      "class" : "AnonymousMethodStorey",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetReferencedStoreyField",
      "signature" : "Mono.CSharp.Field Mono.CSharp.AnonymousMethodStorey:GetReferencedStoreyField (Mono.CSharp.AnonymousMethodStorey)",
      "code_size" : "246",
      "class" : "AnonymousMethodStorey",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetStoreyInstanceExpression",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.AnonymousMethodStorey:GetStoreyInstanceExpression (Mono.CSharp.EmitContext)",
      "code_size" : "490",
      "class" : "AnonymousMethodStorey",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetVariableMangledName",
      "signature" : "string Mono.CSharp.AnonymousMethodStorey:GetVariableMangledName (Mono.CSharp.ResolveContext,Mono.CSharp.LocalVariable)",
      "code_size" : "24",
      "class" : "AnonymousMethodStorey",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_HoistedThis",
      "signature" : "Mono.CSharp.HoistedThis Mono.CSharp.AnonymousMethodStorey:get_HoistedThis ()",
      "code_size" : "23",
      "class" : "AnonymousMethodStorey",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_HoistedThis",
      "signature" : "void Mono.CSharp.AnonymousMethodStorey:set_HoistedThis (Mono.CSharp.HoistedThis)",
      "code_size" : "49",
      "class" : "AnonymousMethodStorey",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ReferencesFromChildrenBlock",
      "signature" : "System.Collections.Generic.IList`1<Mono.CSharp.ExplicitBlock> Mono.CSharp.AnonymousMethodStorey:get_ReferencesFromChildrenBlock ()",
      "code_size" : "23",
      "class" : "AnonymousMethodStorey",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.AnonymousMethodStorey/StoreyFieldPair:.ctor (Mono.CSharp.AnonymousMethodStorey,Mono.CSharp.Field)",
      "code_size" : "73",
      "class" : "StoreyFieldPair",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.AnonymousMethodStorey/ThisInitializer:.ctor (Mono.CSharp.HoistedThis,Mono.CSharp.AnonymousMethodStorey)",
      "code_size" : "74",
      "class" : "ThisInitializer",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoEmit",
      "signature" : "void Mono.CSharp.AnonymousMethodStorey/ThisInitializer:DoEmit (Mono.CSharp.EmitContext)",
      "code_size" : "465",
      "class" : "ThisInitializer",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoFlowAnalysis",
      "signature" : "bool Mono.CSharp.AnonymousMethodStorey/ThisInitializer:DoFlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "11",
      "class" : "ThisInitializer",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.AnonymousMethodStorey/ThisInitializer:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Statement)",
      "code_size" : "9",
      "class" : "ThisInitializer",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.HoistedVariable:.ctor (Mono.CSharp.AnonymousMethodStorey,string,Mono.CSharp.TypeSpec)",
      "code_size" : "74",
      "class" : "HoistedVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.HoistedVariable:.ctor (Mono.CSharp.AnonymousMethodStorey,Mono.CSharp.Field)",
      "code_size" : "74",
      "class" : "HoistedVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Field",
      "signature" : "Mono.CSharp.Field Mono.CSharp.HoistedVariable:get_Field ()",
      "code_size" : "20",
      "class" : "HoistedVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Storey",
      "signature" : "Mono.CSharp.AnonymousMethodStorey Mono.CSharp.HoistedVariable:get_Storey ()",
      "code_size" : "20",
      "class" : "HoistedVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddressOf",
      "signature" : "void Mono.CSharp.HoistedVariable:AddressOf (Mono.CSharp.EmitContext,Mono.CSharp.AddressOp)",
      "code_size" : "55",
      "class" : "HoistedVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.HoistedVariable:CreateExpressionTree ()",
      "code_size" : "64",
      "class" : "HoistedVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.HoistedVariable:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "45",
      "class" : "HoistedVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitToField",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.HoistedVariable:EmitToField (Mono.CSharp.EmitContext)",
      "code_size" : "28",
      "class" : "HoistedVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetFieldExpression",
      "signature" : "Mono.CSharp.FieldExpr Mono.CSharp.HoistedVariable:GetFieldExpression (Mono.CSharp.EmitContext)",
      "code_size" : "945",
      "class" : "HoistedVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.HoistedVariable:Emit (Mono.CSharp.EmitContext,bool)",
      "code_size" : "54",
      "class" : "HoistedVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitAssign",
      "signature" : "void Mono.CSharp.HoistedVariable:EmitAssign (Mono.CSharp.EmitContext,Mono.CSharp.Expression,bool,bool)",
      "code_size" : "67",
      "class" : "HoistedVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.HoistedVariable/ExpressionTreeVariableReference:.ctor (Mono.CSharp.HoistedVariable)",
      "code_size" : "43",
      "class" : "ExpressionTreeVariableReference",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "ContainsEmitWithAwait",
      "signature" : "bool Mono.CSharp.HoistedVariable/ExpressionTreeVariableReference:ContainsEmitWithAwait ()",
      "code_size" : "11",
      "class" : "ExpressionTreeVariableReference",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.HoistedVariable/ExpressionTreeVariableReference:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "86",
      "class" : "ExpressionTreeVariableReference",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.HoistedVariable/ExpressionTreeVariableReference:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "103",
      "class" : "ExpressionTreeVariableReference",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.HoistedVariable/ExpressionTreeVariableReference:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "182",
      "class" : "ExpressionTreeVariableReference",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.HoistedParameter:.ctor (Mono.CSharp.AnonymousMethodStorey,Mono.CSharp.ParameterReference)",
      "code_size" : "86",
      "class" : "HoistedParameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.HoistedParameter:.ctor (Mono.CSharp.HoistedParameter,string)",
      "code_size" : "94",
      "class" : "HoistedParameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsAssigned",
      "signature" : "bool Mono.CSharp.HoistedParameter:get_IsAssigned ()",
      "code_size" : "20",
      "class" : "HoistedParameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_IsAssigned",
      "signature" : "void Mono.CSharp.HoistedParameter:set_IsAssigned (bool)",
      "code_size" : "31",
      "class" : "HoistedParameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Parameter",
      "signature" : "Mono.CSharp.ParameterReference Mono.CSharp.HoistedParameter:get_Parameter ()",
      "code_size" : "20",
      "class" : "HoistedParameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitHoistingAssignment",
      "signature" : "void Mono.CSharp.HoistedParameter:EmitHoistingAssignment (Mono.CSharp.EmitContext)",
      "code_size" : "240",
      "class" : "HoistedParameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.HoistedParameter/HoistedFieldAssign:.ctor (Mono.CSharp.Expression,Mono.CSharp.Expression)",
      "code_size" : "68",
      "class" : "HoistedFieldAssign",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveConversions",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.HoistedParameter/HoistedFieldAssign:ResolveConversions (Mono.CSharp.ResolveContext)",
      "code_size" : "16",
      "class" : "HoistedFieldAssign",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.HoistedLocalVariable:.ctor (Mono.CSharp.AnonymousMethodStorey,Mono.CSharp.LocalVariable,string)",
      "code_size" : "57",
      "class" : "HoistedLocalVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.HoistedThis:.ctor (Mono.CSharp.AnonymousMethodStorey,Mono.CSharp.Field)",
      "code_size" : "28",
      "class" : "HoistedThis",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.AnonymousMethodExpression:.ctor (Mono.CSharp.Location)",
      "code_size" : "94",
      "class" : "AnonymousMethodExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ExprClassName",
      "signature" : "string Mono.CSharp.AnonymousMethodExpression:get_ExprClassName ()",
      "code_size" : "16",
      "class" : "AnonymousMethodExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_HasExplicitParameters",
      "signature" : "bool Mono.CSharp.AnonymousMethodExpression:get_HasExplicitParameters ()",
      "code_size" : "61",
      "class" : "AnonymousMethodExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsSideEffectFree",
      "signature" : "bool Mono.CSharp.AnonymousMethodExpression:get_IsSideEffectFree ()",
      "code_size" : "14",
      "class" : "AnonymousMethodExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Parameters",
      "signature" : "Mono.CSharp.ParametersCompiled Mono.CSharp.AnonymousMethodExpression:get_Parameters ()",
      "code_size" : "30",
      "class" : "AnonymousMethodExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_TypeInferenceReportPrinter",
      "signature" : "Mono.CSharp.ReportPrinter Mono.CSharp.AnonymousMethodExpression:get_TypeInferenceReportPrinter ()",
      "code_size" : "20",
      "class" : "AnonymousMethodExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_TypeInferenceReportPrinter",
      "signature" : "void Mono.CSharp.AnonymousMethodExpression:set_TypeInferenceReportPrinter (Mono.CSharp.ReportPrinter)",
      "code_size" : "43",
      "class" : "AnonymousMethodExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ImplicitStandardConversionExists",
      "signature" : "bool Mono.CSharp.AnonymousMethodExpression:ImplicitStandardConversionExists (Mono.CSharp.ResolveContext,Mono.CSharp.TypeSpec)",
      "code_size" : "408",
      "class" : "AnonymousMethodExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CompatibleChecks",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.AnonymousMethodExpression:CompatibleChecks (Mono.CSharp.ResolveContext,Mono.CSharp.TypeSpec)",
      "code_size" : "384",
      "class" : "AnonymousMethodExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "VerifyExplicitParameters",
      "signature" : "bool Mono.CSharp.AnonymousMethodExpression:VerifyExplicitParameters (Mono.CSharp.ResolveContext,Mono.CSharp.TypeInferenceContext,Mono.CSharp.TypeSpec,Mono.CSharp.AParametersCollection)",
      "code_size" : "279",
      "class" : "AnonymousMethodExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "VerifyParameterCompatibility",
      "signature" : "bool Mono.CSharp.AnonymousMethodExpression:VerifyParameterCompatibility (Mono.CSharp.ResolveContext,Mono.CSharp.TypeInferenceContext,Mono.CSharp.TypeSpec,Mono.CSharp.AParametersCollection,bool)",
      "code_size" : "1996",
      "class" : "AnonymousMethodExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ExplicitTypeInference",
      "signature" : "bool Mono.CSharp.AnonymousMethodExpression:ExplicitTypeInference (Mono.CSharp.TypeInferenceContext,Mono.CSharp.TypeSpec)",
      "code_size" : "486",
      "class" : "AnonymousMethodExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "InferReturnType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.AnonymousMethodExpression:InferReturnType (Mono.CSharp.ResolveContext,Mono.CSharp.TypeInferenceContext,Mono.CSharp.TypeSpec)",
      "code_size" : "498",
      "class" : "AnonymousMethodExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ContainsEmitWithAwait",
      "signature" : "bool Mono.CSharp.AnonymousMethodExpression:ContainsEmitWithAwait ()",
      "code_size" : "11",
      "class" : "AnonymousMethodExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Compatible",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.AnonymousMethodExpression:Compatible (Mono.CSharp.ResolveContext,Mono.CSharp.TypeSpec)",
      "code_size" : "1453",
      "class" : "AnonymousMethodExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.AnonymousMethodExpression:CreateExpressionTree (Mono.CSharp.ResolveContext,Mono.CSharp.TypeSpec)",
      "code_size" : "28",
      "class" : "AnonymousMethodExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.AnonymousMethodExpression:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "77",
      "class" : "AnonymousMethodExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveParameters",
      "signature" : "Mono.CSharp.ParametersCompiled Mono.CSharp.AnonymousMethodExpression:ResolveParameters (Mono.CSharp.ResolveContext,Mono.CSharp.TypeInferenceContext,Mono.CSharp.TypeSpec)",
      "code_size" : "707",
      "class" : "AnonymousMethodExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.AnonymousMethodExpression:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "489",
      "class" : "AnonymousMethodExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolveParameters",
      "signature" : "bool Mono.CSharp.AnonymousMethodExpression:DoResolveParameters (Mono.CSharp.ResolveContext)",
      "code_size" : "51",
      "class" : "AnonymousMethodExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.AnonymousMethodExpression:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "9",
      "class" : "AnonymousMethodExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_AddressOfCapturedVar",
      "signature" : "void Mono.CSharp.AnonymousMethodExpression:Error_AddressOfCapturedVar (Mono.CSharp.ResolveContext,Mono.CSharp.IVariableReference,Mono.CSharp.Location)",
      "code_size" : "188",
      "class" : "AnonymousMethodExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSignatureForError",
      "signature" : "string Mono.CSharp.AnonymousMethodExpression:GetSignatureForError ()",
      "code_size" : "25",
      "class" : "AnonymousMethodExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CompatibleMethodBody",
      "signature" : "Mono.CSharp.AnonymousMethodBody Mono.CSharp.AnonymousMethodExpression:CompatibleMethodBody (Mono.CSharp.ResolveContext,Mono.CSharp.TypeInferenceContext,Mono.CSharp.TypeSpec,Mono.CSharp.TypeSpec,System.Collections.Generic.HashSet`1<Mono.CSharp.LocalVariable>&)",
      "code_size" : "632",
      "class" : "AnonymousMethodExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CompatibleMethodFactory",
      "signature" : "Mono.CSharp.AnonymousMethodBody Mono.CSharp.AnonymousMethodExpression:CompatibleMethodFactory (Mono.CSharp.TypeSpec,Mono.CSharp.TypeSpec,Mono.CSharp.ParametersCompiled,Mono.CSharp.ParametersBlock)",
      "code_size" : "106",
      "class" : "AnonymousMethodExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.AnonymousMethodExpression:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Expression)",
      "code_size" : "181",
      "class" : "AnonymousMethodExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.AnonymousMethodExpression:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "AnonymousMethodExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.AnonymousMethodExpression/Quote:.ctor (Mono.CSharp.Expression)",
      "code_size" : "43",
      "class" : "Quote",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.AnonymousMethodExpression/Quote:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "195",
      "class" : "Quote",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.AnonymousMethodExpression/Quote:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "136",
      "class" : "Quote",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.AnonymousExpression:.ctor (Mono.CSharp.ParametersBlock,Mono.CSharp.TypeSpec,Mono.CSharp.Location)",
      "code_size" : "90",
      "class" : "AnonymousExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Block",
      "signature" : "Mono.CSharp.ParametersBlock Mono.CSharp.AnonymousExpression:get_Block ()",
      "code_size" : "20",
      "class" : "AnonymousExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Compatible",
      "signature" : "Mono.CSharp.AnonymousExpression Mono.CSharp.AnonymousExpression:Compatible (Mono.CSharp.ResolveContext)",
      "code_size" : "27",
      "class" : "AnonymousExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Compatible",
      "signature" : "Mono.CSharp.AnonymousExpression Mono.CSharp.AnonymousExpression:Compatible (Mono.CSharp.ResolveContext,Mono.CSharp.AnonymousExpression)",
      "code_size" : "1206",
      "class" : "AnonymousExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ContainsEmitWithAwait",
      "signature" : "bool Mono.CSharp.AnonymousExpression:ContainsEmitWithAwait ()",
      "code_size" : "11",
      "class" : "AnonymousExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CheckReachableExit",
      "signature" : "bool Mono.CSharp.AnonymousExpression:CheckReachableExit (Mono.CSharp.Report)",
      "code_size" : "197",
      "class" : "AnonymousExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "FlowAnalysis",
      "signature" : "void Mono.CSharp.AnonymousExpression:FlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "464",
      "class" : "AnonymousExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MarkReachable",
      "signature" : "void Mono.CSharp.AnonymousExpression:MarkReachable (Mono.CSharp.Reachability)",
      "code_size" : "44",
      "class" : "AnonymousExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetHasThisAccess",
      "signature" : "void Mono.CSharp.AnonymousExpression:SetHasThisAccess ()",
      "code_size" : "126",
      "class" : "AnonymousExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.AnonymousExpression/AnonymousMethodMethod:.ctor (Mono.CSharp.TypeDefinition,Mono.CSharp.AnonymousExpression,Mono.CSharp.AnonymousMethodStorey,Mono.CSharp.TypeExpr,Mono.CSharp.Modifiers,Mono.CSharp.MemberName,Mono.CSharp.ParametersCompiled)",
      "code_size" : "255",
      "class" : "AnonymousMethodMethod",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateEmitContext",
      "signature" : "Mono.CSharp.EmitContext Mono.CSharp.AnonymousExpression/AnonymousMethodMethod:CreateEmitContext (System.Reflection.Emit.ILGenerator,Mono.CompilerServices.SymbolWriter.SourceMethodBuilder)",
      "code_size" : "139",
      "class" : "AnonymousMethodMethod",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "DefineTypeParameters",
      "signature" : "void Mono.CSharp.AnonymousExpression/AnonymousMethodMethod:DefineTypeParameters ()",
      "code_size" : "9",
      "class" : "AnonymousMethodMethod",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveMemberType",
      "signature" : "bool Mono.CSharp.AnonymousExpression/AnonymousMethodMethod:ResolveMemberType ()",
      "code_size" : "419",
      "class" : "AnonymousMethodMethod",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.AnonymousExpression/AnonymousMethodMethod:Emit ()",
      "code_size" : "68",
      "class" : "AnonymousMethodMethod",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.AnonymousMethodBody:.ctor (Mono.CSharp.ParametersCompiled,Mono.CSharp.ParametersBlock,Mono.CSharp.TypeSpec,Mono.CSharp.TypeSpec,Mono.CSharp.Location)",
      "code_size" : "109",
      "class" : "AnonymousMethodBody",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ContainerType",
      "signature" : "string Mono.CSharp.AnonymousMethodBody:get_ContainerType ()",
      "code_size" : "16",
      "class" : "AnonymousMethodBody",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_DirectMethodGroupConversion",
      "signature" : "Mono.CSharp.MethodGroupExpr Mono.CSharp.AnonymousMethodBody:get_DirectMethodGroupConversion ()",
      "code_size" : "20",
      "class" : "AnonymousMethodBody",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_DirectMethodGroupConversion",
      "signature" : "void Mono.CSharp.AnonymousMethodBody:set_DirectMethodGroupConversion (Mono.CSharp.MethodGroupExpr)",
      "code_size" : "43",
      "class" : "AnonymousMethodBody",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsIterator",
      "signature" : "bool Mono.CSharp.AnonymousMethodBody:get_IsIterator ()",
      "code_size" : "11",
      "class" : "AnonymousMethodBody",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Parameters",
      "signature" : "Mono.CSharp.ParametersCompiled Mono.CSharp.AnonymousMethodBody:get_Parameters ()",
      "code_size" : "20",
      "class" : "AnonymousMethodBody",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ReturnTypeInference",
      "signature" : "Mono.CSharp.TypeInferenceContext Mono.CSharp.AnonymousMethodBody:get_ReturnTypeInference ()",
      "code_size" : "20",
      "class" : "AnonymousMethodBody",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_ReturnTypeInference",
      "signature" : "void Mono.CSharp.AnonymousMethodBody:set_ReturnTypeInference (Mono.CSharp.TypeInferenceContext)",
      "code_size" : "43",
      "class" : "AnonymousMethodBody",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Storey",
      "signature" : "Mono.CSharp.AnonymousMethodStorey Mono.CSharp.AnonymousMethodBody:get_Storey ()",
      "code_size" : "20",
      "class" : "AnonymousMethodBody",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.AnonymousMethodBody:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "77",
      "class" : "AnonymousMethodBody",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Define",
      "signature" : "bool Mono.CSharp.AnonymousMethodBody:Define (Mono.CSharp.ResolveContext)",
      "code_size" : "228",
      "class" : "AnonymousMethodBody",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoCreateMethodHost",
      "signature" : "Mono.CSharp.AnonymousExpression/AnonymousMethodMethod Mono.CSharp.AnonymousMethodBody:DoCreateMethodHost (Mono.CSharp.EmitContext)",
      "code_size" : "1305",
      "class" : "AnonymousMethodBody",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.AnonymousMethodBody:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "39",
      "class" : "AnonymousMethodBody",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.AnonymousMethodBody:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "2923",
      "class" : "AnonymousMethodBody",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitStatement",
      "signature" : "void Mono.CSharp.AnonymousMethodBody:EmitStatement (Mono.CSharp.EmitContext)",
      "code_size" : "27",
      "class" : "AnonymousMethodBody",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "FindBestMethodStorey",
      "signature" : "Mono.CSharp.AnonymousMethodStorey Mono.CSharp.AnonymousMethodBody:FindBestMethodStorey ()",
      "code_size" : "84",
      "class" : "AnonymousMethodBody",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSignatureForError",
      "signature" : "string Mono.CSharp.AnonymousMethodBody:GetSignatureForError ()",
      "code_size" : "29",
      "class" : "AnonymousMethodBody",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.AnonymousTypeClass:.ctor (Mono.CSharp.ModuleContainer,Mono.CSharp.MemberName,System.Collections.Generic.IList`1<Mono.CSharp.AnonymousTypeParameter>,Mono.CSharp.Location)",
      "code_size" : "116",
      "class" : "AnonymousTypeClass",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Create",
      "signature" : "Mono.CSharp.AnonymousTypeClass Mono.CSharp.AnonymousTypeClass:Create (Mono.CSharp.TypeContainer,System.Collections.Generic.IList`1<Mono.CSharp.AnonymousTypeParameter>,Mono.CSharp.Location)",
      "code_size" : "3317",
      "class" : "AnonymousTypeClass",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoDefineMembers",
      "signature" : "bool Mono.CSharp.AnonymousTypeClass:DoDefineMembers ()",
      "code_size" : "7789",
      "class" : "AnonymousTypeClass",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSignatureForError",
      "signature" : "string Mono.CSharp.AnonymousTypeClass:GetSignatureForError ()",
      "code_size" : "16",
      "class" : "AnonymousTypeClass",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetCompilationSourceFile",
      "signature" : "Mono.CSharp.CompilationSourceFile Mono.CSharp.AnonymousTypeClass:GetCompilationSourceFile ()",
      "code_size" : "11",
      "class" : "AnonymousTypeClass",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Parameters",
      "signature" : "System.Collections.Generic.IList`1<Mono.CSharp.AnonymousTypeParameter> Mono.CSharp.AnonymousTypeClass:get_Parameters ()",
      "code_size" : "23",
      "class" : "AnonymousTypeClass",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Argument:.ctor (Mono.CSharp.Expression,Mono.CSharp.Argument/AType)",
      "code_size" : "61",
      "class" : "Argument",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Argument:.ctor (Mono.CSharp.Expression)",
      "code_size" : "43",
      "class" : "Argument",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsByRef",
      "signature" : "bool Mono.CSharp.Argument:get_IsByRef ()",
      "code_size" : "57",
      "class" : "Argument",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsDefaultArgument",
      "signature" : "bool Mono.CSharp.Argument:get_IsDefaultArgument ()",
      "code_size" : "31",
      "class" : "Argument",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsExtensionType",
      "signature" : "bool Mono.CSharp.Argument:get_IsExtensionType ()",
      "code_size" : "38",
      "class" : "Argument",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Modifier",
      "signature" : "Mono.CSharp.Parameter/Modifier Mono.CSharp.Argument:get_Modifier ()",
      "code_size" : "60",
      "class" : "Argument",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Type",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.Argument:get_Type ()",
      "code_size" : "30",
      "class" : "Argument",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Clone",
      "signature" : "Mono.CSharp.Argument Mono.CSharp.Argument:Clone (Mono.CSharp.Expression)",
      "code_size" : "122",
      "class" : "Argument",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Clone",
      "signature" : "Mono.CSharp.Argument Mono.CSharp.Argument:Clone (Mono.CSharp.CloneContext)",
      "code_size" : "51",
      "class" : "Argument",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Argument:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "128",
      "class" : "Argument",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.Argument:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "334",
      "class" : "Argument",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitToField",
      "signature" : "Mono.CSharp.Argument Mono.CSharp.Argument:EmitToField (Mono.CSharp.EmitContext,bool)",
      "code_size" : "160",
      "class" : "Argument",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "FlowAnalysis",
      "signature" : "void Mono.CSharp.Argument:FlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "265",
      "class" : "Argument",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSignatureForError",
      "signature" : "string Mono.CSharp.Argument:GetSignatureForError ()",
      "code_size" : "78",
      "class" : "Argument",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveMethodGroup",
      "signature" : "bool Mono.CSharp.Argument:ResolveMethodGroup (Mono.CSharp.ResolveContext)",
      "code_size" : "197",
      "class" : "Argument",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Resolve",
      "signature" : "void Mono.CSharp.Argument:Resolve (Mono.CSharp.ResolveContext)",
      "code_size" : "206",
      "class" : "Argument",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.MovableArgument:.ctor (Mono.CSharp.Argument)",
      "code_size" : "38",
      "class" : "MovableArgument",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.MovableArgument:.ctor (Mono.CSharp.Expression,Mono.CSharp.Argument/AType)",
      "code_size" : "33",
      "class" : "MovableArgument",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.MovableArgument:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "60",
      "class" : "MovableArgument",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitToVariable",
      "signature" : "void Mono.CSharp.MovableArgument:EmitToVariable (Mono.CSharp.EmitContext)",
      "code_size" : "386",
      "class" : "MovableArgument",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.NamedArgument:.ctor (string,Mono.CSharp.Location,Mono.CSharp.Expression)",
      "code_size" : "41",
      "class" : "NamedArgument",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.NamedArgument:.ctor (string,Mono.CSharp.Location,Mono.CSharp.Expression,Mono.CSharp.Argument/AType)",
      "code_size" : "90",
      "class" : "NamedArgument",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.NamedArgument:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "94",
      "class" : "NamedArgument",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Location",
      "signature" : "Mono.CSharp.Location Mono.CSharp.NamedArgument:get_Location ()",
      "code_size" : "30",
      "class" : "NamedArgument",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Arguments:.ctor (int)",
      "code_size" : "85",
      "class" : "Arguments",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Arguments:.ctor (System.Collections.Generic.List`1<Mono.CSharp.Argument>)",
      "code_size" : "43",
      "class" : "Arguments",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Add",
      "signature" : "void Mono.CSharp.Arguments:Add (Mono.CSharp.Argument)",
      "code_size" : "41",
      "class" : "Arguments",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddRange",
      "signature" : "void Mono.CSharp.Arguments:AddRange (Mono.CSharp.Arguments)",
      "code_size" : "45",
      "class" : "Arguments",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ContainsEmitWithAwait",
      "signature" : "bool Mono.CSharp.Arguments:ContainsEmitWithAwait ()",
      "code_size" : "192",
      "class" : "Arguments",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateDynamicBinderArguments",
      "signature" : "Mono.CSharp.ArrayInitializer Mono.CSharp.Arguments:CreateDynamicBinderArguments (Mono.CSharp.ResolveContext)",
      "code_size" : "2992",
      "class" : "Arguments",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateForExpressionTree",
      "signature" : "Mono.CSharp.Arguments Mono.CSharp.Arguments:CreateForExpressionTree (Mono.CSharp.ResolveContext,Mono.CSharp.Arguments,Mono.CSharp.Expression[])",
      "code_size" : "524",
      "class" : "Arguments",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CheckArrayAsAttribute",
      "signature" : "void Mono.CSharp.Arguments:CheckArrayAsAttribute (Mono.CSharp.CompilerContext)",
      "code_size" : "284",
      "class" : "Arguments",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Clone",
      "signature" : "Mono.CSharp.Arguments Mono.CSharp.Arguments:Clone (Mono.CSharp.CloneContext)",
      "code_size" : "252",
      "class" : "Arguments",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Count",
      "signature" : "int Mono.CSharp.Arguments:get_Count ()",
      "code_size" : "30",
      "class" : "Arguments",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.Arguments:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "32",
      "class" : "Arguments",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "Mono.CSharp.Arguments Mono.CSharp.Arguments:Emit (Mono.CSharp.EmitContext,bool,bool)",
      "code_size" : "712",
      "class" : "Arguments",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "FlowAnalysis",
      "signature" : "void Mono.CSharp.Arguments:FlowAnalysis (Mono.CSharp.FlowAnalysisContext,System.Collections.Generic.List`1<Mono.CSharp.MovableArgument>)",
      "code_size" : "505",
      "class" : "Arguments",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetEnumerator",
      "signature" : "System.Collections.Generic.List`1/Enumerator<Mono.CSharp.Argument> Mono.CSharp.Arguments:GetEnumerator ()",
      "code_size" : "123",
      "class" : "Arguments",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_HasDynamic",
      "signature" : "bool Mono.CSharp.Arguments:get_HasDynamic ()",
      "code_size" : "229",
      "class" : "Arguments",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_HasNamed",
      "signature" : "bool Mono.CSharp.Arguments:get_HasNamed ()",
      "code_size" : "225",
      "class" : "Arguments",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Insert",
      "signature" : "void Mono.CSharp.Arguments:Insert (int,Mono.CSharp.Argument)",
      "code_size" : "51",
      "class" : "Arguments",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MakeExpression",
      "signature" : "System.Linq.Expressions.Expression[] Mono.CSharp.Arguments:MakeExpression (Mono.CSharp.Arguments,Mono.CSharp.BuilderContext)",
      "code_size" : "212",
      "class" : "Arguments",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MarkOrderedArgument",
      "signature" : "Mono.CSharp.Arguments Mono.CSharp.Arguments:MarkOrderedArgument (Mono.CSharp.NamedArgument)",
      "code_size" : "423",
      "class" : "Arguments",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Resolve",
      "signature" : "void Mono.CSharp.Arguments:Resolve (Mono.CSharp.ResolveContext,bool&)",
      "code_size" : "248",
      "class" : "Arguments",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "RemoveAt",
      "signature" : "void Mono.CSharp.Arguments:RemoveAt (int)",
      "code_size" : "41",
      "class" : "Arguments",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Item",
      "signature" : "Mono.CSharp.Argument Mono.CSharp.Arguments:get_Item (int)",
      "code_size" : "41",
      "class" : "Arguments",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Item",
      "signature" : "void Mono.CSharp.Arguments:set_Item (int,Mono.CSharp.Argument)",
      "code_size" : "51",
      "class" : "Arguments",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Arguments/ArgumentsOrdered:.ctor (Mono.CSharp.Arguments)",
      "code_size" : "156",
      "class" : "ArgumentsOrdered",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddOrdered",
      "signature" : "void Mono.CSharp.Arguments/ArgumentsOrdered:AddOrdered (Mono.CSharp.MovableArgument)",
      "code_size" : "41",
      "class" : "ArgumentsOrdered",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "FlowAnalysis",
      "signature" : "void Mono.CSharp.Arguments/ArgumentsOrdered:FlowAnalysis (Mono.CSharp.FlowAnalysisContext,System.Collections.Generic.List`1<Mono.CSharp.MovableArgument>)",
      "code_size" : "202",
      "class" : "ArgumentsOrdered",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "Mono.CSharp.Arguments Mono.CSharp.Arguments/ArgumentsOrdered:Emit (Mono.CSharp.EmitContext,bool,bool)",
      "code_size" : "226",
      "class" : "ArgumentsOrdered",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.AssemblyDefinition:.ctor (Mono.CSharp.ModuleContainer,string)",
      "code_size" : "223",
      "class" : "AssemblyDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.AssemblyDefinition:.ctor (Mono.CSharp.ModuleContainer,string,string)",
      "code_size" : "60",
      "class" : "AssemblyDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_CLSCompliantAttribute",
      "signature" : "Mono.CSharp.Attribute Mono.CSharp.AssemblyDefinition:get_CLSCompliantAttribute ()",
      "code_size" : "20",
      "class" : "AssemblyDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Compiler",
      "signature" : "Mono.CSharp.CompilerContext Mono.CSharp.AssemblyDefinition:get_Compiler ()",
      "code_size" : "32",
      "class" : "AssemblyDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_EntryPoint",
      "signature" : "Mono.CSharp.Method Mono.CSharp.AssemblyDefinition:get_EntryPoint ()",
      "code_size" : "20",
      "class" : "AssemblyDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_EntryPoint",
      "signature" : "void Mono.CSharp.AssemblyDefinition:set_EntryPoint (Mono.CSharp.Method)",
      "code_size" : "43",
      "class" : "AssemblyDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_FullName",
      "signature" : "string Mono.CSharp.AssemblyDefinition:get_FullName ()",
      "code_size" : "32",
      "class" : "AssemblyDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_HasCLSCompliantAttribute",
      "signature" : "bool Mono.CSharp.AssemblyDefinition:get_HasCLSCompliantAttribute ()",
      "code_size" : "41",
      "class" : "AssemblyDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Importer",
      "signature" : "Mono.CSharp.MetadataImporter Mono.CSharp.AssemblyDefinition:get_Importer ()",
      "code_size" : "23",
      "class" : "AssemblyDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Importer",
      "signature" : "void Mono.CSharp.AssemblyDefinition:set_Importer (Mono.CSharp.MetadataImporter)",
      "code_size" : "49",
      "class" : "AssemblyDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsCLSCompliant",
      "signature" : "bool Mono.CSharp.AssemblyDefinition:get_IsCLSCompliant ()",
      "code_size" : "23",
      "class" : "AssemblyDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mono.CSharp.IAssemblyDefinition.get_IsMissing",
      "signature" : "bool Mono.CSharp.AssemblyDefinition:Mono.CSharp.IAssemblyDefinition.get_IsMissing ()",
      "code_size" : "11",
      "class" : "AssemblyDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsSatelliteAssembly",
      "signature" : "bool Mono.CSharp.AssemblyDefinition:get_IsSatelliteAssembly ()",
      "code_size" : "23",
      "class" : "AssemblyDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_IsSatelliteAssembly",
      "signature" : "void Mono.CSharp.AssemblyDefinition:set_IsSatelliteAssembly (bool)",
      "code_size" : "34",
      "class" : "AssemblyDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Name",
      "signature" : "string Mono.CSharp.AssemblyDefinition:get_Name ()",
      "code_size" : "20",
      "class" : "AssemblyDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_WrapNonExceptionThrows",
      "signature" : "bool Mono.CSharp.AssemblyDefinition:get_WrapNonExceptionThrows ()",
      "code_size" : "23",
      "class" : "AssemblyDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Report",
      "signature" : "Mono.CSharp.Report Mono.CSharp.AssemblyDefinition:get_Report ()",
      "code_size" : "28",
      "class" : "AssemblyDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_SymbolWriter",
      "signature" : "Mono.CompilerServices.SymbolWriter.MonoSymbolFile Mono.CSharp.AssemblyDefinition:get_SymbolWriter ()",
      "code_size" : "20",
      "class" : "AssemblyDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddModule",
      "signature" : "void Mono.CSharp.AssemblyDefinition:AddModule (Mono.CSharp.ImportedModuleDefinition)",
      "code_size" : "144",
      "class" : "AssemblyDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ApplyAttributeBuilder",
      "signature" : "void Mono.CSharp.AssemblyDefinition:ApplyAttributeBuilder (Mono.CSharp.Attribute,Mono.CSharp.MethodSpec,byte[],Mono.CSharp.PredefinedAttributes)",
      "code_size" : "3266",
      "class" : "AssemblyDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddTypeForwarders",
      "signature" : "void Mono.CSharp.AssemblyDefinition:AddTypeForwarders (Mono.CSharp.TypeSpec,Mono.CSharp.Location)",
      "code_size" : "271",
      "class" : "AssemblyDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CheckReferencesPublicToken",
      "signature" : "void Mono.CSharp.AssemblyDefinition:CheckReferencesPublicToken ()",
      "code_size" : "867",
      "class" : "AssemblyDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateAssemblyName",
      "signature" : "System.Reflection.AssemblyName Mono.CSharp.AssemblyDefinition:CreateAssemblyName ()",
      "code_size" : "274",
      "class" : "AssemblyDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateModuleBuilder",
      "signature" : "System.Reflection.Emit.ModuleBuilder Mono.CSharp.AssemblyDefinition:CreateModuleBuilder ()",
      "code_size" : "266",
      "class" : "AssemblyDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.AssemblyDefinition:Emit ()",
      "code_size" : "1173",
      "class" : "AssemblyDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetPublicKeyToken",
      "signature" : "byte[] Mono.CSharp.AssemblyDefinition:GetPublicKeyToken ()",
      "code_size" : "170",
      "class" : "AssemblyDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetNotUnifiedReferences",
      "signature" : "System.Collections.Generic.List`1<string[]> Mono.CSharp.AssemblyDefinition:GetNotUnifiedReferences (System.Reflection.AssemblyName)",
      "code_size" : "11",
      "class" : "AssemblyDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "LoadPublicKey",
      "signature" : "void Mono.CSharp.AssemblyDefinition:LoadPublicKey (string,string)",
      "code_size" : "1484",
      "class" : "AssemblyDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ReadModulesAssemblyAttributes",
      "signature" : "void Mono.CSharp.AssemblyDefinition:ReadModulesAssemblyAttributes ()",
      "code_size" : "202",
      "class" : "AssemblyDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Resolve",
      "signature" : "void Mono.CSharp.AssemblyDefinition:Resolve ()",
      "code_size" : "1965",
      "class" : "AssemblyDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveAssemblySecurityAttributes",
      "signature" : "void Mono.CSharp.AssemblyDefinition:ResolveAssemblySecurityAttributes ()",
      "code_size" : "1389",
      "class" : "AssemblyDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmbedResources",
      "signature" : "void Mono.CSharp.AssemblyDefinition:EmbedResources ()",
      "code_size" : "1369",
      "class" : "AssemblyDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Save",
      "signature" : "void Mono.CSharp.AssemblyDefinition:Save ()",
      "code_size" : "1440",
      "class" : "AssemblyDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "SaveModule",
      "signature" : "void Mono.CSharp.AssemblyDefinition:SaveModule (System.Reflection.PortableExecutableKinds,System.Reflection.ImageFileMachine)",
      "code_size" : "86",
      "class" : "AssemblyDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetCustomAttribute",
      "signature" : "void Mono.CSharp.AssemblyDefinition:SetCustomAttribute (Mono.CSharp.MethodSpec,byte[])",
      "code_size" : "255",
      "class" : "AssemblyDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetEntryPoint",
      "signature" : "void Mono.CSharp.AssemblyDefinition:SetEntryPoint ()",
      "code_size" : "905",
      "class" : "AssemblyDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_ObsoleteSecurityAttribute",
      "signature" : "void Mono.CSharp.AssemblyDefinition:Error_ObsoleteSecurityAttribute (Mono.CSharp.Attribute,string)",
      "code_size" : "106",
      "class" : "AssemblyDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_AssemblySigning",
      "signature" : "void Mono.CSharp.AssemblyDefinition:Error_AssemblySigning (string)",
      "code_size" : "69",
      "class" : "AssemblyDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsFriendAssemblyTo",
      "signature" : "bool Mono.CSharp.AssemblyDefinition:IsFriendAssemblyTo (Mono.CSharp.IAssemblyDefinition)",
      "code_size" : "11",
      "class" : "AssemblyDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsValidAssemblyVersion",
      "signature" : "System.Version Mono.CSharp.AssemblyDefinition:IsValidAssemblyVersion (string,bool)",
      "code_size" : "904",
      "class" : "AssemblyDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.AssemblyResource:.ctor (string,string)",
      "code_size" : "30",
      "class" : "AssemblyResource",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.AssemblyResource:.ctor (string,string,bool)",
      "code_size" : "109",
      "class" : "AssemblyResource",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Attributes",
      "signature" : "System.Reflection.ResourceAttributes Mono.CSharp.AssemblyResource:get_Attributes ()",
      "code_size" : "20",
      "class" : "AssemblyResource",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Attributes",
      "signature" : "void Mono.CSharp.AssemblyResource:set_Attributes (System.Reflection.ResourceAttributes)",
      "code_size" : "28",
      "class" : "AssemblyResource",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Name",
      "signature" : "string Mono.CSharp.AssemblyResource:get_Name ()",
      "code_size" : "20",
      "class" : "AssemblyResource",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Name",
      "signature" : "void Mono.CSharp.AssemblyResource:set_Name (string)",
      "code_size" : "43",
      "class" : "AssemblyResource",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_FileName",
      "signature" : "string Mono.CSharp.AssemblyResource:get_FileName ()",
      "code_size" : "20",
      "class" : "AssemblyResource",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_FileName",
      "signature" : "void Mono.CSharp.AssemblyResource:set_FileName (string)",
      "code_size" : "43",
      "class" : "AssemblyResource",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsEmbeded",
      "signature" : "bool Mono.CSharp.AssemblyResource:get_IsEmbeded ()",
      "code_size" : "20",
      "class" : "AssemblyResource",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_IsEmbeded",
      "signature" : "void Mono.CSharp.AssemblyResource:set_IsEmbeded (bool)",
      "code_size" : "31",
      "class" : "AssemblyResource",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Equals",
      "signature" : "bool Mono.CSharp.AssemblyResource:Equals (Mono.CSharp.AssemblyResource)",
      "code_size" : "42",
      "class" : "AssemblyResource",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.AssemblyAttributesPlaceholder:.ctor (Mono.CSharp.ModuleContainer,string)",
      "code_size" : "348",
      "class" : "AssemblyAttributesPlaceholder",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddAssemblyAttribute",
      "signature" : "void Mono.CSharp.AssemblyAttributesPlaceholder:AddAssemblyAttribute (Mono.CSharp.MethodSpec,byte[])",
      "code_size" : "54",
      "class" : "AssemblyAttributesPlaceholder",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetGeneratedName",
      "signature" : "string Mono.CSharp.AssemblyAttributesPlaceholder:GetGeneratedName (string)",
      "code_size" : "34",
      "class" : "AssemblyAttributesPlaceholder",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".cctor",
      "signature" : "void Mono.CSharp.AssemblyAttributesPlaceholder:.cctor ()",
      "code_size" : "43",
      "class" : "AssemblyAttributesPlaceholder",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.AssemblyBuilderExtension:.ctor (Mono.CSharp.CompilerContext)",
      "code_size" : "43",
      "class" : "AssemblyBuilderExtension",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddModule",
      "signature" : "System.Reflection.Module Mono.CSharp.AssemblyBuilderExtension:AddModule (string)",
      "code_size" : "100",
      "class" : "AssemblyBuilderExtension",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddPermissionRequests",
      "signature" : "void Mono.CSharp.AssemblyBuilderExtension:AddPermissionRequests (System.Security.PermissionSet[])",
      "code_size" : "98",
      "class" : "AssemblyBuilderExtension",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddTypeForwarder",
      "signature" : "void Mono.CSharp.AssemblyBuilderExtension:AddTypeForwarder (Mono.CSharp.TypeSpec,Mono.CSharp.Location)",
      "code_size" : "59",
      "class" : "AssemblyBuilderExtension",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DefineWin32IconResource",
      "signature" : "void Mono.CSharp.AssemblyBuilderExtension:DefineWin32IconResource (string)",
      "code_size" : "98",
      "class" : "AssemblyBuilderExtension",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetReferencedAssemblies",
      "signature" : "System.Reflection.AssemblyName[] Mono.CSharp.AssemblyBuilderExtension:GetReferencedAssemblies ()",
      "code_size" : "11",
      "class" : "AssemblyBuilderExtension",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetAlgorithmId",
      "signature" : "void Mono.CSharp.AssemblyBuilderExtension:SetAlgorithmId (uint,Mono.CSharp.Location)",
      "code_size" : "59",
      "class" : "AssemblyBuilderExtension",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetCulture",
      "signature" : "void Mono.CSharp.AssemblyBuilderExtension:SetCulture (string,Mono.CSharp.Location)",
      "code_size" : "59",
      "class" : "AssemblyBuilderExtension",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetFlags",
      "signature" : "void Mono.CSharp.AssemblyBuilderExtension:SetFlags (uint,Mono.CSharp.Location)",
      "code_size" : "59",
      "class" : "AssemblyBuilderExtension",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetVersion",
      "signature" : "void Mono.CSharp.AssemblyBuilderExtension:SetVersion (System.Version,Mono.CSharp.Location)",
      "code_size" : "59",
      "class" : "AssemblyBuilderExtension",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.AssemblyReferencesLoader`1<T_REF>:.ctor (Mono.CSharp.CompilerContext)",
      "code_size" : "278",
      "class" : "AssemblyReferencesLoader`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_FileNotFound",
      "signature" : "void Mono.CSharp.AssemblyReferencesLoader`1<T_REF>:Error_FileNotFound (string)",
      "code_size" : "64",
      "class" : "AssemblyReferencesLoader`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_FileCorrupted",
      "signature" : "void Mono.CSharp.AssemblyReferencesLoader`1<T_REF>:Error_FileCorrupted (string)",
      "code_size" : "64",
      "class" : "AssemblyReferencesLoader`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_AssemblyIsModule",
      "signature" : "void Mono.CSharp.AssemblyReferencesLoader`1<T_REF>:Error_AssemblyIsModule (string)",
      "code_size" : "64",
      "class" : "AssemblyReferencesLoader`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_ModuleIsAssembly",
      "signature" : "void Mono.CSharp.AssemblyReferencesLoader`1<T_REF>:Error_ModuleIsAssembly (string)",
      "code_size" : "64",
      "class" : "AssemblyReferencesLoader`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "LoadReferencesCore",
      "signature" : "void Mono.CSharp.AssemblyReferencesLoader`1<T_REF>:LoadReferencesCore (Mono.CSharp.ModuleContainer,T_REF&,System.Collections.Generic.List`1<System.Tuple`2<Mono.CSharp.RootNamespace, T_REF>>&)",
      "code_size" : "2313",
      "class" : "AssemblyReferencesLoader`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.LocalTemporary:.ctor (Mono.CSharp.TypeSpec)",
      "code_size" : "51",
      "class" : "LocalTemporary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.LocalTemporary:.ctor (System.Reflection.Emit.LocalBuilder,Mono.CSharp.TypeSpec)",
      "code_size" : "58",
      "class" : "LocalTemporary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Release",
      "signature" : "void Mono.CSharp.LocalTemporary:Release (Mono.CSharp.EmitContext)",
      "code_size" : "57",
      "class" : "LocalTemporary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ContainsEmitWithAwait",
      "signature" : "bool Mono.CSharp.LocalTemporary:ContainsEmitWithAwait ()",
      "code_size" : "11",
      "class" : "LocalTemporary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.LocalTemporary:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "161",
      "class" : "LocalTemporary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.LocalTemporary:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "16",
      "class" : "LocalTemporary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolveLValue",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.LocalTemporary:DoResolveLValue (Mono.CSharp.ResolveContext,Mono.CSharp.Expression)",
      "code_size" : "16",
      "class" : "LocalTemporary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.LocalTemporary:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "232",
      "class" : "LocalTemporary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.LocalTemporary:Emit (Mono.CSharp.EmitContext,bool)",
      "code_size" : "67",
      "class" : "LocalTemporary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitAssign",
      "signature" : "void Mono.CSharp.LocalTemporary:EmitAssign (Mono.CSharp.EmitContext,Mono.CSharp.Expression,bool,bool)",
      "code_size" : "137",
      "class" : "LocalTemporary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Builder",
      "signature" : "System.Reflection.Emit.LocalBuilder Mono.CSharp.LocalTemporary:get_Builder ()",
      "code_size" : "20",
      "class" : "LocalTemporary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Store",
      "signature" : "void Mono.CSharp.LocalTemporary:Store (Mono.CSharp.EmitContext)",
      "code_size" : "204",
      "class" : "LocalTemporary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddressOf",
      "signature" : "void Mono.CSharp.LocalTemporary:AddressOf (Mono.CSharp.EmitContext,Mono.CSharp.AddressOp)",
      "code_size" : "360",
      "class" : "LocalTemporary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Assign:.ctor (Mono.CSharp.Expression,Mono.CSharp.Expression,Mono.CSharp.Location)",
      "code_size" : "90",
      "class" : "Assign",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Target",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Assign:get_Target ()",
      "code_size" : "20",
      "class" : "Assign",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Source",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Assign:get_Source ()",
      "code_size" : "20",
      "class" : "Assign",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_StartLocation",
      "signature" : "Mono.CSharp.Location Mono.CSharp.Assign:get_StartLocation ()",
      "code_size" : "39",
      "class" : "Assign",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ContainsEmitWithAwait",
      "signature" : "bool Mono.CSharp.Assign:ContainsEmitWithAwait ()",
      "code_size" : "70",
      "class" : "Assign",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Assign:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "77",
      "class" : "Assign",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Assign:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "456",
      "class" : "Assign",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MakeExpression",
      "signature" : "System.Linq.Expressions.Expression Mono.CSharp.Assign:MakeExpression (Mono.CSharp.BuilderContext)",
      "code_size" : "469",
      "class" : "Assign",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveConversions",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Assign:ResolveConversions (Mono.CSharp.ResolveContext)",
      "code_size" : "115",
      "class" : "Assign",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.Assign:Emit (Mono.CSharp.EmitContext,bool)",
      "code_size" : "280",
      "class" : "Assign",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.Assign:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "25",
      "class" : "Assign",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitStatement",
      "signature" : "void Mono.CSharp.Assign:EmitStatement (Mono.CSharp.EmitContext)",
      "code_size" : "28",
      "class" : "Assign",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "FlowAnalysis",
      "signature" : "void Mono.CSharp.Assign:FlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "274",
      "class" : "Assign",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.Assign:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Expression)",
      "code_size" : "203",
      "class" : "Assign",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.Assign:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "Assign",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.SimpleAssign:.ctor (Mono.CSharp.Expression,Mono.CSharp.Expression)",
      "code_size" : "68",
      "class" : "SimpleAssign",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.SimpleAssign:.ctor (Mono.CSharp.Expression,Mono.CSharp.Expression,Mono.CSharp.Location)",
      "code_size" : "38",
      "class" : "SimpleAssign",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CheckEqualAssign",
      "signature" : "bool Mono.CSharp.SimpleAssign:CheckEqualAssign (Mono.CSharp.Expression)",
      "code_size" : "323",
      "class" : "SimpleAssign",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.SimpleAssign:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "148",
      "class" : "SimpleAssign",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "FlowAnalysis",
      "signature" : "void Mono.CSharp.SimpleAssign:FlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "306",
      "class" : "SimpleAssign",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MarkReachable",
      "signature" : "void Mono.CSharp.SimpleAssign:MarkReachable (Mono.CSharp.Reachability)",
      "code_size" : "101",
      "class" : "SimpleAssign",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.RuntimeExplicitAssign:.ctor (Mono.CSharp.Expression,Mono.CSharp.Expression)",
      "code_size" : "68",
      "class" : "RuntimeExplicitAssign",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveConversions",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.RuntimeExplicitAssign:ResolveConversions (Mono.CSharp.ResolveContext)",
      "code_size" : "69",
      "class" : "RuntimeExplicitAssign",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.CompilerAssign:.ctor (Mono.CSharp.Expression,Mono.CSharp.Expression,Mono.CSharp.Location)",
      "code_size" : "106",
      "class" : "CompilerAssign",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.CompilerAssign:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "144",
      "class" : "CompilerAssign",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "UpdateSource",
      "signature" : "void Mono.CSharp.CompilerAssign:UpdateSource (Mono.CSharp.Expression)",
      "code_size" : "43",
      "class" : "CompilerAssign",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.FieldInitializer:.ctor (Mono.CSharp.FieldBase,Mono.CSharp.Expression,Mono.CSharp.Location)",
      "code_size" : "388",
      "class" : "FieldInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_AssignmentOffset",
      "signature" : "int Mono.CSharp.FieldInitializer:get_AssignmentOffset ()",
      "code_size" : "20",
      "class" : "FieldInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_AssignmentOffset",
      "signature" : "void Mono.CSharp.FieldInitializer:set_AssignmentOffset (int)",
      "code_size" : "28",
      "class" : "FieldInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Field",
      "signature" : "Mono.CSharp.FieldBase Mono.CSharp.FieldInitializer:get_Field ()",
      "code_size" : "20",
      "class" : "FieldInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_StartLocation",
      "signature" : "Mono.CSharp.Location Mono.CSharp.FieldInitializer:get_StartLocation ()",
      "code_size" : "30",
      "class" : "FieldInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.FieldInitializer:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "286",
      "class" : "FieldInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitStatement",
      "signature" : "void Mono.CSharp.FieldInitializer:EmitStatement (Mono.CSharp.EmitContext)",
      "code_size" : "251",
      "class" : "FieldInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "FlowAnalysis",
      "signature" : "void Mono.CSharp.FieldInitializer:FlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "129",
      "class" : "FieldInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsDefaultInitializer",
      "signature" : "bool Mono.CSharp.FieldInitializer:get_IsDefaultInitializer ()",
      "code_size" : "175",
      "class" : "FieldInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsSideEffectFree",
      "signature" : "bool Mono.CSharp.FieldInitializer:get_IsSideEffectFree ()",
      "code_size" : "32",
      "class" : "FieldInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.FieldInitializer/FieldInitializerContext:.ctor (Mono.CSharp.IMemberContext,Mono.CSharp.BlockContext)",
      "code_size" : "179",
      "class" : "FieldInitializerContext",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ConstructorBlock",
      "signature" : "Mono.CSharp.ExplicitBlock Mono.CSharp.FieldInitializer/FieldInitializerContext:get_ConstructorBlock ()",
      "code_size" : "20",
      "class" : "FieldInitializerContext",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.PrimaryConstructorAssign:.ctor (Mono.CSharp.Field,Mono.CSharp.Parameter)",
      "code_size" : "106",
      "class" : "PrimaryConstructorAssign",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.PrimaryConstructorAssign:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "209",
      "class" : "PrimaryConstructorAssign",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitStatement",
      "signature" : "void Mono.CSharp.PrimaryConstructorAssign:EmitStatement (Mono.CSharp.EmitContext)",
      "code_size" : "112",
      "class" : "PrimaryConstructorAssign",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.CompoundAssign:.ctor (Mono.CSharp.Binary/Operator,Mono.CSharp.Expression,Mono.CSharp.Expression)",
      "code_size" : "114",
      "class" : "CompoundAssign",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.CompoundAssign:.ctor (Mono.CSharp.Binary/Operator,Mono.CSharp.Expression,Mono.CSharp.Expression,Mono.CSharp.Expression)",
      "code_size" : "65",
      "class" : "CompoundAssign",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Operator",
      "signature" : "Mono.CSharp.Binary/Operator Mono.CSharp.CompoundAssign:get_Operator ()",
      "code_size" : "20",
      "class" : "CompoundAssign",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.CompoundAssign:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "2489",
      "class" : "CompoundAssign",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "FlowAnalysis",
      "signature" : "void Mono.CSharp.CompoundAssign:FlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "67",
      "class" : "CompoundAssign",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveConversions",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.CompoundAssign:ResolveConversions (Mono.CSharp.ResolveContext)",
      "code_size" : "1324",
      "class" : "CompoundAssign",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.CompoundAssign:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Expression)",
      "code_size" : "242",
      "class" : "CompoundAssign",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.CompoundAssign:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "CompoundAssign",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.CompoundAssign/TargetExpression:.ctor (Mono.CSharp.Expression)",
      "code_size" : "69",
      "class" : "TargetExpression",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_RequiresEmitWithAwait",
      "signature" : "bool Mono.CSharp.CompoundAssign/TargetExpression:get_RequiresEmitWithAwait ()",
      "code_size" : "20",
      "class" : "TargetExpression",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_RequiresEmitWithAwait",
      "signature" : "void Mono.CSharp.CompoundAssign/TargetExpression:set_RequiresEmitWithAwait (bool)",
      "code_size" : "31",
      "class" : "TargetExpression",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "ContainsEmitWithAwait",
      "signature" : "bool Mono.CSharp.CompoundAssign/TargetExpression:ContainsEmitWithAwait ()",
      "code_size" : "59",
      "class" : "TargetExpression",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.CompoundAssign/TargetExpression:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "47",
      "class" : "TargetExpression",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.CompoundAssign/TargetExpression:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "65",
      "class" : "TargetExpression",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.CompoundAssign/TargetExpression:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "42",
      "class" : "TargetExpression",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitToField",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.CompoundAssign/TargetExpression:EmitToField (Mono.CSharp.EmitContext)",
      "code_size" : "42",
      "class" : "TargetExpression",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Await:.ctor (Mono.CSharp.Expression,Mono.CSharp.Location)",
      "code_size" : "63",
      "class" : "Await",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Expr",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Await:get_Expr ()",
      "code_size" : "20",
      "class" : "Await",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Statement",
      "signature" : "Mono.CSharp.AwaitStatement Mono.CSharp.Await:get_Statement ()",
      "code_size" : "20",
      "class" : "Await",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.Await:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Expression)",
      "code_size" : "155",
      "class" : "Await",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Await:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "47",
      "class" : "Await",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ContainsEmitWithAwait",
      "signature" : "bool Mono.CSharp.Await:ContainsEmitWithAwait ()",
      "code_size" : "14",
      "class" : "Await",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "FlowAnalysis",
      "signature" : "void Mono.CSharp.Await:FlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "71",
      "class" : "Await",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Await:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "563",
      "class" : "Await",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.Await:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "145",
      "class" : "Await",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitToField",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Await:EmitToField (Mono.CSharp.EmitContext)",
      "code_size" : "65",
      "class" : "Await",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitAssign",
      "signature" : "void Mono.CSharp.Await:EmitAssign (Mono.CSharp.EmitContext,Mono.CSharp.FieldExpr)",
      "code_size" : "97",
      "class" : "Await",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitStatement",
      "signature" : "void Mono.CSharp.Await:EmitStatement (Mono.CSharp.EmitContext)",
      "code_size" : "41",
      "class" : "Await",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MarkReachable",
      "signature" : "void Mono.CSharp.Await:MarkReachable (Mono.CSharp.Reachability)",
      "code_size" : "44",
      "class" : "Await",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.Await:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "36",
      "class" : "Await",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.AwaitStatement:.ctor (Mono.CSharp.Expression,Mono.CSharp.Location)",
      "code_size" : "41",
      "class" : "AwaitStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsDynamic",
      "signature" : "bool Mono.CSharp.AwaitStatement:get_IsDynamic ()",
      "code_size" : "31",
      "class" : "AwaitStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ResultType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.AwaitStatement:get_ResultType ()",
      "code_size" : "20",
      "class" : "AwaitStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoEmit",
      "signature" : "void Mono.CSharp.AwaitStatement:DoEmit (Mono.CSharp.EmitContext)",
      "code_size" : "130",
      "class" : "AwaitStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetResultExpression",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.AwaitStatement:GetResultExpression (Mono.CSharp.EmitContext)",
      "code_size" : "611",
      "class" : "AwaitStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitPrologue",
      "signature" : "void Mono.CSharp.AwaitStatement:EmitPrologue (Mono.CSharp.EmitContext)",
      "code_size" : "1470",
      "class" : "AwaitStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitStatement",
      "signature" : "void Mono.CSharp.AwaitStatement:EmitStatement (Mono.CSharp.EmitContext)",
      "code_size" : "207",
      "class" : "AwaitStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_WrongAwaiterPattern",
      "signature" : "void Mono.CSharp.AwaitStatement:Error_WrongAwaiterPattern (Mono.CSharp.ResolveContext,Mono.CSharp.TypeSpec)",
      "code_size" : "117",
      "class" : "AwaitStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Resolve",
      "signature" : "bool Mono.CSharp.AwaitStatement:Resolve (Mono.CSharp.BlockContext)",
      "code_size" : "1447",
      "class" : "AwaitStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.AwaitStatement/AwaitableMemberAccess:.ctor (Mono.CSharp.Expression)",
      "code_size" : "39",
      "class" : "AwaitableMemberAccess",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ProbingMode",
      "signature" : "bool Mono.CSharp.AwaitStatement/AwaitableMemberAccess:get_ProbingMode ()",
      "code_size" : "20",
      "class" : "AwaitableMemberAccess",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_ProbingMode",
      "signature" : "void Mono.CSharp.AwaitStatement/AwaitableMemberAccess:set_ProbingMode (bool)",
      "code_size" : "31",
      "class" : "AwaitableMemberAccess",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_TypeDoesNotContainDefinition",
      "signature" : "void Mono.CSharp.AwaitStatement/AwaitableMemberAccess:Error_TypeDoesNotContainDefinition (Mono.CSharp.ResolveContext,Mono.CSharp.TypeSpec,string)",
      "code_size" : "36",
      "class" : "AwaitableMemberAccess",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_OperatorCannotBeApplied",
      "signature" : "void Mono.CSharp.AwaitStatement/AwaitableMemberAccess:Error_OperatorCannotBeApplied (Mono.CSharp.ResolveContext,Mono.CSharp.TypeSpec)",
      "code_size" : "405",
      "class" : "AwaitableMemberAccess",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.AwaitStatement/GetResultInvocation:.ctor (Mono.CSharp.MethodGroupExpr,Mono.CSharp.Arguments)",
      "code_size" : "102",
      "class" : "GetResultInvocation",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitToField",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.AwaitStatement/GetResultInvocation:EmitToField (Mono.CSharp.EmitContext)",
      "code_size" : "16",
      "class" : "GetResultInvocation",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.AsyncInitializerStatement:.ctor (Mono.CSharp.AsyncInitializer)",
      "code_size" : "23",
      "class" : "AsyncInitializerStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoFlowAnalysis",
      "signature" : "bool Mono.CSharp.AsyncInitializerStatement:DoFlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "270",
      "class" : "AsyncInitializerStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MarkReachable",
      "signature" : "Mono.CSharp.Reachability Mono.CSharp.AsyncInitializerStatement:MarkReachable (Mono.CSharp.Reachability)",
      "code_size" : "311",
      "class" : "AsyncInitializerStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.AsyncInitializer:.ctor (Mono.CSharp.ParametersBlock,Mono.CSharp.TypeDefinition,Mono.CSharp.TypeSpec)",
      "code_size" : "33",
      "class" : "AsyncInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ContainerType",
      "signature" : "string Mono.CSharp.AsyncInitializer:get_ContainerType ()",
      "code_size" : "16",
      "class" : "AsyncInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_DelegateType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.AsyncInitializer:get_DelegateType ()",
      "code_size" : "20",
      "class" : "AsyncInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_DelegateType",
      "signature" : "void Mono.CSharp.AsyncInitializer:set_DelegateType (Mono.CSharp.TypeSpec)",
      "code_size" : "43",
      "class" : "AsyncInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_HoistedReturnState",
      "signature" : "Mono.CSharp.StackFieldExpr Mono.CSharp.AsyncInitializer:get_HoistedReturnState ()",
      "code_size" : "20",
      "class" : "AsyncInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_HoistedReturnState",
      "signature" : "void Mono.CSharp.AsyncInitializer:set_HoistedReturnState (Mono.CSharp.StackFieldExpr)",
      "code_size" : "43",
      "class" : "AsyncInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsIterator",
      "signature" : "bool Mono.CSharp.AsyncInitializer:get_IsIterator ()",
      "code_size" : "11",
      "class" : "AsyncInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ReturnTypeInference",
      "signature" : "Mono.CSharp.TypeInferenceContext Mono.CSharp.AsyncInitializer:get_ReturnTypeInference ()",
      "code_size" : "20",
      "class" : "AsyncInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateBlockContext",
      "signature" : "Mono.CSharp.BlockContext Mono.CSharp.AsyncInitializer:CreateBlockContext (Mono.CSharp.BlockContext)",
      "code_size" : "167",
      "class" : "AsyncInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.AsyncInitializer:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "27",
      "class" : "AsyncInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitCatchBlock",
      "signature" : "void Mono.CSharp.AsyncInitializer:EmitCatchBlock (Mono.CSharp.EmitContext)",
      "code_size" : "817",
      "class" : "AsyncInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitMoveNextEpilogue",
      "signature" : "void Mono.CSharp.AsyncInitializer:EmitMoveNextEpilogue (Mono.CSharp.EmitContext)",
      "code_size" : "132",
      "class" : "AsyncInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitStatement",
      "signature" : "void Mono.CSharp.AsyncInitializer:EmitStatement (Mono.CSharp.EmitContext)",
      "code_size" : "253",
      "class" : "AsyncInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MarkReachable",
      "signature" : "void Mono.CSharp.AsyncInitializer:MarkReachable (Mono.CSharp.Reachability)",
      "code_size" : "9",
      "class" : "AsyncInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.AsyncTaskStorey:.ctor (Mono.CSharp.ParametersBlock,Mono.CSharp.IMemberContext,Mono.CSharp.AsyncInitializer,Mono.CSharp.TypeSpec)",
      "code_size" : "276",
      "class" : "AsyncTaskStorey",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_HasAwaitInsideFinally",
      "signature" : "bool Mono.CSharp.AsyncTaskStorey:get_HasAwaitInsideFinally ()",
      "code_size" : "23",
      "class" : "AsyncTaskStorey",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_HasAwaitInsideFinally",
      "signature" : "void Mono.CSharp.AsyncTaskStorey:set_HasAwaitInsideFinally (bool)",
      "code_size" : "34",
      "class" : "AsyncTaskStorey",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_HoistedReturnValue",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.AsyncTaskStorey:get_HoistedReturnValue ()",
      "code_size" : "23",
      "class" : "AsyncTaskStorey",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_HoistedReturnValue",
      "signature" : "void Mono.CSharp.AsyncTaskStorey:set_HoistedReturnValue (Mono.CSharp.Expression)",
      "code_size" : "49",
      "class" : "AsyncTaskStorey",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ReturnType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.AsyncTaskStorey:get_ReturnType ()",
      "code_size" : "23",
      "class" : "AsyncTaskStorey",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Task",
      "signature" : "Mono.CSharp.PropertySpec Mono.CSharp.AsyncTaskStorey:get_Task ()",
      "code_size" : "23",
      "class" : "AsyncTaskStorey",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_TypeAttr",
      "signature" : "System.Reflection.TypeAttributes Mono.CSharp.AsyncTaskStorey:get_TypeAttr ()",
      "code_size" : "21",
      "class" : "AsyncTaskStorey",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddAwaiter",
      "signature" : "Mono.CSharp.Field Mono.CSharp.AsyncTaskStorey:AddAwaiter (Mono.CSharp.TypeSpec)",
      "code_size" : "609",
      "class" : "AsyncTaskStorey",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddCapturedLocalVariable",
      "signature" : "Mono.CSharp.Field Mono.CSharp.AsyncTaskStorey:AddCapturedLocalVariable (Mono.CSharp.TypeSpec,bool)",
      "code_size" : "704",
      "class" : "AsyncTaskStorey",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoDefineMembers",
      "signature" : "bool Mono.CSharp.AsyncTaskStorey:DoDefineMembers ()",
      "code_size" : "3269",
      "class" : "AsyncTaskStorey",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitAwaitOnCompletedDynamic",
      "signature" : "void Mono.CSharp.AsyncTaskStorey:EmitAwaitOnCompletedDynamic (Mono.CSharp.EmitContext,Mono.CSharp.FieldExpr)",
      "code_size" : "1126",
      "class" : "AsyncTaskStorey",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitAwaitOnCompleted",
      "signature" : "void Mono.CSharp.AsyncTaskStorey:EmitAwaitOnCompleted (Mono.CSharp.EmitContext,Mono.CSharp.FieldExpr)",
      "code_size" : "202",
      "class" : "AsyncTaskStorey",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitOnCompleted",
      "signature" : "void Mono.CSharp.AsyncTaskStorey:EmitOnCompleted (Mono.CSharp.EmitContext,Mono.CSharp.Expression,bool)",
      "code_size" : "1193",
      "class" : "AsyncTaskStorey",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitInitializer",
      "signature" : "void Mono.CSharp.AsyncTaskStorey:EmitInitializer (Mono.CSharp.EmitContext)",
      "code_size" : "1408",
      "class" : "AsyncTaskStorey",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitSetException",
      "signature" : "void Mono.CSharp.AsyncTaskStorey:EmitSetException (Mono.CSharp.EmitContext,Mono.CSharp.LocalVariableReference)",
      "code_size" : "598",
      "class" : "AsyncTaskStorey",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitSetResult",
      "signature" : "void Mono.CSharp.AsyncTaskStorey:EmitSetResult (Mono.CSharp.EmitContext)",
      "code_size" : "663",
      "class" : "AsyncTaskStorey",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveBaseTypes",
      "signature" : "Mono.CSharp.TypeSpec[] Mono.CSharp.AsyncTaskStorey:ResolveBaseTypes (Mono.CSharp.FullNamedExpression&)",
      "code_size" : "202",
      "class" : "AsyncTaskStorey",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.StackFieldExpr:.ctor (Mono.CSharp.Field)",
      "code_size" : "73",
      "class" : "StackFieldExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsAvailableForReuse",
      "signature" : "bool Mono.CSharp.StackFieldExpr:get_IsAvailableForReuse ()",
      "code_size" : "127",
      "class" : "StackFieldExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_IsAvailableForReuse",
      "signature" : "void Mono.CSharp.StackFieldExpr:set_IsAvailableForReuse (bool)",
      "code_size" : "113",
      "class" : "StackFieldExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddressOf",
      "signature" : "void Mono.CSharp.StackFieldExpr:AddressOf (Mono.CSharp.EmitContext,Mono.CSharp.AddressOp)",
      "code_size" : "49",
      "class" : "StackFieldExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.StackFieldExpr:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "37",
      "class" : "StackFieldExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitLoad",
      "signature" : "void Mono.CSharp.StackFieldExpr:EmitLoad (Mono.CSharp.EmitContext)",
      "code_size" : "23",
      "class" : "StackFieldExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "PrepareCleanup",
      "signature" : "void Mono.CSharp.StackFieldExpr:PrepareCleanup (Mono.CSharp.EmitContext)",
      "code_size" : "71",
      "class" : "StackFieldExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mono.CSharp.IExpressionCleanup.EmitCleanup",
      "signature" : "void Mono.CSharp.StackFieldExpr:Mono.CSharp.IExpressionCleanup.EmitCleanup (Mono.CSharp.EmitContext)",
      "code_size" : "105",
      "class" : "StackFieldExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Attributable:.ctor ()",
      "code_size" : "9",
      "class" : "Attributable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddAttributes",
      "signature" : "void Mono.CSharp.Attributable:AddAttributes (Mono.CSharp.Attributes,Mono.CSharp.IMemberContext)",
      "code_size" : "110",
      "class" : "Attributable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_OptAttributes",
      "signature" : "Mono.CSharp.Attributes Mono.CSharp.Attributable:get_OptAttributes ()",
      "code_size" : "20",
      "class" : "Attributable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_OptAttributes",
      "signature" : "void Mono.CSharp.Attributable:set_OptAttributes (Mono.CSharp.Attributes)",
      "code_size" : "43",
      "class" : "Attributable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Attribute:.ctor (string,Mono.CSharp.ATypeNameExpression,Mono.CSharp.Arguments[],Mono.CSharp.Location,bool)",
      "code_size" : "224",
      "class" : "Attribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Location",
      "signature" : "Mono.CSharp.Location Mono.CSharp.Attribute:get_Location ()",
      "code_size" : "30",
      "class" : "Attribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_NamedArguments",
      "signature" : "Mono.CSharp.Arguments Mono.CSharp.Attribute:get_NamedArguments ()",
      "code_size" : "20",
      "class" : "Attribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_PositionalArguments",
      "signature" : "Mono.CSharp.Arguments Mono.CSharp.Attribute:get_PositionalArguments ()",
      "code_size" : "20",
      "class" : "Attribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ResolveError",
      "signature" : "bool Mono.CSharp.Attribute:get_ResolveError ()",
      "code_size" : "20",
      "class" : "Attribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_TypeExpression",
      "signature" : "Mono.CSharp.ATypeNameExpression Mono.CSharp.Attribute:get_TypeExpression ()",
      "code_size" : "20",
      "class" : "Attribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddModuleCharSet",
      "signature" : "void Mono.CSharp.Attribute:AddModuleCharSet (Mono.CSharp.ResolveContext)",
      "code_size" : "395",
      "class" : "Attribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Clone",
      "signature" : "Mono.CSharp.Attribute Mono.CSharp.Attribute:Clone ()",
      "code_size" : "206",
      "class" : "Attribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AttachTo",
      "signature" : "void Mono.CSharp.Attribute:AttachTo (Mono.CSharp.Attributable,Mono.CSharp.IMemberContext)",
      "code_size" : "348",
      "class" : "Attribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateResolveContext",
      "signature" : "Mono.CSharp.ResolveContext Mono.CSharp.Attribute:CreateResolveContext ()",
      "code_size" : "70",
      "class" : "Attribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_InvalidNamedArgument",
      "signature" : "void Mono.CSharp.Attribute:Error_InvalidNamedArgument (Mono.CSharp.ResolveContext,Mono.CSharp.NamedArgument)",
      "code_size" : "83",
      "class" : "Attribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_InvalidNamedArgumentType",
      "signature" : "void Mono.CSharp.Attribute:Error_InvalidNamedArgumentType (Mono.CSharp.ResolveContext,Mono.CSharp.NamedArgument)",
      "code_size" : "83",
      "class" : "Attribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_AttributeArgumentIsDynamic",
      "signature" : "void Mono.CSharp.Attribute:Error_AttributeArgumentIsDynamic (Mono.CSharp.IMemberContext,Mono.CSharp.Location)",
      "code_size" : "84",
      "class" : "Attribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_MissingGuidAttribute",
      "signature" : "void Mono.CSharp.Attribute:Error_MissingGuidAttribute ()",
      "code_size" : "61",
      "class" : "Attribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_MisusedExtensionAttribute",
      "signature" : "void Mono.CSharp.Attribute:Error_MisusedExtensionAttribute ()",
      "code_size" : "92",
      "class" : "Attribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_MisusedDynamicAttribute",
      "signature" : "void Mono.CSharp.Attribute:Error_MisusedDynamicAttribute ()",
      "code_size" : "92",
      "class" : "Attribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_AttributeEmitError",
      "signature" : "void Mono.CSharp.Attribute:Error_AttributeEmitError (string)",
      "code_size" : "110",
      "class" : "Attribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_InvalidArgumentValue",
      "signature" : "void Mono.CSharp.Attribute:Error_InvalidArgumentValue (Mono.CSharp.TypeSpec)",
      "code_size" : "103",
      "class" : "Attribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_InvalidSecurityParent",
      "signature" : "void Mono.CSharp.Attribute:Error_InvalidSecurityParent ()",
      "code_size" : "100",
      "class" : "Attribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Owner",
      "signature" : "Mono.CSharp.Attributable Mono.CSharp.Attribute:get_Owner ()",
      "code_size" : "49",
      "class" : "Attribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetOwner",
      "signature" : "void Mono.CSharp.Attribute:SetOwner (Mono.CSharp.Attributable)",
      "code_size" : "44",
      "class" : "Attribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveAttributeType",
      "signature" : "void Mono.CSharp.Attribute:ResolveAttributeType (bool)",
      "code_size" : "1590",
      "class" : "Attribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveTypeForComparison",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.Attribute:ResolveTypeForComparison ()",
      "code_size" : "55",
      "class" : "Attribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSignatureForError",
      "signature" : "string Mono.CSharp.Attribute:GetSignatureForError ()",
      "code_size" : "64",
      "class" : "Attribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_HasSecurityAttribute",
      "signature" : "bool Mono.CSharp.Attribute:get_HasSecurityAttribute ()",
      "code_size" : "139",
      "class" : "Attribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsValidSecurityAttribute",
      "signature" : "bool Mono.CSharp.Attribute:IsValidSecurityAttribute ()",
      "code_size" : "48",
      "class" : "Attribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsValidMethodImplOption",
      "signature" : "bool Mono.CSharp.Attribute:IsValidMethodImplOption (int)",
      "code_size" : "420",
      "class" : "Attribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsValidArgumentType",
      "signature" : "bool Mono.CSharp.Attribute:IsValidArgumentType (Mono.CSharp.TypeSpec)",
      "code_size" : "198",
      "class" : "Attribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Name",
      "signature" : "string Mono.CSharp.Attribute:get_Name ()",
      "code_size" : "30",
      "class" : "Attribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Report",
      "signature" : "Mono.CSharp.Report Mono.CSharp.Attribute:get_Report ()",
      "code_size" : "58",
      "class" : "Attribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Resolve",
      "signature" : "Mono.CSharp.MethodSpec Mono.CSharp.Attribute:Resolve ()",
      "code_size" : "761",
      "class" : "Attribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveConstructor",
      "signature" : "Mono.CSharp.MethodSpec Mono.CSharp.Attribute:ResolveConstructor (Mono.CSharp.ResolveContext)",
      "code_size" : "176",
      "class" : "Attribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveNamedArguments",
      "signature" : "bool Mono.CSharp.Attribute:ResolveNamedArguments (Mono.CSharp.ResolveContext)",
      "code_size" : "2247",
      "class" : "Attribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetValidTargets",
      "signature" : "string Mono.CSharp.Attribute:GetValidTargets ()",
      "code_size" : "644",
      "class" : "Attribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetAttributeUsageAttribute",
      "signature" : "System.AttributeUsageAttribute Mono.CSharp.Attribute:GetAttributeUsageAttribute ()",
      "code_size" : "435",
      "class" : "Attribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetIndexerAttributeValue",
      "signature" : "string Mono.CSharp.Attribute:GetIndexerAttributeValue ()",
      "code_size" : "299",
      "class" : "Attribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetConditionalAttributeValue",
      "signature" : "string Mono.CSharp.Attribute:GetConditionalAttributeValue ()",
      "code_size" : "189",
      "class" : "Attribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetObsoleteAttribute",
      "signature" : "System.ObsoleteAttribute Mono.CSharp.Attribute:GetObsoleteAttribute ()",
      "code_size" : "553",
      "class" : "Attribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetClsCompliantAttributeValue",
      "signature" : "bool Mono.CSharp.Attribute:GetClsCompliantAttributeValue ()",
      "code_size" : "129",
      "class" : "Attribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetCoClassAttributeValue",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.Attribute:GetCoClassAttributeValue ()",
      "code_size" : "58",
      "class" : "Attribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CheckTarget",
      "signature" : "bool Mono.CSharp.Attribute:CheckTarget ()",
      "code_size" : "939",
      "class" : "Attribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsSecurityActionValid",
      "signature" : "bool Mono.CSharp.Attribute:IsSecurityActionValid ()",
      "code_size" : "730",
      "class" : "Attribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSecurityActionValue",
      "signature" : "System.Nullable`1<System.Security.Permissions.SecurityAction> Mono.CSharp.Attribute:GetSecurityActionValue (Mono.CSharp.Constant&)",
      "code_size" : "508",
      "class" : "Attribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ExtractSecurityPermissionSet",
      "signature" : "void Mono.CSharp.Attribute:ExtractSecurityPermissionSet (Mono.CSharp.MethodSpec,System.Collections.Generic.Dictionary`2<System.Security.Permissions.SecurityAction, System.Security.PermissionSet>&)",
      "code_size" : "27",
      "class" : "Attribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetNamedValue",
      "signature" : "Mono.CSharp.Constant Mono.CSharp.Attribute:GetNamedValue (string)",
      "code_size" : "259",
      "class" : "Attribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetCharSetValue",
      "signature" : "System.Runtime.InteropServices.CharSet Mono.CSharp.Attribute:GetCharSetValue ()",
      "code_size" : "193",
      "class" : "Attribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "HasField",
      "signature" : "bool Mono.CSharp.Attribute:HasField (string)",
      "code_size" : "262",
      "class" : "Attribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsInternalCall",
      "signature" : "bool Mono.CSharp.Attribute:IsInternalCall ()",
      "code_size" : "43",
      "class" : "Attribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetMethodImplOptions",
      "signature" : "System.Runtime.CompilerServices.MethodImplOptions Mono.CSharp.Attribute:GetMethodImplOptions ()",
      "code_size" : "383",
      "class" : "Attribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsExplicitLayoutKind",
      "signature" : "bool Mono.CSharp.Attribute:IsExplicitLayoutKind ()",
      "code_size" : "252",
      "class" : "Attribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetParameterDefaultValue",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Attribute:GetParameterDefaultValue ()",
      "code_size" : "54",
      "class" : "Attribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Equals",
      "signature" : "bool Mono.CSharp.Attribute:Equals (object)",
      "code_size" : "133",
      "class" : "Attribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetHashCode",
      "signature" : "int Mono.CSharp.Attribute:GetHashCode ()",
      "code_size" : "115",
      "class" : "Attribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.Attribute:Emit (System.Collections.Generic.Dictionary`2<Mono.CSharp.Attribute, System.Collections.Generic.List`1<Mono.CSharp.Attribute>>)",
      "code_size" : "4105",
      "class" : "Attribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetValue",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Attribute:GetValue ()",
      "code_size" : "87",
      "class" : "Attribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetString",
      "signature" : "string Mono.CSharp.Attribute:GetString ()",
      "code_size" : "155",
      "class" : "Attribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetBoolean",
      "signature" : "bool Mono.CSharp.Attribute:GetBoolean ()",
      "code_size" : "152",
      "class" : "Attribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetArgumentType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.Attribute:GetArgumentType ()",
      "code_size" : "95",
      "class" : "Attribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".cctor",
      "signature" : "void Mono.CSharp.Attribute:.cctor ()",
      "code_size" : "106",
      "class" : "Attribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "<CheckTarget>m__0",
      "signature" : "bool Mono.CSharp.Attribute:<CheckTarget>m__0 (string)",
      "code_size" : "35",
      "class" : "Attribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Attributes:.ctor (Mono.CSharp.Attribute)",
      "code_size" : "132",
      "class" : "Attributes",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Attributes:.ctor (System.Collections.Generic.List`1<Mono.CSharp.Attribute>)",
      "code_size" : "134",
      "class" : "Attributes",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddAttribute",
      "signature" : "void Mono.CSharp.Attributes:AddAttribute (Mono.CSharp.Attribute)",
      "code_size" : "41",
      "class" : "Attributes",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddAttributes",
      "signature" : "void Mono.CSharp.Attributes:AddAttributes (System.Collections.Generic.List`1<Mono.CSharp.Attribute>)",
      "code_size" : "41",
      "class" : "Attributes",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AttachFromPartial",
      "signature" : "void Mono.CSharp.Attributes:AttachFromPartial (Mono.CSharp.Attributable,Mono.CSharp.Attributable)",
      "code_size" : "281",
      "class" : "Attributes",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AttachTo",
      "signature" : "void Mono.CSharp.Attributes:AttachTo (Mono.CSharp.Attributable,Mono.CSharp.IMemberContext)",
      "code_size" : "182",
      "class" : "Attributes",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Clone",
      "signature" : "Mono.CSharp.Attributes Mono.CSharp.Attributes:Clone ()",
      "code_size" : "269",
      "class" : "Attributes",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CheckTargets",
      "signature" : "bool Mono.CSharp.Attributes:CheckTargets ()",
      "code_size" : "123",
      "class" : "Attributes",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ConvertGlobalAttributes",
      "signature" : "void Mono.CSharp.Attributes:ConvertGlobalAttributes (Mono.CSharp.TypeContainer,Mono.CSharp.NamespaceContainer,bool)",
      "code_size" : "331",
      "class" : "Attributes",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "HasResolveError",
      "signature" : "bool Mono.CSharp.Attributes:HasResolveError ()",
      "code_size" : "186",
      "class" : "Attributes",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Search",
      "signature" : "Mono.CSharp.Attribute Mono.CSharp.Attributes:Search (Mono.CSharp.PredefinedAttribute)",
      "code_size" : "30",
      "class" : "Attributes",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Search",
      "signature" : "Mono.CSharp.Attribute Mono.CSharp.Attributes:Search (string,Mono.CSharp.PredefinedAttribute)",
      "code_size" : "241",
      "class" : "Attributes",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "SearchMulti",
      "signature" : "Mono.CSharp.Attribute[] Mono.CSharp.Attributes:SearchMulti (Mono.CSharp.PredefinedAttribute)",
      "code_size" : "323",
      "class" : "Attributes",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.Attributes:Emit ()",
      "code_size" : "796",
      "class" : "Attributes",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Contains",
      "signature" : "bool Mono.CSharp.Attributes:Contains (Mono.CSharp.PredefinedAttribute)",
      "code_size" : "44",
      "class" : "Attributes",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".cctor",
      "signature" : "void Mono.CSharp.AttributeEncoder:.cctor ()",
      "code_size" : "78",
      "class" : "AttributeEncoder",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.AttributeEncoder:.ctor ()",
      "code_size" : "71",
      "class" : "AttributeEncoder",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Encode",
      "signature" : "void Mono.CSharp.AttributeEncoder:Encode (bool)",
      "code_size" : "45",
      "class" : "AttributeEncoder",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Encode",
      "signature" : "void Mono.CSharp.AttributeEncoder:Encode (byte)",
      "code_size" : "115",
      "class" : "AttributeEncoder",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Encode",
      "signature" : "void Mono.CSharp.AttributeEncoder:Encode (sbyte)",
      "code_size" : "37",
      "class" : "AttributeEncoder",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Encode",
      "signature" : "void Mono.CSharp.AttributeEncoder:Encode (int16)",
      "code_size" : "166",
      "class" : "AttributeEncoder",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Encode",
      "signature" : "void Mono.CSharp.AttributeEncoder:Encode (uint16)",
      "code_size" : "36",
      "class" : "AttributeEncoder",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Encode",
      "signature" : "void Mono.CSharp.AttributeEncoder:Encode (int)",
      "code_size" : "271",
      "class" : "AttributeEncoder",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Encode",
      "signature" : "void Mono.CSharp.AttributeEncoder:Encode (uint)",
      "code_size" : "27",
      "class" : "AttributeEncoder",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Encode",
      "signature" : "void Mono.CSharp.AttributeEncoder:Encode (long)",
      "code_size" : "478",
      "class" : "AttributeEncoder",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Encode",
      "signature" : "void Mono.CSharp.AttributeEncoder:Encode (ulong)",
      "code_size" : "28",
      "class" : "AttributeEncoder",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Encode",
      "signature" : "void Mono.CSharp.AttributeEncoder:Encode (single)",
      "code_size" : "50",
      "class" : "AttributeEncoder",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Encode",
      "signature" : "void Mono.CSharp.AttributeEncoder:Encode (double)",
      "code_size" : "45",
      "class" : "AttributeEncoder",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Encode",
      "signature" : "void Mono.CSharp.AttributeEncoder:Encode (string)",
      "code_size" : "165",
      "class" : "AttributeEncoder",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Encode",
      "signature" : "Mono.CSharp.AttributeEncoder/EncodedTypeProperties Mono.CSharp.AttributeEncoder:Encode (Mono.CSharp.TypeSpec)",
      "code_size" : "529",
      "class" : "AttributeEncoder",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EncodeTypeName",
      "signature" : "void Mono.CSharp.AttributeEncoder:EncodeTypeName (Mono.CSharp.TypeSpec)",
      "code_size" : "142",
      "class" : "AttributeEncoder",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EncodeTypeName",
      "signature" : "void Mono.CSharp.AttributeEncoder:EncodeTypeName (Mono.CSharp.TypeContainer)",
      "code_size" : "45",
      "class" : "AttributeEncoder",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EncodeNamedPropertyArgument",
      "signature" : "void Mono.CSharp.AttributeEncoder:EncodeNamedPropertyArgument (Mono.CSharp.PropertySpec,Mono.CSharp.Constant)",
      "code_size" : "140",
      "class" : "AttributeEncoder",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EncodeNamedFieldArgument",
      "signature" : "void Mono.CSharp.AttributeEncoder:EncodeNamedFieldArgument (Mono.CSharp.FieldSpec,Mono.CSharp.Constant)",
      "code_size" : "140",
      "class" : "AttributeEncoder",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EncodeNamedArguments",
      "signature" : "void Mono.CSharp.AttributeEncoder:EncodeNamedArguments<T_REF> (T_REF[],Mono.CSharp.Constant[])",
      "code_size" : "427",
      "class" : "AttributeEncoder",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EncodeEmptyNamedArguments",
      "signature" : "void Mono.CSharp.AttributeEncoder:EncodeEmptyNamedArguments ()",
      "code_size" : "20",
      "class" : "AttributeEncoder",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Grow",
      "signature" : "void Mono.CSharp.AttributeEncoder:Grow (int)",
      "code_size" : "88",
      "class" : "AttributeEncoder",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "WriteCompressedValue",
      "signature" : "void Mono.CSharp.AttributeEncoder:WriteCompressedValue (int)",
      "code_size" : "116",
      "class" : "AttributeEncoder",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ToArray",
      "signature" : "byte[] Mono.CSharp.AttributeEncoder:ToArray ()",
      "code_size" : "62",
      "class" : "AttributeEncoder",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Report_ObsoleteMessage",
      "signature" : "void Mono.CSharp.AttributeTester:Report_ObsoleteMessage (System.ObsoleteAttribute,string,Mono.CSharp.Location,Mono.CSharp.Report)",
      "code_size" : "223",
      "class" : "AttributeTester",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.PredefinedAttributes:.ctor (Mono.CSharp.ModuleContainer)",
      "code_size" : "6608",
      "class" : "PredefinedAttributes",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.PredefinedAttribute:.ctor (Mono.CSharp.ModuleContainer,string,string)",
      "code_size" : "48",
      "class" : "PredefinedAttribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Constructor",
      "signature" : "Mono.CSharp.MethodSpec Mono.CSharp.PredefinedAttribute:get_Constructor ()",
      "code_size" : "20",
      "class" : "PredefinedAttribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "op_Equality",
      "signature" : "bool Mono.CSharp.PredefinedAttribute:op_Equality (Mono.CSharp.TypeSpec,Mono.CSharp.PredefinedAttribute)",
      "code_size" : "69",
      "class" : "PredefinedAttribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "op_Inequality",
      "signature" : "bool Mono.CSharp.PredefinedAttribute:op_Inequality (Mono.CSharp.TypeSpec,Mono.CSharp.PredefinedAttribute)",
      "code_size" : "47",
      "class" : "PredefinedAttribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetHashCode",
      "signature" : "int Mono.CSharp.PredefinedAttribute:GetHashCode ()",
      "code_size" : "18",
      "class" : "PredefinedAttribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Equals",
      "signature" : "bool Mono.CSharp.PredefinedAttribute:Equals (object)",
      "code_size" : "27",
      "class" : "PredefinedAttribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitAttribute",
      "signature" : "void Mono.CSharp.PredefinedAttribute:EmitAttribute (System.Reflection.Emit.ConstructorBuilder)",
      "code_size" : "179",
      "class" : "PredefinedAttribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitAttribute",
      "signature" : "void Mono.CSharp.PredefinedAttribute:EmitAttribute (System.Reflection.Emit.MethodBuilder)",
      "code_size" : "179",
      "class" : "PredefinedAttribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitAttribute",
      "signature" : "void Mono.CSharp.PredefinedAttribute:EmitAttribute (System.Reflection.Emit.PropertyBuilder)",
      "code_size" : "179",
      "class" : "PredefinedAttribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitAttribute",
      "signature" : "void Mono.CSharp.PredefinedAttribute:EmitAttribute (System.Reflection.Emit.FieldBuilder)",
      "code_size" : "179",
      "class" : "PredefinedAttribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitAttribute",
      "signature" : "void Mono.CSharp.PredefinedAttribute:EmitAttribute (System.Reflection.Emit.TypeBuilder)",
      "code_size" : "179",
      "class" : "PredefinedAttribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitAttribute",
      "signature" : "void Mono.CSharp.PredefinedAttribute:EmitAttribute (System.Reflection.Emit.AssemblyBuilder)",
      "code_size" : "179",
      "class" : "PredefinedAttribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitAttribute",
      "signature" : "void Mono.CSharp.PredefinedAttribute:EmitAttribute (System.Reflection.Emit.ModuleBuilder)",
      "code_size" : "179",
      "class" : "PredefinedAttribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitAttribute",
      "signature" : "void Mono.CSharp.PredefinedAttribute:EmitAttribute (System.Reflection.Emit.ParameterBuilder)",
      "code_size" : "179",
      "class" : "PredefinedAttribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetCtorMetaInfo",
      "signature" : "System.Reflection.ConstructorInfo Mono.CSharp.PredefinedAttribute:GetCtorMetaInfo ()",
      "code_size" : "91",
      "class" : "PredefinedAttribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveBuilder",
      "signature" : "bool Mono.CSharp.PredefinedAttribute:ResolveBuilder ()",
      "code_size" : "253",
      "class" : "PredefinedAttribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.PredefinedDebuggerBrowsableAttribute:.ctor (Mono.CSharp.ModuleContainer,string,string)",
      "code_size" : "33",
      "class" : "PredefinedDebuggerBrowsableAttribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitAttribute",
      "signature" : "void Mono.CSharp.PredefinedDebuggerBrowsableAttribute:EmitAttribute (System.Reflection.Emit.FieldBuilder,System.Diagnostics.DebuggerBrowsableState)",
      "code_size" : "369",
      "class" : "PredefinedDebuggerBrowsableAttribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.PredefinedDebuggableAttribute:.ctor (Mono.CSharp.ModuleContainer,string,string)",
      "code_size" : "33",
      "class" : "PredefinedDebuggableAttribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitAttribute",
      "signature" : "void Mono.CSharp.PredefinedDebuggableAttribute:EmitAttribute (System.Reflection.Emit.AssemblyBuilder,System.Diagnostics.DebuggableAttribute/DebuggingModes)",
      "code_size" : "676",
      "class" : "PredefinedDebuggableAttribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.PredefinedDecimalAttribute:.ctor (Mono.CSharp.ModuleContainer,string,string)",
      "code_size" : "33",
      "class" : "PredefinedDecimalAttribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitAttribute",
      "signature" : "void Mono.CSharp.PredefinedDecimalAttribute:EmitAttribute (System.Reflection.Emit.ParameterBuilder,System.Decimal,Mono.CSharp.Location)",
      "code_size" : "584",
      "class" : "PredefinedDecimalAttribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitAttribute",
      "signature" : "void Mono.CSharp.PredefinedDecimalAttribute:EmitAttribute (System.Reflection.Emit.FieldBuilder,System.Decimal,Mono.CSharp.Location)",
      "code_size" : "593",
      "class" : "PredefinedDecimalAttribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.PredefinedStateMachineAttribute:.ctor (Mono.CSharp.ModuleContainer,string,string)",
      "code_size" : "33",
      "class" : "PredefinedStateMachineAttribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitAttribute",
      "signature" : "void Mono.CSharp.PredefinedStateMachineAttribute:EmitAttribute (System.Reflection.Emit.MethodBuilder,Mono.CSharp.StateMachine)",
      "code_size" : "369",
      "class" : "PredefinedStateMachineAttribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.PredefinedDynamicAttribute:.ctor (Mono.CSharp.ModuleContainer,string,string)",
      "code_size" : "33",
      "class" : "PredefinedDynamicAttribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitAttribute",
      "signature" : "void Mono.CSharp.PredefinedDynamicAttribute:EmitAttribute (System.Reflection.Emit.FieldBuilder,Mono.CSharp.TypeSpec,Mono.CSharp.Location)",
      "code_size" : "396",
      "class" : "PredefinedDynamicAttribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitAttribute",
      "signature" : "void Mono.CSharp.PredefinedDynamicAttribute:EmitAttribute (System.Reflection.Emit.ParameterBuilder,Mono.CSharp.TypeSpec,Mono.CSharp.Location)",
      "code_size" : "396",
      "class" : "PredefinedDynamicAttribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitAttribute",
      "signature" : "void Mono.CSharp.PredefinedDynamicAttribute:EmitAttribute (System.Reflection.Emit.PropertyBuilder,Mono.CSharp.TypeSpec,Mono.CSharp.Location)",
      "code_size" : "396",
      "class" : "PredefinedDynamicAttribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitAttribute",
      "signature" : "void Mono.CSharp.PredefinedDynamicAttribute:EmitAttribute (System.Reflection.Emit.TypeBuilder,Mono.CSharp.TypeSpec,Mono.CSharp.Location)",
      "code_size" : "396",
      "class" : "PredefinedDynamicAttribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetTransformationFlags",
      "signature" : "bool[] Mono.CSharp.PredefinedDynamicAttribute:GetTransformationFlags (Mono.CSharp.TypeSpec)",
      "code_size" : "617",
      "class" : "PredefinedDynamicAttribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveTransformationCtor",
      "signature" : "bool Mono.CSharp.PredefinedDynamicAttribute:ResolveTransformationCtor (Mono.CSharp.Location)",
      "code_size" : "132",
      "class" : "PredefinedDynamicAttribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateBinaryPromotionsTypes",
      "signature" : "Mono.CSharp.TypeSpec[] Mono.CSharp.ConstantFold:CreateBinaryPromotionsTypes (Mono.CSharp.BuiltinTypes)",
      "code_size" : "238",
      "class" : "ConstantFold",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoBinaryNumericPromotions",
      "signature" : "bool Mono.CSharp.ConstantFold:DoBinaryNumericPromotions (Mono.CSharp.ResolveContext,Mono.CSharp.Constant&,Mono.CSharp.Constant&)",
      "code_size" : "492",
      "class" : "ConstantFold",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ConvertPromotion",
      "signature" : "bool Mono.CSharp.ConstantFold:ConvertPromotion (Mono.CSharp.ResolveContext,Mono.CSharp.Constant&,Mono.CSharp.Constant&,Mono.CSharp.TypeSpec)",
      "code_size" : "280",
      "class" : "ConstantFold",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_CompileTimeOverflow",
      "signature" : "void Mono.CSharp.ConstantFold:Error_CompileTimeOverflow (Mono.CSharp.ResolveContext,Mono.CSharp.Location)",
      "code_size" : "57",
      "class" : "ConstantFold",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "BinaryFold",
      "signature" : "Mono.CSharp.Constant Mono.CSharp.ConstantFold:BinaryFold (Mono.CSharp.ResolveContext,Mono.CSharp.Binary/Operator,Mono.CSharp.Constant,Mono.CSharp.Constant,Mono.CSharp.Location)",
      "code_size" : "45746",
      "class" : "ConstantFold",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.TypeContainer:.ctor (Mono.CSharp.TypeContainer,Mono.CSharp.MemberName,Mono.CSharp.Attributes,Mono.CSharp.MemberKind)",
      "code_size" : "111",
      "class" : "TypeContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_CounterAnonymousMethods",
      "signature" : "int Mono.CSharp.TypeContainer:get_CounterAnonymousMethods ()",
      "code_size" : "20",
      "class" : "TypeContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_CounterAnonymousMethods",
      "signature" : "void Mono.CSharp.TypeContainer:set_CounterAnonymousMethods (int)",
      "code_size" : "28",
      "class" : "TypeContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_CounterAnonymousContainers",
      "signature" : "int Mono.CSharp.TypeContainer:get_CounterAnonymousContainers ()",
      "code_size" : "20",
      "class" : "TypeContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_CounterAnonymousContainers",
      "signature" : "void Mono.CSharp.TypeContainer:set_CounterAnonymousContainers (int)",
      "code_size" : "28",
      "class" : "TypeContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_CounterSwitchTypes",
      "signature" : "int Mono.CSharp.TypeContainer:get_CounterSwitchTypes ()",
      "code_size" : "20",
      "class" : "TypeContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_CounterSwitchTypes",
      "signature" : "void Mono.CSharp.TypeContainer:set_CounterSwitchTypes (int)",
      "code_size" : "28",
      "class" : "TypeContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_CurrentType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.TypeContainer:get_CurrentType ()",
      "code_size" : "11",
      "class" : "TypeContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_DefinedNames",
      "signature" : "System.Collections.Generic.Dictionary`2<string, Mono.CSharp.MemberCore> Mono.CSharp.TypeContainer:get_DefinedNames ()",
      "code_size" : "20",
      "class" : "TypeContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_PartialContainer",
      "signature" : "Mono.CSharp.TypeDefinition Mono.CSharp.TypeContainer:get_PartialContainer ()",
      "code_size" : "20",
      "class" : "TypeContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_PartialContainer",
      "signature" : "void Mono.CSharp.TypeContainer:set_PartialContainer (Mono.CSharp.TypeDefinition)",
      "code_size" : "43",
      "class" : "TypeContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Containers",
      "signature" : "System.Collections.Generic.IList`1<Mono.CSharp.TypeContainer> Mono.CSharp.TypeContainer:get_Containers ()",
      "code_size" : "20",
      "class" : "TypeContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_UnattachedAttributes",
      "signature" : "Mono.CSharp.Attributes Mono.CSharp.TypeContainer:get_UnattachedAttributes ()",
      "code_size" : "20",
      "class" : "TypeContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_UnattachedAttributes",
      "signature" : "void Mono.CSharp.TypeContainer:set_UnattachedAttributes (Mono.CSharp.Attributes)",
      "code_size" : "43",
      "class" : "TypeContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddCompilerGeneratedClass",
      "signature" : "void Mono.CSharp.TypeContainer:AddCompilerGeneratedClass (Mono.CSharp.CompilerGeneratedContainer)",
      "code_size" : "31",
      "class" : "TypeContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddPartial",
      "signature" : "void Mono.CSharp.TypeContainer:AddPartial (Mono.CSharp.TypeDefinition)",
      "code_size" : "191",
      "class" : "TypeContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddPartial",
      "signature" : "void Mono.CSharp.TypeContainer:AddPartial (Mono.CSharp.TypeDefinition,Mono.CSharp.TypeDefinition)",
      "code_size" : "1415",
      "class" : "TypeContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddTypeContainer",
      "signature" : "void Mono.CSharp.TypeContainer:AddTypeContainer (Mono.CSharp.TypeContainer)",
      "code_size" : "256",
      "class" : "TypeContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddTypeContainerMember",
      "signature" : "void Mono.CSharp.TypeContainer:AddTypeContainerMember (Mono.CSharp.TypeContainer)",
      "code_size" : "41",
      "class" : "TypeContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloseContainer",
      "signature" : "void Mono.CSharp.TypeContainer:CloseContainer ()",
      "code_size" : "169",
      "class" : "TypeContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateMetadataName",
      "signature" : "void Mono.CSharp.TypeContainer:CreateMetadataName (System.Text.StringBuilder)",
      "code_size" : "94",
      "class" : "TypeContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateContainer",
      "signature" : "bool Mono.CSharp.TypeContainer:CreateContainer ()",
      "code_size" : "174",
      "class" : "TypeContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Define",
      "signature" : "bool Mono.CSharp.TypeContainer:Define ()",
      "code_size" : "233",
      "class" : "TypeContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "PrepareEmit",
      "signature" : "void Mono.CSharp.TypeContainer:PrepareEmit ()",
      "code_size" : "333",
      "class" : "TypeContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DefineContainer",
      "signature" : "bool Mono.CSharp.TypeContainer:DefineContainer ()",
      "code_size" : "378",
      "class" : "TypeContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ExpandBaseInterfaces",
      "signature" : "void Mono.CSharp.TypeContainer:ExpandBaseInterfaces ()",
      "code_size" : "169",
      "class" : "TypeContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DefineNamespace",
      "signature" : "void Mono.CSharp.TypeContainer:DefineNamespace ()",
      "code_size" : "276",
      "class" : "TypeContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoDefineContainer",
      "signature" : "void Mono.CSharp.TypeContainer:DoDefineContainer ()",
      "code_size" : "9",
      "class" : "TypeContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitContainer",
      "signature" : "void Mono.CSharp.TypeContainer:EmitContainer ()",
      "code_size" : "106",
      "class" : "TypeContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_MissingPartialModifier",
      "signature" : "void Mono.CSharp.TypeContainer:Error_MissingPartialModifier (Mono.CSharp.MemberCore)",
      "code_size" : "112",
      "class" : "TypeContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSignatureForDocumentation",
      "signature" : "string Mono.CSharp.TypeContainer:GetSignatureForDocumentation ()",
      "code_size" : "142",
      "class" : "TypeContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSignatureForError",
      "signature" : "string Mono.CSharp.TypeContainer:GetSignatureForError ()",
      "code_size" : "142",
      "class" : "TypeContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSignatureForMetadata",
      "signature" : "string Mono.CSharp.TypeContainer:GetSignatureForMetadata ()",
      "code_size" : "87",
      "class" : "TypeContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "RemoveContainer",
      "signature" : "void Mono.CSharp.TypeContainer:RemoveContainer (Mono.CSharp.TypeContainer)",
      "code_size" : "174",
      "class" : "TypeContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "VerifyMembers",
      "signature" : "void Mono.CSharp.TypeContainer:VerifyMembers ()",
      "code_size" : "169",
      "class" : "TypeContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "WriteDebugSymbol",
      "signature" : "void Mono.CSharp.TypeContainer:WriteDebugSymbol (Mono.CompilerServices.SymbolWriter.MonoSymbolFile)",
      "code_size" : "184",
      "class" : "TypeContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.TypeDefinition:.ctor (Mono.CSharp.TypeContainer,Mono.CSharp.MemberName,Mono.CSharp.Attributes,Mono.CSharp.MemberKind)",
      "code_size" : "231",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_BaseTypeExpressions",
      "signature" : "System.Collections.Generic.List`1<Mono.CSharp.FullNamedExpression> Mono.CSharp.TypeDefinition:get_BaseTypeExpressions ()",
      "code_size" : "23",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_CurrentType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.TypeDefinition:get_CurrentType ()",
      "code_size" : "261",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_CurrentTypeParameters",
      "signature" : "Mono.CSharp.TypeParameters Mono.CSharp.TypeDefinition:get_CurrentTypeParameters ()",
      "code_size" : "34",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_CurrentTypeParametersStartIndex",
      "signature" : "int Mono.CSharp.TypeDefinition:get_CurrentTypeParametersStartIndex ()",
      "code_size" : "104",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_DeclaringAssembly",
      "signature" : "Mono.CSharp.AssemblyDefinition Mono.CSharp.TypeDefinition:get_DeclaringAssembly ()",
      "code_size" : "38",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mono.CSharp.ITypeDefinition.get_DeclaringAssembly",
      "signature" : "Mono.CSharp.IAssemblyDefinition Mono.CSharp.TypeDefinition:Mono.CSharp.ITypeDefinition.get_DeclaringAssembly ()",
      "code_size" : "38",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Definition",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.TypeDefinition:get_Definition ()",
      "code_size" : "23",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_HasMembersDefined",
      "signature" : "bool Mono.CSharp.TypeDefinition:get_HasMembersDefined ()",
      "code_size" : "23",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_HasInstanceConstructor",
      "signature" : "bool Mono.CSharp.TypeDefinition:get_HasInstanceConstructor ()",
      "code_size" : "45",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_HasInstanceConstructor",
      "signature" : "void Mono.CSharp.TypeDefinition:set_HasInstanceConstructor (bool)",
      "code_size" : "29",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_HasExplicitLayout",
      "signature" : "bool Mono.CSharp.TypeDefinition:get_HasExplicitLayout ()",
      "code_size" : "45",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_HasExplicitLayout",
      "signature" : "void Mono.CSharp.TypeDefinition:set_HasExplicitLayout (bool)",
      "code_size" : "29",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_HasOperators",
      "signature" : "bool Mono.CSharp.TypeDefinition:get_HasOperators ()",
      "code_size" : "45",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_HasOperators",
      "signature" : "void Mono.CSharp.TypeDefinition:set_HasOperators (bool)",
      "code_size" : "29",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_HasStructLayout",
      "signature" : "bool Mono.CSharp.TypeDefinition:get_HasStructLayout ()",
      "code_size" : "45",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_HasStructLayout",
      "signature" : "void Mono.CSharp.TypeDefinition:set_HasStructLayout (bool)",
      "code_size" : "29",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Interfaces",
      "signature" : "Mono.CSharp.TypeSpec[] Mono.CSharp.TypeDefinition:get_Interfaces ()",
      "code_size" : "23",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsGenericOrParentIsGeneric",
      "signature" : "bool Mono.CSharp.TypeDefinition:get_IsGenericOrParentIsGeneric ()",
      "code_size" : "44",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsTopLevel",
      "signature" : "bool Mono.CSharp.TypeDefinition:get_IsTopLevel ()",
      "code_size" : "92",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsPartial",
      "signature" : "bool Mono.CSharp.TypeDefinition:get_IsPartial ()",
      "code_size" : "45",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mono.CSharp.ITypeDefinition.get_IsTypeForwarder",
      "signature" : "bool Mono.CSharp.TypeDefinition:Mono.CSharp.ITypeDefinition.get_IsTypeForwarder ()",
      "code_size" : "11",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mono.CSharp.ITypeDefinition.get_IsCyclicTypeForwarder",
      "signature" : "bool Mono.CSharp.TypeDefinition:Mono.CSharp.ITypeDefinition.get_IsCyclicTypeForwarder ()",
      "code_size" : "11",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsPartialPart",
      "signature" : "bool Mono.CSharp.TypeDefinition:get_IsPartialPart ()",
      "code_size" : "41",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_MemberCache",
      "signature" : "Mono.CSharp.MemberCache Mono.CSharp.TypeDefinition:get_MemberCache ()",
      "code_size" : "34",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Members",
      "signature" : "System.Collections.Generic.List`1<Mono.CSharp.MemberCore> Mono.CSharp.TypeDefinition:get_Members ()",
      "code_size" : "20",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mono.CSharp.ITypeDefinition.get_Namespace",
      "signature" : "string Mono.CSharp.TypeDefinition:Mono.CSharp.ITypeDefinition.get_Namespace ()",
      "code_size" : "89",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_PrimaryConstructorParameters",
      "signature" : "Mono.CSharp.ParametersCompiled Mono.CSharp.TypeDefinition:get_PrimaryConstructorParameters ()",
      "code_size" : "23",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_PrimaryConstructorParameters",
      "signature" : "void Mono.CSharp.TypeDefinition:set_PrimaryConstructorParameters (Mono.CSharp.ParametersCompiled)",
      "code_size" : "49",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_PrimaryConstructorBaseArguments",
      "signature" : "Mono.CSharp.Arguments Mono.CSharp.TypeDefinition:get_PrimaryConstructorBaseArguments ()",
      "code_size" : "23",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_PrimaryConstructorBaseArguments",
      "signature" : "void Mono.CSharp.TypeDefinition:set_PrimaryConstructorBaseArguments (Mono.CSharp.Arguments)",
      "code_size" : "49",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_PrimaryConstructorBaseArgumentsStart",
      "signature" : "Mono.CSharp.Location Mono.CSharp.TypeDefinition:get_PrimaryConstructorBaseArgumentsStart ()",
      "code_size" : "32",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_PrimaryConstructorBaseArgumentsStart",
      "signature" : "void Mono.CSharp.TypeDefinition:set_PrimaryConstructorBaseArgumentsStart (Mono.CSharp.Location)",
      "code_size" : "34",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_TypeParametersAll",
      "signature" : "Mono.CSharp.TypeParameters Mono.CSharp.TypeDefinition:get_TypeParametersAll ()",
      "code_size" : "23",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ValidAttributeTargets",
      "signature" : "string[] Mono.CSharp.TypeDefinition:get_ValidAttributeTargets ()",
      "code_size" : "57",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "void Mono.CSharp.TypeDefinition:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddMember",
      "signature" : "void Mono.CSharp.TypeDefinition:AddMember (Mono.CSharp.MemberCore)",
      "code_size" : "219",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddTypeContainer",
      "signature" : "void Mono.CSharp.TypeDefinition:AddTypeContainer (Mono.CSharp.TypeContainer)",
      "code_size" : "82",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddTypeContainerMember",
      "signature" : "void Mono.CSharp.TypeDefinition:AddTypeContainerMember (Mono.CSharp.TypeContainer)",
      "code_size" : "157",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddNameToContainer",
      "signature" : "void Mono.CSharp.TypeDefinition:AddNameToContainer (Mono.CSharp.MemberCore,string)",
      "code_size" : "671",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddConstructor",
      "signature" : "void Mono.CSharp.TypeDefinition:AddConstructor (Mono.CSharp.Constructor)",
      "code_size" : "25",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddConstructor",
      "signature" : "void Mono.CSharp.TypeDefinition:AddConstructor (Mono.CSharp.Constructor,bool)",
      "code_size" : "255",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddField",
      "signature" : "bool Mono.CSharp.TypeDefinition:AddField (Mono.CSharp.FieldBase)",
      "code_size" : "301",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddIndexer",
      "signature" : "void Mono.CSharp.TypeDefinition:AddIndexer (Mono.CSharp.Indexer)",
      "code_size" : "41",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddOperator",
      "signature" : "void Mono.CSharp.TypeDefinition:AddOperator (Mono.CSharp.Operator)",
      "code_size" : "48",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddPartialPart",
      "signature" : "void Mono.CSharp.TypeDefinition:AddPartialPart (Mono.CSharp.TypeDefinition)",
      "code_size" : "171",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ApplyAttributeBuilder",
      "signature" : "void Mono.CSharp.TypeDefinition:ApplyAttributeBuilder (Mono.CSharp.Attribute,Mono.CSharp.MethodSpec,byte[],Mono.CSharp.PredefinedAttributes)",
      "code_size" : "716",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_AttributeTargets",
      "signature" : "System.AttributeTargets Mono.CSharp.TypeDefinition:get_AttributeTargets ()",
      "code_size" : "27",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_BaseType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.TypeDefinition:get_BaseType ()",
      "code_size" : "35",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_TypeAttr",
      "signature" : "System.Reflection.TypeAttributes Mono.CSharp.TypeDefinition:get_TypeAttr ()",
      "code_size" : "112",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_TypeParametersCount",
      "signature" : "int Mono.CSharp.TypeDefinition:get_TypeParametersCount ()",
      "code_size" : "31",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mono.CSharp.ITypeDefinition.get_TypeParameters",
      "signature" : "Mono.CSharp.TypeParameterSpec[] Mono.CSharp.TypeDefinition:Mono.CSharp.ITypeDefinition.get_TypeParameters ()",
      "code_size" : "77",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetAttributeDefaultMember",
      "signature" : "string Mono.CSharp.TypeDefinition:GetAttributeDefaultMember ()",
      "code_size" : "45",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsComImport",
      "signature" : "bool Mono.CSharp.TypeDefinition:get_IsComImport ()",
      "code_size" : "96",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "RegisterFieldForInitialization",
      "signature" : "void Mono.CSharp.TypeDefinition:RegisterFieldForInitialization (Mono.CSharp.MemberCore,Mono.CSharp.FieldInitializer)",
      "code_size" : "480",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveFieldInitializers",
      "signature" : "void Mono.CSharp.TypeDefinition:ResolveFieldInitializers (Mono.CSharp.BlockContext)",
      "code_size" : "1103",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_DocComment",
      "signature" : "string Mono.CSharp.TypeDefinition:get_DocComment ()",
      "code_size" : "20",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_DocComment",
      "signature" : "void Mono.CSharp.TypeDefinition:set_DocComment (string)",
      "code_size" : "75",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_PendingImplementations",
      "signature" : "Mono.CSharp.PendingImplementation Mono.CSharp.TypeDefinition:get_PendingImplementations ()",
      "code_size" : "23",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GenerateDocComment",
      "signature" : "void Mono.CSharp.TypeDefinition:GenerateDocComment (Mono.CSharp.DocumentationBuilder)",
      "code_size" : "208",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetAttributeCoClass",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.TypeDefinition:GetAttributeCoClass ()",
      "code_size" : "120",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetAttributeUsage",
      "signature" : "System.AttributeUsageAttribute Mono.CSharp.TypeDefinition:GetAttributeUsage (Mono.CSharp.PredefinedAttribute)",
      "code_size" : "94",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetCompilationSourceFile",
      "signature" : "Mono.CSharp.CompilationSourceFile Mono.CSharp.TypeDefinition:GetCompilationSourceFile ()",
      "code_size" : "107",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSignatureForMetadata",
      "signature" : "string Mono.CSharp.TypeDefinition:GetSignatureForMetadata ()",
      "code_size" : "185",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetBaseTypes",
      "signature" : "void Mono.CSharp.TypeDefinition:SetBaseTypes (System.Collections.Generic.List`1<Mono.CSharp.FullNamedExpression>)",
      "code_size" : "49",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveBaseTypes",
      "signature" : "Mono.CSharp.TypeSpec[] Mono.CSharp.TypeDefinition:ResolveBaseTypes (Mono.CSharp.FullNamedExpression&)",
      "code_size" : "1558",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CheckPairedOperators",
      "signature" : "void Mono.CSharp.TypeDefinition:CheckPairedOperators ()",
      "code_size" : "1122",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateMetadataName",
      "signature" : "void Mono.CSharp.TypeDefinition:CreateMetadataName (System.Text.StringBuilder)",
      "code_size" : "147",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateTypeBuilder",
      "signature" : "bool Mono.CSharp.TypeDefinition:CreateTypeBuilder ()",
      "code_size" : "1143",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "FilterNestedName",
      "signature" : "string Mono.CSharp.TypeDefinition:FilterNestedName (string)",
      "code_size" : "35",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateTypeParameters",
      "signature" : "string[] Mono.CSharp.TypeDefinition:CreateTypeParameters (Mono.CSharp.TypeParameters)",
      "code_size" : "867",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateMethodSymbolEntry",
      "signature" : "Mono.CompilerServices.SymbolWriter.SourceMethodBuilder Mono.CSharp.TypeDefinition:CreateMethodSymbolEntry ()",
      "code_size" : "160",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateHoistedBaseCallProxy",
      "signature" : "Mono.CSharp.MethodSpec Mono.CSharp.TypeDefinition:CreateHoistedBaseCallProxy (Mono.CSharp.ResolveContext,Mono.CSharp.MethodSpec)",
      "code_size" : "3134",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DefineBaseTypes",
      "signature" : "bool Mono.CSharp.TypeDefinition:DefineBaseTypes ()",
      "code_size" : "75",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoDefineBaseType",
      "signature" : "bool Mono.CSharp.TypeDefinition:DoDefineBaseType ()",
      "code_size" : "2194",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetBaseType",
      "signature" : "void Mono.CSharp.TypeDefinition:SetBaseType ()",
      "code_size" : "237",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ExpandBaseInterfaces",
      "signature" : "void Mono.CSharp.TypeDefinition:ExpandBaseInterfaces ()",
      "code_size" : "65",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoExpandBaseInterfaces",
      "signature" : "void Mono.CSharp.TypeDefinition:DoExpandBaseInterfaces ()",
      "code_size" : "825",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "PrepareEmit",
      "signature" : "void Mono.CSharp.TypeDefinition:PrepareEmit ()",
      "code_size" : "244",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateContainer",
      "signature" : "bool Mono.CSharp.TypeDefinition:CreateContainer ()",
      "code_size" : "324",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoDefineContainer",
      "signature" : "void Mono.CSharp.TypeDefinition:DoDefineContainer ()",
      "code_size" : "34",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetPredefinedSpec",
      "signature" : "void Mono.CSharp.TypeDefinition:SetPredefinedSpec (Mono.CSharp.BuiltinTypeSpec)",
      "code_size" : "316",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "RemoveContainer",
      "signature" : "void Mono.CSharp.TypeDefinition:RemoveContainer (Mono.CSharp.TypeContainer)",
      "code_size" : "108",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolveTypeParameters",
      "signature" : "bool Mono.CSharp.TypeDefinition:DoResolveTypeParameters ()",
      "code_size" : "586",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CheckRecursiveDefinition",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.TypeDefinition:CheckRecursiveDefinition (Mono.CSharp.TypeDefinition)",
      "code_size" : "590",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Define",
      "signature" : "bool Mono.CSharp.TypeDefinition:Define ()",
      "code_size" : "85",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoDefineMembers",
      "signature" : "bool Mono.CSharp.TypeDefinition:DoDefineMembers ()",
      "code_size" : "2754",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ComputeIndexerName",
      "signature" : "void Mono.CSharp.TypeDefinition:ComputeIndexerName ()",
      "code_size" : "502",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitIndexerName",
      "signature" : "void Mono.CSharp.TypeDefinition:EmitIndexerName ()",
      "code_size" : "417",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "VerifyMembers",
      "signature" : "void Mono.CSharp.TypeDefinition:VerifyMembers ()",
      "code_size" : "1261",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.TypeDefinition:Emit ()",
      "code_size" : "1129",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CheckAttributeClsCompliance",
      "signature" : "void Mono.CSharp.TypeDefinition:CheckAttributeClsCompliance ()",
      "code_size" : "435",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitContainer",
      "signature" : "void Mono.CSharp.TypeDefinition:EmitContainer ()",
      "code_size" : "43",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloseContainer",
      "signature" : "void Mono.CSharp.TypeDefinition:CloseContainer ()",
      "code_size" : "476",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MethodModifiersValid",
      "signature" : "bool Mono.CSharp.TypeDefinition:MethodModifiersValid (Mono.CSharp.MemberCore)",
      "code_size" : "1165",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "VerifyClsCompliance",
      "signature" : "bool Mono.CSharp.TypeDefinition:VerifyClsCompliance ()",
      "code_size" : "268",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "VerifyImplements",
      "signature" : "bool Mono.CSharp.TypeDefinition:VerifyImplements (Mono.CSharp.InterfaceMemberBase)",
      "code_size" : "516",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsBaseTypeDefinition",
      "signature" : "bool Mono.CSharp.TypeDefinition:IsBaseTypeDefinition (Mono.CSharp.TypeSpec)",
      "code_size" : "159",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsClsComplianceRequired",
      "signature" : "bool Mono.CSharp.TypeDefinition:IsClsComplianceRequired ()",
      "code_size" : "76",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mono.CSharp.ITypeDefinition.IsInternalAsPublic",
      "signature" : "bool Mono.CSharp.TypeDefinition:Mono.CSharp.ITypeDefinition.IsInternalAsPublic (Mono.CSharp.IAssemblyDefinition)",
      "code_size" : "56",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsUnmanagedType",
      "signature" : "bool Mono.CSharp.TypeDefinition:IsUnmanagedType ()",
      "code_size" : "11",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "LoadMembers",
      "signature" : "void Mono.CSharp.TypeDefinition:LoadMembers (Mono.CSharp.TypeSpec,bool,Mono.CSharp.MemberCache&)",
      "code_size" : "85",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "LookupNamespaceOrType",
      "signature" : "Mono.CSharp.FullNamedExpression Mono.CSharp.TypeDefinition:LookupNamespaceOrType (string,int,Mono.CSharp.LookupMode,Mono.CSharp.Location)",
      "code_size" : "624",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "LookupNestedTypeInHierarchy",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.TypeDefinition:LookupNestedTypeInHierarchy (string,int)",
      "code_size" : "60",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mark_HasEquals",
      "signature" : "void Mono.CSharp.TypeDefinition:Mark_HasEquals ()",
      "code_size" : "32",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mark_HasGetHashCode",
      "signature" : "void Mono.CSharp.TypeDefinition:Mark_HasGetHashCode ()",
      "code_size" : "32",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "WriteDebugSymbol",
      "signature" : "void Mono.CSharp.TypeDefinition:WriteDebugSymbol (Mono.CompilerServices.SymbolWriter.MonoSymbolFile)",
      "code_size" : "200",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_HasEquals",
      "signature" : "bool Mono.CSharp.TypeDefinition:get_HasEquals ()",
      "code_size" : "46",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_HasGetHashCode",
      "signature" : "bool Mono.CSharp.TypeDefinition:get_HasGetHashCode ()",
      "code_size" : "46",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_HasStaticFieldInitializer",
      "signature" : "bool Mono.CSharp.TypeDefinition:get_HasStaticFieldInitializer ()",
      "code_size" : "46",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_HasStaticFieldInitializer",
      "signature" : "void Mono.CSharp.TypeDefinition:set_HasStaticFieldInitializer (bool)",
      "code_size" : "70",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_DocCommentHeader",
      "signature" : "string Mono.CSharp.TypeDefinition:get_DocCommentHeader ()",
      "code_size" : "16",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".cctor",
      "signature" : "void Mono.CSharp.TypeDefinition:.cctor ()",
      "code_size" : "166",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.TypeDefinition/BaseContext:.ctor (Mono.CSharp.TypeContainer)",
      "code_size" : "38",
      "class" : "BaseContext",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Compiler",
      "signature" : "Mono.CSharp.CompilerContext Mono.CSharp.TypeDefinition/BaseContext:get_Compiler ()",
      "code_size" : "31",
      "class" : "BaseContext",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_CurrentType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.TypeDefinition/BaseContext:get_CurrentType ()",
      "code_size" : "41",
      "class" : "BaseContext",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_CurrentTypeParameters",
      "signature" : "Mono.CSharp.TypeParameters Mono.CSharp.TypeDefinition/BaseContext:get_CurrentTypeParameters ()",
      "code_size" : "41",
      "class" : "BaseContext",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_CurrentMemberDefinition",
      "signature" : "Mono.CSharp.MemberCore Mono.CSharp.TypeDefinition/BaseContext:get_CurrentMemberDefinition ()",
      "code_size" : "19",
      "class" : "BaseContext",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsObsolete",
      "signature" : "bool Mono.CSharp.TypeDefinition/BaseContext:get_IsObsolete ()",
      "code_size" : "30",
      "class" : "BaseContext",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsUnsafe",
      "signature" : "bool Mono.CSharp.TypeDefinition/BaseContext:get_IsUnsafe ()",
      "code_size" : "30",
      "class" : "BaseContext",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsStatic",
      "signature" : "bool Mono.CSharp.TypeDefinition/BaseContext:get_IsStatic ()",
      "code_size" : "54",
      "class" : "BaseContext",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Module",
      "signature" : "Mono.CSharp.ModuleContainer Mono.CSharp.TypeDefinition/BaseContext:get_Module ()",
      "code_size" : "31",
      "class" : "BaseContext",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSignatureForError",
      "signature" : "string Mono.CSharp.TypeDefinition/BaseContext:GetSignatureForError ()",
      "code_size" : "31",
      "class" : "BaseContext",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "LookupExtensionMethod",
      "signature" : "Mono.CSharp.ExtensionMethodCandidates Mono.CSharp.TypeDefinition/BaseContext:LookupExtensionMethod (string,int)",
      "code_size" : "11",
      "class" : "BaseContext",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "LookupNamespaceAlias",
      "signature" : "Mono.CSharp.FullNamedExpression Mono.CSharp.TypeDefinition/BaseContext:LookupNamespaceAlias (string)",
      "code_size" : "45",
      "class" : "BaseContext",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "LookupNamespaceOrType",
      "signature" : "Mono.CSharp.FullNamedExpression Mono.CSharp.TypeDefinition/BaseContext:LookupNamespaceOrType (string,int,Mono.CSharp.LookupMode,Mono.CSharp.Location)",
      "code_size" : "195",
      "class" : "BaseContext",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ClassOrStruct:.ctor (Mono.CSharp.TypeContainer,Mono.CSharp.MemberName,Mono.CSharp.Attributes,Mono.CSharp.MemberKind)",
      "code_size" : "38",
      "class" : "ClassOrStruct",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_PrimaryConstructorBlock",
      "signature" : "Mono.CSharp.ToplevelBlock Mono.CSharp.ClassOrStruct:get_PrimaryConstructorBlock ()",
      "code_size" : "23",
      "class" : "ClassOrStruct",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_PrimaryConstructorBlock",
      "signature" : "void Mono.CSharp.ClassOrStruct:set_PrimaryConstructorBlock (Mono.CSharp.ToplevelBlock)",
      "code_size" : "49",
      "class" : "ClassOrStruct",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_TypeAttr",
      "signature" : "System.Reflection.TypeAttributes Mono.CSharp.ClassOrStruct:get_TypeAttr ()",
      "code_size" : "121",
      "class" : "ClassOrStruct",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddNameToContainer",
      "signature" : "void Mono.CSharp.ClassOrStruct:AddNameToContainer (Mono.CSharp.MemberCore,string)",
      "code_size" : "496",
      "class" : "ClassOrStruct",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ApplyAttributeBuilder",
      "signature" : "void Mono.CSharp.ClassOrStruct:ApplyAttributeBuilder (Mono.CSharp.Attribute,Mono.CSharp.MethodSpec,byte[],Mono.CSharp.PredefinedAttributes)",
      "code_size" : "271",
      "class" : "ClassOrStruct",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DefineDefaultConstructor",
      "signature" : "Mono.CSharp.Constructor Mono.CSharp.ClassOrStruct:DefineDefaultConstructor (bool)",
      "code_size" : "559",
      "class" : "ClassOrStruct",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoDefineMembers",
      "signature" : "bool Mono.CSharp.ClassOrStruct:DoDefineMembers ()",
      "code_size" : "638",
      "class" : "ClassOrStruct",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "PrepareEmit",
      "signature" : "void Mono.CSharp.ClassOrStruct:PrepareEmit ()",
      "code_size" : "341",
      "class" : "ClassOrStruct",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.ClassOrStruct:Emit ()",
      "code_size" : "459",
      "class" : "ClassOrStruct",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Class:.ctor (Mono.CSharp.TypeContainer,Mono.CSharp.MemberName,Mono.CSharp.Modifiers,Mono.CSharp.Attributes)",
      "code_size" : "340",
      "class" : "Class",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "void Mono.CSharp.Class:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "Class",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetBaseTypes",
      "signature" : "void Mono.CSharp.Class:SetBaseTypes (System.Collections.Generic.List`1<Mono.CSharp.FullNamedExpression>)",
      "code_size" : "249",
      "class" : "Class",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ApplyAttributeBuilder",
      "signature" : "void Mono.CSharp.Class:ApplyAttributeBuilder (Mono.CSharp.Attribute,Mono.CSharp.MethodSpec,byte[],Mono.CSharp.PredefinedAttributes)",
      "code_size" : "484",
      "class" : "Class",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_AttributeTargets",
      "signature" : "System.AttributeTargets Mono.CSharp.Class:get_AttributeTargets ()",
      "code_size" : "14",
      "class" : "Class",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoDefineMembers",
      "signature" : "bool Mono.CSharp.Class:DoDefineMembers ()",
      "code_size" : "1525",
      "class" : "Class",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.Class:Emit ()",
      "code_size" : "211",
      "class" : "Class",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetCompletionStartingWith",
      "signature" : "void Mono.CSharp.Class:GetCompletionStartingWith (string,System.Collections.Generic.List`1<string>)",
      "code_size" : "412",
      "class" : "Class",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveBaseTypes",
      "signature" : "Mono.CSharp.TypeSpec[] Mono.CSharp.Class:ResolveBaseTypes (Mono.CSharp.FullNamedExpression&)",
      "code_size" : "1675",
      "class" : "Class",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ConditionalConditions",
      "signature" : "string[] Mono.CSharp.Class:ConditionalConditions ()",
      "code_size" : "294",
      "class" : "Class",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "<GetCompletionStartingWith>m__0",
      "signature" : "bool Mono.CSharp.Class:<GetCompletionStartingWith>m__0 (Mono.CSharp.MemberSpec)",
      "code_size" : "48",
      "class" : "Class",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "<GetCompletionStartingWith>m__1",
      "signature" : "string Mono.CSharp.Class:<GetCompletionStartingWith>m__1 (Mono.CSharp.MemberSpec)",
      "code_size" : "25",
      "class" : "Class",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Struct:.ctor (Mono.CSharp.TypeContainer,Mono.CSharp.MemberName,Mono.CSharp.Modifiers,Mono.CSharp.Attributes)",
      "code_size" : "343",
      "class" : "Struct",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_AttributeTargets",
      "signature" : "System.AttributeTargets Mono.CSharp.Struct:get_AttributeTargets ()",
      "code_size" : "14",
      "class" : "Struct",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "void Mono.CSharp.Struct:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "Struct",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ApplyAttributeBuilder",
      "signature" : "void Mono.CSharp.Struct:ApplyAttributeBuilder (Mono.CSharp.Attribute,Mono.CSharp.MethodSpec,byte[],Mono.CSharp.PredefinedAttributes)",
      "code_size" : "410",
      "class" : "Struct",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CheckStructCycles",
      "signature" : "bool Mono.CSharp.Struct:CheckStructCycles ()",
      "code_size" : "790",
      "class" : "Struct",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CheckFieldTypeCycle",
      "signature" : "bool Mono.CSharp.Struct:CheckFieldTypeCycle (Mono.CSharp.TypeSpec)",
      "code_size" : "121",
      "class" : "Struct",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoDefineMembers",
      "signature" : "bool Mono.CSharp.Struct:DoDefineMembers ()",
      "code_size" : "138",
      "class" : "Struct",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.Struct:Emit ()",
      "code_size" : "27",
      "class" : "Struct",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_HasUnmanagedCheckDone",
      "signature" : "bool Mono.CSharp.Struct:get_HasUnmanagedCheckDone ()",
      "code_size" : "23",
      "class" : "Struct",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "HasUserDefaultConstructor",
      "signature" : "bool Mono.CSharp.Struct:HasUserDefaultConstructor ()",
      "code_size" : "329",
      "class" : "Struct",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsUnmanagedType",
      "signature" : "bool Mono.CSharp.Struct:IsUnmanagedType ()",
      "code_size" : "520",
      "class" : "Struct",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveBaseTypes",
      "signature" : "Mono.CSharp.TypeSpec[] Mono.CSharp.Struct:ResolveBaseTypes (Mono.CSharp.FullNamedExpression&)",
      "code_size" : "95",
      "class" : "Struct",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Interface:.ctor (Mono.CSharp.TypeContainer,Mono.CSharp.MemberName,Mono.CSharp.Modifiers,Mono.CSharp.Attributes)",
      "code_size" : "341",
      "class" : "Interface",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_AttributeTargets",
      "signature" : "System.AttributeTargets Mono.CSharp.Interface:get_AttributeTargets ()",
      "code_size" : "14",
      "class" : "Interface",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_TypeAttr",
      "signature" : "System.Reflection.TypeAttributes Mono.CSharp.Interface:get_TypeAttr ()",
      "code_size" : "23",
      "class" : "Interface",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "void Mono.CSharp.Interface:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "Interface",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ApplyAttributeBuilder",
      "signature" : "void Mono.CSharp.Interface:ApplyAttributeBuilder (Mono.CSharp.Attribute,Mono.CSharp.MethodSpec,byte[],Mono.CSharp.PredefinedAttributes)",
      "code_size" : "146",
      "class" : "Interface",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "VerifyClsCompliance",
      "signature" : "bool Mono.CSharp.Interface:VerifyClsCompliance ()",
      "code_size" : "306",
      "class" : "Interface",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.InterfaceMemberBase:.ctor (Mono.CSharp.TypeDefinition,Mono.CSharp.FullNamedExpression,Mono.CSharp.Modifiers,Mono.CSharp.Modifiers,Mono.CSharp.MemberName,Mono.CSharp.Attributes)",
      "code_size" : "153",
      "class" : "InterfaceMemberBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CheckBase",
      "signature" : "bool Mono.CSharp.InterfaceMemberBase:CheckBase ()",
      "code_size" : "3266",
      "class" : "InterfaceMemberBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CheckForDuplications",
      "signature" : "bool Mono.CSharp.InterfaceMemberBase:CheckForDuplications ()",
      "code_size" : "56",
      "class" : "InterfaceMemberBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CheckOverrideAgainstBase",
      "signature" : "bool Mono.CSharp.InterfaceMemberBase:CheckOverrideAgainstBase (Mono.CSharp.MemberSpec)",
      "code_size" : "1204",
      "class" : "InterfaceMemberBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CheckAccessModifiers",
      "signature" : "bool Mono.CSharp.InterfaceMemberBase:CheckAccessModifiers (Mono.CSharp.MemberCore,Mono.CSharp.MemberSpec)",
      "code_size" : "312",
      "class" : "InterfaceMemberBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Define",
      "signature" : "bool Mono.CSharp.InterfaceMemberBase:Define ()",
      "code_size" : "633",
      "class" : "InterfaceMemberBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DefineParameters",
      "signature" : "bool Mono.CSharp.InterfaceMemberBase:DefineParameters (Mono.CSharp.ParametersCompiled)",
      "code_size" : "1046",
      "class" : "InterfaceMemberBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoMemberTypeDependentChecks",
      "signature" : "void Mono.CSharp.InterfaceMemberBase:DoMemberTypeDependentChecks ()",
      "code_size" : "62",
      "class" : "InterfaceMemberBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.InterfaceMemberBase:Emit ()",
      "code_size" : "354",
      "class" : "InterfaceMemberBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EnableOverloadChecks",
      "signature" : "bool Mono.CSharp.InterfaceMemberBase:EnableOverloadChecks (Mono.CSharp.MemberCore)",
      "code_size" : "131",
      "class" : "InterfaceMemberBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_CannotChangeAccessModifiers",
      "signature" : "void Mono.CSharp.InterfaceMemberBase:Error_CannotChangeAccessModifiers (Mono.CSharp.MemberCore,Mono.CSharp.MemberSpec)",
      "code_size" : "422",
      "class" : "InterfaceMemberBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_StaticReturnType",
      "signature" : "void Mono.CSharp.InterfaceMemberBase:Error_StaticReturnType ()",
      "code_size" : "101",
      "class" : "InterfaceMemberBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "FindBaseMember",
      "signature" : "Mono.CSharp.MemberSpec Mono.CSharp.InterfaceMemberBase:FindBaseMember (Mono.CSharp.MemberSpec&,bool&)",
      "code_size" : "28",
      "class" : "InterfaceMemberBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ShortName",
      "signature" : "string Mono.CSharp.InterfaceMemberBase:get_ShortName ()",
      "code_size" : "24",
      "class" : "InterfaceMemberBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetFullName",
      "signature" : "string Mono.CSharp.InterfaceMemberBase:GetFullName (Mono.CSharp.MemberName)",
      "code_size" : "34",
      "class" : "InterfaceMemberBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetFullName",
      "signature" : "string Mono.CSharp.InterfaceMemberBase:GetFullName (string)",
      "code_size" : "73",
      "class" : "InterfaceMemberBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSignatureForDocumentation",
      "signature" : "string Mono.CSharp.InterfaceMemberBase:GetSignatureForDocumentation ()",
      "code_size" : "325",
      "class" : "InterfaceMemberBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsUsed",
      "signature" : "bool Mono.CSharp.InterfaceMemberBase:get_IsUsed ()",
      "code_size" : "69",
      "class" : "InterfaceMemberBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetConstraints",
      "signature" : "void Mono.CSharp.InterfaceMemberBase:SetConstraints (System.Collections.Generic.List`1<Mono.CSharp.Constraints>)",
      "code_size" : "150",
      "class" : "InterfaceMemberBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.MemberBase:.ctor (Mono.CSharp.TypeDefinition,Mono.CSharp.FullNamedExpression,Mono.CSharp.Modifiers,Mono.CSharp.Modifiers,Mono.CSharp.Modifiers,Mono.CSharp.MemberName,Mono.CSharp.Attributes)",
      "code_size" : "176",
      "class" : "MemberBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_MemberType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.MemberBase:get_MemberType ()",
      "code_size" : "20",
      "class" : "MemberBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_TypeExpression",
      "signature" : "Mono.CSharp.FullNamedExpression Mono.CSharp.MemberBase:get_TypeExpression ()",
      "code_size" : "20",
      "class" : "MemberBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_TypeExpression",
      "signature" : "void Mono.CSharp.MemberBase:set_TypeExpression (Mono.CSharp.FullNamedExpression)",
      "code_size" : "43",
      "class" : "MemberBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Define",
      "signature" : "bool Mono.CSharp.MemberBase:Define ()",
      "code_size" : "66",
      "class" : "MemberBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoMemberTypeIndependentChecks",
      "signature" : "void Mono.CSharp.MemberBase:DoMemberTypeIndependentChecks ()",
      "code_size" : "174",
      "class" : "MemberBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoMemberTypeDependentChecks",
      "signature" : "void Mono.CSharp.MemberBase:DoMemberTypeDependentChecks ()",
      "code_size" : "2111",
      "class" : "MemberBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsTypePermitted",
      "signature" : "void Mono.CSharp.MemberBase:IsTypePermitted ()",
      "code_size" : "498",
      "class" : "MemberBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CheckBase",
      "signature" : "bool Mono.CSharp.MemberBase:CheckBase ()",
      "code_size" : "23",
      "class" : "MemberBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSignatureForDocumentation",
      "signature" : "string Mono.CSharp.MemberBase:GetSignatureForDocumentation ()",
      "code_size" : "86",
      "class" : "MemberBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "PrepareEmit",
      "signature" : "void Mono.CSharp.MemberBase:PrepareEmit ()",
      "code_size" : "87",
      "class" : "MemberBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveMemberType",
      "signature" : "bool Mono.CSharp.MemberBase:ResolveMemberType ()",
      "code_size" : "172",
      "class" : "MemberBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.EmitContext:.ctor (Mono.CSharp.IMemberContext,System.Reflection.Emit.ILGenerator,Mono.CSharp.TypeSpec,Mono.CompilerServices.SymbolWriter.SourceMethodBuilder)",
      "code_size" : "284",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_AsyncTaskStorey",
      "signature" : "Mono.CSharp.AsyncTaskStorey Mono.CSharp.EmitContext:get_AsyncTaskStorey ()",
      "code_size" : "104",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_BuiltinTypes",
      "signature" : "Mono.CSharp.BuiltinTypes Mono.CSharp.EmitContext:get_BuiltinTypes ()",
      "code_size" : "58",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ConditionalAccess",
      "signature" : "Mono.CSharp.ConditionalAccessContext Mono.CSharp.EmitContext:get_ConditionalAccess ()",
      "code_size" : "20",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_ConditionalAccess",
      "signature" : "void Mono.CSharp.EmitContext:set_ConditionalAccess (Mono.CSharp.ConditionalAccessContext)",
      "code_size" : "43",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_CurrentType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.EmitContext:get_CurrentType ()",
      "code_size" : "36",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_CurrentTypeParameters",
      "signature" : "Mono.CSharp.TypeParameters Mono.CSharp.EmitContext:get_CurrentTypeParameters ()",
      "code_size" : "36",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_CurrentTypeDefinition",
      "signature" : "Mono.CSharp.MemberCore Mono.CSharp.EmitContext:get_CurrentTypeDefinition ()",
      "code_size" : "36",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_EmitAccurateDebugInfo",
      "signature" : "bool Mono.CSharp.EmitContext:get_EmitAccurateDebugInfo ()",
      "code_size" : "43",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_HasMethodSymbolBuilder",
      "signature" : "bool Mono.CSharp.EmitContext:get_HasMethodSymbolBuilder ()",
      "code_size" : "41",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_HasReturnLabel",
      "signature" : "bool Mono.CSharp.EmitContext:get_HasReturnLabel ()",
      "code_size" : "57",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsStatic",
      "signature" : "bool Mono.CSharp.EmitContext:get_IsStatic ()",
      "code_size" : "36",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsStaticConstructor",
      "signature" : "bool Mono.CSharp.EmitContext:get_IsStaticConstructor ()",
      "code_size" : "79",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsAnonymousStoreyMutateRequired",
      "signature" : "bool Mono.CSharp.EmitContext:get_IsAnonymousStoreyMutateRequired ()",
      "code_size" : "116",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_MemberContext",
      "signature" : "Mono.CSharp.IMemberContext Mono.CSharp.EmitContext:get_MemberContext ()",
      "code_size" : "20",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Module",
      "signature" : "Mono.CSharp.ModuleContainer Mono.CSharp.EmitContext:get_Module ()",
      "code_size" : "36",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_NotifyEvaluatorOnStore",
      "signature" : "bool Mono.CSharp.EmitContext:get_NotifyEvaluatorOnStore ()",
      "code_size" : "107",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Report",
      "signature" : "Mono.CSharp.Report Mono.CSharp.EmitContext:get_Report ()",
      "code_size" : "58",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ReturnType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.EmitContext:get_ReturnType ()",
      "code_size" : "20",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ReturnLabel",
      "signature" : "System.Reflection.Emit.Label Mono.CSharp.EmitContext:get_ReturnLabel ()",
      "code_size" : "63",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_StatementEpilogue",
      "signature" : "System.Collections.Generic.List`1<Mono.CSharp.IExpressionCleanup> Mono.CSharp.EmitContext:get_StatementEpilogue ()",
      "code_size" : "20",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_AsyncThrowVariable",
      "signature" : "Mono.CSharp.LocalVariable Mono.CSharp.EmitContext:get_AsyncThrowVariable ()",
      "code_size" : "20",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_AsyncThrowVariable",
      "signature" : "void Mono.CSharp.EmitContext:set_AsyncThrowVariable (Mono.CSharp.LocalVariable)",
      "code_size" : "43",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_TryFinallyUnwind",
      "signature" : "System.Collections.Generic.List`1<Mono.CSharp.TryFinally> Mono.CSharp.EmitContext:get_TryFinallyUnwind ()",
      "code_size" : "20",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_TryFinallyUnwind",
      "signature" : "void Mono.CSharp.EmitContext:set_TryFinallyUnwind (System.Collections.Generic.List`1<Mono.CSharp.TryFinally>)",
      "code_size" : "43",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_RecursivePatternLabel",
      "signature" : "System.Reflection.Emit.Label Mono.CSharp.EmitContext:get_RecursivePatternLabel ()",
      "code_size" : "32",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_RecursivePatternLabel",
      "signature" : "void Mono.CSharp.EmitContext:set_RecursivePatternLabel (System.Reflection.Emit.Label)",
      "code_size" : "34",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddStatementEpilog",
      "signature" : "void Mono.CSharp.EmitContext:AddStatementEpilog (Mono.CSharp.IExpressionCleanup)",
      "code_size" : "173",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AssertEmptyStack",
      "signature" : "void Mono.CSharp.EmitContext:AssertEmptyStack ()",
      "code_size" : "9",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mark",
      "signature" : "bool Mono.CSharp.EmitContext:Mark (Mono.CSharp.Location)",
      "code_size" : "240",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MarkCallEntry",
      "signature" : "void Mono.CSharp.EmitContext:MarkCallEntry (Mono.CSharp.Location)",
      "code_size" : "66",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DefineLocalVariable",
      "signature" : "void Mono.CSharp.EmitContext:DefineLocalVariable (string,System.Reflection.Emit.LocalBuilder)",
      "code_size" : "92",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "BeginCatchBlock",
      "signature" : "void Mono.CSharp.EmitContext:BeginCatchBlock (Mono.CSharp.TypeSpec)",
      "code_size" : "144",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "BeginFilterHandler",
      "signature" : "void Mono.CSharp.EmitContext:BeginFilterHandler ()",
      "code_size" : "41",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "BeginExceptionBlock",
      "signature" : "void Mono.CSharp.EmitContext:BeginExceptionBlock ()",
      "code_size" : "41",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "BeginExceptionFilterBlock",
      "signature" : "void Mono.CSharp.EmitContext:BeginExceptionFilterBlock ()",
      "code_size" : "41",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "BeginFinallyBlock",
      "signature" : "void Mono.CSharp.EmitContext:BeginFinallyBlock ()",
      "code_size" : "41",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "BeginScope",
      "signature" : "void Mono.CSharp.EmitContext:BeginScope (int)",
      "code_size" : "75",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "BeginCompilerScope",
      "signature" : "void Mono.CSharp.EmitContext:BeginCompilerScope (int)",
      "code_size" : "75",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EndExceptionBlock",
      "signature" : "void Mono.CSharp.EmitContext:EndExceptionBlock ()",
      "code_size" : "41",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EndScope",
      "signature" : "void Mono.CSharp.EmitContext:EndScope ()",
      "code_size" : "60",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloseConditionalAccess",
      "signature" : "void Mono.CSharp.EmitContext:CloseConditionalAccess (Mono.CSharp.TypeSpec)",
      "code_size" : "220",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateDynamicSite",
      "signature" : "Mono.CSharp.DynamicSiteClass Mono.CSharp.EmitContext:CreateDynamicSite ()",
      "code_size" : "584",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateReturnLabel",
      "signature" : "System.Reflection.Emit.Label Mono.CSharp.EmitContext:CreateReturnLabel ()",
      "code_size" : "200",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DeclareLocal",
      "signature" : "System.Reflection.Emit.LocalBuilder Mono.CSharp.EmitContext:DeclareLocal (Mono.CSharp.TypeSpec,bool)",
      "code_size" : "567",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DefineLabel",
      "signature" : "System.Reflection.Emit.Label Mono.CSharp.EmitContext:DefineLabel ()",
      "code_size" : "52",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetTemporaryField",
      "signature" : "Mono.CSharp.StackFieldExpr Mono.CSharp.EmitContext:GetTemporaryField (Mono.CSharp.TypeSpec,bool)",
      "code_size" : "269",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MarkLabel",
      "signature" : "void Mono.CSharp.EmitContext:MarkLabel (System.Reflection.Emit.Label)",
      "code_size" : "41",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.EmitContext:Emit (System.Reflection.Emit.OpCode)",
      "code_size" : "41",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.EmitContext:Emit (System.Reflection.Emit.OpCode,System.Reflection.Emit.LocalBuilder)",
      "code_size" : "41",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.EmitContext:Emit (System.Reflection.Emit.OpCode,string)",
      "code_size" : "41",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.EmitContext:Emit (System.Reflection.Emit.OpCode,double)",
      "code_size" : "100",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.EmitContext:Emit (System.Reflection.Emit.OpCode,single)",
      "code_size" : "110",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.EmitContext:Emit (System.Reflection.Emit.OpCode,System.Reflection.Emit.Label)",
      "code_size" : "87",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.EmitContext:Emit (System.Reflection.Emit.OpCode,System.Reflection.Emit.Label[])",
      "code_size" : "41",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.EmitContext:Emit (System.Reflection.Emit.OpCode,Mono.CSharp.TypeSpec)",
      "code_size" : "144",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.EmitContext:Emit (System.Reflection.Emit.OpCode,Mono.CSharp.FieldSpec)",
      "code_size" : "142",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.EmitContext:Emit (System.Reflection.Emit.OpCode,Mono.CSharp.MethodSpec)",
      "code_size" : "308",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.EmitContext:Emit (System.Reflection.Emit.OpCode,System.Reflection.MethodInfo)",
      "code_size" : "41",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.EmitContext:Emit (System.Reflection.Emit.OpCode,Mono.CSharp.MethodSpec,System.Type[])",
      "code_size" : "212",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitArrayNew",
      "signature" : "void Mono.CSharp.EmitContext:EmitArrayNew (Mono.CSharp.ArrayContainer)",
      "code_size" : "532",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitArrayAddress",
      "signature" : "void Mono.CSharp.EmitContext:EmitArrayAddress (Mono.CSharp.ArrayContainer)",
      "code_size" : "532",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitArrayLoad",
      "signature" : "void Mono.CSharp.EmitContext:EmitArrayLoad (Mono.CSharp.ArrayContainer)",
      "code_size" : "2483",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitArrayStore",
      "signature" : "void Mono.CSharp.EmitContext:EmitArrayStore (Mono.CSharp.ArrayContainer)",
      "code_size" : "1586",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitInt",
      "signature" : "void Mono.CSharp.EmitContext:EmitInt (int)",
      "code_size" : "23",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitIntConstant",
      "signature" : "void Mono.CSharp.EmitContext:EmitIntConstant (int)",
      "code_size" : "1564",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitLong",
      "signature" : "void Mono.CSharp.EmitContext:EmitLong (long)",
      "code_size" : "481",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitLoadFromPtr",
      "signature" : "void Mono.CSharp.EmitContext:EmitLoadFromPtr (Mono.CSharp.TypeSpec)",
      "code_size" : "1763",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitNull",
      "signature" : "void Mono.CSharp.EmitContext:EmitNull ()",
      "code_size" : "127",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitArgumentAddress",
      "signature" : "void Mono.CSharp.EmitContext:EmitArgumentAddress (int)",
      "code_size" : "355",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitArgumentLoad",
      "signature" : "void Mono.CSharp.EmitContext:EmitArgumentLoad (int)",
      "code_size" : "858",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitArgumentStore",
      "signature" : "void Mono.CSharp.EmitContext:EmitArgumentStore (int)",
      "code_size" : "355",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitStoreFromPtr",
      "signature" : "void Mono.CSharp.EmitContext:EmitStoreFromPtr (Mono.CSharp.TypeSpec)",
      "code_size" : "1408",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitThis",
      "signature" : "void Mono.CSharp.EmitContext:EmitThis ()",
      "code_size" : "127",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitEpilogue",
      "signature" : "void Mono.CSharp.EmitContext:EmitEpilogue ()",
      "code_size" : "188",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetTemporaryLocal",
      "signature" : "System.Reflection.Emit.LocalBuilder Mono.CSharp.EmitContext:GetTemporaryLocal (Mono.CSharp.TypeSpec)",
      "code_size" : "351",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "FreeTemporaryLocal",
      "signature" : "void Mono.CSharp.EmitContext:FreeTemporaryLocal (System.Reflection.Emit.LocalBuilder,Mono.CSharp.TypeSpec)",
      "code_size" : "459",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "TemporaryReturn",
      "signature" : "System.Reflection.Emit.LocalBuilder Mono.CSharp.EmitContext:TemporaryReturn ()",
      "code_size" : "74",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ConditionalAccessContext:.ctor (Mono.CSharp.TypeSpec,System.Reflection.Emit.Label)",
      "code_size" : "63",
      "class" : "ConditionalAccessContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Statement",
      "signature" : "bool Mono.CSharp.ConditionalAccessContext:get_Statement ()",
      "code_size" : "20",
      "class" : "ConditionalAccessContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Statement",
      "signature" : "void Mono.CSharp.ConditionalAccessContext:set_Statement (bool)",
      "code_size" : "31",
      "class" : "ConditionalAccessContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_EndLabel",
      "signature" : "System.Reflection.Emit.Label Mono.CSharp.ConditionalAccessContext:get_EndLabel ()",
      "code_size" : "30",
      "class" : "ConditionalAccessContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_EndLabel",
      "signature" : "void Mono.CSharp.ConditionalAccessContext:set_EndLabel (System.Reflection.Emit.Label)",
      "code_size" : "32",
      "class" : "ConditionalAccessContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Type",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.ConditionalAccessContext:get_Type ()",
      "code_size" : "20",
      "class" : "ConditionalAccessContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Type",
      "signature" : "void Mono.CSharp.ConditionalAccessContext:set_Type (Mono.CSharp.TypeSpec)",
      "code_size" : "43",
      "class" : "ConditionalAccessContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.CallEmitter:Emit (Mono.CSharp.EmitContext,Mono.CSharp.MethodSpec,Mono.CSharp.Arguments,Mono.CSharp.Location)",
      "code_size" : "104",
      "class" : "CallEmitter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitStatement",
      "signature" : "void Mono.CSharp.CallEmitter:EmitStatement (Mono.CSharp.EmitContext,Mono.CSharp.MethodSpec,Mono.CSharp.Arguments,Mono.CSharp.Location)",
      "code_size" : "107",
      "class" : "CallEmitter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitPredefined",
      "signature" : "void Mono.CSharp.CallEmitter:EmitPredefined (Mono.CSharp.EmitContext,Mono.CSharp.MethodSpec,Mono.CSharp.Arguments,bool,System.Nullable`1<Mono.CSharp.Location>)",
      "code_size" : "2242",
      "class" : "CallEmitter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetVarargsTypes",
      "signature" : "System.Type[] Mono.CSharp.CallEmitter:GetVarargsTypes (Mono.CSharp.MethodSpec,Mono.CSharp.Arguments)",
      "code_size" : "135",
      "class" : "CallEmitter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsVirtualCallRequired",
      "signature" : "bool Mono.CSharp.CallEmitter:IsVirtualCallRequired (Mono.CSharp.Expression,Mono.CSharp.MethodSpec)",
      "code_size" : "227",
      "class" : "CallEmitter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsAddressCall",
      "signature" : "bool Mono.CSharp.CallEmitter:IsAddressCall (Mono.CSharp.Expression,System.Reflection.Emit.OpCode,Mono.CSharp.TypeSpec)",
      "code_size" : "353",
      "class" : "CallEmitter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.InstanceEmitter:.ctor (Mono.CSharp.Expression,bool)",
      "code_size" : "56",
      "class" : "InstanceEmitter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.InstanceEmitter:Emit (Mono.CSharp.EmitContext,bool)",
      "code_size" : "2506",
      "class" : "InstanceEmitter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitLoad",
      "signature" : "void Mono.CSharp.InstanceEmitter:EmitLoad (Mono.CSharp.EmitContext,bool)",
      "code_size" : "490",
      "class" : "InstanceEmitter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetStackType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.InstanceEmitter:GetStackType (Mono.CSharp.EmitContext)",
      "code_size" : "151",
      "class" : "InstanceEmitter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "RequiresBoxing",
      "signature" : "bool Mono.CSharp.ExpressionAnalyzer:RequiresBoxing (Mono.CSharp.Expression)",
      "code_size" : "159",
      "class" : "ExpressionAnalyzer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsInexpensiveLoad",
      "signature" : "bool Mono.CSharp.ExpressionAnalyzer:IsInexpensiveLoad (Mono.CSharp.Expression)",
      "code_size" : "408",
      "class" : "ExpressionAnalyzer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.CompletingExpression:.ctor ()",
      "code_size" : "9",
      "class" : "CompletingExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AppendResults",
      "signature" : "void Mono.CSharp.CompletingExpression:AppendResults (System.Collections.Generic.List`1<string>,string,System.Collections.Generic.IEnumerable`1<string>)",
      "code_size" : "304",
      "class" : "CompletingExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ContainsEmitWithAwait",
      "signature" : "bool Mono.CSharp.CompletingExpression:ContainsEmitWithAwait ()",
      "code_size" : "11",
      "class" : "CompletingExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.CompletingExpression:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "11",
      "class" : "CompletingExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitStatement",
      "signature" : "void Mono.CSharp.CompletingExpression:EmitStatement (Mono.CSharp.EmitContext)",
      "code_size" : "9",
      "class" : "CompletingExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.CompletingExpression:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "9",
      "class" : "CompletingExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.CompletionSimpleName:.ctor (string,Mono.CSharp.Location)",
      "code_size" : "60",
      "class" : "CompletionSimpleName",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.CompletionSimpleName:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "375",
      "class" : "CompletionSimpleName",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.CompletionSimpleName:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Expression)",
      "code_size" : "9",
      "class" : "CompletionSimpleName",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "<DoResolve>m__0",
      "signature" : "string Mono.CSharp.CompletionSimpleName:<DoResolve>m__0 (string)",
      "code_size" : "45",
      "class" : "CompletionSimpleName",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.CompletionMemberAccess:.ctor (Mono.CSharp.Expression,string,Mono.CSharp.Location)",
      "code_size" : "90",
      "class" : "CompletionMemberAccess",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.CompletionMemberAccess:.ctor (Mono.CSharp.Expression,string,Mono.CSharp.TypeArguments,Mono.CSharp.Location)",
      "code_size" : "125",
      "class" : "CompletionMemberAccess",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.CompletionMemberAccess:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "1629",
      "class" : "CompletionMemberAccess",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.CompletionMemberAccess:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Expression)",
      "code_size" : "206",
      "class" : "CompletionMemberAccess",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "<DoResolve>m__0",
      "signature" : "string Mono.CSharp.CompletionMemberAccess:<DoResolve>m__0 (string)",
      "code_size" : "45",
      "class" : "CompletionMemberAccess",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "<DoResolve>m__1",
      "signature" : "string Mono.CSharp.CompletionMemberAccess:<DoResolve>m__1 (Mono.CSharp.MemberSpec)",
      "code_size" : "25",
      "class" : "CompletionMemberAccess",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.CompletionElementInitializer:.ctor (string,Mono.CSharp.Location)",
      "code_size" : "63",
      "class" : "CompletionElementInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.CompletionElementInitializer:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "555",
      "class" : "CompletionElementInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.CompletionElementInitializer:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Expression)",
      "code_size" : "9",
      "class" : "CompletionElementInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "<DoResolve>m__0",
      "signature" : "bool Mono.CSharp.CompletionElementInitializer:<DoResolve>m__0 (Mono.CSharp.MemberSpec)",
      "code_size" : "43",
      "class" : "CompletionElementInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "<DoResolve>m__1",
      "signature" : "string Mono.CSharp.CompletionElementInitializer:<DoResolve>m__1 (Mono.CSharp.MemberSpec)",
      "code_size" : "25",
      "class" : "CompletionElementInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.EmptyCompletion:.ctor ()",
      "code_size" : "9",
      "class" : "EmptyCompletion",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.EmptyCompletion:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Expression)",
      "code_size" : "9",
      "class" : "EmptyCompletion",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.EmptyCompletion:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "121",
      "class" : "EmptyCompletion",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Constant:.ctor (Mono.CSharp.Location)",
      "code_size" : "32",
      "class" : "Constant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ToString",
      "signature" : "string Mono.CSharp.Constant:ToString ()",
      "code_size" : "93",
      "class" : "Constant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetTypedValue",
      "signature" : "object Mono.CSharp.Constant:GetTypedValue ()",
      "code_size" : "25",
      "class" : "Constant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_ValueCannotBeConverted",
      "signature" : "void Mono.CSharp.Constant:Error_ValueCannotBeConverted (Mono.CSharp.ResolveContext,Mono.CSharp.TypeSpec,bool)",
      "code_size" : "277",
      "class" : "Constant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ImplicitConversionRequired",
      "signature" : "Mono.CSharp.Constant Mono.CSharp.Constant:ImplicitConversionRequired (Mono.CSharp.ResolveContext,Mono.CSharp.TypeSpec)",
      "code_size" : "89",
      "class" : "Constant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ContainsEmitWithAwait",
      "signature" : "bool Mono.CSharp.Constant:ContainsEmitWithAwait ()",
      "code_size" : "11",
      "class" : "Constant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ConvertImplicitly",
      "signature" : "Mono.CSharp.Constant Mono.CSharp.Constant:ConvertImplicitly (Mono.CSharp.TypeSpec)",
      "code_size" : "339",
      "class" : "Constant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateConstantFromValue",
      "signature" : "Mono.CSharp.Constant Mono.CSharp.Constant:CreateConstantFromValue (Mono.CSharp.TypeSpec,object,Mono.CSharp.Location)",
      "code_size" : "1951",
      "class" : "Constant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ExtractConstantFromValue",
      "signature" : "Mono.CSharp.Constant Mono.CSharp.Constant:ExtractConstantFromValue (Mono.CSharp.TypeSpec,object,Mono.CSharp.Location)",
      "code_size" : "2595",
      "class" : "Constant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Constant:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "298",
      "class" : "Constant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ChangeType",
      "signature" : "object Mono.CSharp.Constant:ChangeType (object,Mono.CSharp.TypeSpec,bool&)",
      "code_size" : "1649",
      "class" : "Constant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Constant:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "16",
      "class" : "Constant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Reduce",
      "signature" : "Mono.CSharp.Constant Mono.CSharp.Constant:Reduce (Mono.CSharp.ResolveContext,Mono.CSharp.TypeSpec)",
      "code_size" : "427",
      "class" : "Constant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "TryReduce",
      "signature" : "Mono.CSharp.Constant Mono.CSharp.Constant:TryReduce (Mono.CSharp.ResolveContext,Mono.CSharp.TypeSpec)",
      "code_size" : "102",
      "class" : "Constant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "TryReduceConstant",
      "signature" : "Mono.CSharp.Constant Mono.CSharp.Constant:TryReduceConstant (Mono.CSharp.ResolveContext,Mono.CSharp.TypeSpec)",
      "code_size" : "283",
      "class" : "Constant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsDefaultInitializer",
      "signature" : "bool Mono.CSharp.Constant:IsDefaultInitializer (Mono.CSharp.TypeSpec)",
      "code_size" : "107",
      "class" : "Constant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsLiteral",
      "signature" : "bool Mono.CSharp.Constant:get_IsLiteral ()",
      "code_size" : "11",
      "class" : "Constant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsOneInteger",
      "signature" : "bool Mono.CSharp.Constant:get_IsOneInteger ()",
      "code_size" : "11",
      "class" : "Constant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsSideEffectFree",
      "signature" : "bool Mono.CSharp.Constant:get_IsSideEffectFree ()",
      "code_size" : "14",
      "class" : "Constant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsZeroInteger",
      "signature" : "bool Mono.CSharp.Constant:get_IsZeroInteger ()",
      "code_size" : "11",
      "class" : "Constant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitSideEffect",
      "signature" : "void Mono.CSharp.Constant:EmitSideEffect (Mono.CSharp.EmitContext)",
      "code_size" : "9",
      "class" : "Constant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Clone",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Constant:Clone (Mono.CSharp.CloneContext)",
      "code_size" : "16",
      "class" : "Constant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.Constant:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Expression)",
      "code_size" : "47",
      "class" : "Constant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MakeExpression",
      "signature" : "System.Linq.Expressions.Expression Mono.CSharp.Constant:MakeExpression (Mono.CSharp.BuilderContext)",
      "code_size" : "63",
      "class" : "Constant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Resolve",
      "signature" : "bool Mono.CSharp.Constant:Resolve (Mono.CSharp.ResolveContext)",
      "code_size" : "14",
      "class" : "Constant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".cctor",
      "signature" : "void Mono.CSharp.Constant:.cctor ()",
      "code_size" : "66",
      "class" : "Constant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.IntegralConstant:.ctor (Mono.CSharp.TypeSpec,Mono.CSharp.Location)",
      "code_size" : "69",
      "class" : "IntegralConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_ValueCannotBeConverted",
      "signature" : "void Mono.CSharp.IntegralConstant:Error_ValueCannotBeConverted (Mono.CSharp.ResolveContext,Mono.CSharp.TypeSpec,bool)",
      "code_size" : "243",
      "class" : "IntegralConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetValueAsLiteral",
      "signature" : "string Mono.CSharp.IntegralConstant:GetValueAsLiteral ()",
      "code_size" : "34",
      "class" : "IntegralConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.BoolConstant:.ctor (Mono.CSharp.BuiltinTypes,bool,Mono.CSharp.Location)",
      "code_size" : "54",
      "class" : "BoolConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.BoolConstant:.ctor (Mono.CSharp.TypeSpec,bool,Mono.CSharp.Location)",
      "code_size" : "83",
      "class" : "BoolConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetValue",
      "signature" : "object Mono.CSharp.BoolConstant:GetValue ()",
      "code_size" : "51",
      "class" : "BoolConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetValueAsLiteral",
      "signature" : "string Mono.CSharp.BoolConstant:GetValueAsLiteral ()",
      "code_size" : "48",
      "class" : "BoolConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetValueAsLong",
      "signature" : "long Mono.CSharp.BoolConstant:GetValueAsLong ()",
      "code_size" : "36",
      "class" : "BoolConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EncodeAttributeValue",
      "signature" : "void Mono.CSharp.BoolConstant:EncodeAttributeValue (Mono.CSharp.IMemberContext,Mono.CSharp.AttributeEncoder,Mono.CSharp.TypeSpec,Mono.CSharp.TypeSpec)",
      "code_size" : "41",
      "class" : "BoolConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.BoolConstant:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "69",
      "class" : "BoolConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsDefaultValue",
      "signature" : "bool Mono.CSharp.BoolConstant:get_IsDefaultValue ()",
      "code_size" : "30",
      "class" : "BoolConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsNegative",
      "signature" : "bool Mono.CSharp.BoolConstant:get_IsNegative ()",
      "code_size" : "11",
      "class" : "BoolConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsZeroInteger",
      "signature" : "bool Mono.CSharp.BoolConstant:get_IsZeroInteger ()",
      "code_size" : "30",
      "class" : "BoolConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ConvertExplicitly",
      "signature" : "Mono.CSharp.Constant Mono.CSharp.BoolConstant:ConvertExplicitly (bool,Mono.CSharp.TypeSpec)",
      "code_size" : "11",
      "class" : "BoolConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ByteConstant:.ctor (Mono.CSharp.BuiltinTypes,byte,Mono.CSharp.Location)",
      "code_size" : "57",
      "class" : "ByteConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ByteConstant:.ctor (Mono.CSharp.TypeSpec,byte,Mono.CSharp.Location)",
      "code_size" : "51",
      "class" : "ByteConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EncodeAttributeValue",
      "signature" : "void Mono.CSharp.ByteConstant:EncodeAttributeValue (Mono.CSharp.IMemberContext,Mono.CSharp.AttributeEncoder,Mono.CSharp.TypeSpec,Mono.CSharp.TypeSpec)",
      "code_size" : "41",
      "class" : "ByteConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.ByteConstant:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "41",
      "class" : "ByteConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetValue",
      "signature" : "object Mono.CSharp.ByteConstant:GetValue ()",
      "code_size" : "51",
      "class" : "ByteConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetValueAsLong",
      "signature" : "long Mono.CSharp.ByteConstant:GetValueAsLong ()",
      "code_size" : "23",
      "class" : "ByteConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Increment",
      "signature" : "Mono.CSharp.Constant Mono.CSharp.ByteConstant:Increment ()",
      "code_size" : "148",
      "class" : "ByteConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsDefaultValue",
      "signature" : "bool Mono.CSharp.ByteConstant:get_IsDefaultValue ()",
      "code_size" : "30",
      "class" : "ByteConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsOneInteger",
      "signature" : "bool Mono.CSharp.ByteConstant:get_IsOneInteger ()",
      "code_size" : "31",
      "class" : "ByteConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsNegative",
      "signature" : "bool Mono.CSharp.ByteConstant:get_IsNegative ()",
      "code_size" : "11",
      "class" : "ByteConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsZeroInteger",
      "signature" : "bool Mono.CSharp.ByteConstant:get_IsZeroInteger ()",
      "code_size" : "30",
      "class" : "ByteConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ConvertExplicitly",
      "signature" : "Mono.CSharp.Constant Mono.CSharp.ByteConstant:ConvertExplicitly (bool,Mono.CSharp.TypeSpec)",
      "code_size" : "1135",
      "class" : "ByteConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.CharConstant:.ctor (Mono.CSharp.BuiltinTypes,char,Mono.CSharp.Location)",
      "code_size" : "54",
      "class" : "CharConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.CharConstant:.ctor (Mono.CSharp.TypeSpec,char,Mono.CSharp.Location)",
      "code_size" : "84",
      "class" : "CharConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EncodeAttributeValue",
      "signature" : "void Mono.CSharp.CharConstant:EncodeAttributeValue (Mono.CSharp.IMemberContext,Mono.CSharp.AttributeEncoder,Mono.CSharp.TypeSpec,Mono.CSharp.TypeSpec)",
      "code_size" : "41",
      "class" : "CharConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.CharConstant:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "41",
      "class" : "CharConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "descape",
      "signature" : "string Mono.CSharp.CharConstant:descape (char)",
      "code_size" : "239",
      "class" : "CharConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetValue",
      "signature" : "object Mono.CSharp.CharConstant:GetValue ()",
      "code_size" : "51",
      "class" : "CharConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetValueAsLong",
      "signature" : "long Mono.CSharp.CharConstant:GetValueAsLong ()",
      "code_size" : "23",
      "class" : "CharConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetValueAsLiteral",
      "signature" : "string Mono.CSharp.CharConstant:GetValueAsLiteral ()",
      "code_size" : "58",
      "class" : "CharConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsDefaultValue",
      "signature" : "bool Mono.CSharp.CharConstant:get_IsDefaultValue ()",
      "code_size" : "30",
      "class" : "CharConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsNegative",
      "signature" : "bool Mono.CSharp.CharConstant:get_IsNegative ()",
      "code_size" : "11",
      "class" : "CharConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsZeroInteger",
      "signature" : "bool Mono.CSharp.CharConstant:get_IsZeroInteger ()",
      "code_size" : "30",
      "class" : "CharConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ConvertExplicitly",
      "signature" : "Mono.CSharp.Constant Mono.CSharp.CharConstant:ConvertExplicitly (bool,Mono.CSharp.TypeSpec)",
      "code_size" : "1158",
      "class" : "CharConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.SByteConstant:.ctor (Mono.CSharp.BuiltinTypes,sbyte,Mono.CSharp.Location)",
      "code_size" : "55",
      "class" : "SByteConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.SByteConstant:.ctor (Mono.CSharp.TypeSpec,sbyte,Mono.CSharp.Location)",
      "code_size" : "52",
      "class" : "SByteConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EncodeAttributeValue",
      "signature" : "void Mono.CSharp.SByteConstant:EncodeAttributeValue (Mono.CSharp.IMemberContext,Mono.CSharp.AttributeEncoder,Mono.CSharp.TypeSpec,Mono.CSharp.TypeSpec)",
      "code_size" : "42",
      "class" : "SByteConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.SByteConstant:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "42",
      "class" : "SByteConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetValue",
      "signature" : "object Mono.CSharp.SByteConstant:GetValue ()",
      "code_size" : "52",
      "class" : "SByteConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetValueAsLong",
      "signature" : "long Mono.CSharp.SByteConstant:GetValueAsLong ()",
      "code_size" : "24",
      "class" : "SByteConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Increment",
      "signature" : "Mono.CSharp.Constant Mono.CSharp.SByteConstant:Increment ()",
      "code_size" : "159",
      "class" : "SByteConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsDefaultValue",
      "signature" : "bool Mono.CSharp.SByteConstant:get_IsDefaultValue ()",
      "code_size" : "31",
      "class" : "SByteConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsNegative",
      "signature" : "bool Mono.CSharp.SByteConstant:get_IsNegative ()",
      "code_size" : "31",
      "class" : "SByteConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsOneInteger",
      "signature" : "bool Mono.CSharp.SByteConstant:get_IsOneInteger ()",
      "code_size" : "32",
      "class" : "SByteConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsZeroInteger",
      "signature" : "bool Mono.CSharp.SByteConstant:get_IsZeroInteger ()",
      "code_size" : "31",
      "class" : "SByteConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ConvertExplicitly",
      "signature" : "Mono.CSharp.Constant Mono.CSharp.SByteConstant:ConvertExplicitly (bool,Mono.CSharp.TypeSpec)",
      "code_size" : "1291",
      "class" : "SByteConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ShortConstant:.ctor (Mono.CSharp.BuiltinTypes,int16,Mono.CSharp.Location)",
      "code_size" : "55",
      "class" : "ShortConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ShortConstant:.ctor (Mono.CSharp.TypeSpec,int16,Mono.CSharp.Location)",
      "code_size" : "52",
      "class" : "ShortConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EncodeAttributeValue",
      "signature" : "void Mono.CSharp.ShortConstant:EncodeAttributeValue (Mono.CSharp.IMemberContext,Mono.CSharp.AttributeEncoder,Mono.CSharp.TypeSpec,Mono.CSharp.TypeSpec)",
      "code_size" : "42",
      "class" : "ShortConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.ShortConstant:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "42",
      "class" : "ShortConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetValue",
      "signature" : "object Mono.CSharp.ShortConstant:GetValue ()",
      "code_size" : "52",
      "class" : "ShortConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetValueAsLong",
      "signature" : "long Mono.CSharp.ShortConstant:GetValueAsLong ()",
      "code_size" : "24",
      "class" : "ShortConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Increment",
      "signature" : "Mono.CSharp.Constant Mono.CSharp.ShortConstant:Increment ()",
      "code_size" : "165",
      "class" : "ShortConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsDefaultValue",
      "signature" : "bool Mono.CSharp.ShortConstant:get_IsDefaultValue ()",
      "code_size" : "31",
      "class" : "ShortConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsZeroInteger",
      "signature" : "bool Mono.CSharp.ShortConstant:get_IsZeroInteger ()",
      "code_size" : "31",
      "class" : "ShortConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsNegative",
      "signature" : "bool Mono.CSharp.ShortConstant:get_IsNegative ()",
      "code_size" : "31",
      "class" : "ShortConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsOneInteger",
      "signature" : "bool Mono.CSharp.ShortConstant:get_IsOneInteger ()",
      "code_size" : "32",
      "class" : "ShortConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ConvertExplicitly",
      "signature" : "Mono.CSharp.Constant Mono.CSharp.ShortConstant:ConvertExplicitly (bool,Mono.CSharp.TypeSpec)",
      "code_size" : "1358",
      "class" : "ShortConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.UShortConstant:.ctor (Mono.CSharp.BuiltinTypes,uint16,Mono.CSharp.Location)",
      "code_size" : "57",
      "class" : "UShortConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.UShortConstant:.ctor (Mono.CSharp.TypeSpec,uint16,Mono.CSharp.Location)",
      "code_size" : "51",
      "class" : "UShortConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EncodeAttributeValue",
      "signature" : "void Mono.CSharp.UShortConstant:EncodeAttributeValue (Mono.CSharp.IMemberContext,Mono.CSharp.AttributeEncoder,Mono.CSharp.TypeSpec,Mono.CSharp.TypeSpec)",
      "code_size" : "41",
      "class" : "UShortConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.UShortConstant:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "41",
      "class" : "UShortConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetValue",
      "signature" : "object Mono.CSharp.UShortConstant:GetValue ()",
      "code_size" : "51",
      "class" : "UShortConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetValueAsLong",
      "signature" : "long Mono.CSharp.UShortConstant:GetValueAsLong ()",
      "code_size" : "23",
      "class" : "UShortConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Increment",
      "signature" : "Mono.CSharp.Constant Mono.CSharp.UShortConstant:Increment ()",
      "code_size" : "147",
      "class" : "UShortConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsDefaultValue",
      "signature" : "bool Mono.CSharp.UShortConstant:get_IsDefaultValue ()",
      "code_size" : "30",
      "class" : "UShortConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsNegative",
      "signature" : "bool Mono.CSharp.UShortConstant:get_IsNegative ()",
      "code_size" : "11",
      "class" : "UShortConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsOneInteger",
      "signature" : "bool Mono.CSharp.UShortConstant:get_IsOneInteger ()",
      "code_size" : "31",
      "class" : "UShortConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsZeroInteger",
      "signature" : "bool Mono.CSharp.UShortConstant:get_IsZeroInteger ()",
      "code_size" : "30",
      "class" : "UShortConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ConvertExplicitly",
      "signature" : "Mono.CSharp.Constant Mono.CSharp.UShortConstant:ConvertExplicitly (bool,Mono.CSharp.TypeSpec)",
      "code_size" : "1260",
      "class" : "UShortConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.IntConstant:.ctor (Mono.CSharp.BuiltinTypes,int,Mono.CSharp.Location)",
      "code_size" : "54",
      "class" : "IntConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.IntConstant:.ctor (Mono.CSharp.TypeSpec,int,Mono.CSharp.Location)",
      "code_size" : "50",
      "class" : "IntConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EncodeAttributeValue",
      "signature" : "void Mono.CSharp.IntConstant:EncodeAttributeValue (Mono.CSharp.IMemberContext,Mono.CSharp.AttributeEncoder,Mono.CSharp.TypeSpec,Mono.CSharp.TypeSpec)",
      "code_size" : "41",
      "class" : "IntConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.IntConstant:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "41",
      "class" : "IntConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetValue",
      "signature" : "object Mono.CSharp.IntConstant:GetValue ()",
      "code_size" : "50",
      "class" : "IntConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetValueAsLong",
      "signature" : "long Mono.CSharp.IntConstant:GetValueAsLong ()",
      "code_size" : "23",
      "class" : "IntConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Increment",
      "signature" : "Mono.CSharp.Constant Mono.CSharp.IntConstant:Increment ()",
      "code_size" : "122",
      "class" : "IntConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsDefaultValue",
      "signature" : "bool Mono.CSharp.IntConstant:get_IsDefaultValue ()",
      "code_size" : "30",
      "class" : "IntConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsNegative",
      "signature" : "bool Mono.CSharp.IntConstant:get_IsNegative ()",
      "code_size" : "30",
      "class" : "IntConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsOneInteger",
      "signature" : "bool Mono.CSharp.IntConstant:get_IsOneInteger ()",
      "code_size" : "31",
      "class" : "IntConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsZeroInteger",
      "signature" : "bool Mono.CSharp.IntConstant:get_IsZeroInteger ()",
      "code_size" : "30",
      "class" : "IntConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ConvertExplicitly",
      "signature" : "Mono.CSharp.Constant Mono.CSharp.IntConstant:ConvertExplicitly (bool,Mono.CSharp.TypeSpec)",
      "code_size" : "1430",
      "class" : "IntConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ConvertImplicitly",
      "signature" : "Mono.CSharp.Constant Mono.CSharp.IntConstant:ConvertImplicitly (Mono.CSharp.TypeSpec)",
      "code_size" : "90",
      "class" : "IntConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "TryImplicitIntConversion",
      "signature" : "Mono.CSharp.Constant Mono.CSharp.IntConstant:TryImplicitIntConversion (Mono.CSharp.TypeSpec)",
      "code_size" : "848",
      "class" : "IntConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.UIntConstant:.ctor (Mono.CSharp.BuiltinTypes,uint,Mono.CSharp.Location)",
      "code_size" : "53",
      "class" : "UIntConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.UIntConstant:.ctor (Mono.CSharp.TypeSpec,uint,Mono.CSharp.Location)",
      "code_size" : "49",
      "class" : "UIntConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EncodeAttributeValue",
      "signature" : "void Mono.CSharp.UIntConstant:EncodeAttributeValue (Mono.CSharp.IMemberContext,Mono.CSharp.AttributeEncoder,Mono.CSharp.TypeSpec,Mono.CSharp.TypeSpec)",
      "code_size" : "40",
      "class" : "UIntConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.UIntConstant:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "40",
      "class" : "UIntConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetValue",
      "signature" : "object Mono.CSharp.UIntConstant:GetValue ()",
      "code_size" : "49",
      "class" : "UIntConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetValueAsLong",
      "signature" : "long Mono.CSharp.UIntConstant:GetValueAsLong ()",
      "code_size" : "21",
      "class" : "UIntConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Increment",
      "signature" : "Mono.CSharp.Constant Mono.CSharp.UIntConstant:Increment ()",
      "code_size" : "121",
      "class" : "UIntConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsDefaultValue",
      "signature" : "bool Mono.CSharp.UIntConstant:get_IsDefaultValue ()",
      "code_size" : "29",
      "class" : "UIntConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsNegative",
      "signature" : "bool Mono.CSharp.UIntConstant:get_IsNegative ()",
      "code_size" : "11",
      "class" : "UIntConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsOneInteger",
      "signature" : "bool Mono.CSharp.UIntConstant:get_IsOneInteger ()",
      "code_size" : "30",
      "class" : "UIntConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsZeroInteger",
      "signature" : "bool Mono.CSharp.UIntConstant:get_IsZeroInteger ()",
      "code_size" : "29",
      "class" : "UIntConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ConvertExplicitly",
      "signature" : "Mono.CSharp.Constant Mono.CSharp.UIntConstant:ConvertExplicitly (bool,Mono.CSharp.TypeSpec)",
      "code_size" : "1692",
      "class" : "UIntConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.LongConstant:.ctor (Mono.CSharp.BuiltinTypes,long,Mono.CSharp.Location)",
      "code_size" : "54",
      "class" : "LongConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.LongConstant:.ctor (Mono.CSharp.TypeSpec,long,Mono.CSharp.Location)",
      "code_size" : "51",
      "class" : "LongConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EncodeAttributeValue",
      "signature" : "void Mono.CSharp.LongConstant:EncodeAttributeValue (Mono.CSharp.IMemberContext,Mono.CSharp.AttributeEncoder,Mono.CSharp.TypeSpec,Mono.CSharp.TypeSpec)",
      "code_size" : "41",
      "class" : "LongConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.LongConstant:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "41",
      "class" : "LongConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetValue",
      "signature" : "object Mono.CSharp.LongConstant:GetValue ()",
      "code_size" : "51",
      "class" : "LongConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetValueAsLong",
      "signature" : "long Mono.CSharp.LongConstant:GetValueAsLong ()",
      "code_size" : "20",
      "class" : "LongConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Increment",
      "signature" : "Mono.CSharp.Constant Mono.CSharp.LongConstant:Increment ()",
      "code_size" : "123",
      "class" : "LongConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsDefaultValue",
      "signature" : "bool Mono.CSharp.LongConstant:get_IsDefaultValue ()",
      "code_size" : "31",
      "class" : "LongConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsNegative",
      "signature" : "bool Mono.CSharp.LongConstant:get_IsNegative ()",
      "code_size" : "31",
      "class" : "LongConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsOneInteger",
      "signature" : "bool Mono.CSharp.LongConstant:get_IsOneInteger ()",
      "code_size" : "32",
      "class" : "LongConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsZeroInteger",
      "signature" : "bool Mono.CSharp.LongConstant:get_IsZeroInteger ()",
      "code_size" : "31",
      "class" : "LongConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ConvertExplicitly",
      "signature" : "Mono.CSharp.Constant Mono.CSharp.LongConstant:ConvertExplicitly (bool,Mono.CSharp.TypeSpec)",
      "code_size" : "1513",
      "class" : "LongConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ConvertImplicitly",
      "signature" : "Mono.CSharp.Constant Mono.CSharp.LongConstant:ConvertImplicitly (Mono.CSharp.TypeSpec)",
      "code_size" : "151",
      "class" : "LongConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ULongConstant:.ctor (Mono.CSharp.BuiltinTypes,ulong,Mono.CSharp.Location)",
      "code_size" : "54",
      "class" : "ULongConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ULongConstant:.ctor (Mono.CSharp.TypeSpec,ulong,Mono.CSharp.Location)",
      "code_size" : "51",
      "class" : "ULongConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EncodeAttributeValue",
      "signature" : "void Mono.CSharp.ULongConstant:EncodeAttributeValue (Mono.CSharp.IMemberContext,Mono.CSharp.AttributeEncoder,Mono.CSharp.TypeSpec,Mono.CSharp.TypeSpec)",
      "code_size" : "41",
      "class" : "ULongConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.ULongConstant:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "41",
      "class" : "ULongConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetValue",
      "signature" : "object Mono.CSharp.ULongConstant:GetValue ()",
      "code_size" : "51",
      "class" : "ULongConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetValueAsLong",
      "signature" : "long Mono.CSharp.ULongConstant:GetValueAsLong ()",
      "code_size" : "20",
      "class" : "ULongConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Increment",
      "signature" : "Mono.CSharp.Constant Mono.CSharp.ULongConstant:Increment ()",
      "code_size" : "123",
      "class" : "ULongConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsDefaultValue",
      "signature" : "bool Mono.CSharp.ULongConstant:get_IsDefaultValue ()",
      "code_size" : "31",
      "class" : "ULongConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsNegative",
      "signature" : "bool Mono.CSharp.ULongConstant:get_IsNegative ()",
      "code_size" : "11",
      "class" : "ULongConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsOneInteger",
      "signature" : "bool Mono.CSharp.ULongConstant:get_IsOneInteger ()",
      "code_size" : "32",
      "class" : "ULongConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsZeroInteger",
      "signature" : "bool Mono.CSharp.ULongConstant:get_IsZeroInteger ()",
      "code_size" : "31",
      "class" : "ULongConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ConvertExplicitly",
      "signature" : "Mono.CSharp.Constant Mono.CSharp.ULongConstant:ConvertExplicitly (bool,Mono.CSharp.TypeSpec)",
      "code_size" : "1537",
      "class" : "ULongConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.FloatConstant:.ctor (Mono.CSharp.BuiltinTypes,double,Mono.CSharp.Location)",
      "code_size" : "56",
      "class" : "FloatConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.FloatConstant:.ctor (Mono.CSharp.TypeSpec,double,Mono.CSharp.Location)",
      "code_size" : "87",
      "class" : "FloatConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ConvertImplicitly",
      "signature" : "Mono.CSharp.Constant Mono.CSharp.FloatConstant:ConvertImplicitly (Mono.CSharp.TypeSpec)",
      "code_size" : "140",
      "class" : "FloatConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EncodeAttributeValue",
      "signature" : "void Mono.CSharp.FloatConstant:EncodeAttributeValue (Mono.CSharp.IMemberContext,Mono.CSharp.AttributeEncoder,Mono.CSharp.TypeSpec,Mono.CSharp.TypeSpec)",
      "code_size" : "77",
      "class" : "FloatConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.FloatConstant:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "252",
      "class" : "FloatConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Value",
      "signature" : "single Mono.CSharp.FloatConstant:get_Value ()",
      "code_size" : "33",
      "class" : "FloatConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetValue",
      "signature" : "object Mono.CSharp.FloatConstant:GetValue ()",
      "code_size" : "90",
      "class" : "FloatConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetValueAsLiteral",
      "signature" : "string Mono.CSharp.FloatConstant:GetValueAsLiteral ()",
      "code_size" : "88",
      "class" : "FloatConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetValueAsLong",
      "signature" : "long Mono.CSharp.FloatConstant:GetValueAsLong ()",
      "code_size" : "27",
      "class" : "FloatConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsDefaultValue",
      "signature" : "bool Mono.CSharp.FloatConstant:get_IsDefaultValue ()",
      "code_size" : "67",
      "class" : "FloatConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsNegative",
      "signature" : "bool Mono.CSharp.FloatConstant:get_IsNegative ()",
      "code_size" : "65",
      "class" : "FloatConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ConvertExplicitly",
      "signature" : "Mono.CSharp.Constant Mono.CSharp.FloatConstant:ConvertExplicitly (bool,Mono.CSharp.TypeSpec)",
      "code_size" : "3668",
      "class" : "FloatConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.DoubleConstant:.ctor (Mono.CSharp.BuiltinTypes,double,Mono.CSharp.Location)",
      "code_size" : "56",
      "class" : "DoubleConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.DoubleConstant:.ctor (Mono.CSharp.TypeSpec,double,Mono.CSharp.Location)",
      "code_size" : "87",
      "class" : "DoubleConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EncodeAttributeValue",
      "signature" : "void Mono.CSharp.DoubleConstant:EncodeAttributeValue (Mono.CSharp.IMemberContext,Mono.CSharp.AttributeEncoder,Mono.CSharp.TypeSpec,Mono.CSharp.TypeSpec)",
      "code_size" : "42",
      "class" : "DoubleConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.DoubleConstant:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "194",
      "class" : "DoubleConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetValue",
      "signature" : "object Mono.CSharp.DoubleConstant:GetValue ()",
      "code_size" : "55",
      "class" : "DoubleConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetValueAsLiteral",
      "signature" : "string Mono.CSharp.DoubleConstant:GetValueAsLiteral ()",
      "code_size" : "46",
      "class" : "DoubleConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetValueAsLong",
      "signature" : "long Mono.CSharp.DoubleConstant:GetValueAsLong ()",
      "code_size" : "27",
      "class" : "DoubleConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsDefaultValue",
      "signature" : "bool Mono.CSharp.DoubleConstant:get_IsDefaultValue ()",
      "code_size" : "38",
      "class" : "DoubleConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsNegative",
      "signature" : "bool Mono.CSharp.DoubleConstant:get_IsNegative ()",
      "code_size" : "36",
      "class" : "DoubleConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ConvertExplicitly",
      "signature" : "Mono.CSharp.Constant Mono.CSharp.DoubleConstant:ConvertExplicitly (bool,Mono.CSharp.TypeSpec)",
      "code_size" : "2344",
      "class" : "DoubleConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.DecimalConstant:.ctor (Mono.CSharp.BuiltinTypes,System.Decimal,Mono.CSharp.Location)",
      "code_size" : "64",
      "class" : "DecimalConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.DecimalConstant:.ctor (Mono.CSharp.TypeSpec,System.Decimal,Mono.CSharp.Location)",
      "code_size" : "100",
      "class" : "DecimalConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.DecimalConstant:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "2192",
      "class" : "DecimalConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsDefaultValue",
      "signature" : "bool Mono.CSharp.DecimalConstant:get_IsDefaultValue ()",
      "code_size" : "231",
      "class" : "DecimalConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsNegative",
      "signature" : "bool Mono.CSharp.DecimalConstant:get_IsNegative ()",
      "code_size" : "231",
      "class" : "DecimalConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ConvertExplicitly",
      "signature" : "Mono.CSharp.Constant Mono.CSharp.DecimalConstant:ConvertExplicitly (bool,Mono.CSharp.TypeSpec)",
      "code_size" : "1952",
      "class" : "DecimalConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetValue",
      "signature" : "object Mono.CSharp.DecimalConstant:GetValue ()",
      "code_size" : "77",
      "class" : "DecimalConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetValueAsLiteral",
      "signature" : "string Mono.CSharp.DecimalConstant:GetValueAsLiteral ()",
      "code_size" : "73",
      "class" : "DecimalConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetValueAsLong",
      "signature" : "long Mono.CSharp.DecimalConstant:GetValueAsLong ()",
      "code_size" : "27",
      "class" : "DecimalConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.StringConstant:.ctor (Mono.CSharp.BuiltinTypes,string,Mono.CSharp.Location)",
      "code_size" : "57",
      "class" : "StringConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.StringConstant:.ctor (Mono.CSharp.TypeSpec,string,Mono.CSharp.Location)",
      "code_size" : "97",
      "class" : "StringConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.StringConstant:.ctor (Mono.CSharp.Location)",
      "code_size" : "32",
      "class" : "StringConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Value",
      "signature" : "string Mono.CSharp.StringConstant:get_Value ()",
      "code_size" : "20",
      "class" : "StringConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Value",
      "signature" : "void Mono.CSharp.StringConstant:set_Value (string)",
      "code_size" : "43",
      "class" : "StringConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetValue",
      "signature" : "object Mono.CSharp.StringConstant:GetValue ()",
      "code_size" : "20",
      "class" : "StringConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetValueAsLiteral",
      "signature" : "string Mono.CSharp.StringConstant:GetValueAsLiteral ()",
      "code_size" : "40",
      "class" : "StringConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetValueAsLong",
      "signature" : "long Mono.CSharp.StringConstant:GetValueAsLong ()",
      "code_size" : "27",
      "class" : "StringConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.StringConstant:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "705",
      "class" : "StringConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EncodeAttributeValue",
      "signature" : "void Mono.CSharp.StringConstant:EncodeAttributeValue (Mono.CSharp.IMemberContext,Mono.CSharp.AttributeEncoder,Mono.CSharp.TypeSpec,Mono.CSharp.TypeSpec)",
      "code_size" : "86",
      "class" : "StringConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsDefaultValue",
      "signature" : "bool Mono.CSharp.StringConstant:get_IsDefaultValue ()",
      "code_size" : "31",
      "class" : "StringConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsNegative",
      "signature" : "bool Mono.CSharp.StringConstant:get_IsNegative ()",
      "code_size" : "11",
      "class" : "StringConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsNull",
      "signature" : "bool Mono.CSharp.StringConstant:get_IsNull ()",
      "code_size" : "25",
      "class" : "StringConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ConvertExplicitly",
      "signature" : "Mono.CSharp.Constant Mono.CSharp.StringConstant:ConvertExplicitly (bool,Mono.CSharp.TypeSpec)",
      "code_size" : "11",
      "class" : "StringConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ConvertImplicitly",
      "signature" : "Mono.CSharp.Constant Mono.CSharp.StringConstant:ConvertImplicitly (Mono.CSharp.TypeSpec)",
      "code_size" : "141",
      "class" : "StringConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.NameOf:.ctor (Mono.CSharp.SimpleName)",
      "code_size" : "72",
      "class" : "NameOf",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_MethodGroupWithTypeArguments",
      "signature" : "void Mono.CSharp.NameOf:Error_MethodGroupWithTypeArguments (Mono.CSharp.ResolveContext,Mono.CSharp.Location)",
      "code_size" : "57",
      "class" : "NameOf",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.NameOf:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "27",
      "class" : "NameOf",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveArgumentExpression",
      "signature" : "bool Mono.CSharp.NameOf:ResolveArgumentExpression (Mono.CSharp.ResolveContext,Mono.CSharp.Expression)",
      "code_size" : "1278",
      "class" : "NameOf",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsLeftResolvedExpressionValid",
      "signature" : "bool Mono.CSharp.NameOf:IsLeftResolvedExpressionValid (Mono.CSharp.Expression)",
      "code_size" : "470",
      "class" : "NameOf",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveOverload",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.NameOf:ResolveOverload (Mono.CSharp.ResolveContext,Mono.CSharp.Arguments)",
      "code_size" : "195",
      "class" : "NameOf",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.NullConstant:.ctor (Mono.CSharp.TypeSpec,Mono.CSharp.Location)",
      "code_size" : "69",
      "class" : "NullConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.NullConstant:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "227",
      "class" : "NullConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EncodeAttributeValue",
      "signature" : "void Mono.CSharp.NullConstant:EncodeAttributeValue (Mono.CSharp.IMemberContext,Mono.CSharp.AttributeEncoder,Mono.CSharp.TypeSpec,Mono.CSharp.TypeSpec)",
      "code_size" : "347",
      "class" : "NullConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.NullConstant:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "312",
      "class" : "NullConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ExprClassName",
      "signature" : "string Mono.CSharp.NullConstant:get_ExprClassName ()",
      "code_size" : "25",
      "class" : "NullConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ConvertExplicitly",
      "signature" : "Mono.CSharp.Constant Mono.CSharp.NullConstant:ConvertExplicitly (bool,Mono.CSharp.TypeSpec)",
      "code_size" : "387",
      "class" : "NullConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ConvertImplicitly",
      "signature" : "Mono.CSharp.Constant Mono.CSharp.NullConstant:ConvertImplicitly (Mono.CSharp.TypeSpec)",
      "code_size" : "38",
      "class" : "NullConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSignatureForError",
      "signature" : "string Mono.CSharp.NullConstant:GetSignatureForError ()",
      "code_size" : "16",
      "class" : "NullConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetValue",
      "signature" : "object Mono.CSharp.NullConstant:GetValue ()",
      "code_size" : "11",
      "class" : "NullConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetValueAsLiteral",
      "signature" : "string Mono.CSharp.NullConstant:GetValueAsLiteral ()",
      "code_size" : "25",
      "class" : "NullConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetValueAsLong",
      "signature" : "long Mono.CSharp.NullConstant:GetValueAsLong ()",
      "code_size" : "27",
      "class" : "NullConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsDefaultValue",
      "signature" : "bool Mono.CSharp.NullConstant:get_IsDefaultValue ()",
      "code_size" : "14",
      "class" : "NullConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsNegative",
      "signature" : "bool Mono.CSharp.NullConstant:get_IsNegative ()",
      "code_size" : "11",
      "class" : "NullConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsNull",
      "signature" : "bool Mono.CSharp.NullConstant:get_IsNull ()",
      "code_size" : "14",
      "class" : "NullConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsZeroInteger",
      "signature" : "bool Mono.CSharp.NullConstant:get_IsZeroInteger ()",
      "code_size" : "14",
      "class" : "NullConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.NullPointer:.ctor (Mono.CSharp.TypeSpec,Mono.CSharp.Location)",
      "code_size" : "33",
      "class" : "NullPointer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.NullPointer:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "37",
      "class" : "NullPointer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.NullPointer:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "149",
      "class" : "NullPointer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.SideEffectConstant:.ctor (Mono.CSharp.Constant,Mono.CSharp.Expression,Mono.CSharp.Location)",
      "code_size" : "232",
      "class" : "SideEffectConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsSideEffectFree",
      "signature" : "bool Mono.CSharp.SideEffectConstant:get_IsSideEffectFree ()",
      "code_size" : "11",
      "class" : "SideEffectConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ContainsEmitWithAwait",
      "signature" : "bool Mono.CSharp.SideEffectConstant:ContainsEmitWithAwait ()",
      "code_size" : "32",
      "class" : "SideEffectConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetValue",
      "signature" : "object Mono.CSharp.SideEffectConstant:GetValue ()",
      "code_size" : "32",
      "class" : "SideEffectConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetValueAsLiteral",
      "signature" : "string Mono.CSharp.SideEffectConstant:GetValueAsLiteral ()",
      "code_size" : "32",
      "class" : "SideEffectConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetValueAsLong",
      "signature" : "long Mono.CSharp.SideEffectConstant:GetValueAsLong ()",
      "code_size" : "32",
      "class" : "SideEffectConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.SideEffectConstant:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "67",
      "class" : "SideEffectConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitSideEffect",
      "signature" : "void Mono.CSharp.SideEffectConstant:EmitSideEffect (Mono.CSharp.EmitContext)",
      "code_size" : "67",
      "class" : "SideEffectConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "FlowAnalysis",
      "signature" : "void Mono.CSharp.SideEffectConstant:FlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "42",
      "class" : "SideEffectConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsDefaultValue",
      "signature" : "bool Mono.CSharp.SideEffectConstant:get_IsDefaultValue ()",
      "code_size" : "32",
      "class" : "SideEffectConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsNegative",
      "signature" : "bool Mono.CSharp.SideEffectConstant:get_IsNegative ()",
      "code_size" : "32",
      "class" : "SideEffectConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsZeroInteger",
      "signature" : "bool Mono.CSharp.SideEffectConstant:get_IsZeroInteger ()",
      "code_size" : "32",
      "class" : "SideEffectConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ConvertExplicitly",
      "signature" : "Mono.CSharp.Constant Mono.CSharp.SideEffectConstant:ConvertExplicitly (bool,Mono.CSharp.TypeSpec)",
      "code_size" : "204",
      "class" : "SideEffectConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Const:.ctor (Mono.CSharp.TypeDefinition,Mono.CSharp.FullNamedExpression,Mono.CSharp.Modifiers,Mono.CSharp.MemberName,Mono.CSharp.Attributes)",
      "code_size" : "91",
      "class" : "Const",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Define",
      "signature" : "bool Mono.CSharp.Const:Define ()",
      "code_size" : "1403",
      "class" : "Const",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DefineValue",
      "signature" : "void Mono.CSharp.Const:DefineValue ()",
      "code_size" : "149",
      "class" : "Const",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.Const:Emit ()",
      "code_size" : "420",
      "class" : "Const",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_InvalidConstantType",
      "signature" : "void Mono.CSharp.Const:Error_InvalidConstantType (Mono.CSharp.TypeSpec,Mono.CSharp.Location,Mono.CSharp.Report)",
      "code_size" : "162",
      "class" : "Const",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "void Mono.CSharp.Const:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "Const",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "PrepareEmit",
      "signature" : "void Mono.CSharp.Const:PrepareEmit ()",
      "code_size" : "27",
      "class" : "Const",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ConstSpec:.ctor (Mono.CSharp.TypeSpec,Mono.CSharp.IMemberDefinition,Mono.CSharp.TypeSpec,System.Reflection.FieldInfo,Mono.CSharp.Modifiers,Mono.CSharp.Expression)",
      "code_size" : "64",
      "class" : "ConstSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Value",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.ConstSpec:get_Value ()",
      "code_size" : "20",
      "class" : "ConstSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetConstant",
      "signature" : "Mono.CSharp.Constant Mono.CSharp.ConstSpec:GetConstant (Mono.CSharp.ResolveContext)",
      "code_size" : "148",
      "class" : "ConstSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ConstInitializer:.ctor (Mono.CSharp.FieldBase,Mono.CSharp.Expression,Mono.CSharp.Location)",
      "code_size" : "90",
      "class" : "ConstInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Name",
      "signature" : "string Mono.CSharp.ConstInitializer:get_Name ()",
      "code_size" : "20",
      "class" : "ConstInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Name",
      "signature" : "void Mono.CSharp.ConstInitializer:set_Name (string)",
      "code_size" : "43",
      "class" : "ConstInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.ConstInitializer:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "273",
      "class" : "ConstInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolveInitializer",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.ConstInitializer:DoResolveInitializer (Mono.CSharp.ResolveContext)",
      "code_size" : "805",
      "class" : "ConstInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSignatureForError",
      "signature" : "string Mono.CSharp.ConstInitializer:GetSignatureForError ()",
      "code_size" : "89",
      "class" : "ConstInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.ConstInitializer:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "ConstInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.BlockContext:.ctor (Mono.CSharp.IMemberContext,Mono.CSharp.ExplicitBlock,Mono.CSharp.TypeSpec)",
      "code_size" : "142",
      "class" : "BlockContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.BlockContext:.ctor (Mono.CSharp.ResolveContext,Mono.CSharp.ExplicitBlock,Mono.CSharp.TypeSpec)",
      "code_size" : "369",
      "class" : "BlockContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_CurrentTryBlock",
      "signature" : "Mono.CSharp.ExceptionStatement Mono.CSharp.BlockContext:get_CurrentTryBlock ()",
      "code_size" : "20",
      "class" : "BlockContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_CurrentTryBlock",
      "signature" : "void Mono.CSharp.BlockContext:set_CurrentTryBlock (Mono.CSharp.ExceptionStatement)",
      "code_size" : "43",
      "class" : "BlockContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_CurrentTryCatch",
      "signature" : "Mono.CSharp.TryCatch Mono.CSharp.BlockContext:get_CurrentTryCatch ()",
      "code_size" : "20",
      "class" : "BlockContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_CurrentTryCatch",
      "signature" : "void Mono.CSharp.BlockContext:set_CurrentTryCatch (Mono.CSharp.TryCatch)",
      "code_size" : "43",
      "class" : "BlockContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_EnclosingLoop",
      "signature" : "Mono.CSharp.LoopStatement Mono.CSharp.BlockContext:get_EnclosingLoop ()",
      "code_size" : "20",
      "class" : "BlockContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_EnclosingLoop",
      "signature" : "void Mono.CSharp.BlockContext:set_EnclosingLoop (Mono.CSharp.LoopStatement)",
      "code_size" : "43",
      "class" : "BlockContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_EnclosingLoopOrSwitch",
      "signature" : "Mono.CSharp.LoopStatement Mono.CSharp.BlockContext:get_EnclosingLoopOrSwitch ()",
      "code_size" : "20",
      "class" : "BlockContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_EnclosingLoopOrSwitch",
      "signature" : "void Mono.CSharp.BlockContext:set_EnclosingLoopOrSwitch (Mono.CSharp.LoopStatement)",
      "code_size" : "43",
      "class" : "BlockContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Switch",
      "signature" : "Mono.CSharp.Switch Mono.CSharp.BlockContext:get_Switch ()",
      "code_size" : "20",
      "class" : "BlockContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Switch",
      "signature" : "void Mono.CSharp.BlockContext:set_Switch (Mono.CSharp.Switch)",
      "code_size" : "43",
      "class" : "BlockContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ReturnType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.BlockContext:get_ReturnType ()",
      "code_size" : "20",
      "class" : "BlockContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ResolveContext:.ctor (Mono.CSharp.IMemberContext)",
      "code_size" : "148",
      "class" : "ResolveContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ResolveContext:.ctor (Mono.CSharp.IMemberContext,Mono.CSharp.ResolveContext/Options)",
      "code_size" : "43",
      "class" : "ResolveContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_BuiltinTypes",
      "signature" : "Mono.CSharp.BuiltinTypes Mono.CSharp.ResolveContext:get_BuiltinTypes ()",
      "code_size" : "58",
      "class" : "ResolveContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ConstructorBlock",
      "signature" : "Mono.CSharp.ExplicitBlock Mono.CSharp.ResolveContext:get_ConstructorBlock ()",
      "code_size" : "24",
      "class" : "ResolveContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_CurrentIterator",
      "signature" : "Mono.CSharp.Iterator Mono.CSharp.ResolveContext:get_CurrentIterator ()",
      "code_size" : "74",
      "class" : "ResolveContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_CurrentType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.ResolveContext:get_CurrentType ()",
      "code_size" : "36",
      "class" : "ResolveContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_CurrentTypeParameters",
      "signature" : "Mono.CSharp.TypeParameters Mono.CSharp.ResolveContext:get_CurrentTypeParameters ()",
      "code_size" : "36",
      "class" : "ResolveContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_CurrentMemberDefinition",
      "signature" : "Mono.CSharp.MemberCore Mono.CSharp.ResolveContext:get_CurrentMemberDefinition ()",
      "code_size" : "36",
      "class" : "ResolveContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ConstantCheckState",
      "signature" : "bool Mono.CSharp.ResolveContext:get_ConstantCheckState ()",
      "code_size" : "43",
      "class" : "ResolveContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsInProbingMode",
      "signature" : "bool Mono.CSharp.ResolveContext:get_IsInProbingMode ()",
      "code_size" : "45",
      "class" : "ResolveContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsObsolete",
      "signature" : "bool Mono.CSharp.ResolveContext:get_IsObsolete ()",
      "code_size" : "39",
      "class" : "ResolveContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsStatic",
      "signature" : "bool Mono.CSharp.ResolveContext:get_IsStatic ()",
      "code_size" : "36",
      "class" : "ResolveContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsUnsafe",
      "signature" : "bool Mono.CSharp.ResolveContext:get_IsUnsafe ()",
      "code_size" : "79",
      "class" : "ResolveContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsRuntimeBinder",
      "signature" : "bool Mono.CSharp.ResolveContext:get_IsRuntimeBinder ()",
      "code_size" : "40",
      "class" : "ResolveContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsVariableCapturingRequired",
      "signature" : "bool Mono.CSharp.ResolveContext:get_IsVariableCapturingRequired ()",
      "code_size" : "55",
      "class" : "ResolveContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Module",
      "signature" : "Mono.CSharp.ModuleContainer Mono.CSharp.ResolveContext:get_Module ()",
      "code_size" : "36",
      "class" : "ResolveContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Report",
      "signature" : "Mono.CSharp.Report Mono.CSharp.ResolveContext:get_Report ()",
      "code_size" : "40",
      "class" : "ResolveContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MustCaptureVariable",
      "signature" : "bool Mono.CSharp.ResolveContext:MustCaptureVariable (Mono.CSharp.INamedBlockVariable)",
      "code_size" : "514",
      "class" : "ResolveContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "HasSet",
      "signature" : "bool Mono.CSharp.ResolveContext:HasSet (Mono.CSharp.ResolveContext/Options)",
      "code_size" : "41",
      "class" : "ResolveContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "HasAny",
      "signature" : "bool Mono.CSharp.ResolveContext:HasAny (Mono.CSharp.ResolveContext/Options)",
      "code_size" : "49",
      "class" : "ResolveContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Set",
      "signature" : "Mono.CSharp.ResolveContext/FlagsHandle Mono.CSharp.ResolveContext:Set (Mono.CSharp.ResolveContext/Options)",
      "code_size" : "130",
      "class" : "ResolveContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "With",
      "signature" : "Mono.CSharp.ResolveContext/FlagsHandle Mono.CSharp.ResolveContext:With (Mono.CSharp.ResolveContext/Options,bool)",
      "code_size" : "151",
      "class" : "ResolveContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSignatureForError",
      "signature" : "string Mono.CSharp.ResolveContext:GetSignatureForError ()",
      "code_size" : "36",
      "class" : "ResolveContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "LookupExtensionMethod",
      "signature" : "Mono.CSharp.ExtensionMethodCandidates Mono.CSharp.ResolveContext:LookupExtensionMethod (string,int)",
      "code_size" : "56",
      "class" : "ResolveContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "LookupNamespaceOrType",
      "signature" : "Mono.CSharp.FullNamedExpression Mono.CSharp.ResolveContext:LookupNamespaceOrType (string,int,Mono.CSharp.LookupMode,Mono.CSharp.Location)",
      "code_size" : "76",
      "class" : "ResolveContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "LookupNamespaceAlias",
      "signature" : "Mono.CSharp.FullNamedExpression Mono.CSharp.ResolveContext:LookupNamespaceAlias (string)",
      "code_size" : "46",
      "class" : "ResolveContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ResolveContext/FlagsHandle:.ctor (Mono.CSharp.ResolveContext,Mono.CSharp.ResolveContext/Options)",
      "code_size" : "31",
      "class" : "FlagsHandle",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ResolveContext/FlagsHandle:.ctor (Mono.CSharp.ResolveContext,Mono.CSharp.ResolveContext/Options,Mono.CSharp.ResolveContext/Options)",
      "code_size" : "105",
      "class" : "FlagsHandle",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Dispose",
      "signature" : "void Mono.CSharp.ResolveContext/FlagsHandle:Dispose ()",
      "code_size" : "45",
      "class" : "FlagsHandle",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.FlowAnalysisContext:.ctor (Mono.CSharp.CompilerContext,Mono.CSharp.ParametersBlock,int)",
      "code_size" : "163",
      "class" : "FlowAnalysisContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_DefiniteAssignment",
      "signature" : "Mono.CSharp.DefiniteAssignmentBitSet Mono.CSharp.FlowAnalysisContext:get_DefiniteAssignment ()",
      "code_size" : "20",
      "class" : "FlowAnalysisContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_DefiniteAssignment",
      "signature" : "void Mono.CSharp.FlowAnalysisContext:set_DefiniteAssignment (Mono.CSharp.DefiniteAssignmentBitSet)",
      "code_size" : "43",
      "class" : "FlowAnalysisContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_DefiniteAssignmentOnTrue",
      "signature" : "Mono.CSharp.DefiniteAssignmentBitSet Mono.CSharp.FlowAnalysisContext:get_DefiniteAssignmentOnTrue ()",
      "code_size" : "20",
      "class" : "FlowAnalysisContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_DefiniteAssignmentOnTrue",
      "signature" : "void Mono.CSharp.FlowAnalysisContext:set_DefiniteAssignmentOnTrue (Mono.CSharp.DefiniteAssignmentBitSet)",
      "code_size" : "43",
      "class" : "FlowAnalysisContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_DefiniteAssignmentOnFalse",
      "signature" : "Mono.CSharp.DefiniteAssignmentBitSet Mono.CSharp.FlowAnalysisContext:get_DefiniteAssignmentOnFalse ()",
      "code_size" : "20",
      "class" : "FlowAnalysisContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_DefiniteAssignmentOnFalse",
      "signature" : "void Mono.CSharp.FlowAnalysisContext:set_DefiniteAssignmentOnFalse (Mono.CSharp.DefiniteAssignmentBitSet)",
      "code_size" : "43",
      "class" : "FlowAnalysisContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_LabelStack",
      "signature" : "System.Collections.Generic.Dictionary`2<Mono.CSharp.Statement, System.Collections.Generic.List`1<Mono.CSharp.DefiniteAssignmentBitSet>> Mono.CSharp.FlowAnalysisContext:get_LabelStack ()",
      "code_size" : "20",
      "class" : "FlowAnalysisContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_LabelStack",
      "signature" : "void Mono.CSharp.FlowAnalysisContext:set_LabelStack (System.Collections.Generic.Dictionary`2<Mono.CSharp.Statement, System.Collections.Generic.List`1<Mono.CSharp.DefiniteAssignmentBitSet>>)",
      "code_size" : "43",
      "class" : "FlowAnalysisContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ParametersBlock",
      "signature" : "Mono.CSharp.ParametersBlock Mono.CSharp.FlowAnalysisContext:get_ParametersBlock ()",
      "code_size" : "20",
      "class" : "FlowAnalysisContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_ParametersBlock",
      "signature" : "void Mono.CSharp.FlowAnalysisContext:set_ParametersBlock (Mono.CSharp.ParametersBlock)",
      "code_size" : "43",
      "class" : "FlowAnalysisContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Report",
      "signature" : "Mono.CSharp.Report Mono.CSharp.FlowAnalysisContext:get_Report ()",
      "code_size" : "30",
      "class" : "FlowAnalysisContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_SwitchInitialDefinitiveAssignment",
      "signature" : "Mono.CSharp.DefiniteAssignmentBitSet Mono.CSharp.FlowAnalysisContext:get_SwitchInitialDefinitiveAssignment ()",
      "code_size" : "20",
      "class" : "FlowAnalysisContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_SwitchInitialDefinitiveAssignment",
      "signature" : "void Mono.CSharp.FlowAnalysisContext:set_SwitchInitialDefinitiveAssignment (Mono.CSharp.DefiniteAssignmentBitSet)",
      "code_size" : "43",
      "class" : "FlowAnalysisContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_TryFinally",
      "signature" : "Mono.CSharp.TryFinally Mono.CSharp.FlowAnalysisContext:get_TryFinally ()",
      "code_size" : "20",
      "class" : "FlowAnalysisContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_TryFinally",
      "signature" : "void Mono.CSharp.FlowAnalysisContext:set_TryFinally (Mono.CSharp.TryFinally)",
      "code_size" : "43",
      "class" : "FlowAnalysisContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_UnreachableReported",
      "signature" : "bool Mono.CSharp.FlowAnalysisContext:get_UnreachableReported ()",
      "code_size" : "20",
      "class" : "FlowAnalysisContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_UnreachableReported",
      "signature" : "void Mono.CSharp.FlowAnalysisContext:set_UnreachableReported (bool)",
      "code_size" : "31",
      "class" : "FlowAnalysisContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddReachedLabel",
      "signature" : "bool Mono.CSharp.FlowAnalysisContext:AddReachedLabel (Mono.CSharp.Statement)",
      "code_size" : "596",
      "class" : "FlowAnalysisContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "BranchDefiniteAssignment",
      "signature" : "Mono.CSharp.DefiniteAssignmentBitSet Mono.CSharp.FlowAnalysisContext:BranchDefiniteAssignment ()",
      "code_size" : "22",
      "class" : "FlowAnalysisContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "BranchDefiniteAssignment",
      "signature" : "Mono.CSharp.DefiniteAssignmentBitSet Mono.CSharp.FlowAnalysisContext:BranchDefiniteAssignment (Mono.CSharp.DefiniteAssignmentBitSet)",
      "code_size" : "111",
      "class" : "FlowAnalysisContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsDefinitelyAssigned",
      "signature" : "bool Mono.CSharp.FlowAnalysisContext:IsDefinitelyAssigned (Mono.CSharp.VariableInfo)",
      "code_size" : "41",
      "class" : "FlowAnalysisContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsStructFieldDefinitelyAssigned",
      "signature" : "bool Mono.CSharp.FlowAnalysisContext:IsStructFieldDefinitelyAssigned (Mono.CSharp.VariableInfo,string)",
      "code_size" : "53",
      "class" : "FlowAnalysisContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetVariableAssigned",
      "signature" : "void Mono.CSharp.FlowAnalysisContext:SetVariableAssigned (Mono.CSharp.VariableInfo,bool)",
      "code_size" : "53",
      "class" : "FlowAnalysisContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetStructFieldAssigned",
      "signature" : "void Mono.CSharp.FlowAnalysisContext:SetStructFieldAssigned (Mono.CSharp.VariableInfo,string)",
      "code_size" : "53",
      "class" : "FlowAnalysisContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.CloneContext:.ctor ()",
      "code_size" : "75",
      "class" : "CloneContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddBlockMap",
      "signature" : "void Mono.CSharp.CloneContext:AddBlockMap (Mono.CSharp.Block,Mono.CSharp.Block)",
      "code_size" : "51",
      "class" : "CloneContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "LookupBlock",
      "signature" : "Mono.CSharp.Block Mono.CSharp.CloneContext:LookupBlock (Mono.CSharp.Block)",
      "code_size" : "150",
      "class" : "CloneContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "RemapBlockCopy",
      "signature" : "Mono.CSharp.Block Mono.CSharp.CloneContext:RemapBlockCopy (Mono.CSharp.Block)",
      "code_size" : "70",
      "class" : "CloneContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.CompilerContext:.ctor (Mono.CSharp.CompilerSettings,Mono.CSharp.ReportPrinter)",
      "code_size" : "211",
      "class" : "CompilerContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_BuiltinTypes",
      "signature" : "Mono.CSharp.BuiltinTypes Mono.CSharp.CompilerContext:get_BuiltinTypes ()",
      "code_size" : "20",
      "class" : "CompilerContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsRuntimeBinder",
      "signature" : "bool Mono.CSharp.CompilerContext:get_IsRuntimeBinder ()",
      "code_size" : "20",
      "class" : "CompilerContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_IsRuntimeBinder",
      "signature" : "void Mono.CSharp.CompilerContext:set_IsRuntimeBinder (bool)",
      "code_size" : "31",
      "class" : "CompilerContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Report",
      "signature" : "Mono.CSharp.Report Mono.CSharp.CompilerContext:get_Report ()",
      "code_size" : "20",
      "class" : "CompilerContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Settings",
      "signature" : "Mono.CSharp.CompilerSettings Mono.CSharp.CompilerContext:get_Settings ()",
      "code_size" : "20",
      "class" : "CompilerContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_SourceFiles",
      "signature" : "System.Collections.Generic.List`1<Mono.CSharp.SourceFile> Mono.CSharp.CompilerContext:get_SourceFiles ()",
      "code_size" : "33",
      "class" : "CompilerContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_TimeReporter",
      "signature" : "Mono.CSharp.TimeReporter Mono.CSharp.CompilerContext:get_TimeReporter ()",
      "code_size" : "20",
      "class" : "CompilerContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_TimeReporter",
      "signature" : "void Mono.CSharp.CompilerContext:set_TimeReporter (Mono.CSharp.TimeReporter)",
      "code_size" : "43",
      "class" : "CompilerContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "LookupFile",
      "signature" : "Mono.CSharp.SourceFile Mono.CSharp.CompilerContext:LookupFile (Mono.CSharp.CompilationSourceFile,string)",
      "code_size" : "564",
      "class" : "CompilerContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".cctor",
      "signature" : "void Mono.CSharp.CompilerContext:.cctor ()",
      "code_size" : "54",
      "class" : "CompilerContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.BuilderContext:.ctor ()",
      "code_size" : "9",
      "class" : "BuilderContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "HasSet",
      "signature" : "bool Mono.CSharp.BuilderContext:HasSet (Mono.CSharp.BuilderContext/Options)",
      "code_size" : "41",
      "class" : "BuilderContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "With",
      "signature" : "Mono.CSharp.BuilderContext/FlagsHandle Mono.CSharp.BuilderContext:With (Mono.CSharp.BuilderContext/Options,bool)",
      "code_size" : "151",
      "class" : "BuilderContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.BuilderContext/FlagsHandle:.ctor (Mono.CSharp.BuilderContext,Mono.CSharp.BuilderContext/Options)",
      "code_size" : "31",
      "class" : "FlagsHandle",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.BuilderContext/FlagsHandle:.ctor (Mono.CSharp.BuilderContext,Mono.CSharp.BuilderContext/Options,Mono.CSharp.BuilderContext/Options)",
      "code_size" : "105",
      "class" : "FlagsHandle",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Dispose",
      "signature" : "void Mono.CSharp.BuilderContext/FlagsHandle:Dispose ()",
      "code_size" : "45",
      "class" : "FlagsHandle",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ParserSession:.ctor ()",
      "code_size" : "243",
      "class" : "ParserSession",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_LocationsBag",
      "signature" : "Mono.CSharp.LocationsBag Mono.CSharp.ParserSession:get_LocationsBag ()",
      "code_size" : "20",
      "class" : "ParserSession",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_LocationsBag",
      "signature" : "void Mono.CSharp.ParserSession:set_LocationsBag (Mono.CSharp.LocationsBag)",
      "code_size" : "43",
      "class" : "ParserSession",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_UseJayGlobalArrays",
      "signature" : "bool Mono.CSharp.ParserSession:get_UseJayGlobalArrays ()",
      "code_size" : "20",
      "class" : "ParserSession",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_UseJayGlobalArrays",
      "signature" : "void Mono.CSharp.ParserSession:set_UseJayGlobalArrays (bool)",
      "code_size" : "31",
      "class" : "ParserSession",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_LocatedTokens",
      "signature" : "Mono.CSharp.LocatedToken[] Mono.CSharp.ParserSession:get_LocatedTokens ()",
      "code_size" : "20",
      "class" : "ParserSession",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_LocatedTokens",
      "signature" : "void Mono.CSharp.ParserSession:set_LocatedTokens (Mono.CSharp.LocatedToken[])",
      "code_size" : "43",
      "class" : "ParserSession",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetChecksumAlgorithm",
      "signature" : "System.Security.Cryptography.MD5 Mono.CSharp.ParserSession:GetChecksumAlgorithm ()",
      "code_size" : "96",
      "class" : "ParserSession",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ArrayToIList",
      "signature" : "bool Mono.CSharp.Convert:ArrayToIList (Mono.CSharp.ArrayContainer,Mono.CSharp.TypeSpec,bool)",
      "code_size" : "208",
      "class" : "Convert",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IList_To_Array",
      "signature" : "bool Mono.CSharp.Convert:IList_To_Array (Mono.CSharp.TypeSpec,Mono.CSharp.ArrayContainer)",
      "code_size" : "183",
      "class" : "Convert",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ImplicitTypeParameterConversion",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Convert:ImplicitTypeParameterConversion (Mono.CSharp.Expression,Mono.CSharp.TypeParameterSpec,Mono.CSharp.TypeSpec)",
      "code_size" : "854",
      "class" : "Convert",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ExplicitTypeParameterConversionFromT",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Convert:ExplicitTypeParameterConversionFromT (Mono.CSharp.Expression,Mono.CSharp.TypeSpec,Mono.CSharp.TypeSpec)",
      "code_size" : "312",
      "class" : "Convert",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ExplicitTypeParameterConversionToT",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Convert:ExplicitTypeParameterConversionToT (Mono.CSharp.Expression,Mono.CSharp.TypeSpec,Mono.CSharp.TypeParameterSpec)",
      "code_size" : "177",
      "class" : "Convert",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ImplicitReferenceConversion",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Convert:ImplicitReferenceConversion (Mono.CSharp.Expression,Mono.CSharp.TypeSpec,bool)",
      "code_size" : "287",
      "class" : "Convert",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ImplicitReferenceConversionExists",
      "signature" : "bool Mono.CSharp.Convert:ImplicitReferenceConversionExists (Mono.CSharp.TypeSpec,Mono.CSharp.TypeSpec)",
      "code_size" : "28",
      "class" : "Convert",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ImplicitReferenceConversionExists",
      "signature" : "bool Mono.CSharp.Convert:ImplicitReferenceConversionExists (Mono.CSharp.TypeSpec,Mono.CSharp.TypeSpec,bool)",
      "code_size" : "1237",
      "class" : "Convert",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ImplicitBoxingConversion",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Convert:ImplicitBoxingConversion (Mono.CSharp.Expression,Mono.CSharp.TypeSpec,Mono.CSharp.TypeSpec)",
      "code_size" : "548",
      "class" : "Convert",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ImplicitNulableConversion",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Convert:ImplicitNulableConversion (Mono.CSharp.ResolveContext,Mono.CSharp.Expression,Mono.CSharp.TypeSpec)",
      "code_size" : "703",
      "class" : "Convert",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ImplicitNumericConversion",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Convert:ImplicitNumericConversion (Mono.CSharp.Expression,Mono.CSharp.TypeSpec)",
      "code_size" : "46",
      "class" : "Convert",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ImplicitNumericConversionExists",
      "signature" : "bool Mono.CSharp.Convert:ImplicitNumericConversionExists (Mono.CSharp.TypeSpec,Mono.CSharp.TypeSpec)",
      "code_size" : "55",
      "class" : "Convert",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ImplicitNumericConversion",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Convert:ImplicitNumericConversion (Mono.CSharp.Expression,Mono.CSharp.TypeSpec,Mono.CSharp.TypeSpec)",
      "code_size" : "7831",
      "class" : "Convert",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ImplicitConversionExists",
      "signature" : "bool Mono.CSharp.Convert:ImplicitConversionExists (Mono.CSharp.ResolveContext,Mono.CSharp.Expression,Mono.CSharp.TypeSpec)",
      "code_size" : "375",
      "class" : "Convert",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ImplicitStandardConversionExists",
      "signature" : "bool Mono.CSharp.Convert:ImplicitStandardConversionExists (Mono.CSharp.ResolveContext,Mono.CSharp.Expression,Mono.CSharp.TypeSpec)",
      "code_size" : "384",
      "class" : "Convert",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ImplicitStandardConversionExists",
      "signature" : "bool Mono.CSharp.Convert:ImplicitStandardConversionExists (Mono.CSharp.Expression,Mono.CSharp.TypeSpec)",
      "code_size" : "1013",
      "class" : "Convert",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "FindMostEncompassedType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.Convert:FindMostEncompassedType (System.Collections.Generic.IList`1<Mono.CSharp.TypeSpec>)",
      "code_size" : "463",
      "class" : "Convert",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "FindMostEncompassingType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.Convert:FindMostEncompassingType (System.Collections.Generic.IList`1<Mono.CSharp.TypeSpec>)",
      "code_size" : "394",
      "class" : "Convert",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "FindMostSpecificSource",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.Convert:FindMostSpecificSource (Mono.CSharp.ResolveContext,System.Collections.Generic.List`1<Mono.CSharp.MethodSpec>,Mono.CSharp.TypeSpec,Mono.CSharp.Expression,bool)",
      "code_size" : "508",
      "class" : "Convert",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "FindMostSpecificTarget",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.Convert:FindMostSpecificTarget (System.Collections.Generic.IList`1<Mono.CSharp.MethodSpec>,Mono.CSharp.TypeSpec,bool)",
      "code_size" : "724",
      "class" : "Convert",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ImplicitUserConversion",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Convert:ImplicitUserConversion (Mono.CSharp.ResolveContext,Mono.CSharp.Expression,Mono.CSharp.TypeSpec,Mono.CSharp.Location)",
      "code_size" : "43",
      "class" : "Convert",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ExplicitUserConversion",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Convert:ExplicitUserConversion (Mono.CSharp.ResolveContext,Mono.CSharp.Expression,Mono.CSharp.TypeSpec,Mono.CSharp.Location)",
      "code_size" : "40",
      "class" : "Convert",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "FindApplicableUserDefinedConversionOperators",
      "signature" : "void Mono.CSharp.Convert:FindApplicableUserDefinedConversionOperators (Mono.CSharp.ResolveContext,System.Collections.Generic.IList`1<Mono.CSharp.MemberSpec>,Mono.CSharp.Expression,Mono.CSharp.TypeSpec,Mono.CSharp.Convert/UserConversionRestriction,System.Collections.Generic.List`1<Mono.CSharp.MethodSpec>&)",
      "code_size" : "850",
      "class" : "Convert",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "UserDefinedConversion",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Convert:UserDefinedConversion (Mono.CSharp.ResolveContext,Mono.CSharp.Expression,Mono.CSharp.TypeSpec,Mono.CSharp.Convert/UserConversionRestriction,Mono.CSharp.Location)",
      "code_size" : "2304",
      "class" : "Convert",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ImplicitConversion",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Convert:ImplicitConversion (Mono.CSharp.ResolveContext,Mono.CSharp.Expression,Mono.CSharp.TypeSpec,Mono.CSharp.Location)",
      "code_size" : "165",
      "class" : "Convert",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ImplicitConversionStandard",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Convert:ImplicitConversionStandard (Mono.CSharp.ResolveContext,Mono.CSharp.Expression,Mono.CSharp.TypeSpec,Mono.CSharp.Location)",
      "code_size" : "41",
      "class" : "Convert",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ImplicitConversionStandard",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Convert:ImplicitConversionStandard (Mono.CSharp.ResolveContext,Mono.CSharp.Expression,Mono.CSharp.TypeSpec,Mono.CSharp.Location,bool)",
      "code_size" : "2062",
      "class" : "Convert",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ImplicitConversionRequired",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Convert:ImplicitConversionRequired (Mono.CSharp.ResolveContext,Mono.CSharp.Expression,Mono.CSharp.TypeSpec,Mono.CSharp.Location)",
      "code_size" : "93",
      "class" : "Convert",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ExplicitNumericConversion",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Convert:ExplicitNumericConversion (Mono.CSharp.ResolveContext,Mono.CSharp.Expression,Mono.CSharp.TypeSpec)",
      "code_size" : "5709",
      "class" : "Convert",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ExplicitReferenceConversionExists",
      "signature" : "bool Mono.CSharp.Convert:ExplicitReferenceConversionExists (Mono.CSharp.TypeSpec,Mono.CSharp.TypeSpec)",
      "code_size" : "150",
      "class" : "Convert",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ExplicitReferenceConversion",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Convert:ExplicitReferenceConversion (Mono.CSharp.Expression,Mono.CSharp.TypeSpec,Mono.CSharp.TypeSpec)",
      "code_size" : "2735",
      "class" : "Convert",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ExplicitConversionCore",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Convert:ExplicitConversionCore (Mono.CSharp.ResolveContext,Mono.CSharp.Expression,Mono.CSharp.TypeSpec,Mono.CSharp.Location)",
      "code_size" : "900",
      "class" : "Convert",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ExplicitUnsafe",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Convert:ExplicitUnsafe (Mono.CSharp.Expression,Mono.CSharp.TypeSpec)",
      "code_size" : "1636",
      "class" : "Convert",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ExplicitConversionStandard",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Convert:ExplicitConversionStandard (Mono.CSharp.ResolveContext,Mono.CSharp.Expression,Mono.CSharp.TypeSpec,Mono.CSharp.Location)",
      "code_size" : "435",
      "class" : "Convert",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ExplicitConversion",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Convert:ExplicitConversion (Mono.CSharp.ResolveContext,Mono.CSharp.Expression,Mono.CSharp.TypeSpec,Mono.CSharp.Location)",
      "code_size" : "1000",
      "class" : "Convert",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.CSharpParser:.ctor (Mono.CSharp.SeekableStreamReader,Mono.CSharp.CompilationSourceFile,Mono.CSharp.ParserSession)",
      "code_size" : "77",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.CSharpParser:.ctor (Mono.CSharp.SeekableStreamReader,Mono.CSharp.CompilationSourceFile,Mono.CSharp.Report,Mono.CSharp.ParserSession)",
      "code_size" : "613",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "yyerror",
      "signature" : "void Mono.CSharp.CSharpParser:yyerror (string)",
      "code_size" : "25",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "yyerror",
      "signature" : "void Mono.CSharp.CSharpParser:yyerror (string,string[])",
      "code_size" : "274",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "yyExpectingTokens",
      "signature" : "int[] Mono.CSharp.CSharpParser:yyExpectingTokens (int)",
      "code_size" : "766",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "yyExpecting",
      "signature" : "string[] Mono.CSharp.CSharpParser:yyExpecting (int)",
      "code_size" : "189",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "yyparse",
      "signature" : "object Mono.CSharp.CSharpParser:yyparse (Mono.CSharp.yyParser.yyInput,object)",
      "code_size" : "23",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "yyDefault",
      "signature" : "object Mono.CSharp.CSharpParser:yyDefault (object)",
      "code_size" : "17",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "yyparse",
      "signature" : "object Mono.CSharp.CSharpParser:yyparse (Mono.CSharp.yyParser.yyInput)",
      "code_size" : "36345",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_6",
      "signature" : "void Mono.CSharp.CSharpParser:case_6 ()",
      "code_size" : "294",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_7",
      "signature" : "void Mono.CSharp.CSharpParser:case_7 ()",
      "code_size" : "496",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_8",
      "signature" : "void Mono.CSharp.CSharpParser:case_8 ()",
      "code_size" : "128",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_13",
      "signature" : "void Mono.CSharp.CSharpParser:case_13 ()",
      "code_size" : "624",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_17",
      "signature" : "void Mono.CSharp.CSharpParser:case_17 ()",
      "code_size" : "51",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_18",
      "signature" : "void Mono.CSharp.CSharpParser:case_18 ()",
      "code_size" : "590",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_19",
      "signature" : "void Mono.CSharp.CSharpParser:case_19 ()",
      "code_size" : "700",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_20",
      "signature" : "void Mono.CSharp.CSharpParser:case_20 ()",
      "code_size" : "40",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_23",
      "signature" : "void Mono.CSharp.CSharpParser:case_23 ()",
      "code_size" : "646",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_24",
      "signature" : "void Mono.CSharp.CSharpParser:case_24 ()",
      "code_size" : "51",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_25",
      "signature" : "void Mono.CSharp.CSharpParser:case_25 ()",
      "code_size" : "136",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_26",
      "signature" : "void Mono.CSharp.CSharpParser:case_26 ()",
      "code_size" : "317",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_29",
      "signature" : "void Mono.CSharp.CSharpParser:case_29 ()",
      "code_size" : "40",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_30",
      "signature" : "void Mono.CSharp.CSharpParser:case_30 ()",
      "code_size" : "245",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_31",
      "signature" : "void Mono.CSharp.CSharpParser:case_31 ()",
      "code_size" : "336",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_32",
      "signature" : "void Mono.CSharp.CSharpParser:case_32 ()",
      "code_size" : "143",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_45",
      "signature" : "void Mono.CSharp.CSharpParser:case_45 ()",
      "code_size" : "389",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_47",
      "signature" : "void Mono.CSharp.CSharpParser:case_47 ()",
      "code_size" : "257",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_55",
      "signature" : "void Mono.CSharp.CSharpParser:case_55 ()",
      "code_size" : "203",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_56",
      "signature" : "void Mono.CSharp.CSharpParser:case_56 ()",
      "code_size" : "327",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_57",
      "signature" : "void Mono.CSharp.CSharpParser:case_57 ()",
      "code_size" : "30",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_58",
      "signature" : "void Mono.CSharp.CSharpParser:case_58 ()",
      "code_size" : "112",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_59",
      "signature" : "void Mono.CSharp.CSharpParser:case_59 ()",
      "code_size" : "219",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_60",
      "signature" : "void Mono.CSharp.CSharpParser:case_60 ()",
      "code_size" : "274",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_61",
      "signature" : "void Mono.CSharp.CSharpParser:case_61 ()",
      "code_size" : "148",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_62",
      "signature" : "void Mono.CSharp.CSharpParser:case_62 ()",
      "code_size" : "451",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_63",
      "signature" : "void Mono.CSharp.CSharpParser:case_63 ()",
      "code_size" : "167",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_64",
      "signature" : "void Mono.CSharp.CSharpParser:case_64 ()",
      "code_size" : "235",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_68",
      "signature" : "void Mono.CSharp.CSharpParser:case_68 ()",
      "code_size" : "272",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_70",
      "signature" : "void Mono.CSharp.CSharpParser:case_70 ()",
      "code_size" : "554",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_75",
      "signature" : "void Mono.CSharp.CSharpParser:case_75 ()",
      "code_size" : "292",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_76",
      "signature" : "void Mono.CSharp.CSharpParser:case_76 ()",
      "code_size" : "295",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_77",
      "signature" : "void Mono.CSharp.CSharpParser:case_77 ()",
      "code_size" : "842",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_78",
      "signature" : "void Mono.CSharp.CSharpParser:case_78 ()",
      "code_size" : "403",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_81",
      "signature" : "void Mono.CSharp.CSharpParser:case_81 ()",
      "code_size" : "40",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_83",
      "signature" : "void Mono.CSharp.CSharpParser:case_83 ()",
      "code_size" : "351",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_84",
      "signature" : "void Mono.CSharp.CSharpParser:case_84 ()",
      "code_size" : "597",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_91",
      "signature" : "void Mono.CSharp.CSharpParser:case_91 ()",
      "code_size" : "47",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_92",
      "signature" : "void Mono.CSharp.CSharpParser:case_92 ()",
      "code_size" : "47",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_106",
      "signature" : "void Mono.CSharp.CSharpParser:case_106 ()",
      "code_size" : "140",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_107",
      "signature" : "void Mono.CSharp.CSharpParser:case_107 ()",
      "code_size" : "303",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_108",
      "signature" : "void Mono.CSharp.CSharpParser:case_108 ()",
      "code_size" : "302",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_110",
      "signature" : "void Mono.CSharp.CSharpParser:case_110 ()",
      "code_size" : "485",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_111",
      "signature" : "void Mono.CSharp.CSharpParser:case_111 ()",
      "code_size" : "494",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_112",
      "signature" : "void Mono.CSharp.CSharpParser:case_112 ()",
      "code_size" : "51",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_113",
      "signature" : "void Mono.CSharp.CSharpParser:case_113 ()",
      "code_size" : "73",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_114",
      "signature" : "void Mono.CSharp.CSharpParser:case_114 ()",
      "code_size" : "112",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_116",
      "signature" : "void Mono.CSharp.CSharpParser:case_116 ()",
      "code_size" : "759",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_117",
      "signature" : "void Mono.CSharp.CSharpParser:case_117 ()",
      "code_size" : "255",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_118",
      "signature" : "void Mono.CSharp.CSharpParser:case_118 ()",
      "code_size" : "452",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_123",
      "signature" : "void Mono.CSharp.CSharpParser:case_123 ()",
      "code_size" : "370",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_125",
      "signature" : "void Mono.CSharp.CSharpParser:case_125 ()",
      "code_size" : "294",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_126",
      "signature" : "void Mono.CSharp.CSharpParser:case_126 ()",
      "code_size" : "101",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_129",
      "signature" : "void Mono.CSharp.CSharpParser:case_129 ()",
      "code_size" : "807",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_130",
      "signature" : "void Mono.CSharp.CSharpParser:case_130 ()",
      "code_size" : "144",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_131",
      "signature" : "void Mono.CSharp.CSharpParser:case_131 ()",
      "code_size" : "704",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_132",
      "signature" : "void Mono.CSharp.CSharpParser:case_132 ()",
      "code_size" : "288",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_135",
      "signature" : "void Mono.CSharp.CSharpParser:case_135 ()",
      "code_size" : "149",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_136",
      "signature" : "void Mono.CSharp.CSharpParser:case_136 ()",
      "code_size" : "226",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_141",
      "signature" : "void Mono.CSharp.CSharpParser:case_141 ()",
      "code_size" : "282",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_143",
      "signature" : "void Mono.CSharp.CSharpParser:case_143 ()",
      "code_size" : "392",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_148",
      "signature" : "void Mono.CSharp.CSharpParser:case_148 ()",
      "code_size" : "370",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_150",
      "signature" : "void Mono.CSharp.CSharpParser:case_150 ()",
      "code_size" : "297",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_151",
      "signature" : "void Mono.CSharp.CSharpParser:case_151 ()",
      "code_size" : "101",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_154",
      "signature" : "void Mono.CSharp.CSharpParser:case_154 ()",
      "code_size" : "40",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_155",
      "signature" : "void Mono.CSharp.CSharpParser:case_155 ()",
      "code_size" : "54",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_156",
      "signature" : "void Mono.CSharp.CSharpParser:case_156 ()",
      "code_size" : "600",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_158",
      "signature" : "void Mono.CSharp.CSharpParser:case_158 ()",
      "code_size" : "749",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_159",
      "signature" : "void Mono.CSharp.CSharpParser:case_159 ()",
      "code_size" : "408",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_161",
      "signature" : "void Mono.CSharp.CSharpParser:case_161 ()",
      "code_size" : "40",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_163",
      "signature" : "void Mono.CSharp.CSharpParser:case_163 ()",
      "code_size" : "939",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_164",
      "signature" : "void Mono.CSharp.CSharpParser:case_164 ()",
      "code_size" : "827",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_165",
      "signature" : "void Mono.CSharp.CSharpParser:case_165 ()",
      "code_size" : "624",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_170",
      "signature" : "void Mono.CSharp.CSharpParser:case_170 ()",
      "code_size" : "205",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_171",
      "signature" : "void Mono.CSharp.CSharpParser:case_171 ()",
      "code_size" : "318",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_174",
      "signature" : "void Mono.CSharp.CSharpParser:case_174 ()",
      "code_size" : "228",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_175",
      "signature" : "void Mono.CSharp.CSharpParser:case_175 ()",
      "code_size" : "341",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_176",
      "signature" : "void Mono.CSharp.CSharpParser:case_176 ()",
      "code_size" : "341",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_177",
      "signature" : "void Mono.CSharp.CSharpParser:case_177 ()",
      "code_size" : "452",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_178",
      "signature" : "void Mono.CSharp.CSharpParser:case_178 ()",
      "code_size" : "536",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_179",
      "signature" : "void Mono.CSharp.CSharpParser:case_179 ()",
      "code_size" : "348",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_180",
      "signature" : "void Mono.CSharp.CSharpParser:case_180 ()",
      "code_size" : "452",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_183",
      "signature" : "void Mono.CSharp.CSharpParser:case_183 ()",
      "code_size" : "74",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_184",
      "signature" : "void Mono.CSharp.CSharpParser:case_184 ()",
      "code_size" : "253",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_185",
      "signature" : "void Mono.CSharp.CSharpParser:case_185 ()",
      "code_size" : "593",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_186",
      "signature" : "void Mono.CSharp.CSharpParser:case_186 ()",
      "code_size" : "550",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_187",
      "signature" : "void Mono.CSharp.CSharpParser:case_187 ()",
      "code_size" : "621",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_188",
      "signature" : "void Mono.CSharp.CSharpParser:case_188 ()",
      "code_size" : "282",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_189",
      "signature" : "void Mono.CSharp.CSharpParser:case_189 ()",
      "code_size" : "493",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_191",
      "signature" : "void Mono.CSharp.CSharpParser:case_191 ()",
      "code_size" : "1405",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_195",
      "signature" : "void Mono.CSharp.CSharpParser:case_195 ()",
      "code_size" : "725",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_196",
      "signature" : "void Mono.CSharp.CSharpParser:case_196 ()",
      "code_size" : "179",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_197",
      "signature" : "void Mono.CSharp.CSharpParser:case_197 ()",
      "code_size" : "179",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_198",
      "signature" : "void Mono.CSharp.CSharpParser:case_198 ()",
      "code_size" : "268",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_199",
      "signature" : "void Mono.CSharp.CSharpParser:case_199 ()",
      "code_size" : "435",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_200",
      "signature" : "void Mono.CSharp.CSharpParser:case_200 ()",
      "code_size" : "546",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_201",
      "signature" : "void Mono.CSharp.CSharpParser:case_201 ()",
      "code_size" : "353",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_202",
      "signature" : "void Mono.CSharp.CSharpParser:case_202 ()",
      "code_size" : "147",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_203",
      "signature" : "void Mono.CSharp.CSharpParser:case_203 ()",
      "code_size" : "361",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_205",
      "signature" : "void Mono.CSharp.CSharpParser:case_205 ()",
      "code_size" : "147",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_206",
      "signature" : "void Mono.CSharp.CSharpParser:case_206 ()",
      "code_size" : "97",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_207",
      "signature" : "void Mono.CSharp.CSharpParser:case_207 ()",
      "code_size" : "736",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_208",
      "signature" : "void Mono.CSharp.CSharpParser:case_208 ()",
      "code_size" : "93",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_209",
      "signature" : "void Mono.CSharp.CSharpParser:case_209 ()",
      "code_size" : "30",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_211",
      "signature" : "void Mono.CSharp.CSharpParser:case_211 ()",
      "code_size" : "130",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_212",
      "signature" : "void Mono.CSharp.CSharpParser:case_212 ()",
      "code_size" : "1105",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_214",
      "signature" : "void Mono.CSharp.CSharpParser:case_214 ()",
      "code_size" : "149",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_215",
      "signature" : "void Mono.CSharp.CSharpParser:case_215 ()",
      "code_size" : "368",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_219",
      "signature" : "void Mono.CSharp.CSharpParser:case_219 ()",
      "code_size" : "1167",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_220",
      "signature" : "void Mono.CSharp.CSharpParser:case_220 ()",
      "code_size" : "278",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_222",
      "signature" : "void Mono.CSharp.CSharpParser:case_222 ()",
      "code_size" : "286",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_227",
      "signature" : "void Mono.CSharp.CSharpParser:case_227 ()",
      "code_size" : "341",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_228",
      "signature" : "void Mono.CSharp.CSharpParser:case_228 ()",
      "code_size" : "1220",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_229",
      "signature" : "void Mono.CSharp.CSharpParser:case_229 ()",
      "code_size" : "452",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_230",
      "signature" : "void Mono.CSharp.CSharpParser:case_230 ()",
      "code_size" : "1493",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_231",
      "signature" : "void Mono.CSharp.CSharpParser:case_231 ()",
      "code_size" : "452",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_233",
      "signature" : "void Mono.CSharp.CSharpParser:case_233 ()",
      "code_size" : "27",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_234",
      "signature" : "void Mono.CSharp.CSharpParser:case_234 ()",
      "code_size" : "52",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_236",
      "signature" : "void Mono.CSharp.CSharpParser:case_236 ()",
      "code_size" : "474",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_237",
      "signature" : "void Mono.CSharp.CSharpParser:case_237 ()",
      "code_size" : "336",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_238",
      "signature" : "void Mono.CSharp.CSharpParser:case_238 ()",
      "code_size" : "73",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_239",
      "signature" : "void Mono.CSharp.CSharpParser:case_239 ()",
      "code_size" : "109",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_243",
      "signature" : "void Mono.CSharp.CSharpParser:case_243 ()",
      "code_size" : "47",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_244",
      "signature" : "void Mono.CSharp.CSharpParser:case_244 ()",
      "code_size" : "47",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_255",
      "signature" : "void Mono.CSharp.CSharpParser:case_255 ()",
      "code_size" : "722",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_257",
      "signature" : "void Mono.CSharp.CSharpParser:case_257 ()",
      "code_size" : "285",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_258",
      "signature" : "void Mono.CSharp.CSharpParser:case_258 ()",
      "code_size" : "169",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_259",
      "signature" : "void Mono.CSharp.CSharpParser:case_259 ()",
      "code_size" : "903",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_283",
      "signature" : "void Mono.CSharp.CSharpParser:case_283 ()",
      "code_size" : "167",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_285",
      "signature" : "void Mono.CSharp.CSharpParser:case_285 ()",
      "code_size" : "527",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_287",
      "signature" : "void Mono.CSharp.CSharpParser:case_287 ()",
      "code_size" : "527",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_288",
      "signature" : "void Mono.CSharp.CSharpParser:case_288 ()",
      "code_size" : "208",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_289",
      "signature" : "void Mono.CSharp.CSharpParser:case_289 ()",
      "code_size" : "208",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_290",
      "signature" : "void Mono.CSharp.CSharpParser:case_290 ()",
      "code_size" : "357",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_291",
      "signature" : "void Mono.CSharp.CSharpParser:case_291 ()",
      "code_size" : "114",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_292",
      "signature" : "void Mono.CSharp.CSharpParser:case_292 ()",
      "code_size" : "1138",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_293",
      "signature" : "void Mono.CSharp.CSharpParser:case_293 ()",
      "code_size" : "535",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_299",
      "signature" : "void Mono.CSharp.CSharpParser:case_299 ()",
      "code_size" : "282",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_301",
      "signature" : "void Mono.CSharp.CSharpParser:case_301 ()",
      "code_size" : "282",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_302",
      "signature" : "void Mono.CSharp.CSharpParser:case_302 ()",
      "code_size" : "167",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_303",
      "signature" : "void Mono.CSharp.CSharpParser:case_303 ()",
      "code_size" : "40",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_304",
      "signature" : "void Mono.CSharp.CSharpParser:case_304 ()",
      "code_size" : "139",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_305",
      "signature" : "void Mono.CSharp.CSharpParser:case_305 ()",
      "code_size" : "805",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_306",
      "signature" : "void Mono.CSharp.CSharpParser:case_306 ()",
      "code_size" : "692",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_307",
      "signature" : "void Mono.CSharp.CSharpParser:case_307 ()",
      "code_size" : "111",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_308",
      "signature" : "void Mono.CSharp.CSharpParser:case_308 ()",
      "code_size" : "559",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_309",
      "signature" : "void Mono.CSharp.CSharpParser:case_309 ()",
      "code_size" : "171",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_310",
      "signature" : "void Mono.CSharp.CSharpParser:case_310 ()",
      "code_size" : "119",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_311",
      "signature" : "void Mono.CSharp.CSharpParser:case_311 ()",
      "code_size" : "452",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_314",
      "signature" : "void Mono.CSharp.CSharpParser:case_314 ()",
      "code_size" : "178",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_319",
      "signature" : "void Mono.CSharp.CSharpParser:case_319 ()",
      "code_size" : "282",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_321",
      "signature" : "void Mono.CSharp.CSharpParser:case_321 ()",
      "code_size" : "392",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_322",
      "signature" : "void Mono.CSharp.CSharpParser:case_322 ()",
      "code_size" : "256",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_326",
      "signature" : "void Mono.CSharp.CSharpParser:case_326 ()",
      "code_size" : "116",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_327",
      "signature" : "void Mono.CSharp.CSharpParser:case_327 ()",
      "code_size" : "116",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_328",
      "signature" : "void Mono.CSharp.CSharpParser:case_328 ()",
      "code_size" : "140",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_329",
      "signature" : "void Mono.CSharp.CSharpParser:case_329 ()",
      "code_size" : "504",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_330",
      "signature" : "void Mono.CSharp.CSharpParser:case_330 ()",
      "code_size" : "344",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_331",
      "signature" : "void Mono.CSharp.CSharpParser:case_331 ()",
      "code_size" : "504",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_332",
      "signature" : "void Mono.CSharp.CSharpParser:case_332 ()",
      "code_size" : "344",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_333",
      "signature" : "void Mono.CSharp.CSharpParser:case_333 ()",
      "code_size" : "101",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_335",
      "signature" : "void Mono.CSharp.CSharpParser:case_335 ()",
      "code_size" : "291",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_336",
      "signature" : "void Mono.CSharp.CSharpParser:case_336 ()",
      "code_size" : "604",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_337",
      "signature" : "void Mono.CSharp.CSharpParser:case_337 ()",
      "code_size" : "83",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_338",
      "signature" : "void Mono.CSharp.CSharpParser:case_338 ()",
      "code_size" : "629",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_339",
      "signature" : "void Mono.CSharp.CSharpParser:case_339 ()",
      "code_size" : "65",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_340",
      "signature" : "void Mono.CSharp.CSharpParser:case_340 ()",
      "code_size" : "114",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_343",
      "signature" : "void Mono.CSharp.CSharpParser:case_343 ()",
      "code_size" : "108",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_348",
      "signature" : "void Mono.CSharp.CSharpParser:case_348 ()",
      "code_size" : "98",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_349",
      "signature" : "void Mono.CSharp.CSharpParser:case_349 ()",
      "code_size" : "557",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_350",
      "signature" : "void Mono.CSharp.CSharpParser:case_350 ()",
      "code_size" : "128",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_351",
      "signature" : "void Mono.CSharp.CSharpParser:case_351 ()",
      "code_size" : "775",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_352",
      "signature" : "void Mono.CSharp.CSharpParser:case_352 ()",
      "code_size" : "575",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_355",
      "signature" : "void Mono.CSharp.CSharpParser:case_355 ()",
      "code_size" : "696",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_357",
      "signature" : "void Mono.CSharp.CSharpParser:case_357 ()",
      "code_size" : "339",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_359",
      "signature" : "void Mono.CSharp.CSharpParser:case_359 ()",
      "code_size" : "209",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_361",
      "signature" : "void Mono.CSharp.CSharpParser:case_361 ()",
      "code_size" : "449",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_362",
      "signature" : "void Mono.CSharp.CSharpParser:case_362 ()",
      "code_size" : "474",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_364",
      "signature" : "void Mono.CSharp.CSharpParser:case_364 ()",
      "code_size" : "435",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_365",
      "signature" : "void Mono.CSharp.CSharpParser:case_365 ()",
      "code_size" : "446",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_366",
      "signature" : "void Mono.CSharp.CSharpParser:case_366 ()",
      "code_size" : "339",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_367",
      "signature" : "void Mono.CSharp.CSharpParser:case_367 ()",
      "code_size" : "355",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_369",
      "signature" : "void Mono.CSharp.CSharpParser:case_369 ()",
      "code_size" : "193",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_370",
      "signature" : "void Mono.CSharp.CSharpParser:case_370 ()",
      "code_size" : "168",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_371",
      "signature" : "void Mono.CSharp.CSharpParser:case_371 ()",
      "code_size" : "279",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_372",
      "signature" : "void Mono.CSharp.CSharpParser:case_372 ()",
      "code_size" : "273",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_374",
      "signature" : "void Mono.CSharp.CSharpParser:case_374 ()",
      "code_size" : "353",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_375",
      "signature" : "void Mono.CSharp.CSharpParser:case_375 ()",
      "code_size" : "217",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_377",
      "signature" : "void Mono.CSharp.CSharpParser:case_377 ()",
      "code_size" : "450",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_378",
      "signature" : "void Mono.CSharp.CSharpParser:case_378 ()",
      "code_size" : "181",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_379",
      "signature" : "void Mono.CSharp.CSharpParser:case_379 ()",
      "code_size" : "291",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_380",
      "signature" : "void Mono.CSharp.CSharpParser:case_380 ()",
      "code_size" : "342",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_381",
      "signature" : "void Mono.CSharp.CSharpParser:case_381 ()",
      "code_size" : "452",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_382",
      "signature" : "void Mono.CSharp.CSharpParser:case_382 ()",
      "code_size" : "438",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_384",
      "signature" : "void Mono.CSharp.CSharpParser:case_384 ()",
      "code_size" : "193",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_385",
      "signature" : "void Mono.CSharp.CSharpParser:case_385 ()",
      "code_size" : "350",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_386",
      "signature" : "void Mono.CSharp.CSharpParser:case_386 ()",
      "code_size" : "273",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_387",
      "signature" : "void Mono.CSharp.CSharpParser:case_387 ()",
      "code_size" : "467",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_388",
      "signature" : "void Mono.CSharp.CSharpParser:case_388 ()",
      "code_size" : "272",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_397",
      "signature" : "void Mono.CSharp.CSharpParser:case_397 ()",
      "code_size" : "285",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_400",
      "signature" : "void Mono.CSharp.CSharpParser:case_400 ()",
      "code_size" : "636",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_403",
      "signature" : "void Mono.CSharp.CSharpParser:case_403 ()",
      "code_size" : "254",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_404",
      "signature" : "void Mono.CSharp.CSharpParser:case_404 ()",
      "code_size" : "342",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_407",
      "signature" : "void Mono.CSharp.CSharpParser:case_407 ()",
      "code_size" : "235",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_408",
      "signature" : "void Mono.CSharp.CSharpParser:case_408 ()",
      "code_size" : "273",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_409",
      "signature" : "void Mono.CSharp.CSharpParser:case_409 ()",
      "code_size" : "419",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_448",
      "signature" : "void Mono.CSharp.CSharpParser:case_448 ()",
      "code_size" : "255",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_455",
      "signature" : "void Mono.CSharp.CSharpParser:case_455 ()",
      "code_size" : "480",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_456",
      "signature" : "void Mono.CSharp.CSharpParser:case_456 ()",
      "code_size" : "289",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_457",
      "signature" : "void Mono.CSharp.CSharpParser:case_457 ()",
      "code_size" : "258",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_458",
      "signature" : "void Mono.CSharp.CSharpParser:case_458 ()",
      "code_size" : "375",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_460",
      "signature" : "void Mono.CSharp.CSharpParser:case_460 ()",
      "code_size" : "321",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_462",
      "signature" : "void Mono.CSharp.CSharpParser:case_462 ()",
      "code_size" : "335",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_464",
      "signature" : "void Mono.CSharp.CSharpParser:case_464 ()",
      "code_size" : "439",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_469",
      "signature" : "void Mono.CSharp.CSharpParser:case_469 ()",
      "code_size" : "284",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_471",
      "signature" : "void Mono.CSharp.CSharpParser:case_471 ()",
      "code_size" : "435",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_472",
      "signature" : "void Mono.CSharp.CSharpParser:case_472 ()",
      "code_size" : "446",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_473",
      "signature" : "void Mono.CSharp.CSharpParser:case_473 ()",
      "code_size" : "527",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_474",
      "signature" : "void Mono.CSharp.CSharpParser:case_474 ()",
      "code_size" : "435",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_475",
      "signature" : "void Mono.CSharp.CSharpParser:case_475 ()",
      "code_size" : "440",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_476",
      "signature" : "void Mono.CSharp.CSharpParser:case_476 ()",
      "code_size" : "503",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_477",
      "signature" : "void Mono.CSharp.CSharpParser:case_477 ()",
      "code_size" : "449",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_478",
      "signature" : "void Mono.CSharp.CSharpParser:case_478 ()",
      "code_size" : "474",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_480",
      "signature" : "void Mono.CSharp.CSharpParser:case_480 ()",
      "code_size" : "339",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_482",
      "signature" : "void Mono.CSharp.CSharpParser:case_482 ()",
      "code_size" : "339",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_483",
      "signature" : "void Mono.CSharp.CSharpParser:case_483 ()",
      "code_size" : "295",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_484",
      "signature" : "void Mono.CSharp.CSharpParser:case_484 ()",
      "code_size" : "310",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_485",
      "signature" : "void Mono.CSharp.CSharpParser:case_485 ()",
      "code_size" : "216",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_488",
      "signature" : "void Mono.CSharp.CSharpParser:case_488 ()",
      "code_size" : "443",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_489",
      "signature" : "void Mono.CSharp.CSharpParser:case_489 ()",
      "code_size" : "260",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_492",
      "signature" : "void Mono.CSharp.CSharpParser:case_492 ()",
      "code_size" : "258",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_493",
      "signature" : "void Mono.CSharp.CSharpParser:case_493 ()",
      "code_size" : "273",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_494",
      "signature" : "void Mono.CSharp.CSharpParser:case_494 ()",
      "code_size" : "116",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_495",
      "signature" : "void Mono.CSharp.CSharpParser:case_495 ()",
      "code_size" : "339",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_496",
      "signature" : "void Mono.CSharp.CSharpParser:case_496 ()",
      "code_size" : "350",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_498",
      "signature" : "void Mono.CSharp.CSharpParser:case_498 ()",
      "code_size" : "405",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_499",
      "signature" : "void Mono.CSharp.CSharpParser:case_499 ()",
      "code_size" : "443",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_500",
      "signature" : "void Mono.CSharp.CSharpParser:case_500 ()",
      "code_size" : "445",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_501",
      "signature" : "void Mono.CSharp.CSharpParser:case_501 ()",
      "code_size" : "257",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_506",
      "signature" : "void Mono.CSharp.CSharpParser:case_506 ()",
      "code_size" : "235",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_507",
      "signature" : "void Mono.CSharp.CSharpParser:case_507 ()",
      "code_size" : "444",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_508",
      "signature" : "void Mono.CSharp.CSharpParser:case_508 ()",
      "code_size" : "478",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_509",
      "signature" : "void Mono.CSharp.CSharpParser:case_509 ()",
      "code_size" : "158",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_510",
      "signature" : "void Mono.CSharp.CSharpParser:case_510 ()",
      "code_size" : "143",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_515",
      "signature" : "void Mono.CSharp.CSharpParser:case_515 ()",
      "code_size" : "201",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_517",
      "signature" : "void Mono.CSharp.CSharpParser:case_517 ()",
      "code_size" : "201",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_519",
      "signature" : "void Mono.CSharp.CSharpParser:case_519 ()",
      "code_size" : "313",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_520",
      "signature" : "void Mono.CSharp.CSharpParser:case_520 ()",
      "code_size" : "206",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_521",
      "signature" : "void Mono.CSharp.CSharpParser:case_521 ()",
      "code_size" : "284",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_522",
      "signature" : "void Mono.CSharp.CSharpParser:case_522 ()",
      "code_size" : "504",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_523",
      "signature" : "void Mono.CSharp.CSharpParser:case_523 ()",
      "code_size" : "619",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_525",
      "signature" : "void Mono.CSharp.CSharpParser:case_525 ()",
      "code_size" : "356",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_526",
      "signature" : "void Mono.CSharp.CSharpParser:case_526 ()",
      "code_size" : "449",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_527",
      "signature" : "void Mono.CSharp.CSharpParser:case_527 ()",
      "code_size" : "371",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_528",
      "signature" : "void Mono.CSharp.CSharpParser:case_528 ()",
      "code_size" : "277",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_529",
      "signature" : "void Mono.CSharp.CSharpParser:case_529 ()",
      "code_size" : "235",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_530",
      "signature" : "void Mono.CSharp.CSharpParser:case_530 ()",
      "code_size" : "273",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_531",
      "signature" : "void Mono.CSharp.CSharpParser:case_531 ()",
      "code_size" : "235",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_532",
      "signature" : "void Mono.CSharp.CSharpParser:case_532 ()",
      "code_size" : "531",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_536",
      "signature" : "void Mono.CSharp.CSharpParser:case_536 ()",
      "code_size" : "365",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_537",
      "signature" : "void Mono.CSharp.CSharpParser:case_537 ()",
      "code_size" : "172",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_540",
      "signature" : "void Mono.CSharp.CSharpParser:case_540 ()",
      "code_size" : "908",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_541",
      "signature" : "void Mono.CSharp.CSharpParser:case_541 ()",
      "code_size" : "447",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_542",
      "signature" : "void Mono.CSharp.CSharpParser:case_542 ()",
      "code_size" : "785",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_543",
      "signature" : "void Mono.CSharp.CSharpParser:case_543 ()",
      "code_size" : "604",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_544",
      "signature" : "void Mono.CSharp.CSharpParser:case_544 ()",
      "code_size" : "445",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_545",
      "signature" : "void Mono.CSharp.CSharpParser:case_545 ()",
      "code_size" : "370",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_546",
      "signature" : "void Mono.CSharp.CSharpParser:case_546 ()",
      "code_size" : "277",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_548",
      "signature" : "void Mono.CSharp.CSharpParser:case_548 ()",
      "code_size" : "120",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_549",
      "signature" : "void Mono.CSharp.CSharpParser:case_549 ()",
      "code_size" : "366",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_555",
      "signature" : "void Mono.CSharp.CSharpParser:case_555 ()",
      "code_size" : "235",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_556",
      "signature" : "void Mono.CSharp.CSharpParser:case_556 ()",
      "code_size" : "273",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_559",
      "signature" : "void Mono.CSharp.CSharpParser:case_559 ()",
      "code_size" : "336",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_560",
      "signature" : "void Mono.CSharp.CSharpParser:case_560 ()",
      "code_size" : "319",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_561",
      "signature" : "void Mono.CSharp.CSharpParser:case_561 ()",
      "code_size" : "247",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_562",
      "signature" : "void Mono.CSharp.CSharpParser:case_562 ()",
      "code_size" : "101",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_566",
      "signature" : "void Mono.CSharp.CSharpParser:case_566 ()",
      "code_size" : "319",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_567",
      "signature" : "void Mono.CSharp.CSharpParser:case_567 ()",
      "code_size" : "128",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_568",
      "signature" : "void Mono.CSharp.CSharpParser:case_568 ()",
      "code_size" : "241",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_573",
      "signature" : "void Mono.CSharp.CSharpParser:case_573 ()",
      "code_size" : "201",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_574",
      "signature" : "void Mono.CSharp.CSharpParser:case_574 ()",
      "code_size" : "336",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_575",
      "signature" : "void Mono.CSharp.CSharpParser:case_575 ()",
      "code_size" : "235",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_576",
      "signature" : "void Mono.CSharp.CSharpParser:case_576 ()",
      "code_size" : "273",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_577",
      "signature" : "void Mono.CSharp.CSharpParser:case_577 ()",
      "code_size" : "260",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_579",
      "signature" : "void Mono.CSharp.CSharpParser:case_579 ()",
      "code_size" : "68",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_580",
      "signature" : "void Mono.CSharp.CSharpParser:case_580 ()",
      "code_size" : "187",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_581",
      "signature" : "void Mono.CSharp.CSharpParser:case_581 ()",
      "code_size" : "213",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_582",
      "signature" : "void Mono.CSharp.CSharpParser:case_582 ()",
      "code_size" : "260",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_583",
      "signature" : "void Mono.CSharp.CSharpParser:case_583 ()",
      "code_size" : "275",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_584",
      "signature" : "void Mono.CSharp.CSharpParser:case_584 ()",
      "code_size" : "260",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_585",
      "signature" : "void Mono.CSharp.CSharpParser:case_585 ()",
      "code_size" : "170",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_586",
      "signature" : "void Mono.CSharp.CSharpParser:case_586 ()",
      "code_size" : "260",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_587",
      "signature" : "void Mono.CSharp.CSharpParser:case_587 ()",
      "code_size" : "170",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_588",
      "signature" : "void Mono.CSharp.CSharpParser:case_588 ()",
      "code_size" : "541",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_596",
      "signature" : "void Mono.CSharp.CSharpParser:case_596 ()",
      "code_size" : "112",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_597",
      "signature" : "void Mono.CSharp.CSharpParser:case_597 ()",
      "code_size" : "352",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_601",
      "signature" : "void Mono.CSharp.CSharpParser:case_601 ()",
      "code_size" : "353",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_602",
      "signature" : "void Mono.CSharp.CSharpParser:case_602 ()",
      "code_size" : "852",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_603",
      "signature" : "void Mono.CSharp.CSharpParser:case_603 ()",
      "code_size" : "175",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_604",
      "signature" : "void Mono.CSharp.CSharpParser:case_604 ()",
      "code_size" : "175",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_605",
      "signature" : "void Mono.CSharp.CSharpParser:case_605 ()",
      "code_size" : "277",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_606",
      "signature" : "void Mono.CSharp.CSharpParser:case_606 ()",
      "code_size" : "170",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_614",
      "signature" : "void Mono.CSharp.CSharpParser:case_614 ()",
      "code_size" : "172",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_615",
      "signature" : "void Mono.CSharp.CSharpParser:case_615 ()",
      "code_size" : "175",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_616",
      "signature" : "void Mono.CSharp.CSharpParser:case_616 ()",
      "code_size" : "172",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_617",
      "signature" : "void Mono.CSharp.CSharpParser:case_617 ()",
      "code_size" : "175",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_618",
      "signature" : "void Mono.CSharp.CSharpParser:case_618 ()",
      "code_size" : "170",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_619",
      "signature" : "void Mono.CSharp.CSharpParser:case_619 ()",
      "code_size" : "175",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_621",
      "signature" : "void Mono.CSharp.CSharpParser:case_621 ()",
      "code_size" : "297",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_622",
      "signature" : "void Mono.CSharp.CSharpParser:case_622 ()",
      "code_size" : "297",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_623",
      "signature" : "void Mono.CSharp.CSharpParser:case_623 ()",
      "code_size" : "297",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_624",
      "signature" : "void Mono.CSharp.CSharpParser:case_624 ()",
      "code_size" : "221",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_625",
      "signature" : "void Mono.CSharp.CSharpParser:case_625 ()",
      "code_size" : "221",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_626",
      "signature" : "void Mono.CSharp.CSharpParser:case_626 ()",
      "code_size" : "221",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_628",
      "signature" : "void Mono.CSharp.CSharpParser:case_628 ()",
      "code_size" : "297",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_629",
      "signature" : "void Mono.CSharp.CSharpParser:case_629 ()",
      "code_size" : "297",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_630",
      "signature" : "void Mono.CSharp.CSharpParser:case_630 ()",
      "code_size" : "221",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_631",
      "signature" : "void Mono.CSharp.CSharpParser:case_631 ()",
      "code_size" : "221",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_633",
      "signature" : "void Mono.CSharp.CSharpParser:case_633 ()",
      "code_size" : "731",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_634",
      "signature" : "void Mono.CSharp.CSharpParser:case_634 ()",
      "code_size" : "438",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_635",
      "signature" : "void Mono.CSharp.CSharpParser:case_635 ()",
      "code_size" : "277",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_636",
      "signature" : "void Mono.CSharp.CSharpParser:case_636 ()",
      "code_size" : "277",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_637",
      "signature" : "void Mono.CSharp.CSharpParser:case_637 ()",
      "code_size" : "431",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_638",
      "signature" : "void Mono.CSharp.CSharpParser:case_638 ()",
      "code_size" : "431",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_645",
      "signature" : "void Mono.CSharp.CSharpParser:case_645 ()",
      "code_size" : "353",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_651",
      "signature" : "void Mono.CSharp.CSharpParser:case_651 ()",
      "code_size" : "258",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_652",
      "signature" : "void Mono.CSharp.CSharpParser:case_652 ()",
      "code_size" : "273",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_653",
      "signature" : "void Mono.CSharp.CSharpParser:case_653 ()",
      "code_size" : "339",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_655",
      "signature" : "void Mono.CSharp.CSharpParser:case_655 ()",
      "code_size" : "301",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_658",
      "signature" : "void Mono.CSharp.CSharpParser:case_658 ()",
      "code_size" : "235",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_659",
      "signature" : "void Mono.CSharp.CSharpParser:case_659 ()",
      "code_size" : "531",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_661",
      "signature" : "void Mono.CSharp.CSharpParser:case_661 ()",
      "code_size" : "329",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_663",
      "signature" : "void Mono.CSharp.CSharpParser:case_663 ()",
      "code_size" : "297",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_664",
      "signature" : "void Mono.CSharp.CSharpParser:case_664 ()",
      "code_size" : "297",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_665",
      "signature" : "void Mono.CSharp.CSharpParser:case_665 ()",
      "code_size" : "221",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_666",
      "signature" : "void Mono.CSharp.CSharpParser:case_666 ()",
      "code_size" : "221",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_668",
      "signature" : "void Mono.CSharp.CSharpParser:case_668 ()",
      "code_size" : "297",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_669",
      "signature" : "void Mono.CSharp.CSharpParser:case_669 ()",
      "code_size" : "297",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_670",
      "signature" : "void Mono.CSharp.CSharpParser:case_670 ()",
      "code_size" : "297",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_671",
      "signature" : "void Mono.CSharp.CSharpParser:case_671 ()",
      "code_size" : "297",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_672",
      "signature" : "void Mono.CSharp.CSharpParser:case_672 ()",
      "code_size" : "221",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_673",
      "signature" : "void Mono.CSharp.CSharpParser:case_673 ()",
      "code_size" : "221",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_674",
      "signature" : "void Mono.CSharp.CSharpParser:case_674 ()",
      "code_size" : "221",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_675",
      "signature" : "void Mono.CSharp.CSharpParser:case_675 ()",
      "code_size" : "221",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_677",
      "signature" : "void Mono.CSharp.CSharpParser:case_677 ()",
      "code_size" : "297",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_678",
      "signature" : "void Mono.CSharp.CSharpParser:case_678 ()",
      "code_size" : "297",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_679",
      "signature" : "void Mono.CSharp.CSharpParser:case_679 ()",
      "code_size" : "221",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_680",
      "signature" : "void Mono.CSharp.CSharpParser:case_680 ()",
      "code_size" : "221",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_682",
      "signature" : "void Mono.CSharp.CSharpParser:case_682 ()",
      "code_size" : "297",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_683",
      "signature" : "void Mono.CSharp.CSharpParser:case_683 ()",
      "code_size" : "221",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_685",
      "signature" : "void Mono.CSharp.CSharpParser:case_685 ()",
      "code_size" : "297",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_686",
      "signature" : "void Mono.CSharp.CSharpParser:case_686 ()",
      "code_size" : "221",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_688",
      "signature" : "void Mono.CSharp.CSharpParser:case_688 ()",
      "code_size" : "297",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_689",
      "signature" : "void Mono.CSharp.CSharpParser:case_689 ()",
      "code_size" : "221",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_691",
      "signature" : "void Mono.CSharp.CSharpParser:case_691 ()",
      "code_size" : "297",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_692",
      "signature" : "void Mono.CSharp.CSharpParser:case_692 ()",
      "code_size" : "221",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_694",
      "signature" : "void Mono.CSharp.CSharpParser:case_694 ()",
      "code_size" : "297",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_695",
      "signature" : "void Mono.CSharp.CSharpParser:case_695 ()",
      "code_size" : "221",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_697",
      "signature" : "void Mono.CSharp.CSharpParser:case_697 ()",
      "code_size" : "384",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_699",
      "signature" : "void Mono.CSharp.CSharpParser:case_699 ()",
      "code_size" : "499",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_700",
      "signature" : "void Mono.CSharp.CSharpParser:case_700 ()",
      "code_size" : "422",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_701",
      "signature" : "void Mono.CSharp.CSharpParser:case_701 ()",
      "code_size" : "422",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_702",
      "signature" : "void Mono.CSharp.CSharpParser:case_702 ()",
      "code_size" : "440",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_703",
      "signature" : "void Mono.CSharp.CSharpParser:case_703 ()",
      "code_size" : "292",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_704",
      "signature" : "void Mono.CSharp.CSharpParser:case_704 ()",
      "code_size" : "297",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_705",
      "signature" : "void Mono.CSharp.CSharpParser:case_705 ()",
      "code_size" : "297",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_706",
      "signature" : "void Mono.CSharp.CSharpParser:case_706 ()",
      "code_size" : "297",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_707",
      "signature" : "void Mono.CSharp.CSharpParser:case_707 ()",
      "code_size" : "297",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_708",
      "signature" : "void Mono.CSharp.CSharpParser:case_708 ()",
      "code_size" : "297",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_709",
      "signature" : "void Mono.CSharp.CSharpParser:case_709 ()",
      "code_size" : "297",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_710",
      "signature" : "void Mono.CSharp.CSharpParser:case_710 ()",
      "code_size" : "297",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_711",
      "signature" : "void Mono.CSharp.CSharpParser:case_711 ()",
      "code_size" : "297",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_712",
      "signature" : "void Mono.CSharp.CSharpParser:case_712 ()",
      "code_size" : "297",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_713",
      "signature" : "void Mono.CSharp.CSharpParser:case_713 ()",
      "code_size" : "297",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_714",
      "signature" : "void Mono.CSharp.CSharpParser:case_714 ()",
      "code_size" : "235",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_715",
      "signature" : "void Mono.CSharp.CSharpParser:case_715 ()",
      "code_size" : "386",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_716",
      "signature" : "void Mono.CSharp.CSharpParser:case_716 ()",
      "code_size" : "449",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_717",
      "signature" : "void Mono.CSharp.CSharpParser:case_717 ()",
      "code_size" : "341",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_718",
      "signature" : "void Mono.CSharp.CSharpParser:case_718 ()",
      "code_size" : "245",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_719",
      "signature" : "void Mono.CSharp.CSharpParser:case_719 ()",
      "code_size" : "256",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_721",
      "signature" : "void Mono.CSharp.CSharpParser:case_721 ()",
      "code_size" : "228",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_723",
      "signature" : "void Mono.CSharp.CSharpParser:case_723 ()",
      "code_size" : "281",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_725",
      "signature" : "void Mono.CSharp.CSharpParser:case_725 ()",
      "code_size" : "111",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_727",
      "signature" : "void Mono.CSharp.CSharpParser:case_727 ()",
      "code_size" : "40",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_728",
      "signature" : "void Mono.CSharp.CSharpParser:case_728 ()",
      "code_size" : "338",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_729",
      "signature" : "void Mono.CSharp.CSharpParser:case_729 ()",
      "code_size" : "169",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_730",
      "signature" : "void Mono.CSharp.CSharpParser:case_730 ()",
      "code_size" : "352",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_731",
      "signature" : "void Mono.CSharp.CSharpParser:case_731 ()",
      "code_size" : "169",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_732",
      "signature" : "void Mono.CSharp.CSharpParser:case_732 ()",
      "code_size" : "341",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_733",
      "signature" : "void Mono.CSharp.CSharpParser:case_733 ()",
      "code_size" : "169",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_735",
      "signature" : "void Mono.CSharp.CSharpParser:case_735 ()",
      "code_size" : "222",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_736",
      "signature" : "void Mono.CSharp.CSharpParser:case_736 ()",
      "code_size" : "169",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_738",
      "signature" : "void Mono.CSharp.CSharpParser:case_738 ()",
      "code_size" : "225",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_739",
      "signature" : "void Mono.CSharp.CSharpParser:case_739 ()",
      "code_size" : "169",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_746",
      "signature" : "void Mono.CSharp.CSharpParser:case_746 ()",
      "code_size" : "356",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_747",
      "signature" : "void Mono.CSharp.CSharpParser:case_747 ()",
      "code_size" : "284",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_748",
      "signature" : "void Mono.CSharp.CSharpParser:case_748 ()",
      "code_size" : "284",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_753",
      "signature" : "void Mono.CSharp.CSharpParser:case_753 ()",
      "code_size" : "193",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_758",
      "signature" : "void Mono.CSharp.CSharpParser:case_758 ()",
      "code_size" : "136",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_759",
      "signature" : "void Mono.CSharp.CSharpParser:case_759 ()",
      "code_size" : "265",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_761",
      "signature" : "void Mono.CSharp.CSharpParser:case_761 ()",
      "code_size" : "564",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_762",
      "signature" : "void Mono.CSharp.CSharpParser:case_762 ()",
      "code_size" : "514",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_763",
      "signature" : "void Mono.CSharp.CSharpParser:case_763 ()",
      "code_size" : "73",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_764",
      "signature" : "void Mono.CSharp.CSharpParser:case_764 ()",
      "code_size" : "109",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_767",
      "signature" : "void Mono.CSharp.CSharpParser:case_767 ()",
      "code_size" : "84",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_770",
      "signature" : "void Mono.CSharp.CSharpParser:case_770 ()",
      "code_size" : "595",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_771",
      "signature" : "void Mono.CSharp.CSharpParser:case_771 ()",
      "code_size" : "201",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_772",
      "signature" : "void Mono.CSharp.CSharpParser:case_772 ()",
      "code_size" : "70",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_773",
      "signature" : "void Mono.CSharp.CSharpParser:case_773 ()",
      "code_size" : "70",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_774",
      "signature" : "void Mono.CSharp.CSharpParser:case_774 ()",
      "code_size" : "70",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_775",
      "signature" : "void Mono.CSharp.CSharpParser:case_775 ()",
      "code_size" : "70",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_776",
      "signature" : "void Mono.CSharp.CSharpParser:case_776 ()",
      "code_size" : "70",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_777",
      "signature" : "void Mono.CSharp.CSharpParser:case_777 ()",
      "code_size" : "70",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_778",
      "signature" : "void Mono.CSharp.CSharpParser:case_778 ()",
      "code_size" : "70",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_779",
      "signature" : "void Mono.CSharp.CSharpParser:case_779 ()",
      "code_size" : "70",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_780",
      "signature" : "void Mono.CSharp.CSharpParser:case_780 ()",
      "code_size" : "70",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_781",
      "signature" : "void Mono.CSharp.CSharpParser:case_781 ()",
      "code_size" : "70",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_782",
      "signature" : "void Mono.CSharp.CSharpParser:case_782 ()",
      "code_size" : "70",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_783",
      "signature" : "void Mono.CSharp.CSharpParser:case_783 ()",
      "code_size" : "70",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_784",
      "signature" : "void Mono.CSharp.CSharpParser:case_784 ()",
      "code_size" : "169",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_785",
      "signature" : "void Mono.CSharp.CSharpParser:case_785 ()",
      "code_size" : "70",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_789",
      "signature" : "void Mono.CSharp.CSharpParser:case_789 ()",
      "code_size" : "166",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_792",
      "signature" : "void Mono.CSharp.CSharpParser:case_792 ()",
      "code_size" : "235",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_793",
      "signature" : "void Mono.CSharp.CSharpParser:case_793 ()",
      "code_size" : "496",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_794",
      "signature" : "void Mono.CSharp.CSharpParser:case_794 ()",
      "code_size" : "431",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_795",
      "signature" : "void Mono.CSharp.CSharpParser:case_795 ()",
      "code_size" : "361",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_796",
      "signature" : "void Mono.CSharp.CSharpParser:case_796 ()",
      "code_size" : "235",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_797",
      "signature" : "void Mono.CSharp.CSharpParser:case_797 ()",
      "code_size" : "821",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_798",
      "signature" : "void Mono.CSharp.CSharpParser:case_798 ()",
      "code_size" : "419",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_799",
      "signature" : "void Mono.CSharp.CSharpParser:case_799 ()",
      "code_size" : "158",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_803",
      "signature" : "void Mono.CSharp.CSharpParser:case_803 ()",
      "code_size" : "152",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_806",
      "signature" : "void Mono.CSharp.CSharpParser:case_806 ()",
      "code_size" : "116",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_808",
      "signature" : "void Mono.CSharp.CSharpParser:case_808 ()",
      "code_size" : "145",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_809",
      "signature" : "void Mono.CSharp.CSharpParser:case_809 ()",
      "code_size" : "106",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_810",
      "signature" : "void Mono.CSharp.CSharpParser:case_810 ()",
      "code_size" : "131",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_811",
      "signature" : "void Mono.CSharp.CSharpParser:case_811 ()",
      "code_size" : "145",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_819",
      "signature" : "void Mono.CSharp.CSharpParser:case_819 ()",
      "code_size" : "40",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_852",
      "signature" : "void Mono.CSharp.CSharpParser:case_852 ()",
      "code_size" : "140",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_853",
      "signature" : "void Mono.CSharp.CSharpParser:case_853 ()",
      "code_size" : "140",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_854",
      "signature" : "void Mono.CSharp.CSharpParser:case_854 ()",
      "code_size" : "156",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_855",
      "signature" : "void Mono.CSharp.CSharpParser:case_855 ()",
      "code_size" : "102",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_856",
      "signature" : "void Mono.CSharp.CSharpParser:case_856 ()",
      "code_size" : "272",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_859",
      "signature" : "void Mono.CSharp.CSharpParser:case_859 ()",
      "code_size" : "591",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_860",
      "signature" : "void Mono.CSharp.CSharpParser:case_860 ()",
      "code_size" : "592",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_861",
      "signature" : "void Mono.CSharp.CSharpParser:case_861 ()",
      "code_size" : "292",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_865",
      "signature" : "void Mono.CSharp.CSharpParser:case_865 ()",
      "code_size" : "319",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_869",
      "signature" : "void Mono.CSharp.CSharpParser:case_869 ()",
      "code_size" : "406",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_870",
      "signature" : "void Mono.CSharp.CSharpParser:case_870 ()",
      "code_size" : "116",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_871",
      "signature" : "void Mono.CSharp.CSharpParser:case_871 ()",
      "code_size" : "411",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_872",
      "signature" : "void Mono.CSharp.CSharpParser:case_872 ()",
      "code_size" : "61",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_874",
      "signature" : "void Mono.CSharp.CSharpParser:case_874 ()",
      "code_size" : "194",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_875",
      "signature" : "void Mono.CSharp.CSharpParser:case_875 ()",
      "code_size" : "128",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_879",
      "signature" : "void Mono.CSharp.CSharpParser:case_879 ()",
      "code_size" : "212",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_882",
      "signature" : "void Mono.CSharp.CSharpParser:case_882 ()",
      "code_size" : "329",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_883",
      "signature" : "void Mono.CSharp.CSharpParser:case_883 ()",
      "code_size" : "427",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_890",
      "signature" : "void Mono.CSharp.CSharpParser:case_890 ()",
      "code_size" : "422",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_892",
      "signature" : "void Mono.CSharp.CSharpParser:case_892 ()",
      "code_size" : "356",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_893",
      "signature" : "void Mono.CSharp.CSharpParser:case_893 ()",
      "code_size" : "367",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_894",
      "signature" : "void Mono.CSharp.CSharpParser:case_894 ()",
      "code_size" : "101",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_896",
      "signature" : "void Mono.CSharp.CSharpParser:case_896 ()",
      "code_size" : "225",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_899",
      "signature" : "void Mono.CSharp.CSharpParser:case_899 ()",
      "code_size" : "358",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_900",
      "signature" : "void Mono.CSharp.CSharpParser:case_900 ()",
      "code_size" : "265",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_901",
      "signature" : "void Mono.CSharp.CSharpParser:case_901 ()",
      "code_size" : "156",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_904",
      "signature" : "void Mono.CSharp.CSharpParser:case_904 ()",
      "code_size" : "512",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_905",
      "signature" : "void Mono.CSharp.CSharpParser:case_905 ()",
      "code_size" : "771",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_906",
      "signature" : "void Mono.CSharp.CSharpParser:case_906 ()",
      "code_size" : "277",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_908",
      "signature" : "void Mono.CSharp.CSharpParser:case_908 ()",
      "code_size" : "344",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_909",
      "signature" : "void Mono.CSharp.CSharpParser:case_909 ()",
      "code_size" : "277",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_916",
      "signature" : "void Mono.CSharp.CSharpParser:case_916 ()",
      "code_size" : "169",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_918",
      "signature" : "void Mono.CSharp.CSharpParser:case_918 ()",
      "code_size" : "260",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_919",
      "signature" : "void Mono.CSharp.CSharpParser:case_919 ()",
      "code_size" : "275",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_925",
      "signature" : "void Mono.CSharp.CSharpParser:case_925 ()",
      "code_size" : "541",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_926",
      "signature" : "void Mono.CSharp.CSharpParser:case_926 ()",
      "code_size" : "277",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_927",
      "signature" : "void Mono.CSharp.CSharpParser:case_927 ()",
      "code_size" : "417",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_928",
      "signature" : "void Mono.CSharp.CSharpParser:case_928 ()",
      "code_size" : "318",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_929",
      "signature" : "void Mono.CSharp.CSharpParser:case_929 ()",
      "code_size" : "432",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_930",
      "signature" : "void Mono.CSharp.CSharpParser:case_930 ()",
      "code_size" : "306",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_932",
      "signature" : "void Mono.CSharp.CSharpParser:case_932 ()",
      "code_size" : "308",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_933",
      "signature" : "void Mono.CSharp.CSharpParser:case_933 ()",
      "code_size" : "630",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_934",
      "signature" : "void Mono.CSharp.CSharpParser:case_934 ()",
      "code_size" : "92",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_935",
      "signature" : "void Mono.CSharp.CSharpParser:case_935 ()",
      "code_size" : "214",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_937",
      "signature" : "void Mono.CSharp.CSharpParser:case_937 ()",
      "code_size" : "508",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_938",
      "signature" : "void Mono.CSharp.CSharpParser:case_938 ()",
      "code_size" : "336",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_939",
      "signature" : "void Mono.CSharp.CSharpParser:case_939 ()",
      "code_size" : "441",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_944",
      "signature" : "void Mono.CSharp.CSharpParser:case_944 ()",
      "code_size" : "406",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_945",
      "signature" : "void Mono.CSharp.CSharpParser:case_945 ()",
      "code_size" : "116",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_953",
      "signature" : "void Mono.CSharp.CSharpParser:case_953 ()",
      "code_size" : "488",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_954",
      "signature" : "void Mono.CSharp.CSharpParser:case_954 ()",
      "code_size" : "542",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_955",
      "signature" : "void Mono.CSharp.CSharpParser:case_955 ()",
      "code_size" : "666",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_956",
      "signature" : "void Mono.CSharp.CSharpParser:case_956 ()",
      "code_size" : "371",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_957",
      "signature" : "void Mono.CSharp.CSharpParser:case_957 ()",
      "code_size" : "795",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_964",
      "signature" : "void Mono.CSharp.CSharpParser:case_964 ()",
      "code_size" : "144",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_965",
      "signature" : "void Mono.CSharp.CSharpParser:case_965 ()",
      "code_size" : "144",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_966",
      "signature" : "void Mono.CSharp.CSharpParser:case_966 ()",
      "code_size" : "159",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_967",
      "signature" : "void Mono.CSharp.CSharpParser:case_967 ()",
      "code_size" : "288",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_968",
      "signature" : "void Mono.CSharp.CSharpParser:case_968 ()",
      "code_size" : "274",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_969",
      "signature" : "void Mono.CSharp.CSharpParser:case_969 ()",
      "code_size" : "144",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_970",
      "signature" : "void Mono.CSharp.CSharpParser:case_970 ()",
      "code_size" : "260",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_971",
      "signature" : "void Mono.CSharp.CSharpParser:case_971 ()",
      "code_size" : "275",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_972",
      "signature" : "void Mono.CSharp.CSharpParser:case_972 ()",
      "code_size" : "170",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_973",
      "signature" : "void Mono.CSharp.CSharpParser:case_973 ()",
      "code_size" : "260",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_974",
      "signature" : "void Mono.CSharp.CSharpParser:case_974 ()",
      "code_size" : "275",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_975",
      "signature" : "void Mono.CSharp.CSharpParser:case_975 ()",
      "code_size" : "170",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_976",
      "signature" : "void Mono.CSharp.CSharpParser:case_976 ()",
      "code_size" : "652",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_977",
      "signature" : "void Mono.CSharp.CSharpParser:case_977 ()",
      "code_size" : "667",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_978",
      "signature" : "void Mono.CSharp.CSharpParser:case_978 ()",
      "code_size" : "409",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_982",
      "signature" : "void Mono.CSharp.CSharpParser:case_982 ()",
      "code_size" : "353",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_983",
      "signature" : "void Mono.CSharp.CSharpParser:case_983 ()",
      "code_size" : "541",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_984",
      "signature" : "void Mono.CSharp.CSharpParser:case_984 ()",
      "code_size" : "285",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_985",
      "signature" : "void Mono.CSharp.CSharpParser:case_985 ()",
      "code_size" : "235",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_986",
      "signature" : "void Mono.CSharp.CSharpParser:case_986 ()",
      "code_size" : "392",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_989",
      "signature" : "void Mono.CSharp.CSharpParser:case_989 ()",
      "code_size" : "382",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_990",
      "signature" : "void Mono.CSharp.CSharpParser:case_990 ()",
      "code_size" : "715",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_991",
      "signature" : "void Mono.CSharp.CSharpParser:case_991 ()",
      "code_size" : "319",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_992",
      "signature" : "void Mono.CSharp.CSharpParser:case_992 ()",
      "code_size" : "263",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_994",
      "signature" : "void Mono.CSharp.CSharpParser:case_994 ()",
      "code_size" : "95",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_997",
      "signature" : "void Mono.CSharp.CSharpParser:case_997 ()",
      "code_size" : "352",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_1000",
      "signature" : "void Mono.CSharp.CSharpParser:case_1000 ()",
      "code_size" : "116",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_1002",
      "signature" : "void Mono.CSharp.CSharpParser:case_1002 ()",
      "code_size" : "541",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_1003",
      "signature" : "void Mono.CSharp.CSharpParser:case_1003 ()",
      "code_size" : "277",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_1004",
      "signature" : "void Mono.CSharp.CSharpParser:case_1004 ()",
      "code_size" : "504",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_1005",
      "signature" : "void Mono.CSharp.CSharpParser:case_1005 ()",
      "code_size" : "61",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_1006",
      "signature" : "void Mono.CSharp.CSharpParser:case_1006 ()",
      "code_size" : "631",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_1007",
      "signature" : "void Mono.CSharp.CSharpParser:case_1007 ()",
      "code_size" : "504",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_1008",
      "signature" : "void Mono.CSharp.CSharpParser:case_1008 ()",
      "code_size" : "61",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_1009",
      "signature" : "void Mono.CSharp.CSharpParser:case_1009 ()",
      "code_size" : "631",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_1010",
      "signature" : "void Mono.CSharp.CSharpParser:case_1010 ()",
      "code_size" : "541",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_1011",
      "signature" : "void Mono.CSharp.CSharpParser:case_1011 ()",
      "code_size" : "277",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_1013",
      "signature" : "void Mono.CSharp.CSharpParser:case_1013 ()",
      "code_size" : "25",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_1015",
      "signature" : "void Mono.CSharp.CSharpParser:case_1015 ()",
      "code_size" : "194",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_1016",
      "signature" : "void Mono.CSharp.CSharpParser:case_1016 ()",
      "code_size" : "385",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_1017",
      "signature" : "void Mono.CSharp.CSharpParser:case_1017 ()",
      "code_size" : "371",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_1018",
      "signature" : "void Mono.CSharp.CSharpParser:case_1018 ()",
      "code_size" : "199",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_1019",
      "signature" : "void Mono.CSharp.CSharpParser:case_1019 ()",
      "code_size" : "185",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_1020",
      "signature" : "void Mono.CSharp.CSharpParser:case_1020 ()",
      "code_size" : "642",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_1021",
      "signature" : "void Mono.CSharp.CSharpParser:case_1021 ()",
      "code_size" : "763",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_1022",
      "signature" : "void Mono.CSharp.CSharpParser:case_1022 ()",
      "code_size" : "642",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_1023",
      "signature" : "void Mono.CSharp.CSharpParser:case_1023 ()",
      "code_size" : "763",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_1025",
      "signature" : "void Mono.CSharp.CSharpParser:case_1025 ()",
      "code_size" : "649",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_1027",
      "signature" : "void Mono.CSharp.CSharpParser:case_1027 ()",
      "code_size" : "771",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_1028",
      "signature" : "void Mono.CSharp.CSharpParser:case_1028 ()",
      "code_size" : "501",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_1029",
      "signature" : "void Mono.CSharp.CSharpParser:case_1029 ()",
      "code_size" : "347",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_1031",
      "signature" : "void Mono.CSharp.CSharpParser:case_1031 ()",
      "code_size" : "227",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_1032",
      "signature" : "void Mono.CSharp.CSharpParser:case_1032 ()",
      "code_size" : "40",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_1034",
      "signature" : "void Mono.CSharp.CSharpParser:case_1034 ()",
      "code_size" : "397",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_1035",
      "signature" : "void Mono.CSharp.CSharpParser:case_1035 ()",
      "code_size" : "300",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_1036",
      "signature" : "void Mono.CSharp.CSharpParser:case_1036 ()",
      "code_size" : "203",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_1037",
      "signature" : "void Mono.CSharp.CSharpParser:case_1037 ()",
      "code_size" : "662",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_1039",
      "signature" : "void Mono.CSharp.CSharpParser:case_1039 ()",
      "code_size" : "188",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_1041",
      "signature" : "void Mono.CSharp.CSharpParser:case_1041 ()",
      "code_size" : "331",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_1048",
      "signature" : "void Mono.CSharp.CSharpParser:case_1048 ()",
      "code_size" : "649",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_1050",
      "signature" : "void Mono.CSharp.CSharpParser:case_1050 ()",
      "code_size" : "397",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_1051",
      "signature" : "void Mono.CSharp.CSharpParser:case_1051 ()",
      "code_size" : "300",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_1052",
      "signature" : "void Mono.CSharp.CSharpParser:case_1052 ()",
      "code_size" : "304",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_1053",
      "signature" : "void Mono.CSharp.CSharpParser:case_1053 ()",
      "code_size" : "380",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_1054",
      "signature" : "void Mono.CSharp.CSharpParser:case_1054 ()",
      "code_size" : "1534",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_1055",
      "signature" : "void Mono.CSharp.CSharpParser:case_1055 ()",
      "code_size" : "300",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_1056",
      "signature" : "void Mono.CSharp.CSharpParser:case_1056 ()",
      "code_size" : "304",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_1057",
      "signature" : "void Mono.CSharp.CSharpParser:case_1057 ()",
      "code_size" : "380",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_1058",
      "signature" : "void Mono.CSharp.CSharpParser:case_1058 ()",
      "code_size" : "1870",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_1062",
      "signature" : "void Mono.CSharp.CSharpParser:case_1062 ()",
      "code_size" : "182",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_1064",
      "signature" : "void Mono.CSharp.CSharpParser:case_1064 ()",
      "code_size" : "203",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_1065",
      "signature" : "void Mono.CSharp.CSharpParser:case_1065 ()",
      "code_size" : "319",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_1067",
      "signature" : "void Mono.CSharp.CSharpParser:case_1067 ()",
      "code_size" : "260",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_1068",
      "signature" : "void Mono.CSharp.CSharpParser:case_1068 ()",
      "code_size" : "331",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_1070",
      "signature" : "void Mono.CSharp.CSharpParser:case_1070 ()",
      "code_size" : "255",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_1071",
      "signature" : "void Mono.CSharp.CSharpParser:case_1071 ()",
      "code_size" : "255",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_1073",
      "signature" : "void Mono.CSharp.CSharpParser:case_1073 ()",
      "code_size" : "255",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_1074",
      "signature" : "void Mono.CSharp.CSharpParser:case_1074 ()",
      "code_size" : "255",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_1076",
      "signature" : "void Mono.CSharp.CSharpParser:case_1076 ()",
      "code_size" : "422",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_1077",
      "signature" : "void Mono.CSharp.CSharpParser:case_1077 ()",
      "code_size" : "486",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_1080",
      "signature" : "void Mono.CSharp.CSharpParser:case_1080 ()",
      "code_size" : "914",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_1081",
      "signature" : "void Mono.CSharp.CSharpParser:case_1081 ()",
      "code_size" : "460",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_1091",
      "signature" : "void Mono.CSharp.CSharpParser:case_1091 ()",
      "code_size" : "316",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_1092",
      "signature" : "void Mono.CSharp.CSharpParser:case_1092 ()",
      "code_size" : "381",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_1093",
      "signature" : "void Mono.CSharp.CSharpParser:case_1093 ()",
      "code_size" : "480",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_1096",
      "signature" : "void Mono.CSharp.CSharpParser:case_1096 ()",
      "code_size" : "398",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_1097",
      "signature" : "void Mono.CSharp.CSharpParser:case_1097 ()",
      "code_size" : "489",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_1098",
      "signature" : "void Mono.CSharp.CSharpParser:case_1098 ()",
      "code_size" : "489",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_1099",
      "signature" : "void Mono.CSharp.CSharpParser:case_1099 ()",
      "code_size" : "394",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_1107",
      "signature" : "void Mono.CSharp.CSharpParser:case_1107 ()",
      "code_size" : "258",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_1108",
      "signature" : "void Mono.CSharp.CSharpParser:case_1108 ()",
      "code_size" : "269",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "case_1109",
      "signature" : "void Mono.CSharp.CSharpParser:case_1109 ()",
      "code_size" : "534",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_ExpectingTypeName",
      "signature" : "void Mono.CSharp.CSharpParser:Error_ExpectingTypeName (Mono.CSharp.Expression)",
      "code_size" : "162",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_ParameterModifierNotValid",
      "signature" : "void Mono.CSharp.CSharpParser:Error_ParameterModifierNotValid (string,Mono.CSharp.Location)",
      "code_size" : "67",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_DuplicateParameterModifier",
      "signature" : "void Mono.CSharp.CSharpParser:Error_DuplicateParameterModifier (Mono.CSharp.Location,Mono.CSharp.Parameter/Modifier)",
      "code_size" : "95",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_TypeExpected",
      "signature" : "void Mono.CSharp.CSharpParser:Error_TypeExpected (Mono.CSharp.Location)",
      "code_size" : "56",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_UnsafeCodeNotAllowed",
      "signature" : "void Mono.CSharp.CSharpParser:Error_UnsafeCodeNotAllowed (Mono.CSharp.Location)",
      "code_size" : "56",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Warning_EmptyStatement",
      "signature" : "void Mono.CSharp.CSharpParser:Warning_EmptyStatement (Mono.CSharp.Location)",
      "code_size" : "61",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_NamedArgumentExpected",
      "signature" : "void Mono.CSharp.CSharpParser:Error_NamedArgumentExpected (Mono.CSharp.NamedArgument)",
      "code_size" : "74",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_MissingInitializer",
      "signature" : "void Mono.CSharp.CSharpParser:Error_MissingInitializer (Mono.CSharp.Location)",
      "code_size" : "56",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_AwaitAsIdentifier",
      "signature" : "object Mono.CSharp.CSharpParser:Error_AwaitAsIdentifier (object)",
      "code_size" : "190",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "push_current_container",
      "signature" : "void Mono.CSharp.CSharpParser:push_current_container (Mono.CSharp.TypeDefinition,object)",
      "code_size" : "326",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "pop_current_class",
      "signature" : "Mono.CSharp.TypeContainer Mono.CSharp.CSharpParser:pop_current_class ()",
      "code_size" : "148",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "StoreModifierLocation",
      "signature" : "void Mono.CSharp.CSharpParser:StoreModifierLocation (object,Mono.CSharp.Location)",
      "code_size" : "271",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "PushLocation",
      "signature" : "void Mono.CSharp.CSharpParser:PushLocation (Mono.CSharp.Location)",
      "code_size" : "128",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "PopLocation",
      "signature" : "Mono.CSharp.Location Mono.CSharp.CSharpParser:PopLocation ()",
      "code_size" : "95",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CheckAttributeTarget",
      "signature" : "string Mono.CSharp.CSharpParser:CheckAttributeTarget (int,string,Mono.CSharp.Location)",
      "code_size" : "426",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsUnaryOperator",
      "signature" : "bool Mono.CSharp.CSharpParser:IsUnaryOperator (Mono.CSharp.Operator/OpType)",
      "code_size" : "67",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "syntax_error",
      "signature" : "void Mono.CSharp.CSharpParser:syntax_error (Mono.CSharp.Location,string)",
      "code_size" : "84",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Lexer",
      "signature" : "Mono.CSharp.Tokenizer Mono.CSharp.CSharpParser:get_Lexer ()",
      "code_size" : "23",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "parse",
      "signature" : "void Mono.CSharp.CSharpParser:parse ()",
      "code_size" : "827",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CheckToken",
      "signature" : "void Mono.CSharp.CSharpParser:CheckToken (int,int,string,Mono.CSharp.Location)",
      "code_size" : "183",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ConsumeStoredComment",
      "signature" : "string Mono.CSharp.CSharpParser:ConsumeStoredComment ()",
      "code_size" : "64",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "FeatureIsNotAvailable",
      "signature" : "void Mono.CSharp.CSharpParser:FeatureIsNotAvailable (Mono.CSharp.Location,string)",
      "code_size" : "61",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetLocation",
      "signature" : "Mono.CSharp.Location Mono.CSharp.CSharpParser:GetLocation (object)",
      "code_size" : "267",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "start_block",
      "signature" : "void Mono.CSharp.CSharpParser:start_block (Mono.CSharp.Location)",
      "code_size" : "389",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "end_block",
      "signature" : "Mono.CSharp.Block Mono.CSharp.CSharpParser:end_block (Mono.CSharp.Location)",
      "code_size" : "80",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "start_anonymous",
      "signature" : "void Mono.CSharp.CSharpParser:start_anonymous (bool,Mono.CSharp.ParametersCompiled,bool,Mono.CSharp.Location)",
      "code_size" : "433",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "end_anonymous",
      "signature" : "Mono.CSharp.AnonymousMethodExpression Mono.CSharp.CSharpParser:end_anonymous (Mono.CSharp.ParametersBlock)",
      "code_size" : "416",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_SyntaxError",
      "signature" : "void Mono.CSharp.CSharpParser:Error_SyntaxError (int)",
      "code_size" : "30",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_SyntaxError",
      "signature" : "void Mono.CSharp.CSharpParser:Error_SyntaxError (int,int)",
      "code_size" : "49",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_SyntaxError",
      "signature" : "void Mono.CSharp.CSharpParser:Error_SyntaxError (int,int,string)",
      "code_size" : "671",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetExpecting",
      "signature" : "string Mono.CSharp.CSharpParser:GetExpecting ()",
      "code_size" : "667",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSymbolName",
      "signature" : "string Mono.CSharp.CSharpParser:GetSymbolName (int)",
      "code_size" : "1050",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetTokenName",
      "signature" : "string Mono.CSharp.CSharpParser:GetTokenName (int)",
      "code_size" : "1442",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".cctor",
      "signature" : "void Mono.CSharp.CSharpParser:.cctor ()",
      "code_size" : "8278",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.CSharpParser/OperatorDeclaration:.ctor (Mono.CSharp.Operator/OpType,Mono.CSharp.FullNamedExpression,Mono.CSharp.Location)",
      "code_size" : "78",
      "class" : "OperatorDeclaration",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.yydebug.yyDebugSimple:.ctor ()",
      "code_size" : "9",
      "class" : "yyDebugSimple",
      "namespace" : "Mono.CSharp.yydebug",
      "wrapper_type" : "none",
    },
    {
      "name" : "println",
      "signature" : "void Mono.CSharp.yydebug.yyDebugSimple:println (string)",
      "code_size" : "36",
      "class" : "yyDebugSimple",
      "namespace" : "Mono.CSharp.yydebug",
      "wrapper_type" : "none",
    },
    {
      "name" : "push",
      "signature" : "void Mono.CSharp.yydebug.yyDebugSimple:push (int,object)",
      "code_size" : "228",
      "class" : "yyDebugSimple",
      "namespace" : "Mono.CSharp.yydebug",
      "wrapper_type" : "none",
    },
    {
      "name" : "lex",
      "signature" : "void Mono.CSharp.yydebug.yyDebugSimple:lex (int,int,string,object)",
      "code_size" : "305",
      "class" : "yyDebugSimple",
      "namespace" : "Mono.CSharp.yydebug",
      "wrapper_type" : "none",
    },
    {
      "name" : "shift",
      "signature" : "void Mono.CSharp.yydebug.yyDebugSimple:shift (int,int,int)",
      "code_size" : "962",
      "class" : "yyDebugSimple",
      "namespace" : "Mono.CSharp.yydebug",
      "wrapper_type" : "none",
    },
    {
      "name" : "pop",
      "signature" : "void Mono.CSharp.yydebug.yyDebugSimple:pop (int)",
      "code_size" : "87",
      "class" : "yyDebugSimple",
      "namespace" : "Mono.CSharp.yydebug",
      "wrapper_type" : "none",
    },
    {
      "name" : "discard",
      "signature" : "void Mono.CSharp.yydebug.yyDebugSimple:discard (int,int,string,object)",
      "code_size" : "305",
      "class" : "yyDebugSimple",
      "namespace" : "Mono.CSharp.yydebug",
      "wrapper_type" : "none",
    },
    {
      "name" : "reduce",
      "signature" : "void Mono.CSharp.yydebug.yyDebugSimple:reduce (int,int,int,string,int)",
      "code_size" : "454",
      "class" : "yyDebugSimple",
      "namespace" : "Mono.CSharp.yydebug",
      "wrapper_type" : "none",
    },
    {
      "name" : "shift",
      "signature" : "void Mono.CSharp.yydebug.yyDebugSimple:shift (int,int)",
      "code_size" : "258",
      "class" : "yyDebugSimple",
      "namespace" : "Mono.CSharp.yydebug",
      "wrapper_type" : "none",
    },
    {
      "name" : "accept",
      "signature" : "void Mono.CSharp.yydebug.yyDebugSimple:accept (object)",
      "code_size" : "47",
      "class" : "yyDebugSimple",
      "namespace" : "Mono.CSharp.yydebug",
      "wrapper_type" : "none",
    },
    {
      "name" : "error",
      "signature" : "void Mono.CSharp.yydebug.yyDebugSimple:error (string)",
      "code_size" : "47",
      "class" : "yyDebugSimple",
      "namespace" : "Mono.CSharp.yydebug",
      "wrapper_type" : "none",
    },
    {
      "name" : "reject",
      "signature" : "void Mono.CSharp.yydebug.yyDebugSimple:reject ()",
      "code_size" : "29",
      "class" : "yyDebugSimple",
      "namespace" : "Mono.CSharp.yydebug",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Token:.ctor ()",
      "code_size" : "9",
      "class" : "Token",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.yyParser.yyException:.ctor (string)",
      "code_size" : "23",
      "class" : "yyException",
      "namespace" : "Mono.CSharp.yyParser",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.yyParser.yyUnexpectedEof:.ctor (string)",
      "code_size" : "23",
      "class" : "yyUnexpectedEof",
      "namespace" : "Mono.CSharp.yyParser",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.yyParser.yyUnexpectedEof:.ctor ()",
      "code_size" : "32",
      "class" : "yyUnexpectedEof",
      "namespace" : "Mono.CSharp.yyParser",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.LocatedToken:.ctor ()",
      "code_size" : "9",
      "class" : "LocatedToken",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.LocatedToken:.ctor (string,Mono.CSharp.Location)",
      "code_size" : "112",
      "class" : "LocatedToken",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ToString",
      "signature" : "string Mono.CSharp.LocatedToken:ToString ()",
      "code_size" : "141",
      "class" : "LocatedToken",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Location",
      "signature" : "Mono.CSharp.Location Mono.CSharp.LocatedToken:get_Location ()",
      "code_size" : "58",
      "class" : "LocatedToken",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Value",
      "signature" : "string Mono.CSharp.LocatedToken:get_Value ()",
      "code_size" : "20",
      "class" : "LocatedToken",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Tokenizer:.ctor (Mono.CSharp.SeekableStreamReader,Mono.CSharp.CompilationSourceFile,Mono.CSharp.ParserSession,Mono.CSharp.Report)",
      "code_size" : "637",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".cctor",
      "signature" : "void Mono.CSharp.Tokenizer:.cctor ()",
      "code_size" : "2315",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_PropertyParsing",
      "signature" : "bool Mono.CSharp.Tokenizer:get_PropertyParsing ()",
      "code_size" : "23",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_PropertyParsing",
      "signature" : "void Mono.CSharp.Tokenizer:set_PropertyParsing (bool)",
      "code_size" : "34",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_EventParsing",
      "signature" : "bool Mono.CSharp.Tokenizer:get_EventParsing ()",
      "code_size" : "23",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_EventParsing",
      "signature" : "void Mono.CSharp.Tokenizer:set_EventParsing (bool)",
      "code_size" : "34",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ConstraintsParsing",
      "signature" : "bool Mono.CSharp.Tokenizer:get_ConstraintsParsing ()",
      "code_size" : "23",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_ConstraintsParsing",
      "signature" : "void Mono.CSharp.Tokenizer:set_ConstraintsParsing (bool)",
      "code_size" : "34",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_doc_state",
      "signature" : "Mono.CSharp.XmlCommentState Mono.CSharp.Tokenizer:get_doc_state ()",
      "code_size" : "23",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_doc_state",
      "signature" : "void Mono.CSharp.Tokenizer:set_doc_state (Mono.CSharp.XmlCommentState)",
      "code_size" : "58",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddEscapedIdentifier",
      "signature" : "void Mono.CSharp.Tokenizer:AddEscapedIdentifier (Mono.CSharp.Location)",
      "code_size" : "144",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsEscapedIdentifier",
      "signature" : "bool Mono.CSharp.Tokenizer:IsEscapedIdentifier (Mono.CSharp.ATypeNameExpression)",
      "code_size" : "88",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Line",
      "signature" : "int Mono.CSharp.Tokenizer:get_Line ()",
      "code_size" : "23",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "PushPosition",
      "signature" : "void Mono.CSharp.Tokenizer:PushPosition ()",
      "code_size" : "83",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "PopPosition",
      "signature" : "void Mono.CSharp.Tokenizer:PopPosition ()",
      "code_size" : "287",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DiscardPosition",
      "signature" : "void Mono.CSharp.Tokenizer:DiscardPosition ()",
      "code_size" : "34",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddKeyword",
      "signature" : "void Mono.CSharp.Tokenizer:AddKeyword (string,int)",
      "code_size" : "96",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddPreprocessorKeyword",
      "signature" : "void Mono.CSharp.Tokenizer:AddPreprocessorKeyword (string,Mono.CSharp.Tokenizer/PreprocessorDirective)",
      "code_size" : "71",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddKeyword",
      "signature" : "void Mono.CSharp.Tokenizer:AddKeyword<T_REF> (Mono.CSharp.Tokenizer/KeywordEntry`1<T_REF>[][],string,T_REF)",
      "code_size" : "461",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetKeyword",
      "signature" : "int Mono.CSharp.Tokenizer:GetKeyword (char[],int)",
      "code_size" : "2522",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetPreprocessorDirective",
      "signature" : "Mono.CSharp.Tokenizer/PreprocessorDirective Mono.CSharp.Tokenizer:GetPreprocessorDirective (char[],int)",
      "code_size" : "445",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Location",
      "signature" : "Mono.CSharp.Location Mono.CSharp.Tokenizer:get_Location ()",
      "code_size" : "64",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "is_identifier_start_character",
      "signature" : "bool Mono.CSharp.Tokenizer:is_identifier_start_character (int)",
      "code_size" : "79",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "is_identifier_part_character",
      "signature" : "bool Mono.CSharp.Tokenizer:is_identifier_part_character (char)",
      "code_size" : "110",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "is_identifier_start_character_slow_part",
      "signature" : "bool Mono.CSharp.Tokenizer:is_identifier_start_character_slow_part (char)",
      "code_size" : "67",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "is_identifier_part_character_slow_part",
      "signature" : "bool Mono.CSharp.Tokenizer:is_identifier_part_character_slow_part (char)",
      "code_size" : "108",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsKeyword",
      "signature" : "bool Mono.CSharp.Tokenizer:IsKeyword (string)",
      "code_size" : "60",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "TokenizeOpenParens",
      "signature" : "int Mono.CSharp.Tokenizer:TokenizeOpenParens ()",
      "code_size" : "1091",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsValidIdentifier",
      "signature" : "bool Mono.CSharp.Tokenizer:IsValidIdentifier (string)",
      "code_size" : "175",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "parse_less_than",
      "signature" : "bool Mono.CSharp.Tokenizer:parse_less_than (int&)",
      "code_size" : "733",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "peek_token",
      "signature" : "int Mono.CSharp.Tokenizer:peek_token ()",
      "code_size" : "46",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "TokenizePossibleNullableType",
      "signature" : "int Mono.CSharp.Tokenizer:TokenizePossibleNullableType ()",
      "code_size" : "1060",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "decimal_digits",
      "signature" : "bool Mono.CSharp.Tokenizer:decimal_digits (int)",
      "code_size" : "291",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "is_hex",
      "signature" : "bool Mono.CSharp.Tokenizer:is_hex (int)",
      "code_size" : "88",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "real_type_suffix",
      "signature" : "System.TypeCode Mono.CSharp.Tokenizer:real_type_suffix (int)",
      "code_size" : "141",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "integer_type_suffix",
      "signature" : "Mono.CSharp.ILiteralConstant Mono.CSharp.Tokenizer:integer_type_suffix (ulong,int,Mono.CSharp.Location)",
      "code_size" : "1090",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "adjust_int",
      "signature" : "Mono.CSharp.ILiteralConstant Mono.CSharp.Tokenizer:adjust_int (int,Mono.CSharp.Location)",
      "code_size" : "899",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "adjust_real",
      "signature" : "Mono.CSharp.ILiteralConstant Mono.CSharp.Tokenizer:adjust_real (System.TypeCode,Mono.CSharp.Location)",
      "code_size" : "1349",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "handle_hex",
      "signature" : "Mono.CSharp.ILiteralConstant Mono.CSharp.Tokenizer:handle_hex (Mono.CSharp.Location)",
      "code_size" : "738",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "is_number",
      "signature" : "int Mono.CSharp.Tokenizer:is_number (int,bool)",
      "code_size" : "875",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "getHex",
      "signature" : "int Mono.CSharp.Tokenizer:getHex (int,int&,bool&)",
      "code_size" : "398",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "escape",
      "signature" : "int Mono.CSharp.Tokenizer:escape (int,int&)",
      "code_size" : "530",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EscapeUnicode",
      "signature" : "int Mono.CSharp.Tokenizer:EscapeUnicode (int,int&)",
      "code_size" : "176",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_char",
      "signature" : "int Mono.CSharp.Tokenizer:get_char ()",
      "code_size" : "223",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "advance_line",
      "signature" : "void Mono.CSharp.Tokenizer:advance_line ()",
      "code_size" : "77",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "peek_char",
      "signature" : "int Mono.CSharp.Tokenizer:peek_char ()",
      "code_size" : "61",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "peek_char2",
      "signature" : "int Mono.CSharp.Tokenizer:peek_char2 ()",
      "code_size" : "60",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "putback",
      "signature" : "void Mono.CSharp.Tokenizer:putback (int)",
      "code_size" : "396",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "advance",
      "signature" : "bool Mono.CSharp.Tokenizer:advance ()",
      "code_size" : "49",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Value",
      "signature" : "object Mono.CSharp.Tokenizer:get_Value ()",
      "code_size" : "20",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "value",
      "signature" : "object Mono.CSharp.Tokenizer:value ()",
      "code_size" : "20",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "token",
      "signature" : "int Mono.CSharp.Tokenizer:token ()",
      "code_size" : "28",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "TokenizePreprocessorKeyword",
      "signature" : "int Mono.CSharp.Tokenizer:TokenizePreprocessorKeyword (int&)",
      "code_size" : "317",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_cmd_arg",
      "signature" : "Mono.CSharp.Tokenizer/PreprocessorDirective Mono.CSharp.Tokenizer:get_cmd_arg (string&)",
      "code_size" : "873",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "PreProcessLine",
      "signature" : "bool Mono.CSharp.Tokenizer:PreProcessLine ()",
      "code_size" : "1095",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "PreProcessDefinition",
      "signature" : "void Mono.CSharp.Tokenizer:PreProcessDefinition (bool,string,bool)",
      "code_size" : "622",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "read_hex",
      "signature" : "byte Mono.CSharp.Tokenizer:read_hex (bool&)",
      "code_size" : "237",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ParsePragmaChecksum",
      "signature" : "bool Mono.CSharp.Tokenizer:ParsePragmaChecksum ()",
      "code_size" : "1038",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsTokenIdentifierEqual",
      "signature" : "bool Mono.CSharp.Tokenizer:IsTokenIdentifierEqual (char[])",
      "code_size" : "143",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ScanClosingInterpolationBrace",
      "signature" : "bool Mono.CSharp.Tokenizer:ScanClosingInterpolationBrace ()",
      "code_size" : "318",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "TokenizeNumber",
      "signature" : "int Mono.CSharp.Tokenizer:TokenizeNumber (int)",
      "code_size" : "286",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "TokenizeFileName",
      "signature" : "string Mono.CSharp.Tokenizer:TokenizeFileName (int&)",
      "code_size" : "274",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "TokenizePragmaWarningIdentifier",
      "signature" : "int Mono.CSharp.Tokenizer:TokenizePragmaWarningIdentifier (int&,bool&)",
      "code_size" : "836",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ReadPragmaWarningComment",
      "signature" : "int Mono.CSharp.Tokenizer:ReadPragmaWarningComment (int)",
      "code_size" : "125",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ReadToEndOfLine",
      "signature" : "void Mono.CSharp.Tokenizer:ReadToEndOfLine ()",
      "code_size" : "70",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ReadSingleLineComment",
      "signature" : "void Mono.CSharp.Tokenizer:ReadSingleLineComment ()",
      "code_size" : "104",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ParsePragmaDirective",
      "signature" : "void Mono.CSharp.Tokenizer:ParsePragmaDirective ()",
      "code_size" : "1040",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "eval_val",
      "signature" : "bool Mono.CSharp.Tokenizer:eval_val (string)",
      "code_size" : "98",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "pp_primary",
      "signature" : "bool Mono.CSharp.Tokenizer:pp_primary (string&)",
      "code_size" : "565",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "pp_unary",
      "signature" : "bool Mono.CSharp.Tokenizer:pp_unary (string&)",
      "code_size" : "299",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "pp_eq",
      "signature" : "bool Mono.CSharp.Tokenizer:pp_eq (string&)",
      "code_size" : "471",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "pp_and",
      "signature" : "bool Mono.CSharp.Tokenizer:pp_and (string&)",
      "code_size" : "292",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "pp_expr",
      "signature" : "bool Mono.CSharp.Tokenizer:pp_expr (string&,bool)",
      "code_size" : "331",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "eval",
      "signature" : "bool Mono.CSharp.Tokenizer:eval (string)",
      "code_size" : "80",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_NumericConstantTooLong",
      "signature" : "void Mono.CSharp.Tokenizer:Error_NumericConstantTooLong ()",
      "code_size" : "66",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_InvalidDirective",
      "signature" : "void Mono.CSharp.Tokenizer:Error_InvalidDirective ()",
      "code_size" : "66",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_UnexpectedDirective",
      "signature" : "void Mono.CSharp.Tokenizer:Error_UnexpectedDirective (string)",
      "code_size" : "76",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_TokensSeen",
      "signature" : "void Mono.CSharp.Tokenizer:Error_TokensSeen ()",
      "code_size" : "66",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Eror_WrongPreprocessorLocation",
      "signature" : "void Mono.CSharp.Tokenizer:Eror_WrongPreprocessorLocation ()",
      "code_size" : "66",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_EndLineExpected",
      "signature" : "void Mono.CSharp.Tokenizer:Error_EndLineExpected ()",
      "code_size" : "66",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "WarningMisplacedComment",
      "signature" : "void Mono.CSharp.Tokenizer:WarningMisplacedComment (Mono.CSharp.Location)",
      "code_size" : "87",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ParsePreprocessingDirective",
      "signature" : "bool Mono.CSharp.Tokenizer:ParsePreprocessingDirective (bool)",
      "code_size" : "2053",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "consume_string",
      "signature" : "int Mono.CSharp.Tokenizer:consume_string (bool)",
      "code_size" : "1125",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "consume_identifier",
      "signature" : "int Mono.CSharp.Tokenizer:consume_identifier (int)",
      "code_size" : "73",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "consume_identifier",
      "signature" : "int Mono.CSharp.Tokenizer:consume_identifier (int,bool)",
      "code_size" : "1834",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternIdentifier",
      "signature" : "string Mono.CSharp.Tokenizer:InternIdentifier (char[],int)",
      "code_size" : "347",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "xtoken",
      "signature" : "int Mono.CSharp.Tokenizer:xtoken ()",
      "code_size" : "5118",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "TokenizeBackslash",
      "signature" : "int Mono.CSharp.Tokenizer:TokenizeBackslash ()",
      "code_size" : "558",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "TokenizeLessThan",
      "signature" : "int Mono.CSharp.Tokenizer:TokenizeLessThan ()",
      "code_size" : "350",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "TokenizeInterpolatedString",
      "signature" : "int Mono.CSharp.Tokenizer:TokenizeInterpolatedString (bool)",
      "code_size" : "1083",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "TokenizeInterpolationFormat",
      "signature" : "int Mono.CSharp.Tokenizer:TokenizeInterpolationFormat ()",
      "code_size" : "807",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateStringFromBuilder",
      "signature" : "string Mono.CSharp.Tokenizer:CreateStringFromBuilder (int)",
      "code_size" : "97",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "handle_one_line_xml_comment",
      "signature" : "void Mono.CSharp.Tokenizer:handle_one_line_xml_comment ()",
      "code_size" : "154",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "update_formatted_doc_comment",
      "signature" : "void Mono.CSharp.Tokenizer:update_formatted_doc_comment (int)",
      "code_size" : "557",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "check_incorrect_doc_comment",
      "signature" : "void Mono.CSharp.Tokenizer:check_incorrect_doc_comment ()",
      "code_size" : "72",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "consume_doc_comment",
      "signature" : "string Mono.CSharp.Tokenizer:consume_doc_comment ()",
      "code_size" : "85",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "reset_doc_comment",
      "signature" : "void Mono.CSharp.Tokenizer:reset_doc_comment ()",
      "code_size" : "33",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "cleanup",
      "signature" : "void Mono.CSharp.Tokenizer:cleanup ()",
      "code_size" : "205",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Tokenizer/KeywordEntry`1<T_REF>:.ctor (string,T_REF)",
      "code_size" : "102",
      "class" : "KeywordEntry`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Tokenizer/IdentifiersComparer:.ctor (int)",
      "code_size" : "28",
      "class" : "IdentifiersComparer",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Equals",
      "signature" : "bool Mono.CSharp.Tokenizer/IdentifiersComparer:Equals (char[],char[])",
      "code_size" : "153",
      "class" : "IdentifiersComparer",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetHashCode",
      "signature" : "int Mono.CSharp.Tokenizer/IdentifiersComparer:GetHashCode (char[])",
      "code_size" : "130",
      "class" : "IdentifiersComparer",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Tokenizer/LocatedTokenBuffer:.ctor ()",
      "code_size" : "79",
      "class" : "LocatedTokenBuffer",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Tokenizer/LocatedTokenBuffer:.ctor (Mono.CSharp.LocatedToken[])",
      "code_size" : "103",
      "class" : "LocatedTokenBuffer",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Create",
      "signature" : "Mono.CSharp.LocatedToken Mono.CSharp.Tokenizer/LocatedTokenBuffer:Create (Mono.CSharp.SourceFile,int,int)",
      "code_size" : "50",
      "class" : "LocatedTokenBuffer",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Create",
      "signature" : "Mono.CSharp.LocatedToken Mono.CSharp.Tokenizer/LocatedTokenBuffer:Create (string,Mono.CSharp.SourceFile,int,int)",
      "code_size" : "263",
      "class" : "LocatedTokenBuffer",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateOptional",
      "signature" : "void Mono.CSharp.Tokenizer/LocatedTokenBuffer:CreateOptional (Mono.CSharp.SourceFile,int,int,object&)",
      "code_size" : "61",
      "class" : "LocatedTokenBuffer",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Tokenizer/Position:.ctor (Mono.CSharp.Tokenizer)",
      "code_size" : "473",
      "class" : "Position",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.MemberName:.ctor (string)",
      "code_size" : "73",
      "class" : "MemberName",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.MemberName:.ctor (string,Mono.CSharp.Location)",
      "code_size" : "40",
      "class" : "MemberName",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.MemberName:.ctor (string,Mono.CSharp.TypeParameters,Mono.CSharp.Location)",
      "code_size" : "90",
      "class" : "MemberName",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.MemberName:.ctor (string,Mono.CSharp.TypeParameters,Mono.CSharp.FullNamedExpression,Mono.CSharp.Location)",
      "code_size" : "70",
      "class" : "MemberName",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.MemberName:.ctor (Mono.CSharp.MemberName,string,Mono.CSharp.Location)",
      "code_size" : "90",
      "class" : "MemberName",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.MemberName:.ctor (Mono.CSharp.MemberName,string,Mono.CSharp.FullNamedExpression,Mono.CSharp.Location)",
      "code_size" : "70",
      "class" : "MemberName",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.MemberName:.ctor (Mono.CSharp.MemberName,Mono.CSharp.MemberName)",
      "code_size" : "140",
      "class" : "MemberName",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Arity",
      "signature" : "int Mono.CSharp.MemberName:get_Arity ()",
      "code_size" : "61",
      "class" : "MemberName",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsGeneric",
      "signature" : "bool Mono.CSharp.MemberName:get_IsGeneric ()",
      "code_size" : "41",
      "class" : "MemberName",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Basename",
      "signature" : "string Mono.CSharp.MemberName:get_Basename ()",
      "code_size" : "48",
      "class" : "MemberName",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateMetadataName",
      "signature" : "void Mono.CSharp.MemberName:CreateMetadataName (System.Text.StringBuilder)",
      "code_size" : "122",
      "class" : "MemberName",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSignatureForDocumentation",
      "signature" : "string Mono.CSharp.MemberName:GetSignatureForDocumentation ()",
      "code_size" : "135",
      "class" : "MemberName",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSignatureForError",
      "signature" : "string Mono.CSharp.MemberName:GetSignatureForError ()",
      "code_size" : "209",
      "class" : "MemberName",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Equals",
      "signature" : "bool Mono.CSharp.MemberName:Equals (object)",
      "code_size" : "85",
      "class" : "MemberName",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Equals",
      "signature" : "bool Mono.CSharp.MemberName:Equals (Mono.CSharp.MemberName)",
      "code_size" : "228",
      "class" : "MemberName",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetHashCode",
      "signature" : "int Mono.CSharp.MemberName:GetHashCode ()",
      "code_size" : "139",
      "class" : "MemberName",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MakeName",
      "signature" : "string Mono.CSharp.MemberName:MakeName (string,Mono.CSharp.TypeParameters)",
      "code_size" : "118",
      "class" : "MemberName",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".cctor",
      "signature" : "void Mono.CSharp.MemberName:.cctor ()",
      "code_size" : "72",
      "class" : "MemberName",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.SimpleMemberName:.ctor (string,Mono.CSharp.Location)",
      "code_size" : "63",
      "class" : "SimpleMemberName",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.MemberCore:.ctor (Mono.CSharp.TypeContainer,Mono.CSharp.MemberName,Mono.CSharp.Attributes)",
      "code_size" : "108",
      "class" : "MemberCore",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mono.CSharp.IMemberDefinition.get_Name",
      "signature" : "string Mono.CSharp.MemberCore:Mono.CSharp.IMemberDefinition.get_Name ()",
      "code_size" : "24",
      "class" : "MemberCore",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_MemberName",
      "signature" : "Mono.CSharp.MemberName Mono.CSharp.MemberCore:get_MemberName ()",
      "code_size" : "20",
      "class" : "MemberCore",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_ModFlags",
      "signature" : "void Mono.CSharp.MemberCore:set_ModFlags (Mono.CSharp.Modifiers)",
      "code_size" : "48",
      "class" : "MemberCore",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ModFlags",
      "signature" : "Mono.CSharp.Modifiers Mono.CSharp.MemberCore:get_ModFlags ()",
      "code_size" : "20",
      "class" : "MemberCore",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Module",
      "signature" : "Mono.CSharp.ModuleContainer Mono.CSharp.MemberCore:get_Module ()",
      "code_size" : "32",
      "class" : "MemberCore",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Location",
      "signature" : "Mono.CSharp.Location Mono.CSharp.MemberCore:get_Location ()",
      "code_size" : "34",
      "class" : "MemberCore",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetMemberName",
      "signature" : "void Mono.CSharp.MemberCore:SetMemberName (Mono.CSharp.MemberName)",
      "code_size" : "43",
      "class" : "MemberCore",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "void Mono.CSharp.MemberCore:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "MemberCore",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CheckAbstractAndExtern",
      "signature" : "bool Mono.CSharp.MemberCore:CheckAbstractAndExtern (bool)",
      "code_size" : "855",
      "class" : "MemberCore",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CheckProtectedModifier",
      "signature" : "void Mono.CSharp.MemberCore:CheckProtectedModifier ()",
      "code_size" : "525",
      "class" : "MemberCore",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_DocComment",
      "signature" : "string Mono.CSharp.MemberCore:get_DocComment ()",
      "code_size" : "20",
      "class" : "MemberCore",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_DocComment",
      "signature" : "void Mono.CSharp.MemberCore:set_DocComment (string)",
      "code_size" : "43",
      "class" : "MemberCore",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSignatureForError",
      "signature" : "string Mono.CSharp.MemberCore:GetSignatureForError ()",
      "code_size" : "122",
      "class" : "MemberCore",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.MemberCore:Emit ()",
      "code_size" : "62",
      "class" : "MemberCore",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsAvailableForReuse",
      "signature" : "bool Mono.CSharp.MemberCore:get_IsAvailableForReuse ()",
      "code_size" : "45",
      "class" : "MemberCore",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_IsAvailableForReuse",
      "signature" : "void Mono.CSharp.MemberCore:set_IsAvailableForReuse (bool)",
      "code_size" : "87",
      "class" : "MemberCore",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsCompilerGenerated",
      "signature" : "bool Mono.CSharp.MemberCore:get_IsCompilerGenerated ()",
      "code_size" : "75",
      "class" : "MemberCore",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsImported",
      "signature" : "bool Mono.CSharp.MemberCore:get_IsImported ()",
      "code_size" : "11",
      "class" : "MemberCore",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsUsed",
      "signature" : "bool Mono.CSharp.MemberCore:get_IsUsed ()",
      "code_size" : "45",
      "class" : "MemberCore",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Report",
      "signature" : "Mono.CSharp.Report Mono.CSharp.MemberCore:get_Report ()",
      "code_size" : "35",
      "class" : "MemberCore",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetIsUsed",
      "signature" : "void Mono.CSharp.MemberCore:SetIsUsed ()",
      "code_size" : "29",
      "class" : "MemberCore",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetIsAssigned",
      "signature" : "void Mono.CSharp.MemberCore:SetIsAssigned ()",
      "code_size" : "29",
      "class" : "MemberCore",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetConstraints",
      "signature" : "void Mono.CSharp.MemberCore:SetConstraints (System.Collections.Generic.List`1<Mono.CSharp.Constraints>)",
      "code_size" : "404",
      "class" : "MemberCore",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetAttributeObsolete",
      "signature" : "System.ObsoleteAttribute Mono.CSharp.MemberCore:GetAttributeObsolete ()",
      "code_size" : "182",
      "class" : "MemberCore",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsAccessibleAs",
      "signature" : "bool Mono.CSharp.MemberCore:IsAccessibleAs (Mono.CSharp.TypeSpec)",
      "code_size" : "1658",
      "class" : "MemberCore",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsClsComplianceRequired",
      "signature" : "bool Mono.CSharp.MemberCore:IsClsComplianceRequired ()",
      "code_size" : "168",
      "class" : "MemberCore",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ConditionalConditions",
      "signature" : "string[] Mono.CSharp.MemberCore:ConditionalConditions ()",
      "code_size" : "11",
      "class" : "MemberCore",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsExposedFromAssembly",
      "signature" : "bool Mono.CSharp.MemberCore:IsExposedFromAssembly ()",
      "code_size" : "161",
      "class" : "MemberCore",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "LookupExtensionMethod",
      "signature" : "Mono.CSharp.ExtensionMethodCandidates Mono.CSharp.MemberCore:LookupExtensionMethod (string,int)",
      "code_size" : "151",
      "class" : "MemberCore",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "LookupNamespaceAlias",
      "signature" : "Mono.CSharp.FullNamedExpression Mono.CSharp.MemberCore:LookupNamespaceAlias (string)",
      "code_size" : "42",
      "class" : "MemberCore",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "LookupNamespaceOrType",
      "signature" : "Mono.CSharp.FullNamedExpression Mono.CSharp.MemberCore:LookupNamespaceOrType (string,int,Mono.CSharp.LookupMode,Mono.CSharp.Location)",
      "code_size" : "72",
      "class" : "MemberCore",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_CLSAttributeValue",
      "signature" : "System.Nullable`1<bool> Mono.CSharp.MemberCore:get_CLSAttributeValue ()",
      "code_size" : "465",
      "class" : "MemberCore",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_HasClsCompliantAttribute",
      "signature" : "bool Mono.CSharp.MemberCore:get_HasClsCompliantAttribute ()",
      "code_size" : "49",
      "class" : "MemberCore",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EnableOverloadChecks",
      "signature" : "bool Mono.CSharp.MemberCore:EnableOverloadChecks (Mono.CSharp.MemberCore)",
      "code_size" : "11",
      "class" : "MemberCore",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "VerifyClsCompliance",
      "signature" : "bool Mono.CSharp.MemberCore:VerifyClsCompliance ()",
      "code_size" : "1333",
      "class" : "MemberCore",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Warning_IdentifierNotCompliant",
      "signature" : "void Mono.CSharp.MemberCore:Warning_IdentifierNotCompliant ()",
      "code_size" : "108",
      "class" : "MemberCore",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetCallerMemberName",
      "signature" : "string Mono.CSharp.MemberCore:GetCallerMemberName ()",
      "code_size" : "24",
      "class" : "MemberCore",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetCompletionStartingWith",
      "signature" : "void Mono.CSharp.MemberCore:GetCompletionStartingWith (string,System.Collections.Generic.List`1<string>)",
      "code_size" : "52",
      "class" : "MemberCore",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GenerateDocComment",
      "signature" : "void Mono.CSharp.MemberCore:GenerateDocComment (Mono.CSharp.DocumentationBuilder)",
      "code_size" : "359",
      "class" : "MemberCore",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "WriteDebugSymbol",
      "signature" : "void Mono.CSharp.MemberCore:WriteDebugSymbol (Mono.CompilerServices.SymbolWriter.MonoSymbolFile)",
      "code_size" : "9",
      "class" : "MemberCore",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Compiler",
      "signature" : "Mono.CSharp.CompilerContext Mono.CSharp.MemberCore:get_Compiler ()",
      "code_size" : "37",
      "class" : "MemberCore",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_CurrentType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.MemberCore:get_CurrentType ()",
      "code_size" : "32",
      "class" : "MemberCore",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_CurrentMemberDefinition",
      "signature" : "Mono.CSharp.MemberCore Mono.CSharp.MemberCore:get_CurrentMemberDefinition ()",
      "code_size" : "16",
      "class" : "MemberCore",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_CurrentTypeParameters",
      "signature" : "Mono.CSharp.TypeParameters Mono.CSharp.MemberCore:get_CurrentTypeParameters ()",
      "code_size" : "11",
      "class" : "MemberCore",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsObsolete",
      "signature" : "bool Mono.CSharp.MemberCore:get_IsObsolete ()",
      "code_size" : "76",
      "class" : "MemberCore",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsUnsafe",
      "signature" : "bool Mono.CSharp.MemberCore:get_IsUnsafe ()",
      "code_size" : "75",
      "class" : "MemberCore",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsStatic",
      "signature" : "bool Mono.CSharp.MemberCore:get_IsStatic ()",
      "code_size" : "45",
      "class" : "MemberCore",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.MemberSpec:.ctor (Mono.CSharp.MemberKind,Mono.CSharp.TypeSpec,Mono.CSharp.IMemberDefinition,Mono.CSharp.Modifiers)",
      "code_size" : "130",
      "class" : "MemberSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Arity",
      "signature" : "int Mono.CSharp.MemberSpec:get_Arity ()",
      "code_size" : "11",
      "class" : "MemberSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_DeclaringType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.MemberSpec:get_DeclaringType ()",
      "code_size" : "20",
      "class" : "MemberSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_DeclaringType",
      "signature" : "void Mono.CSharp.MemberSpec:set_DeclaringType (Mono.CSharp.TypeSpec)",
      "code_size" : "43",
      "class" : "MemberSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_MemberDefinition",
      "signature" : "Mono.CSharp.IMemberDefinition Mono.CSharp.MemberSpec:get_MemberDefinition ()",
      "code_size" : "20",
      "class" : "MemberSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Modifiers",
      "signature" : "Mono.CSharp.Modifiers Mono.CSharp.MemberSpec:get_Modifiers ()",
      "code_size" : "20",
      "class" : "MemberSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Modifiers",
      "signature" : "void Mono.CSharp.MemberSpec:set_Modifiers (Mono.CSharp.Modifiers)",
      "code_size" : "28",
      "class" : "MemberSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Name",
      "signature" : "string Mono.CSharp.MemberSpec:get_Name ()",
      "code_size" : "36",
      "class" : "MemberSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsAbstract",
      "signature" : "bool Mono.CSharp.MemberSpec:get_IsAbstract ()",
      "code_size" : "43",
      "class" : "MemberSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsAccessor",
      "signature" : "bool Mono.CSharp.MemberSpec:get_IsAccessor ()",
      "code_size" : "45",
      "class" : "MemberSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_IsAccessor",
      "signature" : "void Mono.CSharp.MemberSpec:set_IsAccessor (bool)",
      "code_size" : "87",
      "class" : "MemberSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsGeneric",
      "signature" : "bool Mono.CSharp.MemberSpec:get_IsGeneric ()",
      "code_size" : "45",
      "class" : "MemberSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_IsGeneric",
      "signature" : "void Mono.CSharp.MemberSpec:set_IsGeneric (bool)",
      "code_size" : "87",
      "class" : "MemberSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsNotCSharpCompatible",
      "signature" : "bool Mono.CSharp.MemberSpec:get_IsNotCSharpCompatible ()",
      "code_size" : "45",
      "class" : "MemberSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_IsNotCSharpCompatible",
      "signature" : "void Mono.CSharp.MemberSpec:set_IsNotCSharpCompatible (bool)",
      "code_size" : "87",
      "class" : "MemberSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsPrivate",
      "signature" : "bool Mono.CSharp.MemberSpec:get_IsPrivate ()",
      "code_size" : "43",
      "class" : "MemberSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsPublic",
      "signature" : "bool Mono.CSharp.MemberSpec:get_IsPublic ()",
      "code_size" : "43",
      "class" : "MemberSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsStatic",
      "signature" : "bool Mono.CSharp.MemberSpec:get_IsStatic ()",
      "code_size" : "45",
      "class" : "MemberSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CheckObsoleteness",
      "signature" : "void Mono.CSharp.MemberSpec:CheckObsoleteness (Mono.CSharp.IMemberContext,Mono.CSharp.Location)",
      "code_size" : "166",
      "class" : "MemberSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetAttributeObsolete",
      "signature" : "System.ObsoleteAttribute Mono.CSharp.MemberSpec:GetAttributeObsolete ()",
      "code_size" : "101",
      "class" : "MemberSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetMissingDependencies",
      "signature" : "System.Collections.Generic.List`1<Mono.CSharp.MissingTypeSpecReference> Mono.CSharp.MemberSpec:GetMissingDependencies ()",
      "code_size" : "21",
      "class" : "MemberSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetMissingDependencies",
      "signature" : "System.Collections.Generic.List`1<Mono.CSharp.MissingTypeSpecReference> Mono.CSharp.MemberSpec:GetMissingDependencies (Mono.CSharp.MemberSpec)",
      "code_size" : "293",
      "class" : "MemberSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsNotCLSCompliant",
      "signature" : "bool Mono.CSharp.MemberSpec:IsNotCLSCompliant (bool&)",
      "code_size" : "163",
      "class" : "MemberSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSignatureForDocumentation",
      "signature" : "string Mono.CSharp.MemberSpec:GetSignatureForDocumentation ()",
      "code_size" : "80",
      "class" : "MemberSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSignatureForError",
      "signature" : "string Mono.CSharp.MemberSpec:GetSignatureForError ()",
      "code_size" : "170",
      "class" : "MemberSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "InflateMember",
      "signature" : "Mono.CSharp.MemberSpec Mono.CSharp.MemberSpec:InflateMember (Mono.CSharp.TypeParameterInflator)",
      "code_size" : "155",
      "class" : "MemberSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsAccessible",
      "signature" : "bool Mono.CSharp.MemberSpec:IsAccessible (Mono.CSharp.IMemberContext)",
      "code_size" : "556",
      "class" : "MemberSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsCLSCompliant",
      "signature" : "bool Mono.CSharp.MemberSpec:IsCLSCompliant ()",
      "code_size" : "337",
      "class" : "MemberSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsConditionallyExcluded",
      "signature" : "bool Mono.CSharp.MemberSpec:IsConditionallyExcluded (Mono.CSharp.IMemberContext)",
      "code_size" : "285",
      "class" : "MemberSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ToString",
      "signature" : "string Mono.CSharp.MemberSpec:ToString ()",
      "code_size" : "22",
      "class" : "MemberSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Delegate:.ctor (Mono.CSharp.TypeContainer,Mono.CSharp.FullNamedExpression,Mono.CSharp.Modifiers,Mono.CSharp.MemberName,Mono.CSharp.ParametersCompiled,Mono.CSharp.Attributes)",
      "code_size" : "396",
      "class" : "Delegate",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_MemberType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.Delegate:get_MemberType ()",
      "code_size" : "33",
      "class" : "Delegate",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Parameters",
      "signature" : "Mono.CSharp.AParametersCollection Mono.CSharp.Delegate:get_Parameters ()",
      "code_size" : "23",
      "class" : "Delegate",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_TypExpression",
      "signature" : "Mono.CSharp.FullNamedExpression Mono.CSharp.Delegate:get_TypExpression ()",
      "code_size" : "23",
      "class" : "Delegate",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "void Mono.CSharp.Delegate:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "Delegate",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ApplyAttributeBuilder",
      "signature" : "void Mono.CSharp.Delegate:ApplyAttributeBuilder (Mono.CSharp.Attribute,Mono.CSharp.MethodSpec,byte[],Mono.CSharp.PredefinedAttributes)",
      "code_size" : "338",
      "class" : "Delegate",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_AttributeTargets",
      "signature" : "System.AttributeTargets Mono.CSharp.Delegate:get_AttributeTargets ()",
      "code_size" : "14",
      "class" : "Delegate",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoDefineMembers",
      "signature" : "bool Mono.CSharp.Delegate:DoDefineMembers ()",
      "code_size" : "1889",
      "class" : "Delegate",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DefineAsyncMethods",
      "signature" : "void Mono.CSharp.Delegate:DefineAsyncMethods (Mono.CSharp.TypeExpression)",
      "code_size" : "3002",
      "class" : "Delegate",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "PrepareEmit",
      "signature" : "void Mono.CSharp.Delegate:PrepareEmit ()",
      "code_size" : "178",
      "class" : "Delegate",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.Delegate:Emit ()",
      "code_size" : "1418",
      "class" : "Delegate",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveBaseTypes",
      "signature" : "Mono.CSharp.TypeSpec[] Mono.CSharp.Delegate:ResolveBaseTypes (Mono.CSharp.FullNamedExpression&)",
      "code_size" : "94",
      "class" : "Delegate",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_TypeAttr",
      "signature" : "System.Reflection.TypeAttributes Mono.CSharp.Delegate:get_TypeAttr ()",
      "code_size" : "26",
      "class" : "Delegate",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ValidAttributeTargets",
      "signature" : "string[] Mono.CSharp.Delegate:get_ValidAttributeTargets ()",
      "code_size" : "19",
      "class" : "Delegate",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "VerifyClsCompliance",
      "signature" : "bool Mono.CSharp.Delegate:VerifyClsCompliance ()",
      "code_size" : "189",
      "class" : "Delegate",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetConstructor",
      "signature" : "Mono.CSharp.MethodSpec Mono.CSharp.Delegate:GetConstructor (Mono.CSharp.TypeSpec)",
      "code_size" : "155",
      "class" : "Delegate",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetInvokeMethod",
      "signature" : "Mono.CSharp.MethodSpec Mono.CSharp.Delegate:GetInvokeMethod (Mono.CSharp.TypeSpec)",
      "code_size" : "170",
      "class" : "Delegate",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetParameters",
      "signature" : "Mono.CSharp.AParametersCollection Mono.CSharp.Delegate:GetParameters (Mono.CSharp.TypeSpec)",
      "code_size" : "28",
      "class" : "Delegate",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsTypeCovariant",
      "signature" : "bool Mono.CSharp.Delegate:IsTypeCovariant (Mono.CSharp.ResolveContext,Mono.CSharp.TypeSpec,Mono.CSharp.TypeSpec)",
      "code_size" : "170",
      "class" : "Delegate",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "FullDelegateDesc",
      "signature" : "string Mono.CSharp.Delegate:FullDelegateDesc (Mono.CSharp.MethodSpec)",
      "code_size" : "46",
      "class" : "Delegate",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_InstanceExpression",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Delegate:get_InstanceExpression ()",
      "code_size" : "23",
      "class" : "Delegate",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_InstanceExpression",
      "signature" : "void Mono.CSharp.Delegate:set_InstanceExpression (Mono.CSharp.Expression)",
      "code_size" : "49",
      "class" : "Delegate",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".cctor",
      "signature" : "void Mono.CSharp.Delegate:.cctor ()",
      "code_size" : "122",
      "class" : "Delegate",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.DelegateCreation:.ctor ()",
      "code_size" : "9",
      "class" : "DelegateCreation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_AllowSpecialMethodsInvocation",
      "signature" : "bool Mono.CSharp.DelegateCreation:get_AllowSpecialMethodsInvocation ()",
      "code_size" : "20",
      "class" : "DelegateCreation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_AllowSpecialMethodsInvocation",
      "signature" : "void Mono.CSharp.DelegateCreation:set_AllowSpecialMethodsInvocation (bool)",
      "code_size" : "31",
      "class" : "DelegateCreation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ContainsEmitWithAwait",
      "signature" : "bool Mono.CSharp.DelegateCreation:ContainsEmitWithAwait ()",
      "code_size" : "59",
      "class" : "DelegateCreation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateDelegateMethodArguments",
      "signature" : "Mono.CSharp.Arguments Mono.CSharp.DelegateCreation:CreateDelegateMethodArguments (Mono.CSharp.ResolveContext,Mono.CSharp.AParametersCollection,Mono.CSharp.TypeSpec[],Mono.CSharp.Location)",
      "code_size" : "456",
      "class" : "DelegateCreation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.DelegateCreation:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "1083",
      "class" : "DelegateCreation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveConditionalAccessReceiver",
      "signature" : "void Mono.CSharp.DelegateCreation:ResolveConditionalAccessReceiver (Mono.CSharp.ResolveContext)",
      "code_size" : "143",
      "class" : "DelegateCreation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.DelegateCreation:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "1551",
      "class" : "DelegateCreation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.DelegateCreation:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "909",
      "class" : "DelegateCreation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "FlowAnalysis",
      "signature" : "void Mono.CSharp.DelegateCreation:FlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "42",
      "class" : "DelegateCreation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_ConversionFailed",
      "signature" : "void Mono.CSharp.DelegateCreation:Error_ConversionFailed (Mono.CSharp.ResolveContext,Mono.CSharp.MethodSpec,Mono.CSharp.Expression)",
      "code_size" : "1003",
      "class" : "DelegateCreation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ImplicitStandardConversionExists",
      "signature" : "bool Mono.CSharp.DelegateCreation:ImplicitStandardConversionExists (Mono.CSharp.ResolveContext,Mono.CSharp.MethodGroupExpr,Mono.CSharp.TypeSpec)",
      "code_size" : "198",
      "class" : "DelegateCreation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mono.CSharp.OverloadResolver.IErrorHandler.AmbiguousCandidates",
      "signature" : "bool Mono.CSharp.DelegateCreation:Mono.CSharp.OverloadResolver.IErrorHandler.AmbiguousCandidates (Mono.CSharp.ResolveContext,Mono.CSharp.MemberSpec,Mono.CSharp.MemberSpec)",
      "code_size" : "11",
      "class" : "DelegateCreation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mono.CSharp.OverloadResolver.IErrorHandler.ArgumentMismatch",
      "signature" : "bool Mono.CSharp.DelegateCreation:Mono.CSharp.OverloadResolver.IErrorHandler.ArgumentMismatch (Mono.CSharp.ResolveContext,Mono.CSharp.MemberSpec,Mono.CSharp.Argument,int)",
      "code_size" : "102",
      "class" : "DelegateCreation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mono.CSharp.OverloadResolver.IErrorHandler.NoArgumentMatch",
      "signature" : "bool Mono.CSharp.DelegateCreation:Mono.CSharp.OverloadResolver.IErrorHandler.NoArgumentMatch (Mono.CSharp.ResolveContext,Mono.CSharp.MemberSpec)",
      "code_size" : "102",
      "class" : "DelegateCreation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mono.CSharp.OverloadResolver.IErrorHandler.TypeInferenceFailed",
      "signature" : "bool Mono.CSharp.DelegateCreation:Mono.CSharp.OverloadResolver.IErrorHandler.TypeInferenceFailed (Mono.CSharp.ResolveContext,Mono.CSharp.MemberSpec)",
      "code_size" : "11",
      "class" : "DelegateCreation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ImplicitDelegateCreation:.ctor (Mono.CSharp.TypeSpec,Mono.CSharp.MethodGroupExpr,Mono.CSharp.Location)",
      "code_size" : "90",
      "class" : "ImplicitDelegateCreation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ContainsMethodTypeParameter",
      "signature" : "bool Mono.CSharp.ImplicitDelegateCreation:ContainsMethodTypeParameter (Mono.CSharp.TypeSpec)",
      "code_size" : "311",
      "class" : "ImplicitDelegateCreation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "HasMvar",
      "signature" : "bool Mono.CSharp.ImplicitDelegateCreation:HasMvar ()",
      "code_size" : "208",
      "class" : "ImplicitDelegateCreation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.ImplicitDelegateCreation:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "474",
      "class" : "ImplicitDelegateCreation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.ImplicitDelegateCreation:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "643",
      "class" : "ImplicitDelegateCreation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.NewDelegate:.ctor (Mono.CSharp.TypeSpec,Mono.CSharp.Arguments,Mono.CSharp.Location)",
      "code_size" : "90",
      "class" : "NewDelegate",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.NewDelegate:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "724",
      "class" : "NewDelegate",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.DelegateInvocation:.ctor (Mono.CSharp.Expression,Mono.CSharp.Arguments,bool,Mono.CSharp.Location)",
      "code_size" : "110",
      "class" : "DelegateInvocation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ContainsEmitWithAwait",
      "signature" : "bool Mono.CSharp.DelegateInvocation:ContainsEmitWithAwait ()",
      "code_size" : "87",
      "class" : "DelegateInvocation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.DelegateInvocation:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "145",
      "class" : "DelegateInvocation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "FlowAnalysis",
      "signature" : "void Mono.CSharp.DelegateInvocation:FlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "83",
      "class" : "DelegateInvocation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.DelegateInvocation:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "395",
      "class" : "DelegateInvocation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.DelegateInvocation:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "358",
      "class" : "DelegateInvocation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitStatement",
      "signature" : "void Mono.CSharp.DelegateInvocation:EmitStatement (Mono.CSharp.EmitContext)",
      "code_size" : "302",
      "class" : "DelegateInvocation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MakeExpression",
      "signature" : "System.Linq.Expressions.Expression Mono.CSharp.DelegateInvocation:MakeExpression (Mono.CSharp.BuilderContext)",
      "code_size" : "43",
      "class" : "DelegateInvocation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.DocumentationBuilder:.ctor (Mono.CSharp.ModuleContainer)",
      "code_size" : "282",
      "class" : "DocumentationBuilder",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Report",
      "signature" : "Mono.CSharp.Report Mono.CSharp.DocumentationBuilder:get_Report ()",
      "code_size" : "42",
      "class" : "DocumentationBuilder",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ParsedName",
      "signature" : "Mono.CSharp.MemberName Mono.CSharp.DocumentationBuilder:get_ParsedName ()",
      "code_size" : "20",
      "class" : "DocumentationBuilder",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_ParsedName",
      "signature" : "void Mono.CSharp.DocumentationBuilder:set_ParsedName (Mono.CSharp.MemberName)",
      "code_size" : "43",
      "class" : "DocumentationBuilder",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ParsedParameters",
      "signature" : "System.Collections.Generic.List`1<Mono.CSharp.DocumentationParameter> Mono.CSharp.DocumentationBuilder:get_ParsedParameters ()",
      "code_size" : "20",
      "class" : "DocumentationBuilder",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_ParsedParameters",
      "signature" : "void Mono.CSharp.DocumentationBuilder:set_ParsedParameters (System.Collections.Generic.List`1<Mono.CSharp.DocumentationParameter>)",
      "code_size" : "43",
      "class" : "DocumentationBuilder",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ParsedBuiltinType",
      "signature" : "Mono.CSharp.TypeExpression Mono.CSharp.DocumentationBuilder:get_ParsedBuiltinType ()",
      "code_size" : "20",
      "class" : "DocumentationBuilder",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_ParsedBuiltinType",
      "signature" : "void Mono.CSharp.DocumentationBuilder:set_ParsedBuiltinType (Mono.CSharp.TypeExpression)",
      "code_size" : "43",
      "class" : "DocumentationBuilder",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ParsedOperator",
      "signature" : "System.Nullable`1<Mono.CSharp.Operator/OpType> Mono.CSharp.DocumentationBuilder:get_ParsedOperator ()",
      "code_size" : "43",
      "class" : "DocumentationBuilder",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_ParsedOperator",
      "signature" : "void Mono.CSharp.DocumentationBuilder:set_ParsedOperator (System.Nullable`1<Mono.CSharp.Operator/OpType>)",
      "code_size" : "44",
      "class" : "DocumentationBuilder",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetDocCommentNode",
      "signature" : "System.Xml.XmlNode Mono.CSharp.DocumentationBuilder:GetDocCommentNode (Mono.CSharp.MemberCore,string)",
      "code_size" : "586",
      "class" : "DocumentationBuilder",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GenerateDocumentationForMember",
      "signature" : "void Mono.CSharp.DocumentationBuilder:GenerateDocumentationForMember (Mono.CSharp.MemberCore)",
      "code_size" : "3131",
      "class" : "DocumentationBuilder",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "HandleInclude",
      "signature" : "bool Mono.CSharp.DocumentationBuilder:HandleInclude (Mono.CSharp.MemberCore,System.Xml.XmlElement)",
      "code_size" : "2077",
      "class" : "DocumentationBuilder",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "HandleSee",
      "signature" : "void Mono.CSharp.DocumentationBuilder:HandleSee (Mono.CSharp.MemberCore,System.Xml.XmlElement)",
      "code_size" : "28",
      "class" : "DocumentationBuilder",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "HandleSeeAlso",
      "signature" : "void Mono.CSharp.DocumentationBuilder:HandleSeeAlso (Mono.CSharp.MemberCore,System.Xml.XmlElement)",
      "code_size" : "28",
      "class" : "DocumentationBuilder",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "HandleException",
      "signature" : "void Mono.CSharp.DocumentationBuilder:HandleException (Mono.CSharp.MemberCore,System.Xml.XmlElement)",
      "code_size" : "28",
      "class" : "DocumentationBuilder",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "HandleTypeParam",
      "signature" : "void Mono.CSharp.DocumentationBuilder:HandleTypeParam (Mono.CSharp.MemberCore,System.Xml.XmlElement)",
      "code_size" : "244",
      "class" : "DocumentationBuilder",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "HandleTypeParamRef",
      "signature" : "void Mono.CSharp.DocumentationBuilder:HandleTypeParamRef (Mono.CSharp.MemberCore,System.Xml.XmlElement)",
      "code_size" : "271",
      "class" : "DocumentationBuilder",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveMemberName",
      "signature" : "Mono.CSharp.FullNamedExpression Mono.CSharp.DocumentationBuilder:ResolveMemberName (Mono.CSharp.IMemberContext,Mono.CSharp.MemberName)",
      "code_size" : "560",
      "class" : "DocumentationBuilder",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "HandleXrefCommon",
      "signature" : "void Mono.CSharp.DocumentationBuilder:HandleXrefCommon (Mono.CSharp.MemberCore,System.Xml.XmlElement)",
      "code_size" : "5687",
      "class" : "DocumentationBuilder",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetMemberDocHead",
      "signature" : "string Mono.CSharp.DocumentationBuilder:GetMemberDocHead (Mono.CSharp.MemberSpec)",
      "code_size" : "337",
      "class" : "DocumentationBuilder",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CheckParametersComments",
      "signature" : "void Mono.CSharp.DocumentationBuilder:CheckParametersComments (Mono.CSharp.MemberCore,Mono.CSharp.IParametersMember,System.Xml.XmlElement)",
      "code_size" : "1257",
      "class" : "DocumentationBuilder",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "OutputDocComment",
      "signature" : "bool Mono.CSharp.DocumentationBuilder:OutputDocComment (string,string)",
      "code_size" : "687",
      "class" : "DocumentationBuilder",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".cctor",
      "signature" : "void Mono.CSharp.DocumentationBuilder:.cctor ()",
      "code_size" : "42",
      "class" : "DocumentationBuilder",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.DocumentationMemberContext:.ctor (Mono.CSharp.MemberCore,Mono.CSharp.MemberName)",
      "code_size" : "74",
      "class" : "DocumentationMemberContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_CurrentType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.DocumentationMemberContext:get_CurrentType ()",
      "code_size" : "32",
      "class" : "DocumentationMemberContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_CurrentTypeParameters",
      "signature" : "Mono.CSharp.TypeParameters Mono.CSharp.DocumentationMemberContext:get_CurrentTypeParameters ()",
      "code_size" : "24",
      "class" : "DocumentationMemberContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_CurrentMemberDefinition",
      "signature" : "Mono.CSharp.MemberCore Mono.CSharp.DocumentationMemberContext:get_CurrentMemberDefinition ()",
      "code_size" : "26",
      "class" : "DocumentationMemberContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsObsolete",
      "signature" : "bool Mono.CSharp.DocumentationMemberContext:get_IsObsolete ()",
      "code_size" : "11",
      "class" : "DocumentationMemberContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsUnsafe",
      "signature" : "bool Mono.CSharp.DocumentationMemberContext:get_IsUnsafe ()",
      "code_size" : "55",
      "class" : "DocumentationMemberContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsStatic",
      "signature" : "bool Mono.CSharp.DocumentationMemberContext:get_IsStatic ()",
      "code_size" : "55",
      "class" : "DocumentationMemberContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Module",
      "signature" : "Mono.CSharp.ModuleContainer Mono.CSharp.DocumentationMemberContext:get_Module ()",
      "code_size" : "32",
      "class" : "DocumentationMemberContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSignatureForError",
      "signature" : "string Mono.CSharp.DocumentationMemberContext:GetSignatureForError ()",
      "code_size" : "32",
      "class" : "DocumentationMemberContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "LookupExtensionMethod",
      "signature" : "Mono.CSharp.ExtensionMethodCandidates Mono.CSharp.DocumentationMemberContext:LookupExtensionMethod (string,int)",
      "code_size" : "11",
      "class" : "DocumentationMemberContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "LookupNamespaceOrType",
      "signature" : "Mono.CSharp.FullNamedExpression Mono.CSharp.DocumentationMemberContext:LookupNamespaceOrType (string,int,Mono.CSharp.LookupMode,Mono.CSharp.Location)",
      "code_size" : "294",
      "class" : "DocumentationMemberContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "LookupNamespaceAlias",
      "signature" : "Mono.CSharp.FullNamedExpression Mono.CSharp.DocumentationMemberContext:LookupNamespaceAlias (string)",
      "code_size" : "27",
      "class" : "DocumentationMemberContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.DocumentationParameter:.ctor (Mono.CSharp.Parameter/Modifier,Mono.CSharp.FullNamedExpression)",
      "code_size" : "61",
      "class" : "DocumentationParameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.DocumentationParameter:.ctor (Mono.CSharp.FullNamedExpression)",
      "code_size" : "43",
      "class" : "DocumentationParameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_TypeSpec",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.DocumentationParameter:get_TypeSpec ()",
      "code_size" : "20",
      "class" : "DocumentationParameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Resolve",
      "signature" : "void Mono.CSharp.DocumentationParameter:Resolve (Mono.CSharp.IMemberContext)",
      "code_size" : "71",
      "class" : "DocumentationParameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Driver:.ctor (Mono.CSharp.CompilerContext)",
      "code_size" : "43",
      "class" : "Driver",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Report",
      "signature" : "Mono.CSharp.Report Mono.CSharp.Driver:get_Report ()",
      "code_size" : "30",
      "class" : "Driver",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "tokenize_file",
      "signature" : "void Mono.CSharp.Driver:tokenize_file (Mono.CSharp.SourceFile,Mono.CSharp.ModuleContainer,Mono.CSharp.ParserSession)",
      "code_size" : "898",
      "class" : "Driver",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Parse",
      "signature" : "void Mono.CSharp.Driver:Parse (Mono.CSharp.ModuleContainer)",
      "code_size" : "388",
      "class" : "Driver",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Parse",
      "signature" : "void Mono.CSharp.Driver:Parse (Mono.CSharp.SourceFile,Mono.CSharp.ModuleContainer,Mono.CSharp.ParserSession,Mono.CSharp.Report)",
      "code_size" : "745",
      "class" : "Driver",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Parse",
      "signature" : "void Mono.CSharp.Driver:Parse (Mono.CSharp.SeekableStreamReader,Mono.CSharp.SourceFile,Mono.CSharp.ModuleContainer,Mono.CSharp.ParserSession,Mono.CSharp.Report)",
      "code_size" : "170",
      "class" : "Driver",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Main",
      "signature" : "int Mono.CSharp.Driver:Main (string[])",
      "code_size" : "763",
      "class" : "Driver",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetPackageFlags",
      "signature" : "string Mono.CSharp.Driver:GetPackageFlags (string,Mono.CSharp.Report)",
      "code_size" : "47",
      "class" : "Driver",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Compile",
      "signature" : "bool Mono.CSharp.Driver:Compile ()",
      "code_size" : "1164",
      "class" : "Driver",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.CompilerCallableEntryPoint:.ctor ()",
      "code_size" : "9",
      "class" : "CompilerCallableEntryPoint",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "InvokeCompiler",
      "signature" : "bool Mono.CSharp.CompilerCallableEntryPoint:InvokeCompiler (string[],System.IO.TextWriter)",
      "code_size" : "299",
      "class" : "CompilerCallableEntryPoint",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_AllWarningNumbers",
      "signature" : "int[] Mono.CSharp.CompilerCallableEntryPoint:get_AllWarningNumbers ()",
      "code_size" : "19",
      "class" : "CompilerCallableEntryPoint",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Reset",
      "signature" : "void Mono.CSharp.CompilerCallableEntryPoint:Reset ()",
      "code_size" : "19",
      "class" : "CompilerCallableEntryPoint",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "PartialReset",
      "signature" : "void Mono.CSharp.CompilerCallableEntryPoint:PartialReset ()",
      "code_size" : "16",
      "class" : "CompilerCallableEntryPoint",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Reset",
      "signature" : "void Mono.CSharp.CompilerCallableEntryPoint:Reset (bool)",
      "code_size" : "44",
      "class" : "CompilerCallableEntryPoint",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.DynamicTypeExpr:.ctor (Mono.CSharp.Location)",
      "code_size" : "32",
      "class" : "DynamicTypeExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveAsType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.DynamicTypeExpr:ResolveAsType (Mono.CSharp.IMemberContext,bool)",
      "code_size" : "107",
      "class" : "DynamicTypeExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.RuntimeValueExpression:.ctor (System.Dynamic.DynamicMetaObject,Mono.CSharp.TypeSpec)",
      "code_size" : "79",
      "class" : "RuntimeValueExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsSuggestionOnly",
      "signature" : "bool Mono.CSharp.RuntimeValueExpression:get_IsSuggestionOnly ()",
      "code_size" : "20",
      "class" : "RuntimeValueExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_IsSuggestionOnly",
      "signature" : "void Mono.CSharp.RuntimeValueExpression:set_IsSuggestionOnly (bool)",
      "code_size" : "31",
      "class" : "RuntimeValueExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_MetaObject",
      "signature" : "System.Dynamic.DynamicMetaObject Mono.CSharp.RuntimeValueExpression:get_MetaObject ()",
      "code_size" : "20",
      "class" : "RuntimeValueExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddressOf",
      "signature" : "void Mono.CSharp.RuntimeValueExpression:AddressOf (Mono.CSharp.EmitContext,Mono.CSharp.AddressOp)",
      "code_size" : "27",
      "class" : "RuntimeValueExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ContainsEmitWithAwait",
      "signature" : "bool Mono.CSharp.RuntimeValueExpression:ContainsEmitWithAwait ()",
      "code_size" : "27",
      "class" : "RuntimeValueExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.RuntimeValueExpression:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "27",
      "class" : "RuntimeValueExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.RuntimeValueExpression:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "16",
      "class" : "RuntimeValueExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolveLValue",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.RuntimeValueExpression:DoResolveLValue (Mono.CSharp.ResolveContext,Mono.CSharp.Expression)",
      "code_size" : "16",
      "class" : "RuntimeValueExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.RuntimeValueExpression:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "27",
      "class" : "RuntimeValueExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.RuntimeValueExpression:Emit (Mono.CSharp.EmitContext,bool)",
      "code_size" : "27",
      "class" : "RuntimeValueExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitAssign",
      "signature" : "void Mono.CSharp.RuntimeValueExpression:EmitAssign (Mono.CSharp.EmitContext,Mono.CSharp.Expression,bool,bool)",
      "code_size" : "27",
      "class" : "RuntimeValueExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MakeAssignExpression",
      "signature" : "System.Linq.Expressions.Expression Mono.CSharp.RuntimeValueExpression:MakeAssignExpression (Mono.CSharp.BuilderContext,Mono.CSharp.Expression)",
      "code_size" : "30",
      "class" : "RuntimeValueExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MakeExpression",
      "signature" : "System.Linq.Expressions.Expression Mono.CSharp.RuntimeValueExpression:MakeExpression (Mono.CSharp.BuilderContext)",
      "code_size" : "330",
      "class" : "RuntimeValueExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.DynamicResultCast:.ctor (Mono.CSharp.TypeSpec,Mono.CSharp.Expression)",
      "code_size" : "74",
      "class" : "DynamicResultCast",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.DynamicResultCast:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "76",
      "class" : "DynamicResultCast",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MakeExpression",
      "signature" : "System.Linq.Expressions.Expression Mono.CSharp.DynamicResultCast:MakeExpression (Mono.CSharp.BuilderContext)",
      "code_size" : "85",
      "class" : "DynamicResultCast",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.DynamicExpressionStatement:.ctor (Mono.CSharp.IDynamicBinder,Mono.CSharp.Arguments,Mono.CSharp.Location)",
      "code_size" : "90",
      "class" : "DynamicExpressionStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Arguments",
      "signature" : "Mono.CSharp.Arguments Mono.CSharp.DynamicExpressionStatement:get_Arguments ()",
      "code_size" : "20",
      "class" : "DynamicExpressionStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ContainsEmitWithAwait",
      "signature" : "bool Mono.CSharp.DynamicExpressionStatement:ContainsEmitWithAwait ()",
      "code_size" : "31",
      "class" : "DynamicExpressionStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.DynamicExpressionStatement:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "77",
      "class" : "DynamicExpressionStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.DynamicExpressionStatement:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "93",
      "class" : "DynamicExpressionStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolveCore",
      "signature" : "bool Mono.CSharp.DynamicExpressionStatement:DoResolveCore (Mono.CSharp.ResolveContext)",
      "code_size" : "680",
      "class" : "DynamicExpressionStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.DynamicExpressionStatement:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "39",
      "class" : "DynamicExpressionStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitStatement",
      "signature" : "void Mono.CSharp.DynamicExpressionStatement:EmitStatement (Mono.CSharp.EmitContext)",
      "code_size" : "42",
      "class" : "DynamicExpressionStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitConditionalAccess",
      "signature" : "void Mono.CSharp.DynamicExpressionStatement:EmitConditionalAccess (Mono.CSharp.EmitContext)",
      "code_size" : "1174",
      "class" : "DynamicExpressionStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitCall",
      "signature" : "void Mono.CSharp.DynamicExpressionStatement:EmitCall (Mono.CSharp.EmitContext,Mono.CSharp.Expression,Mono.CSharp.Arguments,bool)",
      "code_size" : "6688",
      "class" : "DynamicExpressionStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "FlowAnalysis",
      "signature" : "void Mono.CSharp.DynamicExpressionStatement:FlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "41",
      "class" : "DynamicExpressionStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetBinderNamespace",
      "signature" : "Mono.CSharp.MemberAccess Mono.CSharp.DynamicExpressionStatement:GetBinderNamespace (Mono.CSharp.Location)",
      "code_size" : "201",
      "class" : "DynamicExpressionStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetBinder",
      "signature" : "Mono.CSharp.MemberAccess Mono.CSharp.DynamicExpressionStatement:GetBinder (string,Mono.CSharp.Location)",
      "code_size" : "125",
      "class" : "DynamicExpressionStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsConditionalAccessReceiver",
      "signature" : "bool Mono.CSharp.DynamicExpressionStatement:get_IsConditionalAccessReceiver ()",
      "code_size" : "11",
      "class" : "DynamicExpressionStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.DynamicExpressionStatement/BinderFlags:.ctor (Mono.CSharp.CSharpBinderFlags,Mono.CSharp.DynamicExpressionStatement)",
      "code_size" : "90",
      "class" : "BinderFlags",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.DynamicExpressionStatement/BinderFlags:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "238",
      "class" : "BinderFlags",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.DynamicEventCompoundAssign:.ctor (string,Mono.CSharp.Arguments,Mono.CSharp.ExpressionStatement,Mono.CSharp.ExpressionStatement,Mono.CSharp.Location)",
      "code_size" : "175",
      "class" : "DynamicEventCompoundAssign",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.DynamicEventCompoundAssign:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "39",
      "class" : "DynamicEventCompoundAssign",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.DynamicEventCompoundAssign:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "124",
      "class" : "DynamicEventCompoundAssign",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.DynamicEventCompoundAssign:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "244",
      "class" : "DynamicEventCompoundAssign",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitStatement",
      "signature" : "void Mono.CSharp.DynamicEventCompoundAssign:EmitStatement (Mono.CSharp.EmitContext)",
      "code_size" : "274",
      "class" : "DynamicEventCompoundAssign",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "FlowAnalysis",
      "signature" : "void Mono.CSharp.DynamicEventCompoundAssign:FlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "42",
      "class" : "DynamicEventCompoundAssign",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.DynamicEventCompoundAssign/IsEvent:.ctor (string,Mono.CSharp.Arguments,Mono.CSharp.Location)",
      "code_size" : "88",
      "class" : "IsEvent",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateCallSiteBinder",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.DynamicEventCompoundAssign/IsEvent:CreateCallSiteBinder (Mono.CSharp.ResolveContext,Mono.CSharp.Arguments)",
      "code_size" : "686",
      "class" : "IsEvent",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.DynamicConversion:.ctor (Mono.CSharp.TypeSpec,Mono.CSharp.CSharpBinderFlags,Mono.CSharp.Arguments,Mono.CSharp.Location)",
      "code_size" : "107",
      "class" : "DynamicConversion",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateCallSiteBinder",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.DynamicConversion:CreateCallSiteBinder (Mono.CSharp.ResolveContext,Mono.CSharp.Arguments)",
      "code_size" : "672",
      "class" : "DynamicConversion",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.DynamicConstructorBinder:.ctor (Mono.CSharp.TypeSpec,Mono.CSharp.Arguments,Mono.CSharp.Location)",
      "code_size" : "88",
      "class" : "DynamicConstructorBinder",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateCallSiteBinder",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.DynamicConstructorBinder:CreateCallSiteBinder (Mono.CSharp.ResolveContext,Mono.CSharp.Arguments)",
      "code_size" : "635",
      "class" : "DynamicConstructorBinder",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.DynamicIndexBinder:.ctor (Mono.CSharp.Arguments,bool,bool,Mono.CSharp.Location)",
      "code_size" : "65",
      "class" : "DynamicIndexBinder",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.DynamicIndexBinder:.ctor (Mono.CSharp.CSharpBinderFlags,Mono.CSharp.Arguments,Mono.CSharp.Location)",
      "code_size" : "57",
      "class" : "DynamicIndexBinder",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.DynamicIndexBinder:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "32",
      "class" : "DynamicIndexBinder",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateCallSiteBinder",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.DynamicIndexBinder:CreateCallSiteBinder (Mono.CSharp.ResolveContext,Mono.CSharp.Arguments,bool)",
      "code_size" : "698",
      "class" : "DynamicIndexBinder",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateSetterArguments",
      "signature" : "Mono.CSharp.Arguments Mono.CSharp.DynamicIndexBinder:CreateSetterArguments (Mono.CSharp.ResolveContext,Mono.CSharp.Expression)",
      "code_size" : "784",
      "class" : "DynamicIndexBinder",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsConditionalAccessReceiver",
      "signature" : "bool Mono.CSharp.DynamicIndexBinder:get_IsConditionalAccessReceiver ()",
      "code_size" : "20",
      "class" : "DynamicIndexBinder",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "HasConditionalAccess",
      "signature" : "bool Mono.CSharp.DynamicIndexBinder:HasConditionalAccess ()",
      "code_size" : "20",
      "class" : "DynamicIndexBinder",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.DynamicInvocation:.ctor (Mono.CSharp.ATypeNameExpression,Mono.CSharp.Arguments,bool,Mono.CSharp.Location)",
      "code_size" : "107",
      "class" : "DynamicInvocation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateSpecialNameInvoke",
      "signature" : "Mono.CSharp.DynamicInvocation Mono.CSharp.DynamicInvocation:CreateSpecialNameInvoke (Mono.CSharp.ATypeNameExpression,Mono.CSharp.Arguments,Mono.CSharp.Location)",
      "code_size" : "84",
      "class" : "DynamicInvocation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateCallSiteBinder",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.DynamicInvocation:CreateCallSiteBinder (Mono.CSharp.ResolveContext,Mono.CSharp.Arguments)",
      "code_size" : "1989",
      "class" : "DynamicInvocation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitStatement",
      "signature" : "void Mono.CSharp.DynamicInvocation:EmitStatement (Mono.CSharp.EmitContext)",
      "code_size" : "40",
      "class" : "DynamicInvocation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsConditionalAccessReceiver",
      "signature" : "bool Mono.CSharp.DynamicInvocation:get_IsConditionalAccessReceiver ()",
      "code_size" : "20",
      "class" : "DynamicInvocation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "HasConditionalAccess",
      "signature" : "bool Mono.CSharp.DynamicInvocation:HasConditionalAccess ()",
      "code_size" : "82",
      "class" : "DynamicInvocation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.DynamicConditionalMemberBinder:.ctor (string,Mono.CSharp.Arguments,Mono.CSharp.Location)",
      "code_size" : "38",
      "class" : "DynamicConditionalMemberBinder",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "HasConditionalAccess",
      "signature" : "bool Mono.CSharp.DynamicConditionalMemberBinder:HasConditionalAccess ()",
      "code_size" : "14",
      "class" : "DynamicConditionalMemberBinder",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.DynamicMemberBinder:.ctor (string,Mono.CSharp.Arguments,Mono.CSharp.Location)",
      "code_size" : "68",
      "class" : "DynamicMemberBinder",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.DynamicMemberBinder:.ctor (string,Mono.CSharp.CSharpBinderFlags,Mono.CSharp.Arguments,Mono.CSharp.Location)",
      "code_size" : "58",
      "class" : "DynamicMemberBinder",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateCallSiteBinder",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.DynamicMemberBinder:CreateCallSiteBinder (Mono.CSharp.ResolveContext,Mono.CSharp.Arguments,bool)",
      "code_size" : "888",
      "class" : "DynamicMemberBinder",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.DynamicMemberBinder:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "166",
      "class" : "DynamicMemberBinder",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsConditionalAccessReceiver",
      "signature" : "bool Mono.CSharp.DynamicMemberBinder:get_IsConditionalAccessReceiver ()",
      "code_size" : "20",
      "class" : "DynamicMemberBinder",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.DynamicMemberAssignable:.ctor (Mono.CSharp.Arguments,Mono.CSharp.Location)",
      "code_size" : "60",
      "class" : "DynamicMemberAssignable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateCallSiteBinder",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.DynamicMemberAssignable:CreateCallSiteBinder (Mono.CSharp.ResolveContext,Mono.CSharp.Arguments)",
      "code_size" : "38",
      "class" : "DynamicMemberAssignable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateSetterArguments",
      "signature" : "Mono.CSharp.Arguments Mono.CSharp.DynamicMemberAssignable:CreateSetterArguments (Mono.CSharp.ResolveContext,Mono.CSharp.Expression)",
      "code_size" : "195",
      "class" : "DynamicMemberAssignable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolveLValue",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.DynamicMemberAssignable:DoResolveLValue (Mono.CSharp.ResolveContext,Mono.CSharp.Expression)",
      "code_size" : "203",
      "class" : "DynamicMemberAssignable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.DynamicMemberAssignable:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "73",
      "class" : "DynamicMemberAssignable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitStatement",
      "signature" : "void Mono.CSharp.DynamicMemberAssignable:EmitStatement (Mono.CSharp.EmitContext)",
      "code_size" : "76",
      "class" : "DynamicMemberAssignable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.DynamicMemberAssignable:Emit (Mono.CSharp.EmitContext,bool)",
      "code_size" : "27",
      "class" : "DynamicMemberAssignable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitAssign",
      "signature" : "void Mono.CSharp.DynamicMemberAssignable:EmitAssign (Mono.CSharp.EmitContext,Mono.CSharp.Expression,bool,bool)",
      "code_size" : "56",
      "class" : "DynamicMemberAssignable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.DynamicUnaryConversion:.ctor (string,Mono.CSharp.Arguments,Mono.CSharp.Location)",
      "code_size" : "88",
      "class" : "DynamicUnaryConversion",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateIsTrue",
      "signature" : "Mono.CSharp.DynamicUnaryConversion Mono.CSharp.DynamicUnaryConversion:CreateIsTrue (Mono.CSharp.ResolveContext,Mono.CSharp.Arguments,Mono.CSharp.Location)",
      "code_size" : "160",
      "class" : "DynamicUnaryConversion",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateIsFalse",
      "signature" : "Mono.CSharp.DynamicUnaryConversion Mono.CSharp.DynamicUnaryConversion:CreateIsFalse (Mono.CSharp.ResolveContext,Mono.CSharp.Arguments,Mono.CSharp.Location)",
      "code_size" : "160",
      "class" : "DynamicUnaryConversion",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateCallSiteBinder",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.DynamicUnaryConversion:CreateCallSiteBinder (Mono.CSharp.ResolveContext,Mono.CSharp.Arguments)",
      "code_size" : "1245",
      "class" : "DynamicUnaryConversion",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.DynamicSiteClass:.ctor (Mono.CSharp.TypeDefinition,Mono.CSharp.MemberBase,Mono.CSharp.TypeParameters)",
      "code_size" : "174",
      "class" : "DynamicSiteClass",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateCallSiteField",
      "signature" : "Mono.CSharp.FieldSpec Mono.CSharp.DynamicSiteClass:CreateCallSiteField (Mono.CSharp.FullNamedExpression,Mono.CSharp.Location)",
      "code_size" : "215",
      "class" : "DynamicSiteClass",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Expression:.ctor ()",
      "code_size" : "9",
      "class" : "Expression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Type",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.Expression:get_Type ()",
      "code_size" : "20",
      "class" : "Expression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Type",
      "signature" : "void Mono.CSharp.Expression:set_Type (Mono.CSharp.TypeSpec)",
      "code_size" : "43",
      "class" : "Expression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsSideEffectFree",
      "signature" : "bool Mono.CSharp.Expression:get_IsSideEffectFree ()",
      "code_size" : "11",
      "class" : "Expression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Location",
      "signature" : "Mono.CSharp.Location Mono.CSharp.Expression:get_Location ()",
      "code_size" : "30",
      "class" : "Expression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsNull",
      "signature" : "bool Mono.CSharp.Expression:get_IsNull ()",
      "code_size" : "11",
      "class" : "Expression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_StartLocation",
      "signature" : "Mono.CSharp.Location Mono.CSharp.Expression:get_StartLocation ()",
      "code_size" : "30",
      "class" : "Expression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CanReduceLambda",
      "signature" : "Mono.CSharp.MethodGroupExpr Mono.CSharp.Expression:CanReduceLambda (Mono.CSharp.AnonymousMethodBody)",
      "code_size" : "11",
      "class" : "Expression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ContainsEmitWithAwait",
      "signature" : "bool Mono.CSharp.Expression:ContainsEmitWithAwait ()",
      "code_size" : "11",
      "class" : "Expression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolveLValue",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Expression:DoResolveLValue (Mono.CSharp.ResolveContext,Mono.CSharp.Expression)",
      "code_size" : "11",
      "class" : "Expression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveAsType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.Expression:ResolveAsType (Mono.CSharp.IMemberContext,bool)",
      "code_size" : "190",
      "class" : "Expression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ErrorIsInaccesible",
      "signature" : "void Mono.CSharp.Expression:ErrorIsInaccesible (Mono.CSharp.IMemberContext,string,Mono.CSharp.Location)",
      "code_size" : "95",
      "class" : "Expression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_ExpressionMustBeConstant",
      "signature" : "void Mono.CSharp.Expression:Error_ExpressionMustBeConstant (Mono.CSharp.ResolveContext,Mono.CSharp.Location,string)",
      "code_size" : "71",
      "class" : "Expression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_ConstantCanBeInitializedWithNullOnly",
      "signature" : "void Mono.CSharp.Expression:Error_ConstantCanBeInitializedWithNullOnly (Mono.CSharp.ResolveContext,Mono.CSharp.TypeSpec,Mono.CSharp.Location,string)",
      "code_size" : "113",
      "class" : "Expression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_InvalidExpressionStatement",
      "signature" : "void Mono.CSharp.Expression:Error_InvalidExpressionStatement (Mono.CSharp.Report,Mono.CSharp.Location)",
      "code_size" : "54",
      "class" : "Expression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_InvalidExpressionStatement",
      "signature" : "void Mono.CSharp.Expression:Error_InvalidExpressionStatement (Mono.CSharp.BlockContext)",
      "code_size" : "70",
      "class" : "Expression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_InvalidExpressionStatement",
      "signature" : "void Mono.CSharp.Expression:Error_InvalidExpressionStatement (Mono.CSharp.Report)",
      "code_size" : "56",
      "class" : "Expression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_VoidInvalidInTheContext",
      "signature" : "void Mono.CSharp.Expression:Error_VoidInvalidInTheContext (Mono.CSharp.Location,Mono.CSharp.Report)",
      "code_size" : "52",
      "class" : "Expression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_ValueCannotBeConverted",
      "signature" : "void Mono.CSharp.Expression:Error_ValueCannotBeConverted (Mono.CSharp.ResolveContext,Mono.CSharp.TypeSpec,bool)",
      "code_size" : "67",
      "class" : "Expression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_ValueCannotBeConvertedCore",
      "signature" : "void Mono.CSharp.Expression:Error_ValueCannotBeConvertedCore (Mono.CSharp.ResolveContext,Mono.CSharp.Location,Mono.CSharp.TypeSpec,bool)",
      "code_size" : "564",
      "class" : "Expression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_TypeArgumentsCannotBeUsed",
      "signature" : "void Mono.CSharp.Expression:Error_TypeArgumentsCannotBeUsed (Mono.CSharp.IMemberContext,Mono.CSharp.MemberSpec,Mono.CSharp.Location)",
      "code_size" : "719",
      "class" : "Expression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_TypeArgumentsCannotBeUsed",
      "signature" : "void Mono.CSharp.Expression:Error_TypeArgumentsCannotBeUsed (Mono.CSharp.IMemberContext,string,string,Mono.CSharp.Location)",
      "code_size" : "105",
      "class" : "Expression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_TypeDoesNotContainDefinition",
      "signature" : "void Mono.CSharp.Expression:Error_TypeDoesNotContainDefinition (Mono.CSharp.ResolveContext,Mono.CSharp.TypeSpec,string)",
      "code_size" : "66",
      "class" : "Expression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_TypeDoesNotContainDefinition",
      "signature" : "void Mono.CSharp.Expression:Error_TypeDoesNotContainDefinition (Mono.CSharp.ResolveContext,Mono.CSharp.Location,Mono.CSharp.TypeSpec,string)",
      "code_size" : "144",
      "class" : "Expression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_ValueAssignment",
      "signature" : "void Mono.CSharp.Expression:Error_ValueAssignment (Mono.CSharp.ResolveContext,Mono.CSharp.Expression)",
      "code_size" : "210",
      "class" : "Expression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_VoidPointerOperation",
      "signature" : "void Mono.CSharp.Expression:Error_VoidPointerOperation (Mono.CSharp.ResolveContext)",
      "code_size" : "75",
      "class" : "Expression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Warning_UnreachableExpression",
      "signature" : "void Mono.CSharp.Expression:Warning_UnreachableExpression (Mono.CSharp.ResolveContext,Mono.CSharp.Location)",
      "code_size" : "62",
      "class" : "Expression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ExprClassToResolveFlags",
      "signature" : "Mono.CSharp.ResolveFlags Mono.CSharp.Expression:get_ExprClassToResolveFlags ()",
      "code_size" : "407",
      "class" : "Expression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ProbeIdenticalTypeName",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Expression:ProbeIdenticalTypeName (Mono.CSharp.ResolveContext,Mono.CSharp.Expression,Mono.CSharp.SimpleName)",
      "code_size" : "374",
      "class" : "Expression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSignatureForError",
      "signature" : "string Mono.CSharp.Expression:GetSignatureForError ()",
      "code_size" : "41",
      "class" : "Expression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsNeverNull",
      "signature" : "bool Mono.CSharp.Expression:IsNeverNull (Mono.CSharp.Expression)",
      "code_size" : "407",
      "class" : "Expression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsNullPropagatingValid",
      "signature" : "bool Mono.CSharp.Expression:IsNullPropagatingValid (Mono.CSharp.TypeSpec)",
      "code_size" : "233",
      "class" : "Expression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "HasConditionalAccess",
      "signature" : "bool Mono.CSharp.Expression:HasConditionalAccess ()",
      "code_size" : "11",
      "class" : "Expression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "LiftMemberType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.Expression:LiftMemberType (Mono.CSharp.ResolveContext,Mono.CSharp.TypeSpec)",
      "code_size" : "264",
      "class" : "Expression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Resolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Expression:Resolve (Mono.CSharp.ResolveContext,Mono.CSharp.ResolveFlags)",
      "code_size" : "1135",
      "class" : "Expression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Resolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Expression:Resolve (Mono.CSharp.ResolveContext)",
      "code_size" : "28",
      "class" : "Expression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveLValue",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Expression:ResolveLValue (Mono.CSharp.ResolveContext,Mono.CSharp.Expression)",
      "code_size" : "593",
      "class" : "Expression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveLabelConstant",
      "signature" : "Mono.CSharp.Constant Mono.CSharp.Expression:ResolveLabelConstant (Mono.CSharp.ResolveContext)",
      "code_size" : "221",
      "class" : "Expression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EncodeAttributeValue",
      "signature" : "void Mono.CSharp.Expression:EncodeAttributeValue (Mono.CSharp.IMemberContext,Mono.CSharp.AttributeEncoder,Mono.CSharp.TypeSpec,Mono.CSharp.TypeSpec)",
      "code_size" : "259",
      "class" : "Expression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitBranchable",
      "signature" : "void Mono.CSharp.Expression:EmitBranchable (Mono.CSharp.EmitContext,System.Reflection.Emit.Label,bool)",
      "code_size" : "311",
      "class" : "Expression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitSideEffect",
      "signature" : "void Mono.CSharp.Expression:EmitSideEffect (Mono.CSharp.EmitContext)",
      "code_size" : "154",
      "class" : "Expression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitToField",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Expression:EmitToField (Mono.CSharp.EmitContext)",
      "code_size" : "756",
      "class" : "Expression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitToFieldSource",
      "signature" : "Mono.CSharp.FieldExpr Mono.CSharp.Expression:EmitToFieldSource (Mono.CSharp.EmitContext)",
      "code_size" : "33",
      "class" : "Expression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitExpressionsList",
      "signature" : "void Mono.CSharp.Expression:EmitExpressionsList (Mono.CSharp.EmitContext,System.Collections.Generic.List`1<Mono.CSharp.Expression>)",
      "code_size" : "294",
      "class" : "Expression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ExprClassFromMemberInfo",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Expression:ExprClassFromMemberInfo (Mono.CSharp.MemberSpec,Mono.CSharp.Location)",
      "code_size" : "722",
      "class" : "Expression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ConstructorLookup",
      "signature" : "Mono.CSharp.MethodSpec Mono.CSharp.Expression:ConstructorLookup (Mono.CSharp.ResolveContext,Mono.CSharp.TypeSpec,Mono.CSharp.Arguments&,Mono.CSharp.Location)",
      "code_size" : "1014",
      "class" : "Expression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MemberLookup",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Expression:MemberLookup (Mono.CSharp.IMemberContext,bool,Mono.CSharp.TypeSpec,string,int,Mono.CSharp.Expression/MemberLookupRestrictions,Mono.CSharp.Location)",
      "code_size" : "300",
      "class" : "Expression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MemberLookupToExpression",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Expression:MemberLookupToExpression (Mono.CSharp.IMemberContext,System.Collections.Generic.IList`1<Mono.CSharp.MemberSpec>,bool,Mono.CSharp.TypeSpec,string,int,Mono.CSharp.Expression/MemberLookupRestrictions,Mono.CSharp.Location)",
      "code_size" : "1288",
      "class" : "Expression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "RemoveHiddenTypeParameterMethods",
      "signature" : "System.Collections.Generic.IList`1<Mono.CSharp.MemberSpec> Mono.CSharp.Expression:RemoveHiddenTypeParameterMethods (System.Collections.Generic.IList`1<Mono.CSharp.MemberSpec>)",
      "code_size" : "623",
      "class" : "Expression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_NamedArgument",
      "signature" : "void Mono.CSharp.Expression:Error_NamedArgument (Mono.CSharp.NamedArgument,Mono.CSharp.Report)",
      "code_size" : "69",
      "class" : "Expression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_NegativeArrayIndex",
      "signature" : "void Mono.CSharp.Expression:Error_NegativeArrayIndex (Mono.CSharp.ResolveContext,Mono.CSharp.Location)",
      "code_size" : "27",
      "class" : "Expression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_OperatorCannotBeApplied",
      "signature" : "void Mono.CSharp.Expression:Error_OperatorCannotBeApplied (Mono.CSharp.ResolveContext,Mono.CSharp.Location,string,Mono.CSharp.TypeSpec)",
      "code_size" : "136",
      "class" : "Expression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_PointerInsideExpressionTree",
      "signature" : "void Mono.CSharp.Expression:Error_PointerInsideExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "75",
      "class" : "Expression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_NullShortCircuitInsideExpressionTree",
      "signature" : "void Mono.CSharp.Expression:Error_NullShortCircuitInsideExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "75",
      "class" : "Expression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_NullPropagatingLValue",
      "signature" : "void Mono.CSharp.Expression:Error_NullPropagatingLValue (Mono.CSharp.ResolveContext)",
      "code_size" : "80",
      "class" : "Expression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "FlowAnalysis",
      "signature" : "void Mono.CSharp.Expression:FlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "9",
      "class" : "Expression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "FlowAnalysisConditional",
      "signature" : "void Mono.CSharp.Expression:FlowAnalysisConditional (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "101",
      "class" : "Expression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetOperatorTrue",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Expression:GetOperatorTrue (Mono.CSharp.ResolveContext,Mono.CSharp.Expression,Mono.CSharp.Location)",
      "code_size" : "38",
      "class" : "Expression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetOperatorFalse",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Expression:GetOperatorFalse (Mono.CSharp.ResolveContext,Mono.CSharp.Expression,Mono.CSharp.Location)",
      "code_size" : "35",
      "class" : "Expression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetOperatorTrueOrFalse",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Expression:GetOperatorTrueOrFalse (Mono.CSharp.ResolveContext,Mono.CSharp.Expression,bool,Mono.CSharp.Location)",
      "code_size" : "448",
      "class" : "Expression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ExprClassName",
      "signature" : "string Mono.CSharp.Expression:get_ExprClassName ()",
      "code_size" : "231",
      "class" : "Expression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_UnexpectedKind",
      "signature" : "void Mono.CSharp.Expression:Error_UnexpectedKind (Mono.CSharp.IMemberContext,Mono.CSharp.Expression,string,string,Mono.CSharp.Location)",
      "code_size" : "262",
      "class" : "Expression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_UnexpectedKind",
      "signature" : "void Mono.CSharp.Expression:Error_UnexpectedKind (Mono.CSharp.ResolveContext,Mono.CSharp.ResolveFlags,Mono.CSharp.Location)",
      "code_size" : "591",
      "class" : "Expression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "UnsafeError",
      "signature" : "void Mono.CSharp.Expression:UnsafeError (Mono.CSharp.ResolveContext,Mono.CSharp.Location)",
      "code_size" : "42",
      "class" : "Expression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "UnsafeError",
      "signature" : "void Mono.CSharp.Expression:UnsafeError (Mono.CSharp.Report,Mono.CSharp.Location)",
      "code_size" : "51",
      "class" : "Expression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ConvertExpressionToArrayIndex",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Expression:ConvertExpressionToArrayIndex (Mono.CSharp.ResolveContext,Mono.CSharp.Expression,bool)",
      "code_size" : "860",
      "class" : "Expression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MakePointerAccess",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Expression:MakePointerAccess (Mono.CSharp.ResolveContext,Mono.CSharp.TypeSpec,Mono.CSharp.Arguments)",
      "code_size" : "485",
      "class" : "Expression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.Expression:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Expression)",
      "code_size" : "72",
      "class" : "Expression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Clone",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Expression:Clone (Mono.CSharp.CloneContext)",
      "code_size" : "126",
      "class" : "Expression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionFactoryCall",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Expression:CreateExpressionFactoryCall (Mono.CSharp.ResolveContext,string,Mono.CSharp.Arguments)",
      "code_size" : "68",
      "class" : "Expression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionFactoryCall",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Expression:CreateExpressionFactoryCall (Mono.CSharp.ResolveContext,string,Mono.CSharp.TypeArguments,Mono.CSharp.Arguments)",
      "code_size" : "76",
      "class" : "Expression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionFactoryCall",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Expression:CreateExpressionFactoryCall (Mono.CSharp.ResolveContext,string,Mono.CSharp.TypeArguments,Mono.CSharp.Arguments,Mono.CSharp.Location)",
      "code_size" : "143",
      "class" : "Expression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTypeExpression",
      "signature" : "Mono.CSharp.TypeExpr Mono.CSharp.Expression:CreateExpressionTypeExpression (Mono.CSharp.ResolveContext,Mono.CSharp.Location)",
      "code_size" : "120",
      "class" : "Expression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MakeExpression",
      "signature" : "System.Linq.Expressions.Expression Mono.CSharp.Expression:MakeExpression (Mono.CSharp.BuilderContext)",
      "code_size" : "70",
      "class" : "Expression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.Expression:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "Expression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ExpressionStatement:.ctor ()",
      "code_size" : "9",
      "class" : "ExpressionStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MarkReachable",
      "signature" : "void Mono.CSharp.ExpressionStatement:MarkReachable (Mono.CSharp.Reachability)",
      "code_size" : "9",
      "class" : "ExpressionStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveStatement",
      "signature" : "Mono.CSharp.ExpressionStatement Mono.CSharp.ExpressionStatement:ResolveStatement (Mono.CSharp.BlockContext)",
      "code_size" : "445",
      "class" : "ExpressionStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "WarningAsyncWithoutWait",
      "signature" : "void Mono.CSharp.ExpressionStatement:WarningAsyncWithoutWait (Mono.CSharp.BlockContext,Mono.CSharp.Expression)",
      "code_size" : "649",
      "class" : "ExpressionStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitSideEffect",
      "signature" : "void Mono.CSharp.ExpressionStatement:EmitSideEffect (Mono.CSharp.EmitContext)",
      "code_size" : "31",
      "class" : "ExpressionStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.TypeCast:.ctor (Mono.CSharp.Expression,Mono.CSharp.TypeSpec)",
      "code_size" : "109",
      "class" : "TypeCast",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Child",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.TypeCast:get_Child ()",
      "code_size" : "20",
      "class" : "TypeCast",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ContainsEmitWithAwait",
      "signature" : "bool Mono.CSharp.TypeCast:ContainsEmitWithAwait ()",
      "code_size" : "32",
      "class" : "TypeCast",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.TypeCast:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "449",
      "class" : "TypeCast",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.TypeCast:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "16",
      "class" : "TypeCast",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.TypeCast:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "42",
      "class" : "TypeCast",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "FlowAnalysis",
      "signature" : "void Mono.CSharp.TypeCast:FlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "42",
      "class" : "TypeCast",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MakeExpression",
      "signature" : "System.Linq.Expressions.Expression Mono.CSharp.TypeCast:MakeExpression (Mono.CSharp.BuilderContext)",
      "code_size" : "177",
      "class" : "TypeCast",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.TypeCast:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Expression)",
      "code_size" : "9",
      "class" : "TypeCast",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsNull",
      "signature" : "bool Mono.CSharp.TypeCast:get_IsNull ()",
      "code_size" : "32",
      "class" : "TypeCast",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.EmptyCast:.ctor (Mono.CSharp.Expression,Mono.CSharp.TypeSpec)",
      "code_size" : "28",
      "class" : "EmptyCast",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Create",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.EmptyCast:Create (Mono.CSharp.Expression,Mono.CSharp.TypeSpec)",
      "code_size" : "408",
      "class" : "EmptyCast",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitBranchable",
      "signature" : "void Mono.CSharp.EmptyCast:EmitBranchable (Mono.CSharp.EmitContext,System.Reflection.Emit.Label,bool)",
      "code_size" : "62",
      "class" : "EmptyCast",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitSideEffect",
      "signature" : "void Mono.CSharp.EmptyCast:EmitSideEffect (Mono.CSharp.EmitContext)",
      "code_size" : "42",
      "class" : "EmptyCast",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.OperatorCast:.ctor (Mono.CSharp.Expression,Mono.CSharp.TypeSpec)",
      "code_size" : "34",
      "class" : "OperatorCast",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.OperatorCast:.ctor (Mono.CSharp.Expression,Mono.CSharp.TypeSpec,bool)",
      "code_size" : "42",
      "class" : "OperatorCast",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.OperatorCast:.ctor (Mono.CSharp.Expression,Mono.CSharp.TypeSpec,Mono.CSharp.TypeSpec,bool)",
      "code_size" : "612",
      "class" : "OperatorCast",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.OperatorCast:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "159",
      "class" : "OperatorCast",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.EmptyConstantCast:.ctor (Mono.CSharp.Constant,Mono.CSharp.TypeSpec)",
      "code_size" : "156",
      "class" : "EmptyConstantCast",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ConvertExplicitly",
      "signature" : "Mono.CSharp.Constant Mono.CSharp.EmptyConstantCast:ConvertExplicitly (bool,Mono.CSharp.TypeSpec)",
      "code_size" : "87",
      "class" : "EmptyConstantCast",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.EmptyConstantCast:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "277",
      "class" : "EmptyConstantCast",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsDefaultValue",
      "signature" : "bool Mono.CSharp.EmptyConstantCast:get_IsDefaultValue ()",
      "code_size" : "32",
      "class" : "EmptyConstantCast",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsNegative",
      "signature" : "bool Mono.CSharp.EmptyConstantCast:get_IsNegative ()",
      "code_size" : "32",
      "class" : "EmptyConstantCast",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsNull",
      "signature" : "bool Mono.CSharp.EmptyConstantCast:get_IsNull ()",
      "code_size" : "32",
      "class" : "EmptyConstantCast",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsOneInteger",
      "signature" : "bool Mono.CSharp.EmptyConstantCast:get_IsOneInteger ()",
      "code_size" : "32",
      "class" : "EmptyConstantCast",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsSideEffectFree",
      "signature" : "bool Mono.CSharp.EmptyConstantCast:get_IsSideEffectFree ()",
      "code_size" : "32",
      "class" : "EmptyConstantCast",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsZeroInteger",
      "signature" : "bool Mono.CSharp.EmptyConstantCast:get_IsZeroInteger ()",
      "code_size" : "32",
      "class" : "EmptyConstantCast",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.EmptyConstantCast:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "42",
      "class" : "EmptyConstantCast",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitBranchable",
      "signature" : "void Mono.CSharp.EmptyConstantCast:EmitBranchable (Mono.CSharp.EmitContext,System.Reflection.Emit.Label,bool)",
      "code_size" : "220",
      "class" : "EmptyConstantCast",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitSideEffect",
      "signature" : "void Mono.CSharp.EmptyConstantCast:EmitSideEffect (Mono.CSharp.EmitContext)",
      "code_size" : "42",
      "class" : "EmptyConstantCast",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetValue",
      "signature" : "object Mono.CSharp.EmptyConstantCast:GetValue ()",
      "code_size" : "32",
      "class" : "EmptyConstantCast",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetValueAsLiteral",
      "signature" : "string Mono.CSharp.EmptyConstantCast:GetValueAsLiteral ()",
      "code_size" : "32",
      "class" : "EmptyConstantCast",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetValueAsLong",
      "signature" : "long Mono.CSharp.EmptyConstantCast:GetValueAsLong ()",
      "code_size" : "32",
      "class" : "EmptyConstantCast",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ConvertImplicitly",
      "signature" : "Mono.CSharp.Constant Mono.CSharp.EmptyConstantCast:ConvertImplicitly (Mono.CSharp.TypeSpec)",
      "code_size" : "86",
      "class" : "EmptyConstantCast",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.EnumConstant:.ctor (Mono.CSharp.Constant,Mono.CSharp.TypeSpec)",
      "code_size" : "105",
      "class" : "EnumConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.EnumConstant:.ctor (Mono.CSharp.Location)",
      "code_size" : "32",
      "class" : "EnumConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.EnumConstant:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "42",
      "class" : "EnumConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EncodeAttributeValue",
      "signature" : "void Mono.CSharp.EnumConstant:EncodeAttributeValue (Mono.CSharp.IMemberContext,Mono.CSharp.AttributeEncoder,Mono.CSharp.TypeSpec,Mono.CSharp.TypeSpec)",
      "code_size" : "75",
      "class" : "EnumConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitBranchable",
      "signature" : "void Mono.CSharp.EnumConstant:EmitBranchable (Mono.CSharp.EmitContext,System.Reflection.Emit.Label,bool)",
      "code_size" : "62",
      "class" : "EnumConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitSideEffect",
      "signature" : "void Mono.CSharp.EnumConstant:EmitSideEffect (Mono.CSharp.EmitContext)",
      "code_size" : "42",
      "class" : "EnumConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSignatureForError",
      "signature" : "string Mono.CSharp.EnumConstant:GetSignatureForError ()",
      "code_size" : "29",
      "class" : "EnumConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetValue",
      "signature" : "object Mono.CSharp.EnumConstant:GetValue ()",
      "code_size" : "32",
      "class" : "EnumConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetTypedValue",
      "signature" : "object Mono.CSharp.EnumConstant:GetTypedValue ()",
      "code_size" : "70",
      "class" : "EnumConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetValueAsLiteral",
      "signature" : "string Mono.CSharp.EnumConstant:GetValueAsLiteral ()",
      "code_size" : "32",
      "class" : "EnumConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetValueAsLong",
      "signature" : "long Mono.CSharp.EnumConstant:GetValueAsLong ()",
      "code_size" : "32",
      "class" : "EnumConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Increment",
      "signature" : "Mono.CSharp.EnumConstant Mono.CSharp.EnumConstant:Increment ()",
      "code_size" : "155",
      "class" : "EnumConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsDefaultValue",
      "signature" : "bool Mono.CSharp.EnumConstant:get_IsDefaultValue ()",
      "code_size" : "32",
      "class" : "EnumConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsSideEffectFree",
      "signature" : "bool Mono.CSharp.EnumConstant:get_IsSideEffectFree ()",
      "code_size" : "32",
      "class" : "EnumConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsZeroInteger",
      "signature" : "bool Mono.CSharp.EnumConstant:get_IsZeroInteger ()",
      "code_size" : "32",
      "class" : "EnumConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsNegative",
      "signature" : "bool Mono.CSharp.EnumConstant:get_IsNegative ()",
      "code_size" : "32",
      "class" : "EnumConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ConvertExplicitly",
      "signature" : "Mono.CSharp.Constant Mono.CSharp.EnumConstant:ConvertExplicitly (bool,Mono.CSharp.TypeSpec)",
      "code_size" : "87",
      "class" : "EnumConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ConvertImplicitly",
      "signature" : "Mono.CSharp.Constant Mono.CSharp.EnumConstant:ConvertImplicitly (Mono.CSharp.TypeSpec)",
      "code_size" : "86",
      "class" : "EnumConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.BoxedCast:.ctor (Mono.CSharp.Expression,Mono.CSharp.TypeSpec)",
      "code_size" : "36",
      "class" : "BoxedCast",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.BoxedCast:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "16",
      "class" : "BoxedCast",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EncodeAttributeValue",
      "signature" : "void Mono.CSharp.BoxedCast:EncodeAttributeValue (Mono.CSharp.IMemberContext,Mono.CSharp.AttributeEncoder,Mono.CSharp.TypeSpec,Mono.CSharp.TypeSpec)",
      "code_size" : "168",
      "class" : "BoxedCast",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.BoxedCast:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "152",
      "class" : "BoxedCast",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitSideEffect",
      "signature" : "void Mono.CSharp.BoxedCast:EmitSideEffect (Mono.CSharp.EmitContext)",
      "code_size" : "136",
      "class" : "BoxedCast",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.UnboxCast:.ctor (Mono.CSharp.Expression,Mono.CSharp.TypeSpec)",
      "code_size" : "28",
      "class" : "UnboxCast",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.UnboxCast:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "16",
      "class" : "UnboxCast",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.UnboxCast:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "142",
      "class" : "UnboxCast",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ConvCast:.ctor (Mono.CSharp.Expression,Mono.CSharp.TypeSpec,Mono.CSharp.ConvCast/Mode)",
      "code_size" : "46",
      "class" : "ConvCast",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.ConvCast:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "16",
      "class" : "ConvCast",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ToString",
      "signature" : "string Mono.CSharp.ConvCast:ToString ()",
      "code_size" : "88",
      "class" : "ConvCast",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.ConvCast:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "41",
      "class" : "ConvCast",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.ConvCast:Emit (Mono.CSharp.EmitContext,Mono.CSharp.ConvCast/Mode)",
      "code_size" : "19276",
      "class" : "ConvCast",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.OpcodeCast:.ctor (Mono.CSharp.Expression,Mono.CSharp.TypeSpec,System.Reflection.Emit.OpCode)",
      "code_size" : "120",
      "class" : "OpcodeCast",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.OpcodeCast:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "16",
      "class" : "OpcodeCast",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.OpcodeCast:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "147",
      "class" : "OpcodeCast",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_UnderlyingType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.OpcodeCast:get_UnderlyingType ()",
      "code_size" : "30",
      "class" : "OpcodeCast",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.OpcodeCastDuplex:.ctor (Mono.CSharp.Expression,Mono.CSharp.TypeSpec,System.Reflection.Emit.OpCode,System.Reflection.Emit.OpCode)",
      "code_size" : "130",
      "class" : "OpcodeCastDuplex",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.OpcodeCastDuplex:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "147",
      "class" : "OpcodeCastDuplex",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ClassCast:.ctor (Mono.CSharp.Expression,Mono.CSharp.TypeSpec)",
      "code_size" : "28",
      "class" : "ClassCast",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ClassCast:.ctor (Mono.CSharp.Expression,Mono.CSharp.TypeSpec,bool)",
      "code_size" : "46",
      "class" : "ClassCast",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.ClassCast:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "455",
      "class" : "ClassCast",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ReducedExpression:.ctor (Mono.CSharp.Expression,Mono.CSharp.Expression)",
      "code_size" : "138",
      "class" : "ReducedExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsSideEffectFree",
      "signature" : "bool Mono.CSharp.ReducedExpression:get_IsSideEffectFree ()",
      "code_size" : "32",
      "class" : "ReducedExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_OriginalExpression",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.ReducedExpression:get_OriginalExpression ()",
      "code_size" : "20",
      "class" : "ReducedExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ContainsEmitWithAwait",
      "signature" : "bool Mono.CSharp.ReducedExpression:ContainsEmitWithAwait ()",
      "code_size" : "32",
      "class" : "ReducedExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Create",
      "signature" : "Mono.CSharp.Constant Mono.CSharp.ReducedExpression:Create (Mono.CSharp.Constant,Mono.CSharp.Expression)",
      "code_size" : "225",
      "class" : "ReducedExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Create",
      "signature" : "Mono.CSharp.ExpressionStatement Mono.CSharp.ReducedExpression:Create (Mono.CSharp.ExpressionStatement,Mono.CSharp.Expression)",
      "code_size" : "62",
      "class" : "ReducedExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Create",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.ReducedExpression:Create (Mono.CSharp.Expression,Mono.CSharp.Expression)",
      "code_size" : "28",
      "class" : "ReducedExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Create",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.ReducedExpression:Create (Mono.CSharp.Expression,Mono.CSharp.Expression,bool)",
      "code_size" : "279",
      "class" : "ReducedExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.ReducedExpression:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "39",
      "class" : "ReducedExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.ReducedExpression:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "16",
      "class" : "ReducedExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.ReducedExpression:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "42",
      "class" : "ReducedExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitToField",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.ReducedExpression:EmitToField (Mono.CSharp.EmitContext)",
      "code_size" : "42",
      "class" : "ReducedExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitBranchable",
      "signature" : "void Mono.CSharp.ReducedExpression:EmitBranchable (Mono.CSharp.EmitContext,System.Reflection.Emit.Label,bool)",
      "code_size" : "62",
      "class" : "ReducedExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "FlowAnalysis",
      "signature" : "void Mono.CSharp.ReducedExpression:FlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "42",
      "class" : "ReducedExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MakeExpression",
      "signature" : "System.Linq.Expressions.Expression Mono.CSharp.ReducedExpression:MakeExpression (Mono.CSharp.BuilderContext)",
      "code_size" : "39",
      "class" : "ReducedExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ReducedExpression/ReducedConstantExpression:.ctor (Mono.CSharp.Constant,Mono.CSharp.Expression)",
      "code_size" : "79",
      "class" : "ReducedConstantExpression",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_OriginalExpression",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.ReducedExpression/ReducedConstantExpression:get_OriginalExpression ()",
      "code_size" : "20",
      "class" : "ReducedConstantExpression",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "ConvertImplicitly",
      "signature" : "Mono.CSharp.Constant Mono.CSharp.ReducedExpression/ReducedConstantExpression:ConvertImplicitly (Mono.CSharp.TypeSpec)",
      "code_size" : "105",
      "class" : "ReducedConstantExpression",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.ReducedExpression/ReducedConstantExpression:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "39",
      "class" : "ReducedConstantExpression",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "ConvertExplicitly",
      "signature" : "Mono.CSharp.Constant Mono.CSharp.ReducedExpression/ReducedConstantExpression:ConvertExplicitly (bool,Mono.CSharp.TypeSpec)",
      "code_size" : "118",
      "class" : "ReducedConstantExpression",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "EncodeAttributeValue",
      "signature" : "void Mono.CSharp.ReducedExpression/ReducedConstantExpression:EncodeAttributeValue (Mono.CSharp.IMemberContext,Mono.CSharp.AttributeEncoder,Mono.CSharp.TypeSpec,Mono.CSharp.TypeSpec)",
      "code_size" : "181",
      "class" : "ReducedConstantExpression",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ReducedExpression/ReducedConstantStatement:.ctor (Mono.CSharp.Constant,Mono.CSharp.Expression)",
      "code_size" : "28",
      "class" : "ReducedConstantStatement",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ReducedExpression/ReducedExpressionStatement:.ctor (Mono.CSharp.ExpressionStatement,Mono.CSharp.Expression)",
      "code_size" : "138",
      "class" : "ReducedExpressionStatement",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "ContainsEmitWithAwait",
      "signature" : "bool Mono.CSharp.ReducedExpression/ReducedExpressionStatement:ContainsEmitWithAwait ()",
      "code_size" : "32",
      "class" : "ReducedExpressionStatement",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.ReducedExpression/ReducedExpressionStatement:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "39",
      "class" : "ReducedExpressionStatement",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.ReducedExpression/ReducedExpressionStatement:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "16",
      "class" : "ReducedExpressionStatement",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.ReducedExpression/ReducedExpressionStatement:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "42",
      "class" : "ReducedExpressionStatement",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitStatement",
      "signature" : "void Mono.CSharp.ReducedExpression/ReducedExpressionStatement:EmitStatement (Mono.CSharp.EmitContext)",
      "code_size" : "42",
      "class" : "ReducedExpressionStatement",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "FlowAnalysis",
      "signature" : "void Mono.CSharp.ReducedExpression/ReducedExpressionStatement:FlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "42",
      "class" : "ReducedExpressionStatement",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.CompositeExpression:.ctor (Mono.CSharp.Expression)",
      "code_size" : "69",
      "class" : "CompositeExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ContainsEmitWithAwait",
      "signature" : "bool Mono.CSharp.CompositeExpression:ContainsEmitWithAwait ()",
      "code_size" : "32",
      "class" : "CompositeExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.CompositeExpression:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "39",
      "class" : "CompositeExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Child",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.CompositeExpression:get_Child ()",
      "code_size" : "20",
      "class" : "CompositeExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.CompositeExpression:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "136",
      "class" : "CompositeExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.CompositeExpression:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "42",
      "class" : "CompositeExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsNull",
      "signature" : "bool Mono.CSharp.CompositeExpression:get_IsNull ()",
      "code_size" : "32",
      "class" : "CompositeExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ShimExpression:.ctor (Mono.CSharp.Expression)",
      "code_size" : "43",
      "class" : "ShimExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Expr",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.ShimExpression:get_Expr ()",
      "code_size" : "20",
      "class" : "ShimExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.ShimExpression:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Expression)",
      "code_size" : "173",
      "class" : "ShimExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ContainsEmitWithAwait",
      "signature" : "bool Mono.CSharp.ShimExpression:ContainsEmitWithAwait ()",
      "code_size" : "32",
      "class" : "ShimExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.ShimExpression:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "47",
      "class" : "ShimExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.ShimExpression:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "79",
      "class" : "ShimExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.UnreachableExpression:.ctor (Mono.CSharp.Expression)",
      "code_size" : "50",
      "class" : "UnreachableExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.UnreachableExpression:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "27",
      "class" : "UnreachableExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.UnreachableExpression:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "27",
      "class" : "UnreachableExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "FlowAnalysis",
      "signature" : "void Mono.CSharp.UnreachableExpression:FlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "86",
      "class" : "UnreachableExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.UnreachableExpression:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "9",
      "class" : "UnreachableExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitBranchable",
      "signature" : "void Mono.CSharp.UnreachableExpression:EmitBranchable (Mono.CSharp.EmitContext,System.Reflection.Emit.Label,bool)",
      "code_size" : "9",
      "class" : "UnreachableExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ATypeNameExpression:.ctor (string,Mono.CSharp.Location)",
      "code_size" : "63",
      "class" : "ATypeNameExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ATypeNameExpression:.ctor (string,Mono.CSharp.TypeArguments,Mono.CSharp.Location)",
      "code_size" : "90",
      "class" : "ATypeNameExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ATypeNameExpression:.ctor (string,int,Mono.CSharp.Location)",
      "code_size" : "92",
      "class" : "ATypeNameExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Arity",
      "signature" : "int Mono.CSharp.ATypeNameExpression:get_Arity ()",
      "code_size" : "61",
      "class" : "ATypeNameExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_HasTypeArguments",
      "signature" : "bool Mono.CSharp.ATypeNameExpression:get_HasTypeArguments ()",
      "code_size" : "60",
      "class" : "ATypeNameExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Name",
      "signature" : "string Mono.CSharp.ATypeNameExpression:get_Name ()",
      "code_size" : "20",
      "class" : "ATypeNameExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Name",
      "signature" : "void Mono.CSharp.ATypeNameExpression:set_Name (string)",
      "code_size" : "43",
      "class" : "ATypeNameExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_TypeArguments",
      "signature" : "Mono.CSharp.TypeArguments Mono.CSharp.ATypeNameExpression:get_TypeArguments ()",
      "code_size" : "20",
      "class" : "ATypeNameExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Equals",
      "signature" : "bool Mono.CSharp.ATypeNameExpression:Equals (object)",
      "code_size" : "169",
      "class" : "ATypeNameExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetHashCode",
      "signature" : "int Mono.CSharp.ATypeNameExpression:GetHashCode ()",
      "code_size" : "29",
      "class" : "ATypeNameExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetMemberType",
      "signature" : "string Mono.CSharp.ATypeNameExpression:GetMemberType (Mono.CSharp.MemberCore)",
      "code_size" : "412",
      "class" : "ATypeNameExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSignatureForError",
      "signature" : "string Mono.CSharp.ATypeNameExpression:GetSignatureForError ()",
      "code_size" : "100",
      "class" : "ATypeNameExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.SimpleName:.ctor (string,Mono.CSharp.Location)",
      "code_size" : "33",
      "class" : "SimpleName",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.SimpleName:.ctor (string,Mono.CSharp.TypeArguments,Mono.CSharp.Location)",
      "code_size" : "38",
      "class" : "SimpleName",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.SimpleName:.ctor (string,int,Mono.CSharp.Location)",
      "code_size" : "38",
      "class" : "SimpleName",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetMethodGroup",
      "signature" : "Mono.CSharp.SimpleName Mono.CSharp.SimpleName:GetMethodGroup ()",
      "code_size" : "94",
      "class" : "SimpleName",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.SimpleName:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "25",
      "class" : "SimpleName",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolveLValue",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.SimpleName:DoResolveLValue (Mono.CSharp.ResolveContext,Mono.CSharp.Expression)",
      "code_size" : "28",
      "class" : "SimpleName",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_NameDoesNotExist",
      "signature" : "void Mono.CSharp.SimpleName:Error_NameDoesNotExist (Mono.CSharp.ResolveContext)",
      "code_size" : "82",
      "class" : "SimpleName",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_TypeOrNamespaceNotFound",
      "signature" : "void Mono.CSharp.SimpleName:Error_TypeOrNamespaceNotFound (Mono.CSharp.IMemberContext)",
      "code_size" : "948",
      "class" : "SimpleName",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveAsTypeOrNamespace",
      "signature" : "Mono.CSharp.FullNamedExpression Mono.CSharp.SimpleName:ResolveAsTypeOrNamespace (Mono.CSharp.IMemberContext,bool)",
      "code_size" : "904",
      "class" : "SimpleName",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsPossibleTypeOrNamespace",
      "signature" : "bool Mono.CSharp.SimpleName:IsPossibleTypeOrNamespace (Mono.CSharp.IMemberContext)",
      "code_size" : "109",
      "class" : "SimpleName",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsPossibleType",
      "signature" : "bool Mono.CSharp.SimpleName:IsPossibleType (Mono.CSharp.IMemberContext)",
      "code_size" : "150",
      "class" : "SimpleName",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "LookupNameExpression",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.SimpleName:LookupNameExpression (Mono.CSharp.ResolveContext,Mono.CSharp.Expression/MemberLookupRestrictions)",
      "code_size" : "3885",
      "class" : "SimpleName",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "SimpleNameResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.SimpleName:SimpleNameResolve (Mono.CSharp.ResolveContext,Mono.CSharp.Expression)",
      "code_size" : "297",
      "class" : "SimpleName",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.SimpleName:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "SimpleName",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.FullNamedExpression:.ctor ()",
      "code_size" : "9",
      "class" : "FullNamedExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.FullNamedExpression:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Expression)",
      "code_size" : "9",
      "class" : "FullNamedExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ContainsEmitWithAwait",
      "signature" : "bool Mono.CSharp.FullNamedExpression:ContainsEmitWithAwait ()",
      "code_size" : "11",
      "class" : "FullNamedExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.FullNamedExpression:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "47",
      "class" : "FullNamedExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveAsType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.FullNamedExpression:ResolveAsType (Mono.CSharp.IMemberContext,bool)",
      "code_size" : "602",
      "class" : "FullNamedExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.FullNamedExpression:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "153",
      "class" : "FullNamedExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.TypeExpr:.ctor ()",
      "code_size" : "9",
      "class" : "TypeExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveAsTypeOrNamespace",
      "signature" : "Mono.CSharp.FullNamedExpression Mono.CSharp.TypeExpr:ResolveAsTypeOrNamespace (Mono.CSharp.IMemberContext,bool)",
      "code_size" : "37",
      "class" : "TypeExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.TypeExpr:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "37",
      "class" : "TypeExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Equals",
      "signature" : "bool Mono.CSharp.TypeExpr:Equals (object)",
      "code_size" : "112",
      "class" : "TypeExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetHashCode",
      "signature" : "int Mono.CSharp.TypeExpr:GetHashCode ()",
      "code_size" : "29",
      "class" : "TypeExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.TypeExpression:.ctor (Mono.CSharp.TypeSpec,Mono.CSharp.Location)",
      "code_size" : "67",
      "class" : "TypeExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveAsType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.TypeExpression:ResolveAsType (Mono.CSharp.IMemberContext,bool)",
      "code_size" : "20",
      "class" : "TypeExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.NamespaceExpression:.ctor (Mono.CSharp.Namespace,Mono.CSharp.Location)",
      "code_size" : "103",
      "class" : "NamespaceExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Namespace",
      "signature" : "Mono.CSharp.Namespace Mono.CSharp.NamespaceExpression:get_Namespace ()",
      "code_size" : "20",
      "class" : "NamespaceExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.NamespaceExpression:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "27",
      "class" : "NamespaceExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveAsTypeOrNamespace",
      "signature" : "Mono.CSharp.FullNamedExpression Mono.CSharp.NamespaceExpression:ResolveAsTypeOrNamespace (Mono.CSharp.IMemberContext,bool)",
      "code_size" : "16",
      "class" : "NamespaceExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_NamespaceDoesNotExist",
      "signature" : "void Mono.CSharp.NamespaceExpression:Error_NamespaceDoesNotExist (Mono.CSharp.IMemberContext,string,int,Mono.CSharp.Location)",
      "code_size" : "1410",
      "class" : "NamespaceExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSignatureForError",
      "signature" : "string Mono.CSharp.NamespaceExpression:GetSignatureForError ()",
      "code_size" : "29",
      "class" : "NamespaceExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "LookupTypeOrNamespace",
      "signature" : "Mono.CSharp.FullNamedExpression Mono.CSharp.NamespaceExpression:LookupTypeOrNamespace (Mono.CSharp.IMemberContext,string,int,Mono.CSharp.LookupMode,Mono.CSharp.Location)",
      "code_size" : "81",
      "class" : "NamespaceExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ToString",
      "signature" : "string Mono.CSharp.NamespaceExpression:ToString ()",
      "code_size" : "30",
      "class" : "NamespaceExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.MemberExpr:.ctor ()",
      "code_size" : "9",
      "class" : "MemberExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsBase",
      "signature" : "bool Mono.CSharp.MemberExpr:get_IsBase ()",
      "code_size" : "82",
      "class" : "MemberExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ConditionalAccess",
      "signature" : "bool Mono.CSharp.MemberExpr:get_ConditionalAccess ()",
      "code_size" : "20",
      "class" : "MemberExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_ConditionalAccess",
      "signature" : "void Mono.CSharp.MemberExpr:set_ConditionalAccess (bool)",
      "code_size" : "31",
      "class" : "MemberExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mono.CSharp.OverloadResolver.IInstanceQualifier.get_InstanceType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.MemberExpr:Mono.CSharp.OverloadResolver.IInstanceQualifier.get_InstanceType ()",
      "code_size" : "30",
      "class" : "MemberExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CandidateToBaseOverride",
      "signature" : "Mono.CSharp.MethodSpec Mono.CSharp.MemberExpr:CandidateToBaseOverride (Mono.CSharp.ResolveContext,Mono.CSharp.MethodSpec)",
      "code_size" : "1531",
      "class" : "MemberExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CheckProtectedMemberAccess",
      "signature" : "void Mono.CSharp.MemberExpr:CheckProtectedMemberAccess (Mono.CSharp.ResolveContext,Mono.CSharp.MemberSpec)",
      "code_size" : "225",
      "class" : "MemberExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mono.CSharp.OverloadResolver.IInstanceQualifier.CheckProtectedMemberAccess",
      "signature" : "bool Mono.CSharp.MemberExpr:Mono.CSharp.OverloadResolver.IInstanceQualifier.CheckProtectedMemberAccess (Mono.CSharp.ResolveContext,Mono.CSharp.MemberSpec)",
      "code_size" : "176",
      "class" : "MemberExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CheckProtectedMemberAccess",
      "signature" : "bool Mono.CSharp.MemberExpr:CheckProtectedMemberAccess<T_REF> (Mono.CSharp.ResolveContext,T_REF,Mono.CSharp.TypeSpec)",
      "code_size" : "245",
      "class" : "MemberExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ContainsEmitWithAwait",
      "signature" : "bool Mono.CSharp.MemberExpr:ContainsEmitWithAwait ()",
      "code_size" : "56",
      "class" : "MemberExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "HasConditionalAccess",
      "signature" : "bool Mono.CSharp.MemberExpr:HasConditionalAccess ()",
      "code_size" : "73",
      "class" : "MemberExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsSameOrBaseQualifier",
      "signature" : "bool Mono.CSharp.MemberExpr:IsSameOrBaseQualifier (Mono.CSharp.TypeSpec,Mono.CSharp.TypeSpec)",
      "code_size" : "98",
      "class" : "MemberExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoBestMemberChecks",
      "signature" : "void Mono.CSharp.MemberExpr:DoBestMemberChecks<T_REF> (Mono.CSharp.ResolveContext,T_REF)",
      "code_size" : "355",
      "class" : "MemberExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_CannotCallAbstractBase",
      "signature" : "void Mono.CSharp.MemberExpr:Error_CannotCallAbstractBase (Mono.CSharp.ResolveContext,string)",
      "code_size" : "85",
      "class" : "MemberExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_ProtectedMemberAccess",
      "signature" : "void Mono.CSharp.MemberExpr:Error_ProtectedMemberAccess (Mono.CSharp.ResolveContext,Mono.CSharp.MemberSpec,Mono.CSharp.TypeSpec,Mono.CSharp.Location)",
      "code_size" : "306",
      "class" : "MemberExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "FlowAnalysis",
      "signature" : "void Mono.CSharp.MemberExpr:FlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "55",
      "class" : "MemberExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveConditionalAccessReceiver",
      "signature" : "void Mono.CSharp.MemberExpr:ResolveConditionalAccessReceiver (Mono.CSharp.ResolveContext)",
      "code_size" : "78",
      "class" : "MemberExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveInstanceExpression",
      "signature" : "bool Mono.CSharp.MemberExpr:ResolveInstanceExpression (Mono.CSharp.ResolveContext,Mono.CSharp.Expression)",
      "code_size" : "1153",
      "class" : "MemberExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveInstanceExpressionCore",
      "signature" : "bool Mono.CSharp.MemberExpr:ResolveInstanceExpressionCore (Mono.CSharp.ResolveContext,Mono.CSharp.Expression)",
      "code_size" : "1933",
      "class" : "MemberExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveMemberAccess",
      "signature" : "Mono.CSharp.MemberExpr Mono.CSharp.MemberExpr:ResolveMemberAccess (Mono.CSharp.ResolveContext,Mono.CSharp.Expression,Mono.CSharp.SimpleName)",
      "code_size" : "226",
      "class" : "MemberExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitInstance",
      "signature" : "void Mono.CSharp.MemberExpr:EmitInstance (Mono.CSharp.EmitContext,bool)",
      "code_size" : "279",
      "class" : "MemberExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ExtensionMethodCandidates:.ctor (Mono.CSharp.IMemberContext,System.Collections.Generic.IList`1<Mono.CSharp.MethodSpec>,Mono.CSharp.NamespaceContainer,int)",
      "code_size" : "115",
      "class" : "ExtensionMethodCandidates",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Container",
      "signature" : "Mono.CSharp.NamespaceContainer Mono.CSharp.ExtensionMethodCandidates:get_Container ()",
      "code_size" : "20",
      "class" : "ExtensionMethodCandidates",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Context",
      "signature" : "Mono.CSharp.IMemberContext Mono.CSharp.ExtensionMethodCandidates:get_Context ()",
      "code_size" : "20",
      "class" : "ExtensionMethodCandidates",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_LookupIndex",
      "signature" : "int Mono.CSharp.ExtensionMethodCandidates:get_LookupIndex ()",
      "code_size" : "20",
      "class" : "ExtensionMethodCandidates",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Methods",
      "signature" : "System.Collections.Generic.IList`1<Mono.CSharp.MethodSpec> Mono.CSharp.ExtensionMethodCandidates:get_Methods ()",
      "code_size" : "20",
      "class" : "ExtensionMethodCandidates",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ExtensionMethodGroupExpr:.ctor (Mono.CSharp.ExtensionMethodCandidates,Mono.CSharp.Expression,Mono.CSharp.Location)",
      "code_size" : "136",
      "class" : "ExtensionMethodGroupExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsStatic",
      "signature" : "bool Mono.CSharp.ExtensionMethodGroupExpr:get_IsStatic ()",
      "code_size" : "14",
      "class" : "ExtensionMethodGroupExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetBaseMembers",
      "signature" : "System.Collections.Generic.IList`1<Mono.CSharp.MemberSpec> Mono.CSharp.ExtensionMethodGroupExpr:GetBaseMembers (Mono.CSharp.TypeSpec)",
      "code_size" : "261",
      "class" : "ExtensionMethodGroupExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsExtensionTypeCompatible",
      "signature" : "bool Mono.CSharp.ExtensionMethodGroupExpr:IsExtensionTypeCompatible (Mono.CSharp.TypeSpec,Mono.CSharp.TypeSpec)",
      "code_size" : "127",
      "class" : "ExtensionMethodGroupExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveNameOf",
      "signature" : "bool Mono.CSharp.ExtensionMethodGroupExpr:ResolveNameOf (Mono.CSharp.ResolveContext,Mono.CSharp.MemberAccess)",
      "code_size" : "80",
      "class" : "ExtensionMethodGroupExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "LookupExtensionMethod",
      "signature" : "Mono.CSharp.MethodGroupExpr Mono.CSharp.ExtensionMethodGroupExpr:LookupExtensionMethod (Mono.CSharp.ResolveContext)",
      "code_size" : "11",
      "class" : "ExtensionMethodGroupExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "OverloadResolve",
      "signature" : "Mono.CSharp.MethodGroupExpr Mono.CSharp.ExtensionMethodGroupExpr:OverloadResolve (Mono.CSharp.ResolveContext,Mono.CSharp.Arguments&,Mono.CSharp.OverloadResolver/IErrorHandler,Mono.CSharp.OverloadResolver/Restrictions)",
      "code_size" : "616",
      "class" : "ExtensionMethodGroupExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mono.CSharp.OverloadResolver.IErrorHandler.AmbiguousCandidates",
      "signature" : "bool Mono.CSharp.ExtensionMethodGroupExpr:Mono.CSharp.OverloadResolver.IErrorHandler.AmbiguousCandidates (Mono.CSharp.ResolveContext,Mono.CSharp.MemberSpec,Mono.CSharp.MemberSpec)",
      "code_size" : "11",
      "class" : "ExtensionMethodGroupExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mono.CSharp.OverloadResolver.IErrorHandler.ArgumentMismatch",
      "signature" : "bool Mono.CSharp.ExtensionMethodGroupExpr:Mono.CSharp.OverloadResolver.IErrorHandler.ArgumentMismatch (Mono.CSharp.ResolveContext,Mono.CSharp.MemberSpec,Mono.CSharp.Argument,int)",
      "code_size" : "700",
      "class" : "ExtensionMethodGroupExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mono.CSharp.OverloadResolver.IErrorHandler.NoArgumentMatch",
      "signature" : "bool Mono.CSharp.ExtensionMethodGroupExpr:Mono.CSharp.OverloadResolver.IErrorHandler.NoArgumentMatch (Mono.CSharp.ResolveContext,Mono.CSharp.MemberSpec)",
      "code_size" : "11",
      "class" : "ExtensionMethodGroupExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mono.CSharp.OverloadResolver.IErrorHandler.TypeInferenceFailed",
      "signature" : "bool Mono.CSharp.ExtensionMethodGroupExpr:Mono.CSharp.OverloadResolver.IErrorHandler.TypeInferenceFailed (Mono.CSharp.ResolveContext,Mono.CSharp.MemberSpec)",
      "code_size" : "11",
      "class" : "ExtensionMethodGroupExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.MethodGroupExpr:.ctor (System.Collections.Generic.IList`1<Mono.CSharp.MemberSpec>,Mono.CSharp.TypeSpec,Mono.CSharp.Location)",
      "code_size" : "128",
      "class" : "MethodGroupExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.MethodGroupExpr:.ctor (Mono.CSharp.MethodSpec,Mono.CSharp.TypeSpec,Mono.CSharp.Location)",
      "code_size" : "96",
      "class" : "MethodGroupExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_BestCandidate",
      "signature" : "Mono.CSharp.MethodSpec Mono.CSharp.MethodGroupExpr:get_BestCandidate ()",
      "code_size" : "20",
      "class" : "MethodGroupExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_BestCandidateReturnType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.MethodGroupExpr:get_BestCandidateReturnType ()",
      "code_size" : "20",
      "class" : "MethodGroupExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Candidates",
      "signature" : "System.Collections.Generic.IList`1<Mono.CSharp.MemberSpec> Mono.CSharp.MethodGroupExpr:get_Candidates ()",
      "code_size" : "20",
      "class" : "MethodGroupExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_DeclaringType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.MethodGroupExpr:get_DeclaringType ()",
      "code_size" : "20",
      "class" : "MethodGroupExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsConditionallyExcluded",
      "signature" : "bool Mono.CSharp.MethodGroupExpr:get_IsConditionallyExcluded ()",
      "code_size" : "41",
      "class" : "MethodGroupExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsInstance",
      "signature" : "bool Mono.CSharp.MethodGroupExpr:get_IsInstance ()",
      "code_size" : "82",
      "class" : "MethodGroupExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsSideEffectFree",
      "signature" : "bool Mono.CSharp.MethodGroupExpr:get_IsSideEffectFree ()",
      "code_size" : "59",
      "class" : "MethodGroupExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsStatic",
      "signature" : "bool Mono.CSharp.MethodGroupExpr:get_IsStatic ()",
      "code_size" : "72",
      "class" : "MethodGroupExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_KindName",
      "signature" : "string Mono.CSharp.MethodGroupExpr:get_KindName ()",
      "code_size" : "16",
      "class" : "MethodGroupExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Name",
      "signature" : "string Mono.CSharp.MethodGroupExpr:get_Name ()",
      "code_size" : "82",
      "class" : "MethodGroupExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreatePredefined",
      "signature" : "Mono.CSharp.MethodGroupExpr Mono.CSharp.MethodGroupExpr:CreatePredefined (Mono.CSharp.MethodSpec,Mono.CSharp.TypeSpec,Mono.CSharp.Location)",
      "code_size" : "158",
      "class" : "MethodGroupExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSignatureForError",
      "signature" : "string Mono.CSharp.MethodGroupExpr:GetSignatureForError ()",
      "code_size" : "76",
      "class" : "MethodGroupExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.MethodGroupExpr:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "273",
      "class" : "MethodGroupExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.MethodGroupExpr:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "102",
      "class" : "MethodGroupExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.MethodGroupExpr:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "27",
      "class" : "MethodGroupExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitCall",
      "signature" : "void Mono.CSharp.MethodGroupExpr:EmitCall (Mono.CSharp.EmitContext,Mono.CSharp.Arguments,bool)",
      "code_size" : "210",
      "class" : "MethodGroupExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitCall",
      "signature" : "void Mono.CSharp.MethodGroupExpr:EmitCall (Mono.CSharp.EmitContext,Mono.CSharp.Arguments,Mono.CSharp.TypeSpec,bool)",
      "code_size" : "311",
      "class" : "MethodGroupExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_ValueCannotBeConverted",
      "signature" : "void Mono.CSharp.MethodGroupExpr:Error_ValueCannotBeConverted (Mono.CSharp.ResolveContext,Mono.CSharp.TypeSpec,bool)",
      "code_size" : "165",
      "class" : "MethodGroupExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "HasAccessibleCandidate",
      "signature" : "bool Mono.CSharp.MethodGroupExpr:HasAccessibleCandidate (Mono.CSharp.ResolveContext)",
      "code_size" : "226",
      "class" : "MethodGroupExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsExtensionMethodArgument",
      "signature" : "bool Mono.CSharp.MethodGroupExpr:IsExtensionMethodArgument (Mono.CSharp.Expression)",
      "code_size" : "142",
      "class" : "MethodGroupExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "OverloadResolve",
      "signature" : "Mono.CSharp.MethodGroupExpr Mono.CSharp.MethodGroupExpr:OverloadResolve (Mono.CSharp.ResolveContext,Mono.CSharp.Arguments&,Mono.CSharp.OverloadResolver/IErrorHandler,Mono.CSharp.OverloadResolver/Restrictions)",
      "code_size" : "1583",
      "class" : "MethodGroupExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveMemberAccess",
      "signature" : "Mono.CSharp.MemberExpr Mono.CSharp.MethodGroupExpr:ResolveMemberAccess (Mono.CSharp.ResolveContext,Mono.CSharp.Expression,Mono.CSharp.SimpleName)",
      "code_size" : "179",
      "class" : "MethodGroupExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetTypeArguments",
      "signature" : "void Mono.CSharp.MethodGroupExpr:SetTypeArguments (Mono.CSharp.ResolveContext,Mono.CSharp.TypeArguments)",
      "code_size" : "43",
      "class" : "MethodGroupExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetBaseMembers",
      "signature" : "System.Collections.Generic.IList`1<Mono.CSharp.MemberSpec> Mono.CSharp.MethodGroupExpr:GetBaseMembers (Mono.CSharp.TypeSpec)",
      "code_size" : "96",
      "class" : "MethodGroupExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetOverrideMemberParameters",
      "signature" : "Mono.CSharp.IParametersMember Mono.CSharp.MethodGroupExpr:GetOverrideMemberParameters (Mono.CSharp.MemberSpec)",
      "code_size" : "354",
      "class" : "MethodGroupExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "LookupExtensionMethod",
      "signature" : "Mono.CSharp.MethodGroupExpr Mono.CSharp.MethodGroupExpr:LookupExtensionMethod (Mono.CSharp.ResolveContext)",
      "code_size" : "319",
      "class" : "MethodGroupExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".cctor",
      "signature" : "void Mono.CSharp.MethodGroupExpr:.cctor ()",
      "code_size" : "58",
      "class" : "MethodGroupExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ConstructorInstanceQualifier:.ctor (Mono.CSharp.TypeSpec)",
      "code_size" : "43",
      "class" : "ConstructorInstanceQualifier",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_InstanceType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.ConstructorInstanceQualifier:get_InstanceType ()",
      "code_size" : "19",
      "class" : "ConstructorInstanceQualifier",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_InstanceType",
      "signature" : "void Mono.CSharp.ConstructorInstanceQualifier:set_InstanceType (Mono.CSharp.TypeSpec)",
      "code_size" : "38",
      "class" : "ConstructorInstanceQualifier",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CheckProtectedMemberAccess",
      "signature" : "bool Mono.CSharp.ConstructorInstanceQualifier:CheckProtectedMemberAccess (Mono.CSharp.ResolveContext,Mono.CSharp.MemberSpec)",
      "code_size" : "51",
      "class" : "ConstructorInstanceQualifier",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.OverloadResolver:.ctor (System.Collections.Generic.IList`1<Mono.CSharp.MemberSpec>,Mono.CSharp.OverloadResolver/Restrictions,Mono.CSharp.Location)",
      "code_size" : "45",
      "class" : "OverloadResolver",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.OverloadResolver:.ctor (System.Collections.Generic.IList`1<Mono.CSharp.MemberSpec>,Mono.CSharp.TypeArguments,Mono.CSharp.OverloadResolver/Restrictions,Mono.CSharp.Location)",
      "code_size" : "273",
      "class" : "OverloadResolver",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_BaseMembersProvider",
      "signature" : "Mono.CSharp.OverloadResolver/IBaseMembersProvider Mono.CSharp.OverloadResolver:get_BaseMembersProvider ()",
      "code_size" : "20",
      "class" : "OverloadResolver",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_BaseMembersProvider",
      "signature" : "void Mono.CSharp.OverloadResolver:set_BaseMembersProvider (Mono.CSharp.OverloadResolver/IBaseMembersProvider)",
      "code_size" : "43",
      "class" : "OverloadResolver",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_BestCandidateIsDynamic",
      "signature" : "bool Mono.CSharp.OverloadResolver:get_BestCandidateIsDynamic ()",
      "code_size" : "20",
      "class" : "OverloadResolver",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_BestCandidateIsDynamic",
      "signature" : "void Mono.CSharp.OverloadResolver:set_BestCandidateIsDynamic (bool)",
      "code_size" : "31",
      "class" : "OverloadResolver",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_BestCandidateNewMethodGroup",
      "signature" : "Mono.CSharp.MethodGroupExpr Mono.CSharp.OverloadResolver:get_BestCandidateNewMethodGroup ()",
      "code_size" : "20",
      "class" : "OverloadResolver",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_BestCandidateReturnType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.OverloadResolver:get_BestCandidateReturnType ()",
      "code_size" : "20",
      "class" : "OverloadResolver",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_CustomErrors",
      "signature" : "Mono.CSharp.OverloadResolver/IErrorHandler Mono.CSharp.OverloadResolver:get_CustomErrors ()",
      "code_size" : "20",
      "class" : "OverloadResolver",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_CustomErrors",
      "signature" : "void Mono.CSharp.OverloadResolver:set_CustomErrors (Mono.CSharp.OverloadResolver/IErrorHandler)",
      "code_size" : "43",
      "class" : "OverloadResolver",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_DelegateType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.OverloadResolver:get_DelegateType ()",
      "code_size" : "234",
      "class" : "OverloadResolver",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_InstanceQualifier",
      "signature" : "Mono.CSharp.OverloadResolver/IInstanceQualifier Mono.CSharp.OverloadResolver:get_InstanceQualifier ()",
      "code_size" : "20",
      "class" : "OverloadResolver",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_InstanceQualifier",
      "signature" : "void Mono.CSharp.OverloadResolver:set_InstanceQualifier (Mono.CSharp.OverloadResolver/IInstanceQualifier)",
      "code_size" : "43",
      "class" : "OverloadResolver",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsProbingOnly",
      "signature" : "bool Mono.CSharp.OverloadResolver:get_IsProbingOnly ()",
      "code_size" : "43",
      "class" : "OverloadResolver",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsDelegateInvoke",
      "signature" : "bool Mono.CSharp.OverloadResolver:get_IsDelegateInvoke ()",
      "code_size" : "43",
      "class" : "OverloadResolver",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "BetterExpressionConversion",
      "signature" : "int Mono.CSharp.OverloadResolver:BetterExpressionConversion (Mono.CSharp.ResolveContext,Mono.CSharp.Argument,Mono.CSharp.TypeSpec,Mono.CSharp.TypeSpec)",
      "code_size" : "890",
      "class" : "OverloadResolver",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsBetterConversionTarget",
      "signature" : "int Mono.CSharp.OverloadResolver:IsBetterConversionTarget (Mono.CSharp.ResolveContext,Mono.CSharp.TypeSpec,Mono.CSharp.TypeSpec)",
      "code_size" : "600",
      "class" : "OverloadResolver",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "BetterTypeConversion",
      "signature" : "int Mono.CSharp.OverloadResolver:BetterTypeConversion (Mono.CSharp.ResolveContext,Mono.CSharp.TypeSpec,Mono.CSharp.TypeSpec)",
      "code_size" : "908",
      "class" : "OverloadResolver",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "BetterFunction",
      "signature" : "bool Mono.CSharp.OverloadResolver:BetterFunction (Mono.CSharp.ResolveContext,Mono.CSharp.Arguments,Mono.CSharp.MemberSpec,Mono.CSharp.AParametersCollection,bool,Mono.CSharp.MemberSpec,Mono.CSharp.AParametersCollection,bool)",
      "code_size" : "3275",
      "class" : "OverloadResolver",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CheckInflatedArguments",
      "signature" : "bool Mono.CSharp.OverloadResolver:CheckInflatedArguments (Mono.CSharp.MethodSpec)",
      "code_size" : "519",
      "class" : "OverloadResolver",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_ConstructorMismatch",
      "signature" : "void Mono.CSharp.OverloadResolver:Error_ConstructorMismatch (Mono.CSharp.ResolveContext,Mono.CSharp.TypeSpec,int,Mono.CSharp.Location)",
      "code_size" : "125",
      "class" : "OverloadResolver",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsApplicable",
      "signature" : "int Mono.CSharp.OverloadResolver:IsApplicable (Mono.CSharp.ResolveContext,Mono.CSharp.Arguments&,int,Mono.CSharp.MemberSpec&,Mono.CSharp.IParametersMember,bool&,bool&,Mono.CSharp.TypeSpec&,bool)",
      "code_size" : "5577",
      "class" : "OverloadResolver",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveDefaultValueArgument",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.OverloadResolver:ResolveDefaultValueArgument (Mono.CSharp.ResolveContext,Mono.CSharp.TypeSpec,Mono.CSharp.Expression,Mono.CSharp.Location)",
      "code_size" : "614",
      "class" : "OverloadResolver",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsArgumentCompatible",
      "signature" : "int Mono.CSharp.OverloadResolver:IsArgumentCompatible (Mono.CSharp.ResolveContext,Mono.CSharp.Argument,Mono.CSharp.Parameter/Modifier,Mono.CSharp.TypeSpec)",
      "code_size" : "557",
      "class" : "OverloadResolver",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MoreSpecific",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.OverloadResolver:MoreSpecific (Mono.CSharp.TypeSpec,Mono.CSharp.TypeSpec)",
      "code_size" : "672",
      "class" : "OverloadResolver",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveMember",
      "signature" : "T_REF Mono.CSharp.OverloadResolver:ResolveMember<T_REF> (Mono.CSharp.ResolveContext,Mono.CSharp.Arguments&)",
      "code_size" : "4754",
      "class" : "OverloadResolver",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveOperator",
      "signature" : "Mono.CSharp.MethodSpec Mono.CSharp.OverloadResolver:ResolveOperator (Mono.CSharp.ResolveContext,Mono.CSharp.Arguments&)",
      "code_size" : "49",
      "class" : "OverloadResolver",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ReportArgumentMismatch",
      "signature" : "void Mono.CSharp.OverloadResolver:ReportArgumentMismatch (Mono.CSharp.ResolveContext,int,Mono.CSharp.MemberSpec,Mono.CSharp.Argument,Mono.CSharp.AParametersCollection,Mono.CSharp.TypeSpec)",
      "code_size" : "1627",
      "class" : "OverloadResolver",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ReportOverloadError",
      "signature" : "void Mono.CSharp.OverloadResolver:ReportOverloadError (Mono.CSharp.ResolveContext,Mono.CSharp.MemberSpec,Mono.CSharp.IParametersMember,Mono.CSharp.Arguments,bool)",
      "code_size" : "2000",
      "class" : "OverloadResolver",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "HasUnfilledParams",
      "signature" : "bool Mono.CSharp.OverloadResolver:HasUnfilledParams (Mono.CSharp.MemberSpec,Mono.CSharp.IParametersMember,Mono.CSharp.Arguments)",
      "code_size" : "644",
      "class" : "OverloadResolver",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "VerifyArguments",
      "signature" : "bool Mono.CSharp.OverloadResolver:VerifyArguments (Mono.CSharp.ResolveContext,Mono.CSharp.Arguments&,Mono.CSharp.MemberSpec,Mono.CSharp.IParametersMember,bool)",
      "code_size" : "3968",
      "class" : "OverloadResolver",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.OverloadResolver/NoBaseMembers:.ctor ()",
      "code_size" : "9",
      "class" : "NoBaseMembers",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetBaseMembers",
      "signature" : "System.Collections.Generic.IList`1<Mono.CSharp.MemberSpec> Mono.CSharp.OverloadResolver/NoBaseMembers:GetBaseMembers (Mono.CSharp.TypeSpec)",
      "code_size" : "11",
      "class" : "NoBaseMembers",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetOverrideMemberParameters",
      "signature" : "Mono.CSharp.IParametersMember Mono.CSharp.OverloadResolver/NoBaseMembers:GetOverrideMemberParameters (Mono.CSharp.MemberSpec)",
      "code_size" : "11",
      "class" : "NoBaseMembers",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "LookupExtensionMethod",
      "signature" : "Mono.CSharp.MethodGroupExpr Mono.CSharp.OverloadResolver/NoBaseMembers:LookupExtensionMethod (Mono.CSharp.ResolveContext)",
      "code_size" : "11",
      "class" : "NoBaseMembers",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".cctor",
      "signature" : "void Mono.CSharp.OverloadResolver/NoBaseMembers:.cctor ()",
      "code_size" : "39",
      "class" : "NoBaseMembers",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.OverloadResolver/AmbiguousCandidate:.ctor (Mono.CSharp.MemberSpec,Mono.CSharp.AParametersCollection,bool)",
      "code_size" : "90",
      "class" : "AmbiguousCandidate",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ConstantExpr:.ctor (Mono.CSharp.ConstSpec,Mono.CSharp.Location)",
      "code_size" : "63",
      "class" : "ConstantExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Name",
      "signature" : "string Mono.CSharp.ConstantExpr:get_Name ()",
      "code_size" : "27",
      "class" : "ConstantExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_KindName",
      "signature" : "string Mono.CSharp.ConstantExpr:get_KindName ()",
      "code_size" : "16",
      "class" : "ConstantExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsInstance",
      "signature" : "bool Mono.CSharp.ConstantExpr:get_IsInstance ()",
      "code_size" : "35",
      "class" : "ConstantExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsStatic",
      "signature" : "bool Mono.CSharp.ConstantExpr:get_IsStatic ()",
      "code_size" : "14",
      "class" : "ConstantExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_DeclaringType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.ConstantExpr:get_DeclaringType ()",
      "code_size" : "30",
      "class" : "ConstantExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.ConstantExpr:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "47",
      "class" : "ConstantExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.ConstantExpr:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "227",
      "class" : "ConstantExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.ConstantExpr:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "27",
      "class" : "ConstantExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSignatureForError",
      "signature" : "string Mono.CSharp.ConstantExpr:GetSignatureForError ()",
      "code_size" : "29",
      "class" : "ConstantExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetTypeArguments",
      "signature" : "void Mono.CSharp.ConstantExpr:SetTypeArguments (Mono.CSharp.ResolveContext,Mono.CSharp.TypeArguments)",
      "code_size" : "85",
      "class" : "ConstantExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.FieldExpr:.ctor (Mono.CSharp.Location)",
      "code_size" : "32",
      "class" : "FieldExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.FieldExpr:.ctor (Mono.CSharp.FieldSpec,Mono.CSharp.Location)",
      "code_size" : "93",
      "class" : "FieldExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.FieldExpr:.ctor (Mono.CSharp.FieldBase,Mono.CSharp.Location)",
      "code_size" : "47",
      "class" : "FieldExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Name",
      "signature" : "string Mono.CSharp.FieldExpr:get_Name ()",
      "code_size" : "32",
      "class" : "FieldExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsHoisted",
      "signature" : "bool Mono.CSharp.FieldExpr:get_IsHoisted ()",
      "code_size" : "178",
      "class" : "FieldExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsInstance",
      "signature" : "bool Mono.CSharp.FieldExpr:get_IsInstance ()",
      "code_size" : "65",
      "class" : "FieldExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsStatic",
      "signature" : "bool Mono.CSharp.FieldExpr:get_IsStatic ()",
      "code_size" : "55",
      "class" : "FieldExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_KindName",
      "signature" : "string Mono.CSharp.FieldExpr:get_KindName ()",
      "code_size" : "16",
      "class" : "FieldExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Spec",
      "signature" : "Mono.CSharp.FieldSpec Mono.CSharp.FieldExpr:get_Spec ()",
      "code_size" : "20",
      "class" : "FieldExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_DeclaringType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.FieldExpr:get_DeclaringType ()",
      "code_size" : "30",
      "class" : "FieldExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_VariableInfo",
      "signature" : "Mono.CSharp.VariableInfo Mono.CSharp.FieldExpr:get_VariableInfo ()",
      "code_size" : "20",
      "class" : "FieldExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSignatureForError",
      "signature" : "string Mono.CSharp.FieldExpr:GetSignatureForError ()",
      "code_size" : "29",
      "class" : "FieldExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsMarshalByRefAccess",
      "signature" : "bool Mono.CSharp.FieldExpr:IsMarshalByRefAccess (Mono.CSharp.ResolveContext)",
      "code_size" : "307",
      "class" : "FieldExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetHasAddressTaken",
      "signature" : "void Mono.CSharp.FieldExpr:SetHasAddressTaken ()",
      "code_size" : "167",
      "class" : "FieldExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.FieldExpr:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Expression)",
      "code_size" : "161",
      "class" : "FieldExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.FieldExpr:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "62",
      "class" : "FieldExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.FieldExpr:CreateExpressionTree (Mono.CSharp.ResolveContext,bool)",
      "code_size" : "431",
      "class" : "FieldExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateTypeOfExpression",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.FieldExpr:CreateTypeOfExpression ()",
      "code_size" : "80",
      "class" : "FieldExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.FieldExpr:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "67",
      "class" : "FieldExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.FieldExpr:DoResolve (Mono.CSharp.ResolveContext,Mono.CSharp.Expression)",
      "code_size" : "1436",
      "class" : "FieldExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetFieldAssigned",
      "signature" : "void Mono.CSharp.FieldExpr:SetFieldAssigned (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "1167",
      "class" : "FieldExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_AssignToReadonly",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.FieldExpr:Error_AssignToReadonly (Mono.CSharp.ResolveContext,Mono.CSharp.Expression)",
      "code_size" : "810",
      "class" : "FieldExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolveLValue",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.FieldExpr:DoResolveLValue (Mono.CSharp.ResolveContext,Mono.CSharp.Expression)",
      "code_size" : "946",
      "class" : "FieldExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "FlowAnalysis",
      "signature" : "void Mono.CSharp.FieldExpr:FlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "479",
      "class" : "FieldExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "SkipLeftValueTypeAccess",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.FieldExpr:SkipLeftValueTypeAccess (Mono.CSharp.Expression)",
      "code_size" : "187",
      "class" : "FieldExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetHashCode",
      "signature" : "int Mono.CSharp.FieldExpr:GetHashCode ()",
      "code_size" : "29",
      "class" : "FieldExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsFixed",
      "signature" : "bool Mono.CSharp.FieldExpr:get_IsFixed ()",
      "code_size" : "368",
      "class" : "FieldExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Equals",
      "signature" : "bool Mono.CSharp.FieldExpr:Equals (object)",
      "code_size" : "164",
      "class" : "FieldExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.FieldExpr:Emit (Mono.CSharp.EmitContext,bool)",
      "code_size" : "1552",
      "class" : "FieldExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitAssign",
      "signature" : "void Mono.CSharp.FieldExpr:EmitAssign (Mono.CSharp.EmitContext,Mono.CSharp.Expression,bool,bool)",
      "code_size" : "1363",
      "class" : "FieldExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitAssignFromStack",
      "signature" : "void Mono.CSharp.FieldExpr:EmitAssignFromStack (Mono.CSharp.EmitContext)",
      "code_size" : "269",
      "class" : "FieldExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.FieldExpr:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "25",
      "class" : "FieldExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitSideEffect",
      "signature" : "void Mono.CSharp.FieldExpr:EmitSideEffect (Mono.CSharp.EmitContext)",
      "code_size" : "78",
      "class" : "FieldExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddressOf",
      "signature" : "void Mono.CSharp.FieldExpr:AddressOf (Mono.CSharp.EmitContext,Mono.CSharp.AddressOp)",
      "code_size" : "844",
      "class" : "FieldExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MakeAssignExpression",
      "signature" : "System.Linq.Expressions.Expression Mono.CSharp.FieldExpr:MakeAssignExpression (Mono.CSharp.BuilderContext,Mono.CSharp.Expression)",
      "code_size" : "28",
      "class" : "FieldExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MakeExpression",
      "signature" : "System.Linq.Expressions.Expression Mono.CSharp.FieldExpr:MakeExpression (Mono.CSharp.BuilderContext)",
      "code_size" : "96",
      "class" : "FieldExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetTypeArguments",
      "signature" : "void Mono.CSharp.FieldExpr:SetTypeArguments (Mono.CSharp.ResolveContext,Mono.CSharp.TypeArguments)",
      "code_size" : "85",
      "class" : "FieldExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.PropertyExpr:.ctor (Mono.CSharp.PropertySpec,Mono.CSharp.Location)",
      "code_size" : "93",
      "class" : "PropertyExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Arguments",
      "signature" : "Mono.CSharp.Arguments Mono.CSharp.PropertyExpr:get_Arguments ()",
      "code_size" : "20",
      "class" : "PropertyExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Arguments",
      "signature" : "void Mono.CSharp.PropertyExpr:set_Arguments (Mono.CSharp.Arguments)",
      "code_size" : "43",
      "class" : "PropertyExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_DeclaringType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.PropertyExpr:get_DeclaringType ()",
      "code_size" : "30",
      "class" : "PropertyExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Name",
      "signature" : "string Mono.CSharp.PropertyExpr:get_Name ()",
      "code_size" : "32",
      "class" : "PropertyExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsAutoPropertyAccess",
      "signature" : "bool Mono.CSharp.PropertyExpr:get_IsAutoPropertyAccess ()",
      "code_size" : "140",
      "class" : "PropertyExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsInstance",
      "signature" : "bool Mono.CSharp.PropertyExpr:get_IsInstance ()",
      "code_size" : "35",
      "class" : "PropertyExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsStatic",
      "signature" : "bool Mono.CSharp.PropertyExpr:get_IsStatic ()",
      "code_size" : "55",
      "class" : "PropertyExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_KindName",
      "signature" : "string Mono.CSharp.PropertyExpr:get_KindName ()",
      "code_size" : "16",
      "class" : "PropertyExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_PropertyInfo",
      "signature" : "Mono.CSharp.PropertySpec Mono.CSharp.PropertyExpr:get_PropertyInfo ()",
      "code_size" : "20",
      "class" : "PropertyExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CanReduceLambda",
      "signature" : "Mono.CSharp.MethodGroupExpr Mono.CSharp.PropertyExpr:CanReduceLambda (Mono.CSharp.AnonymousMethodBody)",
      "code_size" : "343",
      "class" : "PropertyExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreatePredefined",
      "signature" : "Mono.CSharp.PropertyExpr Mono.CSharp.PropertyExpr:CreatePredefined (Mono.CSharp.PropertySpec,Mono.CSharp.Location)",
      "code_size" : "175",
      "class" : "PropertyExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.PropertyExpr:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "670",
      "class" : "PropertyExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateSetterTypeOfExpression",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.PropertyExpr:CreateSetterTypeOfExpression (Mono.CSharp.ResolveContext)",
      "code_size" : "101",
      "class" : "PropertyExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSignatureForError",
      "signature" : "string Mono.CSharp.PropertyExpr:GetSignatureForError ()",
      "code_size" : "29",
      "class" : "PropertyExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MakeAssignExpression",
      "signature" : "System.Linq.Expressions.Expression Mono.CSharp.PropertyExpr:MakeAssignExpression (Mono.CSharp.BuilderContext,Mono.CSharp.Expression)",
      "code_size" : "139",
      "class" : "PropertyExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MakeExpression",
      "signature" : "System.Linq.Expressions.Expression Mono.CSharp.PropertyExpr:MakeExpression (Mono.CSharp.BuilderContext)",
      "code_size" : "139",
      "class" : "PropertyExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_PropertyNotValid",
      "signature" : "void Mono.CSharp.PropertyExpr:Error_PropertyNotValid (Mono.CSharp.ResolveContext)",
      "code_size" : "146",
      "class" : "PropertyExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsSingleDimensionalArrayLength",
      "signature" : "bool Mono.CSharp.PropertyExpr:IsSingleDimensionalArrayLength ()",
      "code_size" : "232",
      "class" : "PropertyExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.PropertyExpr:Emit (Mono.CSharp.EmitContext,bool)",
      "code_size" : "472",
      "class" : "PropertyExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitAssign",
      "signature" : "void Mono.CSharp.PropertyExpr:EmitAssign (Mono.CSharp.EmitContext,Mono.CSharp.Expression,bool,bool)",
      "code_size" : "1301",
      "class" : "PropertyExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "FlowAnalysis",
      "signature" : "void Mono.CSharp.PropertyExpr:FlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "601",
      "class" : "PropertyExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "OverloadResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.PropertyExpr:OverloadResolve (Mono.CSharp.ResolveContext,Mono.CSharp.Expression)",
      "code_size" : "1461",
      "class" : "PropertyExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveAutopropertyAssignment",
      "signature" : "bool Mono.CSharp.PropertyExpr:ResolveAutopropertyAssignment (Mono.CSharp.ResolveContext,Mono.CSharp.Expression)",
      "code_size" : "883",
      "class" : "PropertyExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetBackingFieldAssigned",
      "signature" : "void Mono.CSharp.PropertyExpr:SetBackingFieldAssigned (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "439",
      "class" : "PropertyExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetTypeArguments",
      "signature" : "void Mono.CSharp.PropertyExpr:SetTypeArguments (Mono.CSharp.ResolveContext,Mono.CSharp.TypeArguments)",
      "code_size" : "85",
      "class" : "PropertyExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.PropertyOrIndexerExpr`1<T_REF>:.ctor (Mono.CSharp.Location)",
      "code_size" : "38",
      "class" : "PropertyOrIndexerExpr`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Getter",
      "signature" : "Mono.CSharp.MethodSpec Mono.CSharp.PropertyOrIndexerExpr`1<T_REF>:get_Getter ()",
      "code_size" : "20",
      "class" : "PropertyOrIndexerExpr`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Getter",
      "signature" : "void Mono.CSharp.PropertyOrIndexerExpr`1<T_REF>:set_Getter (Mono.CSharp.MethodSpec)",
      "code_size" : "39",
      "class" : "PropertyOrIndexerExpr`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Setter",
      "signature" : "Mono.CSharp.MethodSpec Mono.CSharp.PropertyOrIndexerExpr`1<T_REF>:get_Setter ()",
      "code_size" : "20",
      "class" : "PropertyOrIndexerExpr`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Setter",
      "signature" : "void Mono.CSharp.PropertyOrIndexerExpr`1<T_REF>:set_Setter (Mono.CSharp.MethodSpec)",
      "code_size" : "39",
      "class" : "PropertyOrIndexerExpr`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.PropertyOrIndexerExpr`1<T_REF>:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "309",
      "class" : "PropertyOrIndexerExpr`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolveLValue",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.PropertyOrIndexerExpr`1<T_REF>:DoResolveLValue (Mono.CSharp.ResolveContext,Mono.CSharp.Expression)",
      "code_size" : "1424",
      "class" : "PropertyOrIndexerExpr`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitConditionalAccess",
      "signature" : "void Mono.CSharp.PropertyOrIndexerExpr`1<T_REF>:EmitConditionalAccess (Mono.CSharp.EmitContext,Mono.CSharp.CallEmitter&,Mono.CSharp.MethodSpec,Mono.CSharp.Arguments)",
      "code_size" : "308",
      "class" : "PropertyOrIndexerExpr`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.PropertyOrIndexerExpr`1<T_REF>:Emit (Mono.CSharp.EmitContext,bool)",
      "code_size" : "640",
      "class" : "PropertyOrIndexerExpr`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.PropertyOrIndexerExpr`1<T_REF>:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "40",
      "class" : "PropertyOrIndexerExpr`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitToFieldSource",
      "signature" : "Mono.CSharp.FieldExpr Mono.CSharp.PropertyOrIndexerExpr`1<T_REF>:EmitToFieldSource (Mono.CSharp.EmitContext)",
      "code_size" : "50",
      "class" : "PropertyOrIndexerExpr`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveGetter",
      "signature" : "bool Mono.CSharp.PropertyOrIndexerExpr`1<T_REF>:ResolveGetter (Mono.CSharp.ResolveContext)",
      "code_size" : "946",
      "class" : "PropertyOrIndexerExpr`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveAutopropertyAssignment",
      "signature" : "bool Mono.CSharp.PropertyOrIndexerExpr`1<T_REF>:ResolveAutopropertyAssignment (Mono.CSharp.ResolveContext,Mono.CSharp.Expression)",
      "code_size" : "15",
      "class" : "PropertyOrIndexerExpr`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.EventExpr:.ctor (Mono.CSharp.EventSpec,Mono.CSharp.Location)",
      "code_size" : "63",
      "class" : "EventExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_DeclaringType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.EventExpr:get_DeclaringType ()",
      "code_size" : "30",
      "class" : "EventExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Name",
      "signature" : "string Mono.CSharp.EventExpr:get_Name ()",
      "code_size" : "32",
      "class" : "EventExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsInstance",
      "signature" : "bool Mono.CSharp.EventExpr:get_IsInstance ()",
      "code_size" : "65",
      "class" : "EventExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsStatic",
      "signature" : "bool Mono.CSharp.EventExpr:get_IsStatic ()",
      "code_size" : "55",
      "class" : "EventExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_KindName",
      "signature" : "string Mono.CSharp.EventExpr:get_KindName ()",
      "code_size" : "16",
      "class" : "EventExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Operator",
      "signature" : "Mono.CSharp.MethodSpec Mono.CSharp.EventExpr:get_Operator ()",
      "code_size" : "20",
      "class" : "EventExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveMemberAccess",
      "signature" : "Mono.CSharp.MemberExpr Mono.CSharp.EventExpr:ResolveMemberAccess (Mono.CSharp.ResolveContext,Mono.CSharp.Expression,Mono.CSharp.SimpleName)",
      "code_size" : "470",
      "class" : "EventExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.EventExpr:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "47",
      "class" : "EventExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolveLValue",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.EventExpr:DoResolveLValue (Mono.CSharp.ResolveContext,Mono.CSharp.Expression)",
      "code_size" : "245",
      "class" : "EventExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.EventExpr:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "154",
      "class" : "EventExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.EventExpr:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "27",
      "class" : "EventExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.EventExpr:Emit (Mono.CSharp.EmitContext,bool)",
      "code_size" : "27",
      "class" : "EventExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitAssign",
      "signature" : "void Mono.CSharp.EventExpr:EmitAssign (Mono.CSharp.EmitContext,Mono.CSharp.Expression,bool,bool)",
      "code_size" : "335",
      "class" : "EventExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_AssignmentEventOnly",
      "signature" : "void Mono.CSharp.EventExpr:Error_AssignmentEventOnly (Mono.CSharp.ResolveContext)",
      "code_size" : "354",
      "class" : "EventExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_CannotCallAbstractBase",
      "signature" : "void Mono.CSharp.EventExpr:Error_CannotCallAbstractBase (Mono.CSharp.ResolveContext,string)",
      "code_size" : "85",
      "class" : "EventExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSignatureForError",
      "signature" : "string Mono.CSharp.EventExpr:GetSignatureForError ()",
      "code_size" : "25",
      "class" : "EventExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetTypeArguments",
      "signature" : "void Mono.CSharp.EventExpr:SetTypeArguments (Mono.CSharp.ResolveContext,Mono.CSharp.TypeArguments)",
      "code_size" : "85",
      "class" : "EventExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.TemporaryVariableReference:.ctor (Mono.CSharp.LocalVariable,Mono.CSharp.Location)",
      "code_size" : "93",
      "class" : "TemporaryVariableReference",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsLockedByStatement",
      "signature" : "bool Mono.CSharp.TemporaryVariableReference:get_IsLockedByStatement ()",
      "code_size" : "11",
      "class" : "TemporaryVariableReference",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_IsLockedByStatement",
      "signature" : "void Mono.CSharp.TemporaryVariableReference:set_IsLockedByStatement (bool)",
      "code_size" : "9",
      "class" : "TemporaryVariableReference",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_LocalInfo",
      "signature" : "Mono.CSharp.LocalVariable Mono.CSharp.TemporaryVariableReference:get_LocalInfo ()",
      "code_size" : "20",
      "class" : "TemporaryVariableReference",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Create",
      "signature" : "Mono.CSharp.TemporaryVariableReference Mono.CSharp.TemporaryVariableReference:Create (Mono.CSharp.TypeSpec,Mono.CSharp.Block,Mono.CSharp.Location,bool)",
      "code_size" : "93",
      "class" : "TemporaryVariableReference",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.TemporaryVariableReference:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "314",
      "class" : "TemporaryVariableReference",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolveLValue",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.TemporaryVariableReference:DoResolveLValue (Mono.CSharp.ResolveContext,Mono.CSharp.Expression)",
      "code_size" : "23",
      "class" : "TemporaryVariableReference",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.TemporaryVariableReference:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "57",
      "class" : "TemporaryVariableReference",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitAssign",
      "signature" : "void Mono.CSharp.TemporaryVariableReference:EmitAssign (Mono.CSharp.EmitContext,Mono.CSharp.Expression)",
      "code_size" : "70",
      "class" : "TemporaryVariableReference",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetHoistedVariable",
      "signature" : "Mono.CSharp.HoistedVariable Mono.CSharp.TemporaryVariableReference:GetHoistedVariable (Mono.CSharp.AnonymousExpression)",
      "code_size" : "30",
      "class" : "TemporaryVariableReference",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsFixed",
      "signature" : "bool Mono.CSharp.TemporaryVariableReference:get_IsFixed ()",
      "code_size" : "14",
      "class" : "TemporaryVariableReference",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsRef",
      "signature" : "bool Mono.CSharp.TemporaryVariableReference:get_IsRef ()",
      "code_size" : "11",
      "class" : "TemporaryVariableReference",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Name",
      "signature" : "string Mono.CSharp.TemporaryVariableReference:get_Name ()",
      "code_size" : "27",
      "class" : "TemporaryVariableReference",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetHasAddressTaken",
      "signature" : "void Mono.CSharp.TemporaryVariableReference:SetHasAddressTaken ()",
      "code_size" : "27",
      "class" : "TemporaryVariableReference",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Variable",
      "signature" : "Mono.CSharp.ILocalVariable Mono.CSharp.TemporaryVariableReference:get_Variable ()",
      "code_size" : "20",
      "class" : "TemporaryVariableReference",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_VariableInfo",
      "signature" : "Mono.CSharp.VariableInfo Mono.CSharp.TemporaryVariableReference:get_VariableInfo ()",
      "code_size" : "11",
      "class" : "TemporaryVariableReference",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.TemporaryVariableReference/Declarator:.ctor (Mono.CSharp.TemporaryVariableReference)",
      "code_size" : "70",
      "class" : "Declarator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoEmit",
      "signature" : "void Mono.CSharp.TemporaryVariableReference/Declarator:DoEmit (Mono.CSharp.EmitContext)",
      "code_size" : "45",
      "class" : "Declarator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.TemporaryVariableReference/Declarator:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "31",
      "class" : "Declarator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoFlowAnalysis",
      "signature" : "bool Mono.CSharp.TemporaryVariableReference/Declarator:DoFlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "11",
      "class" : "Declarator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.TemporaryVariableReference/Declarator:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Statement)",
      "code_size" : "9",
      "class" : "Declarator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.VarExpr:.ctor (Mono.CSharp.Location)",
      "code_size" : "39",
      "class" : "VarExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "InferType",
      "signature" : "bool Mono.CSharp.VarExpr:InferType (Mono.CSharp.ResolveContext,Mono.CSharp.Expression)",
      "code_size" : "369",
      "class" : "VarExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_TypeOrNamespaceNotFound",
      "signature" : "void Mono.CSharp.VarExpr:Error_TypeOrNamespaceNotFound (Mono.CSharp.IMemberContext)",
      "code_size" : "179",
      "class" : "VarExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.EnumMember:.ctor (Mono.CSharp.Enum,Mono.CSharp.MemberName,Mono.CSharp.Attributes)",
      "code_size" : "77",
      "class" : "EnumMember",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsValidEnumType",
      "signature" : "bool Mono.CSharp.EnumMember:IsValidEnumType (Mono.CSharp.TypeSpec)",
      "code_size" : "93",
      "class" : "EnumMember",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ConvertInitializer",
      "signature" : "Mono.CSharp.Constant Mono.CSharp.EnumMember:ConvertInitializer (Mono.CSharp.ResolveContext,Mono.CSharp.Constant)",
      "code_size" : "454",
      "class" : "EnumMember",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Define",
      "signature" : "bool Mono.CSharp.EnumMember:Define ()",
      "code_size" : "430",
      "class" : "EnumMember",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "void Mono.CSharp.EnumMember:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "EnumMember",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.EnumMember/EnumTypeExpr:.ctor ()",
      "code_size" : "9",
      "class" : "EnumTypeExpr",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveAsType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.EnumMember/EnumTypeExpr:ResolveAsType (Mono.CSharp.IMemberContext,bool)",
      "code_size" : "76",
      "class" : "EnumTypeExpr",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Enum:.ctor (Mono.CSharp.TypeContainer,Mono.CSharp.FullNamedExpression,Mono.CSharp.Modifiers,Mono.CSharp.MemberName,Mono.CSharp.Attributes)",
      "code_size" : "347",
      "class" : "Enum",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_AttributeTargets",
      "signature" : "System.AttributeTargets Mono.CSharp.Enum:get_AttributeTargets ()",
      "code_size" : "14",
      "class" : "Enum",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_BaseTypeExpression",
      "signature" : "Mono.CSharp.FullNamedExpression Mono.CSharp.Enum:get_BaseTypeExpression ()",
      "code_size" : "23",
      "class" : "Enum",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_TypeAttr",
      "signature" : "System.Reflection.TypeAttributes Mono.CSharp.Enum:get_TypeAttr ()",
      "code_size" : "26",
      "class" : "Enum",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_UnderlyingType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.Enum:get_UnderlyingType ()",
      "code_size" : "90",
      "class" : "Enum",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "void Mono.CSharp.Enum:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "Enum",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddEnumMember",
      "signature" : "void Mono.CSharp.Enum:AddEnumMember (Mono.CSharp.EnumMember)",
      "code_size" : "145",
      "class" : "Enum",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_UnderlyingType",
      "signature" : "void Mono.CSharp.Enum:Error_UnderlyingType (Mono.CSharp.Location)",
      "code_size" : "51",
      "class" : "Enum",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoDefineContainer",
      "signature" : "void Mono.CSharp.Enum:DoDefineContainer ()",
      "code_size" : "510",
      "class" : "Enum",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoDefineMembers",
      "signature" : "bool Mono.CSharp.Enum:DoDefineMembers ()",
      "code_size" : "432",
      "class" : "Enum",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsUnmanagedType",
      "signature" : "bool Mono.CSharp.Enum:IsUnmanagedType ()",
      "code_size" : "14",
      "class" : "Enum",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveBaseTypes",
      "signature" : "Mono.CSharp.TypeSpec[] Mono.CSharp.Enum:ResolveBaseTypes (Mono.CSharp.FullNamedExpression&)",
      "code_size" : "94",
      "class" : "Enum",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "VerifyClsCompliance",
      "signature" : "bool Mono.CSharp.Enum:VerifyClsCompliance ()",
      "code_size" : "318",
      "class" : "Enum",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".cctor",
      "signature" : "void Mono.CSharp.Enum:.cctor ()",
      "code_size" : "26",
      "class" : "Enum",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Enum/ImplicitInitializer:.ctor (Mono.CSharp.EnumMember,Mono.CSharp.EnumMember)",
      "code_size" : "74",
      "class" : "ImplicitInitializer",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "ContainsEmitWithAwait",
      "signature" : "bool Mono.CSharp.Enum/ImplicitInitializer:ContainsEmitWithAwait ()",
      "code_size" : "11",
      "class" : "ImplicitInitializer",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Enum/ImplicitInitializer:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "47",
      "class" : "ImplicitInitializer",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Enum/ImplicitInitializer:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "804",
      "class" : "ImplicitInitializer",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.Enum/ImplicitInitializer:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "47",
      "class" : "ImplicitInitializer",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.EnumSpec:.ctor (Mono.CSharp.TypeSpec,Mono.CSharp.ITypeDefinition,Mono.CSharp.TypeSpec,System.Type,Mono.CSharp.Modifiers)",
      "code_size" : "98",
      "class" : "EnumSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_UnderlyingType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.EnumSpec:get_UnderlyingType ()",
      "code_size" : "20",
      "class" : "EnumSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_UnderlyingType",
      "signature" : "void Mono.CSharp.EnumSpec:set_UnderlyingType (Mono.CSharp.TypeSpec)",
      "code_size" : "131",
      "class" : "EnumSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetUnderlyingType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.EnumSpec:GetUnderlyingType (Mono.CSharp.TypeSpec)",
      "code_size" : "90",
      "class" : "EnumSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsValidUnderlyingType",
      "signature" : "bool Mono.CSharp.EnumSpec:IsValidUnderlyingType (Mono.CSharp.TypeSpec)",
      "code_size" : "75",
      "class" : "EnumSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Evaluator:.ctor (Mono.CSharp.CompilerContext)",
      "code_size" : "559",
      "class" : "Evaluator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Init",
      "signature" : "void Mono.CSharp.Evaluator:Init ()",
      "code_size" : "174",
      "class" : "Evaluator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ParseStartupFiles",
      "signature" : "void Mono.CSharp.Evaluator:ParseStartupFiles ()",
      "code_size" : "305",
      "class" : "Evaluator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Reset",
      "signature" : "void Mono.CSharp.Evaluator:Reset ()",
      "code_size" : "59",
      "class" : "Evaluator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_WaitOnTask",
      "signature" : "bool Mono.CSharp.Evaluator:get_WaitOnTask ()",
      "code_size" : "20",
      "class" : "Evaluator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_WaitOnTask",
      "signature" : "void Mono.CSharp.Evaluator:set_WaitOnTask (bool)",
      "code_size" : "31",
      "class" : "Evaluator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_InteractiveBaseClass",
      "signature" : "System.Type Mono.CSharp.Evaluator:get_InteractiveBaseClass ()",
      "code_size" : "20",
      "class" : "Evaluator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_InteractiveBaseClass",
      "signature" : "void Mono.CSharp.Evaluator:set_InteractiveBaseClass (System.Type)",
      "code_size" : "108",
      "class" : "Evaluator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Interrupt",
      "signature" : "void Mono.CSharp.Evaluator:Interrupt ()",
      "code_size" : "78",
      "class" : "Evaluator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Compile",
      "signature" : "string Mono.CSharp.Evaluator:Compile (string,Mono.CSharp.CompiledMethod&)",
      "code_size" : "634",
      "class" : "Evaluator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Compile",
      "signature" : "Mono.CSharp.CompiledMethod Mono.CSharp.Evaluator:Compile (string)",
      "code_size" : "61",
      "class" : "Evaluator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitValueChangedCallback",
      "signature" : "void Mono.CSharp.Evaluator:EmitValueChangedCallback (Mono.CSharp.EmitContext,string,Mono.CSharp.TypeSpec,Mono.CSharp.Location)",
      "code_size" : "692",
      "class" : "Evaluator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Evaluate",
      "signature" : "string Mono.CSharp.Evaluator:Evaluate (string,object&,bool&)",
      "code_size" : "595",
      "class" : "Evaluator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetCompletions",
      "signature" : "string[] Mono.CSharp.Evaluator:GetCompletions (string,string&)",
      "code_size" : "1123",
      "class" : "Evaluator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Run",
      "signature" : "bool Mono.CSharp.Evaluator:Run (string)",
      "code_size" : "66",
      "class" : "Evaluator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Evaluate",
      "signature" : "object Mono.CSharp.Evaluator:Evaluate (string)",
      "code_size" : "153",
      "class" : "Evaluator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ModificationListener",
      "signature" : "Mono.CSharp.ValueModificationHandler Mono.CSharp.Evaluator:get_ModificationListener ()",
      "code_size" : "20",
      "class" : "Evaluator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_ModificationListener",
      "signature" : "void Mono.CSharp.Evaluator:set_ModificationListener (Mono.CSharp.ValueModificationHandler)",
      "code_size" : "43",
      "class" : "Evaluator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ToplevelOrStatement",
      "signature" : "Mono.CSharp.Evaluator/InputKind Mono.CSharp.Evaluator:ToplevelOrStatement (Mono.CSharp.SeekableStreamReader)",
      "code_size" : "639",
      "class" : "Evaluator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ParseString",
      "signature" : "Mono.CSharp.CSharpParser Mono.CSharp.Evaluator:ParseString (Mono.CSharp.Evaluator/ParseMode,string,bool&)",
      "code_size" : "1299",
      "class" : "Evaluator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CompileBlock",
      "signature" : "Mono.CSharp.CompiledMethod Mono.CSharp.Evaluator:CompileBlock (Mono.CSharp.Class,Mono.CSharp.Undo,Mono.CSharp.Report)",
      "code_size" : "3992",
      "class" : "Evaluator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "LookupField",
      "signature" : "System.Tuple`2<Mono.CSharp.FieldSpec, System.Reflection.FieldInfo> Mono.CSharp.Evaluator:LookupField (string)",
      "code_size" : "59",
      "class" : "Evaluator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Quote",
      "signature" : "string Mono.CSharp.Evaluator:Quote (string)",
      "code_size" : "90",
      "class" : "Evaluator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetUsing",
      "signature" : "string Mono.CSharp.Evaluator:GetUsing ()",
      "code_size" : "349",
      "class" : "Evaluator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetUsingList",
      "signature" : "System.Collections.Generic.List`1<string> Mono.CSharp.Evaluator:GetUsingList ()",
      "code_size" : "335",
      "class" : "Evaluator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetVarNames",
      "signature" : "string[] Mono.CSharp.Evaluator:GetVarNames ()",
      "code_size" : "250",
      "class" : "Evaluator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetVars",
      "signature" : "string Mono.CSharp.Evaluator:GetVars ()",
      "code_size" : "961",
      "class" : "Evaluator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "LoadAssembly",
      "signature" : "void Mono.CSharp.Evaluator:LoadAssembly (string)",
      "code_size" : "316",
      "class" : "Evaluator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ReferenceAssembly",
      "signature" : "void Mono.CSharp.Evaluator:ReferenceAssembly (System.Reflection.Assembly)",
      "code_size" : "215",
      "class" : "Evaluator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".cctor",
      "signature" : "void Mono.CSharp.Evaluator:.cctor ()",
      "code_size" : "39",
      "class" : "Evaluator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.InteractiveBase:.ctor ()",
      "code_size" : "9",
      "class" : "InteractiveBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ShowVars",
      "signature" : "void Mono.CSharp.InteractiveBase:ShowVars ()",
      "code_size" : "85",
      "class" : "InteractiveBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ShowUsing",
      "signature" : "void Mono.CSharp.InteractiveBase:ShowUsing ()",
      "code_size" : "85",
      "class" : "InteractiveBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Time",
      "signature" : "System.TimeSpan Mono.CSharp.InteractiveBase:Time (System.Action)",
      "code_size" : "73",
      "class" : "InteractiveBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "LoadPackage",
      "signature" : "void Mono.CSharp.InteractiveBase:LoadPackage (string)",
      "code_size" : "493",
      "class" : "InteractiveBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "LoadAssembly",
      "signature" : "void Mono.CSharp.InteractiveBase:LoadAssembly (string)",
      "code_size" : "38",
      "class" : "InteractiveBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "print",
      "signature" : "void Mono.CSharp.InteractiveBase:print (object)",
      "code_size" : "39",
      "class" : "InteractiveBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "print",
      "signature" : "void Mono.CSharp.InteractiveBase:print (string,object[])",
      "code_size" : "49",
      "class" : "InteractiveBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_help",
      "signature" : "string Mono.CSharp.InteractiveBase:get_help ()",
      "code_size" : "16",
      "class" : "InteractiveBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_quit",
      "signature" : "object Mono.CSharp.InteractiveBase:get_quit ()",
      "code_size" : "26",
      "class" : "InteractiveBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Quit",
      "signature" : "void Mono.CSharp.InteractiveBase:Quit ()",
      "code_size" : "19",
      "class" : "InteractiveBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".cctor",
      "signature" : "void Mono.CSharp.InteractiveBase:.cctor ()",
      "code_size" : "79",
      "class" : "InteractiveBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.InteractiveMethod:.ctor (Mono.CSharp.TypeDefinition,Mono.CSharp.FullNamedExpression,Mono.CSharp.Modifiers,Mono.CSharp.ParametersCompiled)",
      "code_size" : "111",
      "class" : "InteractiveMethod",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ChangeToAsync",
      "signature" : "void Mono.CSharp.InteractiveMethod:ChangeToAsync ()",
      "code_size" : "219",
      "class" : "InteractiveMethod",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSignatureForError",
      "signature" : "string Mono.CSharp.InteractiveMethod:GetSignatureForError ()",
      "code_size" : "16",
      "class" : "InteractiveMethod",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.HoistedEvaluatorVariable:.ctor (Mono.CSharp.Field)",
      "code_size" : "30",
      "class" : "HoistedEvaluatorVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetFieldExpression",
      "signature" : "Mono.CSharp.FieldExpr Mono.CSharp.HoistedEvaluatorVariable:GetFieldExpression (Mono.CSharp.EmitContext)",
      "code_size" : "90",
      "class" : "HoistedEvaluatorVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.OptionalAssign:.ctor (Mono.CSharp.Expression,Mono.CSharp.Location)",
      "code_size" : "40",
      "class" : "OptionalAssign",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_StartLocation",
      "signature" : "Mono.CSharp.Location Mono.CSharp.OptionalAssign:get_StartLocation ()",
      "code_size" : "47",
      "class" : "OptionalAssign",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.OptionalAssign:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "1565",
      "class" : "OptionalAssign",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitStatement",
      "signature" : "void Mono.CSharp.OptionalAssign:EmitStatement (Mono.CSharp.EmitContext)",
      "code_size" : "71",
      "class" : "OptionalAssign",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Undo:.ctor ()",
      "code_size" : "9",
      "class" : "Undo",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddTypeContainer",
      "signature" : "void Mono.CSharp.Undo:AddTypeContainer (Mono.CSharp.TypeContainer,Mono.CSharp.TypeDefinition)",
      "code_size" : "814",
      "class" : "Undo",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ExecuteUndo",
      "signature" : "void Mono.CSharp.Undo:ExecuteUndo ()",
      "code_size" : "191",
      "class" : "Undo",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Register",
      "signature" : "int Mono.CSharp.ListenerProxy:Register (Mono.CSharp.ValueModificationHandler)",
      "code_size" : "238",
      "class" : "ListenerProxy",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Unregister",
      "signature" : "void Mono.CSharp.ListenerProxy:Unregister (int)",
      "code_size" : "196",
      "class" : "ListenerProxy",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ValueChanged",
      "signature" : "void Mono.CSharp.ListenerProxy:ValueChanged (object,int,int,string,int)",
      "code_size" : "286",
      "class" : "ListenerProxy",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".cctor",
      "signature" : "void Mono.CSharp.ListenerProxy:.cctor ()",
      "code_size" : "52",
      "class" : "ListenerProxy",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.UserOperatorCall:.ctor (Mono.CSharp.MethodSpec,Mono.CSharp.Arguments,System.Func`3<Mono.CSharp.ResolveContext, Mono.CSharp.Expression, Mono.CSharp.Expression>,Mono.CSharp.Location)",
      "code_size" : "165",
      "class" : "UserOperatorCall",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ContainsEmitWithAwait",
      "signature" : "bool Mono.CSharp.UserOperatorCall:ContainsEmitWithAwait ()",
      "code_size" : "31",
      "class" : "UserOperatorCall",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.UserOperatorCall:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "401",
      "class" : "UserOperatorCall",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.UserOperatorCall:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Expression)",
      "code_size" : "9",
      "class" : "UserOperatorCall",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.UserOperatorCall:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "16",
      "class" : "UserOperatorCall",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.UserOperatorCall:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "93",
      "class" : "UserOperatorCall",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "FlowAnalysis",
      "signature" : "void Mono.CSharp.UserOperatorCall:FlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "41",
      "class" : "UserOperatorCall",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MakeExpression",
      "signature" : "System.Linq.Expressions.Expression Mono.CSharp.UserOperatorCall:MakeExpression (Mono.CSharp.BuilderContext)",
      "code_size" : "129",
      "class" : "UserOperatorCall",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ParenthesizedExpression:.ctor (Mono.CSharp.Expression,Mono.CSharp.Location)",
      "code_size" : "63",
      "class" : "ParenthesizedExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.ParenthesizedExpression:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "328",
      "class" : "ParenthesizedExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolveLValue",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.ParenthesizedExpression:DoResolveLValue (Mono.CSharp.ResolveContext,Mono.CSharp.Expression)",
      "code_size" : "52",
      "class" : "ParenthesizedExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.ParenthesizedExpression:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "ParenthesizedExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "HasConditionalAccess",
      "signature" : "bool Mono.CSharp.ParenthesizedExpression:HasConditionalAccess ()",
      "code_size" : "11",
      "class" : "ParenthesizedExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Unary:.ctor (Mono.CSharp.Unary/Operator,Mono.CSharp.Expression,Mono.CSharp.Location)",
      "code_size" : "78",
      "class" : "Unary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "TryReduceConstant",
      "signature" : "Mono.CSharp.Constant Mono.CSharp.Unary:TryReduceConstant (Mono.CSharp.ResolveContext,Mono.CSharp.Constant)",
      "code_size" : "7096",
      "class" : "Unary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveOperator",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Unary:ResolveOperator (Mono.CSharp.ResolveContext,Mono.CSharp.Expression)",
      "code_size" : "310",
      "class" : "Unary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveEnumOperator",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Unary:ResolveEnumOperator (Mono.CSharp.ResolveContext,Mono.CSharp.Expression,Mono.CSharp.TypeSpec[])",
      "code_size" : "196",
      "class" : "Unary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ContainsEmitWithAwait",
      "signature" : "bool Mono.CSharp.Unary:ContainsEmitWithAwait ()",
      "code_size" : "32",
      "class" : "Unary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Unary:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "25",
      "class" : "Unary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Unary:CreateExpressionTree (Mono.CSharp.ResolveContext,Mono.CSharp.Expression)",
      "code_size" : "574",
      "class" : "Unary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreatePredefinedOperatorsTable",
      "signature" : "Mono.CSharp.TypeSpec[][] Mono.CSharp.Unary:CreatePredefinedOperatorsTable (Mono.CSharp.BuiltinTypes)",
      "code_size" : "834",
      "class" : "Unary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoNumericPromotion",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Unary:DoNumericPromotion (Mono.CSharp.ResolveContext,Mono.CSharp.Unary/Operator,Mono.CSharp.Expression)",
      "code_size" : "240",
      "class" : "Unary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Unary:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "706",
      "class" : "Unary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolveLValue",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Unary:DoResolveLValue (Mono.CSharp.ResolveContext,Mono.CSharp.Expression)",
      "code_size" : "11",
      "class" : "Unary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.Unary:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "32",
      "class" : "Unary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitOperator",
      "signature" : "void Mono.CSharp.Unary:EmitOperator (Mono.CSharp.EmitContext,Mono.CSharp.TypeSpec)",
      "code_size" : "1274",
      "class" : "Unary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitBranchable",
      "signature" : "void Mono.CSharp.Unary:EmitBranchable (Mono.CSharp.EmitContext,System.Reflection.Emit.Label,bool)",
      "code_size" : "111",
      "class" : "Unary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitSideEffect",
      "signature" : "void Mono.CSharp.Unary:EmitSideEffect (Mono.CSharp.EmitContext)",
      "code_size" : "42",
      "class" : "Unary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_Ambiguous",
      "signature" : "void Mono.CSharp.Unary:Error_Ambiguous (Mono.CSharp.ResolveContext,string,Mono.CSharp.TypeSpec,Mono.CSharp.Location)",
      "code_size" : "110",
      "class" : "Unary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "FlowAnalysis",
      "signature" : "void Mono.CSharp.Unary:FlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "25",
      "class" : "Unary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "FlowAnalysisConditional",
      "signature" : "void Mono.CSharp.Unary:FlowAnalysisConditional (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "28",
      "class" : "Unary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "FlowAnalysis",
      "signature" : "void Mono.CSharp.Unary:FlowAnalysis (Mono.CSharp.FlowAnalysisContext,bool)",
      "code_size" : "297",
      "class" : "Unary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetOperatorExpressionTypeName",
      "signature" : "string Mono.CSharp.Unary:GetOperatorExpressionTypeName ()",
      "code_size" : "217",
      "class" : "Unary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsFloat",
      "signature" : "bool Mono.CSharp.Unary:IsFloat (Mono.CSharp.TypeSpec)",
      "code_size" : "68",
      "class" : "Unary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "OperName",
      "signature" : "string Mono.CSharp.Unary:OperName (Mono.CSharp.Unary/Operator)",
      "code_size" : "188",
      "class" : "Unary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MakeExpression",
      "signature" : "System.Linq.Expressions.Expression Mono.CSharp.Unary:MakeExpression (Mono.CSharp.BuilderContext)",
      "code_size" : "275",
      "class" : "Unary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveAddressOf",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Unary:ResolveAddressOf (Mono.CSharp.ResolveContext)",
      "code_size" : "810",
      "class" : "Unary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolvePrimitivePredefinedType",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Unary:ResolvePrimitivePredefinedType (Mono.CSharp.ResolveContext,Mono.CSharp.Expression,Mono.CSharp.TypeSpec[])",
      "code_size" : "174",
      "class" : "Unary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveUserOperator",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Unary:ResolveUserOperator (Mono.CSharp.ResolveContext,Mono.CSharp.Expression)",
      "code_size" : "807",
      "class" : "Unary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveUserType",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Unary:ResolveUserType (Mono.CSharp.ResolveContext,Mono.CSharp.Expression,Mono.CSharp.TypeSpec[])",
      "code_size" : "817",
      "class" : "Unary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.Unary:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Expression)",
      "code_size" : "155",
      "class" : "Unary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.Unary:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "Unary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Indirection:.ctor (Mono.CSharp.Expression,Mono.CSharp.Location)",
      "code_size" : "63",
      "class" : "Indirection",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Expr",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Indirection:get_Expr ()",
      "code_size" : "20",
      "class" : "Indirection",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsFixed",
      "signature" : "bool Mono.CSharp.Indirection:get_IsFixed ()",
      "code_size" : "14",
      "class" : "Indirection",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_StartLocation",
      "signature" : "Mono.CSharp.Location Mono.CSharp.Indirection:get_StartLocation ()",
      "code_size" : "39",
      "class" : "Indirection",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.Indirection:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Expression)",
      "code_size" : "155",
      "class" : "Indirection",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ContainsEmitWithAwait",
      "signature" : "bool Mono.CSharp.Indirection:ContainsEmitWithAwait ()",
      "code_size" : "27",
      "class" : "Indirection",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Indirection:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "25",
      "class" : "Indirection",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.Indirection:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "81",
      "class" : "Indirection",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.Indirection:Emit (Mono.CSharp.EmitContext,bool)",
      "code_size" : "276",
      "class" : "Indirection",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitAssign",
      "signature" : "void Mono.CSharp.Indirection:EmitAssign (Mono.CSharp.EmitContext,Mono.CSharp.Expression,bool,bool)",
      "code_size" : "522",
      "class" : "Indirection",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddressOf",
      "signature" : "void Mono.CSharp.Indirection:AddressOf (Mono.CSharp.EmitContext,Mono.CSharp.AddressOp)",
      "code_size" : "42",
      "class" : "Indirection",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolveLValue",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Indirection:DoResolveLValue (Mono.CSharp.ResolveContext,Mono.CSharp.Expression)",
      "code_size" : "31",
      "class" : "Indirection",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Indirection:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "342",
      "class" : "Indirection",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.Indirection:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "Indirection",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.UnaryMutator:.ctor (Mono.CSharp.UnaryMutator/Mode,Mono.CSharp.Expression,Mono.CSharp.Location)",
      "code_size" : "78",
      "class" : "UnaryMutator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_UnaryMutatorMode",
      "signature" : "Mono.CSharp.UnaryMutator/Mode Mono.CSharp.UnaryMutator:get_UnaryMutatorMode ()",
      "code_size" : "20",
      "class" : "UnaryMutator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Expr",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.UnaryMutator:get_Expr ()",
      "code_size" : "20",
      "class" : "UnaryMutator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_StartLocation",
      "signature" : "Mono.CSharp.Location Mono.CSharp.UnaryMutator:get_StartLocation ()",
      "code_size" : "87",
      "class" : "UnaryMutator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ContainsEmitWithAwait",
      "signature" : "bool Mono.CSharp.UnaryMutator:ContainsEmitWithAwait ()",
      "code_size" : "32",
      "class" : "UnaryMutator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.UnaryMutator:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "74",
      "class" : "UnaryMutator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreatePredefinedOperatorsTable",
      "signature" : "Mono.CSharp.TypeSpec[] Mono.CSharp.UnaryMutator:CreatePredefinedOperatorsTable (Mono.CSharp.BuiltinTypes)",
      "code_size" : "411",
      "class" : "UnaryMutator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.UnaryMutator:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "663",
      "class" : "UnaryMutator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolveOperation",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.UnaryMutator:DoResolveOperation (Mono.CSharp.ResolveContext)",
      "code_size" : "2237",
      "class" : "UnaryMutator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitCode",
      "signature" : "void Mono.CSharp.UnaryMutator:EmitCode (Mono.CSharp.EmitContext,bool)",
      "code_size" : "272",
      "class" : "UnaryMutator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.UnaryMutator:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "300",
      "class" : "UnaryMutator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitOperation",
      "signature" : "void Mono.CSharp.UnaryMutator:EmitOperation (Mono.CSharp.EmitContext)",
      "code_size" : "42",
      "class" : "UnaryMutator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitStatement",
      "signature" : "void Mono.CSharp.UnaryMutator:EmitStatement (Mono.CSharp.EmitContext)",
      "code_size" : "25",
      "class" : "UnaryMutator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "FlowAnalysis",
      "signature" : "void Mono.CSharp.UnaryMutator:FlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "42",
      "class" : "UnaryMutator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetOperatorExpressionTypeName",
      "signature" : "string Mono.CSharp.UnaryMutator:GetOperatorExpressionTypeName ()",
      "code_size" : "75",
      "class" : "UnaryMutator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsDecrement",
      "signature" : "bool Mono.CSharp.UnaryMutator:get_IsDecrement ()",
      "code_size" : "47",
      "class" : "UnaryMutator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MakeExpression",
      "signature" : "System.Linq.Expressions.Expression Mono.CSharp.UnaryMutator:MakeExpression (Mono.CSharp.BuilderContext)",
      "code_size" : "179",
      "class" : "UnaryMutator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "OperName",
      "signature" : "string Mono.CSharp.UnaryMutator:OperName (Mono.CSharp.UnaryMutator/Mode)",
      "code_size" : "53",
      "class" : "UnaryMutator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.UnaryMutator:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Expression)",
      "code_size" : "155",
      "class" : "UnaryMutator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.UnaryMutator:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "UnaryMutator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.UnaryMutator/DynamicPostMutator:.ctor (Mono.CSharp.Expression)",
      "code_size" : "103",
      "class" : "DynamicPostMutator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.UnaryMutator/DynamicPostMutator:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "47",
      "class" : "DynamicPostMutator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.UnaryMutator/DynamicPostMutator:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "28",
      "class" : "DynamicPostMutator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolveLValue",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.UnaryMutator/DynamicPostMutator:DoResolveLValue (Mono.CSharp.ResolveContext,Mono.CSharp.Expression)",
      "code_size" : "74",
      "class" : "DynamicPostMutator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.UnaryMutator/DynamicPostMutator:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "42",
      "class" : "DynamicPostMutator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.UnaryMutator/DynamicPostMutator:Emit (Mono.CSharp.EmitContext,bool)",
      "code_size" : "27",
      "class" : "DynamicPostMutator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitAssign",
      "signature" : "void Mono.CSharp.UnaryMutator/DynamicPostMutator:EmitAssign (Mono.CSharp.EmitContext,Mono.CSharp.Expression,bool,bool)",
      "code_size" : "372",
      "class" : "DynamicPostMutator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Probe:.ctor (Mono.CSharp.Expression,Mono.CSharp.Expression,Mono.CSharp.Location)",
      "code_size" : "90",
      "class" : "Probe",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Expr",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Probe:get_Expr ()",
      "code_size" : "20",
      "class" : "Probe",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ContainsEmitWithAwait",
      "signature" : "bool Mono.CSharp.Probe:ContainsEmitWithAwait ()",
      "code_size" : "32",
      "class" : "Probe",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveCommon",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Probe:ResolveCommon (Mono.CSharp.ResolveContext)",
      "code_size" : "614",
      "class" : "Probe",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveProbeType",
      "signature" : "void Mono.CSharp.Probe:ResolveProbeType (Mono.CSharp.ResolveContext)",
      "code_size" : "71",
      "class" : "Probe",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitSideEffect",
      "signature" : "void Mono.CSharp.Probe:EmitSideEffect (Mono.CSharp.EmitContext)",
      "code_size" : "42",
      "class" : "Probe",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "FlowAnalysis",
      "signature" : "void Mono.CSharp.Probe:FlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "42",
      "class" : "Probe",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "HasConditionalAccess",
      "signature" : "bool Mono.CSharp.Probe:HasConditionalAccess ()",
      "code_size" : "32",
      "class" : "Probe",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.Probe:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Expression)",
      "code_size" : "203",
      "class" : "Probe",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Is:.ctor (Mono.CSharp.Expression,Mono.CSharp.Expression,Mono.CSharp.Location)",
      "code_size" : "38",
      "class" : "Is",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_OperatorName",
      "signature" : "string Mono.CSharp.Is:get_OperatorName ()",
      "code_size" : "16",
      "class" : "Is",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Variable",
      "signature" : "Mono.CSharp.LocalVariable Mono.CSharp.Is:get_Variable ()",
      "code_size" : "20",
      "class" : "Is",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Variable",
      "signature" : "void Mono.CSharp.Is:set_Variable (Mono.CSharp.LocalVariable)",
      "code_size" : "43",
      "class" : "Is",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Is:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "272",
      "class" : "Is",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateConstantResult",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Is:CreateConstantResult (Mono.CSharp.ResolveContext,bool)",
      "code_size" : "453",
      "class" : "Is",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.Is:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "458",
      "class" : "Is",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitBranchable",
      "signature" : "void Mono.CSharp.Is:EmitBranchable (Mono.CSharp.EmitContext,System.Reflection.Emit.Label,bool)",
      "code_size" : "338",
      "class" : "Is",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitPatternMatch",
      "signature" : "void Mono.CSharp.Is:EmitPatternMatch (Mono.CSharp.EmitContext)",
      "code_size" : "2524",
      "class" : "Is",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitLoad",
      "signature" : "void Mono.CSharp.Is:EmitLoad (Mono.CSharp.EmitContext)",
      "code_size" : "1115",
      "class" : "Is",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Is:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "358",
      "class" : "Is",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "FlowAnalysis",
      "signature" : "void Mono.CSharp.Is:FlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "78",
      "class" : "Is",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveProbeType",
      "signature" : "void Mono.CSharp.Is:ResolveProbeType (Mono.CSharp.ResolveContext)",
      "code_size" : "846",
      "class" : "Is",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveMatchingExpression",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Is:ResolveMatchingExpression (Mono.CSharp.ResolveContext)",
      "code_size" : "1692",
      "class" : "Is",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveResultExpression",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Is:ResolveResultExpression (Mono.CSharp.ResolveContext)",
      "code_size" : "1478",
      "class" : "Is",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveGenericParameter",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Is:ResolveGenericParameter (Mono.CSharp.ResolveContext,Mono.CSharp.TypeSpec,Mono.CSharp.TypeParameterSpec)",
      "code_size" : "297",
      "class" : "Is",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.Is:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "Is",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.WildcardPattern:.ctor (Mono.CSharp.Location)",
      "code_size" : "32",
      "class" : "WildcardPattern",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.WildcardPattern:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "76",
      "class" : "WildcardPattern",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.WildcardPattern:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "35",
      "class" : "WildcardPattern",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.RecursivePattern:.ctor (Mono.CSharp.ATypeNameExpression,Mono.CSharp.Arguments,Mono.CSharp.Location)",
      "code_size" : "92",
      "class" : "RecursivePattern",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Arguments",
      "signature" : "Mono.CSharp.Arguments Mono.CSharp.RecursivePattern:get_Arguments ()",
      "code_size" : "20",
      "class" : "RecursivePattern",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Arguments",
      "signature" : "void Mono.CSharp.RecursivePattern:set_Arguments (Mono.CSharp.Arguments)",
      "code_size" : "43",
      "class" : "RecursivePattern",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.RecursivePattern:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "1291",
      "class" : "RecursivePattern",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "FindMatchingOverloads",
      "signature" : "System.Collections.Generic.List`1<Mono.CSharp.MethodSpec> Mono.CSharp.RecursivePattern:FindMatchingOverloads (System.Collections.Generic.IList`1<Mono.CSharp.MemberSpec>)",
      "code_size" : "536",
      "class" : "RecursivePattern",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "FindBestOverload",
      "signature" : "Mono.CSharp.MethodSpec Mono.CSharp.RecursivePattern:FindBestOverload (Mono.CSharp.ResolveContext,System.Collections.Generic.List`1<Mono.CSharp.MethodSpec>)",
      "code_size" : "564",
      "class" : "RecursivePattern",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitBranchable",
      "signature" : "void Mono.CSharp.RecursivePattern:EmitBranchable (Mono.CSharp.EmitContext,System.Reflection.Emit.Label,bool)",
      "code_size" : "241",
      "class" : "RecursivePattern",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveComparison",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.RecursivePattern:ResolveComparison (Mono.CSharp.ResolveContext,Mono.CSharp.Expression,Mono.CSharp.LocalTemporary)",
      "code_size" : "361",
      "class" : "RecursivePattern",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetParentInstance",
      "signature" : "void Mono.CSharp.RecursivePattern:SetParentInstance (Mono.CSharp.Expression)",
      "code_size" : "101",
      "class" : "RecursivePattern",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.PropertyPattern:.ctor (Mono.CSharp.ATypeNameExpression,System.Collections.Generic.List`1<Mono.CSharp.PropertyPatternMember>,Mono.CSharp.Location)",
      "code_size" : "92",
      "class" : "PropertyPattern",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Members",
      "signature" : "System.Collections.Generic.List`1<Mono.CSharp.PropertyPatternMember> Mono.CSharp.PropertyPattern:get_Members ()",
      "code_size" : "20",
      "class" : "PropertyPattern",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Members",
      "signature" : "void Mono.CSharp.PropertyPattern:set_Members (System.Collections.Generic.List`1<Mono.CSharp.PropertyPatternMember>)",
      "code_size" : "43",
      "class" : "PropertyPattern",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.PropertyPattern:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "1085",
      "class" : "PropertyPattern",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveComparison",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.PropertyPattern:ResolveComparison (Mono.CSharp.ResolveContext,Mono.CSharp.Expression,Mono.CSharp.Expression)",
      "code_size" : "217",
      "class" : "PropertyPattern",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitBranchable",
      "signature" : "void Mono.CSharp.PropertyPattern:EmitBranchable (Mono.CSharp.EmitContext,System.Reflection.Emit.Label,bool)",
      "code_size" : "75",
      "class" : "PropertyPattern",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.PropertyPatternMember:.ctor (string,Mono.CSharp.Expression,Mono.CSharp.Location)",
      "code_size" : "90",
      "class" : "PropertyPatternMember",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Name",
      "signature" : "string Mono.CSharp.PropertyPatternMember:get_Name ()",
      "code_size" : "20",
      "class" : "PropertyPatternMember",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Name",
      "signature" : "void Mono.CSharp.PropertyPatternMember:set_Name (string)",
      "code_size" : "43",
      "class" : "PropertyPatternMember",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Expr",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.PropertyPatternMember:get_Expr ()",
      "code_size" : "20",
      "class" : "PropertyPatternMember",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Expr",
      "signature" : "void Mono.CSharp.PropertyPatternMember:set_Expr (Mono.CSharp.Expression)",
      "code_size" : "43",
      "class" : "PropertyPatternMember",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Location",
      "signature" : "Mono.CSharp.Location Mono.CSharp.PropertyPatternMember:get_Location ()",
      "code_size" : "30",
      "class" : "PropertyPatternMember",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Location",
      "signature" : "void Mono.CSharp.PropertyPatternMember:set_Location (Mono.CSharp.Location)",
      "code_size" : "32",
      "class" : "PropertyPatternMember",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.PatternExpression:.ctor (Mono.CSharp.Location)",
      "code_size" : "32",
      "class" : "PatternExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.PatternExpression:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "27",
      "class" : "PatternExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ComplexPatternExpression:.ctor (Mono.CSharp.ATypeNameExpression,Mono.CSharp.Location)",
      "code_size" : "60",
      "class" : "ComplexPatternExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_TypeExpression",
      "signature" : "Mono.CSharp.ATypeNameExpression Mono.CSharp.ComplexPatternExpression:get_TypeExpression ()",
      "code_size" : "20",
      "class" : "ComplexPatternExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_TypeExpression",
      "signature" : "void Mono.CSharp.ComplexPatternExpression:set_TypeExpression (Mono.CSharp.ATypeNameExpression)",
      "code_size" : "43",
      "class" : "ComplexPatternExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.ComplexPatternExpression:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "72",
      "class" : "ComplexPatternExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitBranchable",
      "signature" : "void Mono.CSharp.ComplexPatternExpression:EmitBranchable (Mono.CSharp.EmitContext,System.Reflection.Emit.Label,bool)",
      "code_size" : "153",
      "class" : "ComplexPatternExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.As:.ctor (Mono.CSharp.Expression,Mono.CSharp.Expression,Mono.CSharp.Location)",
      "code_size" : "38",
      "class" : "As",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_OperatorName",
      "signature" : "string Mono.CSharp.As:get_OperatorName ()",
      "code_size" : "16",
      "class" : "As",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.As:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "234",
      "class" : "As",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.As:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "307",
      "class" : "As",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.As:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "984",
      "class" : "As",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.As:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "As",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Cast:.ctor (Mono.CSharp.Expression,Mono.CSharp.Expression,Mono.CSharp.Location)",
      "code_size" : "90",
      "class" : "Cast",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_TargetType",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Cast:get_TargetType ()",
      "code_size" : "20",
      "class" : "Cast",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Cast:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "526",
      "class" : "Cast",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.Cast:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Expression)",
      "code_size" : "203",
      "class" : "Cast",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.Cast:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "Cast",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ImplicitCast:.ctor (Mono.CSharp.Expression,Mono.CSharp.TypeSpec,bool)",
      "code_size" : "121",
      "class" : "ImplicitCast",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.ImplicitCast:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "205",
      "class" : "ImplicitCast",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.DeclarationExpression:.ctor (Mono.CSharp.FullNamedExpression,Mono.CSharp.LocalVariable)",
      "code_size" : "98",
      "class" : "DeclarationExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Variable",
      "signature" : "Mono.CSharp.LocalVariable Mono.CSharp.DeclarationExpression:get_Variable ()",
      "code_size" : "20",
      "class" : "DeclarationExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Variable",
      "signature" : "void Mono.CSharp.DeclarationExpression:set_Variable (Mono.CSharp.LocalVariable)",
      "code_size" : "43",
      "class" : "DeclarationExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Initializer",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.DeclarationExpression:get_Initializer ()",
      "code_size" : "20",
      "class" : "DeclarationExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Initializer",
      "signature" : "void Mono.CSharp.DeclarationExpression:set_Initializer (Mono.CSharp.Expression)",
      "code_size" : "43",
      "class" : "DeclarationExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_VariableType",
      "signature" : "Mono.CSharp.FullNamedExpression Mono.CSharp.DeclarationExpression:get_VariableType ()",
      "code_size" : "20",
      "class" : "DeclarationExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_VariableType",
      "signature" : "void Mono.CSharp.DeclarationExpression:set_VariableType (Mono.CSharp.FullNamedExpression)",
      "code_size" : "43",
      "class" : "DeclarationExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddressOf",
      "signature" : "void Mono.CSharp.DeclarationExpression:AddressOf (Mono.CSharp.EmitContext,Mono.CSharp.AddressOp)",
      "code_size" : "114",
      "class" : "DeclarationExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.DeclarationExpression:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Expression)",
      "code_size" : "262",
      "class" : "DeclarationExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.DeclarationExpression:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "77",
      "class" : "DeclarationExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolveCommon",
      "signature" : "bool Mono.CSharp.DeclarationExpression:DoResolveCommon (Mono.CSharp.ResolveContext)",
      "code_size" : "469",
      "class" : "DeclarationExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.DeclarationExpression:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "55",
      "class" : "DeclarationExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolveLValue",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.DeclarationExpression:DoResolveLValue (Mono.CSharp.ResolveContext,Mono.CSharp.Expression)",
      "code_size" : "88",
      "class" : "DeclarationExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.DeclarationExpression:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "27",
      "class" : "DeclarationExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.DefaultValueExpression:.ctor (Mono.CSharp.Expression,Mono.CSharp.Location)",
      "code_size" : "63",
      "class" : "DefaultValueExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Expr",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.DefaultValueExpression:get_Expr ()",
      "code_size" : "20",
      "class" : "DefaultValueExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsSideEffectFree",
      "signature" : "bool Mono.CSharp.DefaultValueExpression:get_IsSideEffectFree ()",
      "code_size" : "14",
      "class" : "DefaultValueExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ContainsEmitWithAwait",
      "signature" : "bool Mono.CSharp.DefaultValueExpression:ContainsEmitWithAwait ()",
      "code_size" : "11",
      "class" : "DefaultValueExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.DefaultValueExpression:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "298",
      "class" : "DefaultValueExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.DefaultValueExpression:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "434",
      "class" : "DefaultValueExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.DefaultValueExpression:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "257",
      "class" : "DefaultValueExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MakeExpression",
      "signature" : "System.Linq.Expressions.Expression Mono.CSharp.DefaultValueExpression:MakeExpression (Mono.CSharp.BuilderContext)",
      "code_size" : "40",
      "class" : "DefaultValueExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.DefaultValueExpression:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Expression)",
      "code_size" : "155",
      "class" : "DefaultValueExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.DefaultValueExpression:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "DefaultValueExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Binary:.ctor (Mono.CSharp.Binary/Operator,Mono.CSharp.Expression,Mono.CSharp.Expression,bool)",
      "code_size" : "39",
      "class" : "Binary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Binary:.ctor (Mono.CSharp.Binary/Operator,Mono.CSharp.Expression,Mono.CSharp.Expression,Mono.CSharp.Binary/State)",
      "code_size" : "51",
      "class" : "Binary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Binary:.ctor (Mono.CSharp.Binary/Operator,Mono.CSharp.Expression,Mono.CSharp.Expression)",
      "code_size" : "78",
      "class" : "Binary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Binary:.ctor (Mono.CSharp.Binary/Operator,Mono.CSharp.Expression,Mono.CSharp.Expression,Mono.CSharp.Location)",
      "code_size" : "110",
      "class" : "Binary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsCompound",
      "signature" : "bool Mono.CSharp.Binary:get_IsCompound ()",
      "code_size" : "47",
      "class" : "Binary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Oper",
      "signature" : "Mono.CSharp.Binary/Operator Mono.CSharp.Binary:get_Oper ()",
      "code_size" : "20",
      "class" : "Binary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Left",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Binary:get_Left ()",
      "code_size" : "20",
      "class" : "Binary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Right",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Binary:get_Right ()",
      "code_size" : "20",
      "class" : "Binary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_StartLocation",
      "signature" : "Mono.CSharp.Location Mono.CSharp.Binary:get_StartLocation ()",
      "code_size" : "39",
      "class" : "Binary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "OperName",
      "signature" : "string Mono.CSharp.Binary:OperName (Mono.CSharp.Binary/Operator)",
      "code_size" : "553",
      "class" : "Binary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_OperatorCannotBeApplied",
      "signature" : "void Mono.CSharp.Binary:Error_OperatorCannotBeApplied (Mono.CSharp.ResolveContext,Mono.CSharp.Expression,Mono.CSharp.Expression,Mono.CSharp.Binary/Operator,Mono.CSharp.Location)",
      "code_size" : "97",
      "class" : "Binary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_OperatorCannotBeApplied",
      "signature" : "void Mono.CSharp.Binary:Error_OperatorCannotBeApplied (Mono.CSharp.ResolveContext,Mono.CSharp.Expression,Mono.CSharp.Expression,string,Mono.CSharp.Location)",
      "code_size" : "323",
      "class" : "Binary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_OperatorCannotBeApplied",
      "signature" : "void Mono.CSharp.Binary:Error_OperatorCannotBeApplied (Mono.CSharp.ResolveContext,Mono.CSharp.Expression,Mono.CSharp.Expression)",
      "code_size" : "80",
      "class" : "Binary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "FlowAnalysis",
      "signature" : "void Mono.CSharp.Binary:FlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "458",
      "class" : "Binary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "FlowAnalysisConditional",
      "signature" : "void Mono.CSharp.Binary:FlowAnalysisConditional (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "772",
      "class" : "Binary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetOperatorExpressionTypeName",
      "signature" : "string Mono.CSharp.Binary:GetOperatorExpressionTypeName ()",
      "code_size" : "1053",
      "class" : "Binary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ConvertBinaryToUserOperator",
      "signature" : "Mono.CSharp.Operator/OpType Mono.CSharp.Binary:ConvertBinaryToUserOperator (Mono.CSharp.Binary/Operator)",
      "code_size" : "455",
      "class" : "Binary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ContainsEmitWithAwait",
      "signature" : "bool Mono.CSharp.Binary:ContainsEmitWithAwait ()",
      "code_size" : "70",
      "class" : "Binary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitOperatorOpcode",
      "signature" : "void Mono.CSharp.Binary:EmitOperatorOpcode (Mono.CSharp.EmitContext,Mono.CSharp.Binary/Operator,Mono.CSharp.TypeSpec,Mono.CSharp.Expression)",
      "code_size" : "4544",
      "class" : "Binary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetShiftMask",
      "signature" : "int Mono.CSharp.Binary:GetShiftMask (Mono.CSharp.TypeSpec)",
      "code_size" : "68",
      "class" : "Binary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsUnsigned",
      "signature" : "bool Mono.CSharp.Binary:IsUnsigned (Mono.CSharp.TypeSpec)",
      "code_size" : "95",
      "class" : "Binary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsFloat",
      "signature" : "bool Mono.CSharp.Binary:IsFloat (Mono.CSharp.TypeSpec)",
      "code_size" : "68",
      "class" : "Binary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveOperator",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Binary:ResolveOperator (Mono.CSharp.ResolveContext)",
      "code_size" : "1155",
      "class" : "Binary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsEnumOrNullableEnum",
      "signature" : "bool Mono.CSharp.Binary:IsEnumOrNullableEnum (Mono.CSharp.TypeSpec)",
      "code_size" : "91",
      "class" : "Binary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EnumLiftUp",
      "signature" : "Mono.CSharp.Constant Mono.CSharp.Binary:EnumLiftUp (Mono.CSharp.ResolveContext,Mono.CSharp.Constant,Mono.CSharp.Constant)",
      "code_size" : "391",
      "class" : "Binary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CheckBitwiseOrOnSignExtended",
      "signature" : "void Mono.CSharp.Binary:CheckBitwiseOrOnSignExtended (Mono.CSharp.ResolveContext)",
      "code_size" : "378",
      "class" : "Binary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreatePointerOperatorsTable",
      "signature" : "Mono.CSharp.Binary/PredefinedOperator[] Mono.CSharp.Binary:CreatePointerOperatorsTable (Mono.CSharp.BuiltinTypes)",
      "code_size" : "1015",
      "class" : "Binary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateStandardOperatorsTable",
      "signature" : "Mono.CSharp.Binary/PredefinedOperator[] Mono.CSharp.Binary:CreateStandardOperatorsTable (Mono.CSharp.BuiltinTypes)",
      "code_size" : "2371",
      "class" : "Binary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateStandardLiftedOperatorsTable",
      "signature" : "Mono.CSharp.Binary/PredefinedOperator[] Mono.CSharp.Binary:CreateStandardLiftedOperatorsTable (Mono.CSharp.ModuleContainer)",
      "code_size" : "2997",
      "class" : "Binary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateEqualityOperatorsTable",
      "signature" : "Mono.CSharp.Binary/PredefinedOperator[] Mono.CSharp.Binary:CreateEqualityOperatorsTable (Mono.CSharp.BuiltinTypes)",
      "code_size" : "1297",
      "class" : "Binary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateEqualityLiftedOperatorsTable",
      "signature" : "Mono.CSharp.Binary/PredefinedOperator[] Mono.CSharp.Binary:CreateEqualityLiftedOperatorsTable (Mono.CSharp.ModuleContainer)",
      "code_size" : "1560",
      "class" : "Binary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoBinaryOperatorPromotion",
      "signature" : "bool Mono.CSharp.Binary:DoBinaryOperatorPromotion (Mono.CSharp.ResolveContext)",
      "code_size" : "829",
      "class" : "Binary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsSignedType",
      "signature" : "bool Mono.CSharp.Binary:IsSignedType (Mono.CSharp.BuiltinTypeSpec/Type)",
      "code_size" : "71",
      "class" : "Binary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ConvertSignedConstant",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Binary:ConvertSignedConstant (Mono.CSharp.Expression,Mono.CSharp.TypeSpec)",
      "code_size" : "101",
      "class" : "Binary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "PromoteExpression",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Binary:PromoteExpression (Mono.CSharp.ResolveContext,Mono.CSharp.Expression,Mono.CSharp.TypeSpec)",
      "code_size" : "309",
      "class" : "Binary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Binary:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "1137",
      "class" : "Binary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolveDynamic",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Binary:DoResolveDynamic (Mono.CSharp.ResolveContext)",
      "code_size" : "2437",
      "class" : "Binary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolveCore",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Binary:DoResolveCore (Mono.CSharp.ResolveContext,Mono.CSharp.Expression,Mono.CSharp.Expression)",
      "code_size" : "207",
      "class" : "Binary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MakeExpression",
      "signature" : "System.Linq.Expressions.Expression Mono.CSharp.Binary:MakeExpression (Mono.CSharp.BuilderContext)",
      "code_size" : "36",
      "class" : "Binary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MakeExpression",
      "signature" : "System.Linq.Expressions.Expression Mono.CSharp.Binary:MakeExpression (Mono.CSharp.BuilderContext,Mono.CSharp.Expression,Mono.CSharp.Expression)",
      "code_size" : "778",
      "class" : "Binary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveOperatorDelegate",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Binary:ResolveOperatorDelegate (Mono.CSharp.ResolveContext,Mono.CSharp.TypeSpec,Mono.CSharp.TypeSpec)",
      "code_size" : "1071",
      "class" : "Binary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveSingleEnumOperators",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Binary:ResolveSingleEnumOperators (Mono.CSharp.ResolveContext,bool,bool,Mono.CSharp.TypeSpec,Mono.CSharp.TypeSpec)",
      "code_size" : "3240",
      "class" : "Binary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ConvertEnumOperandToUnderlyingType",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Binary:ConvertEnumOperandToUnderlyingType (Mono.CSharp.ResolveContext,Mono.CSharp.Expression,bool)",
      "code_size" : "462",
      "class" : "Binary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveEnumOperators",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Binary:ResolveEnumOperators (Mono.CSharp.ResolveContext,bool,bool,Mono.CSharp.TypeSpec,Mono.CSharp.TypeSpec)",
      "code_size" : "590",
      "class" : "Binary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ConvertEnumAdditionalResult",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Binary:ConvertEnumAdditionalResult (Mono.CSharp.Expression,Mono.CSharp.TypeSpec)",
      "code_size" : "23",
      "class" : "Binary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ConvertEnumSubtractionResult",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Binary:ConvertEnumSubtractionResult (Mono.CSharp.ResolveContext,Mono.CSharp.Expression)",
      "code_size" : "597",
      "class" : "Binary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetEnumResultCast",
      "signature" : "Mono.CSharp.ConvCast/Mode Mono.CSharp.Binary:GetEnumResultCast (Mono.CSharp.TypeSpec)",
      "code_size" : "157",
      "class" : "Binary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveEquality",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Binary:ResolveEquality (Mono.CSharp.ResolveContext,Mono.CSharp.TypeSpec,Mono.CSharp.TypeSpec,bool)",
      "code_size" : "2372",
      "class" : "Binary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveOperatorPointer",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Binary:ResolveOperatorPointer (Mono.CSharp.ResolveContext,Mono.CSharp.TypeSpec,Mono.CSharp.TypeSpec)",
      "code_size" : "352",
      "class" : "Binary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveOperatorPredefined",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Binary:ResolveOperatorPredefined (Mono.CSharp.ResolveContext,Mono.CSharp.Binary/PredefinedOperator[],bool)",
      "code_size" : "647",
      "class" : "Binary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "OptimizeAndOperation",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Binary:OptimizeAndOperation (Mono.CSharp.Expression)",
      "code_size" : "375",
      "class" : "Binary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateLiftedValueTypeResult",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Binary:CreateLiftedValueTypeResult (Mono.CSharp.ResolveContext,Mono.CSharp.TypeSpec)",
      "code_size" : "464",
      "class" : "Binary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveUserOperator",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Binary:ResolveUserOperator (Mono.CSharp.ResolveContext,Mono.CSharp.Expression,Mono.CSharp.Expression)",
      "code_size" : "3418",
      "class" : "Binary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsLiftedOperatorApplicable",
      "signature" : "bool Mono.CSharp.Binary:IsLiftedOperatorApplicable ()",
      "code_size" : "283",
      "class" : "Binary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateLiftedOperators",
      "signature" : "System.Collections.Generic.List`1<Mono.CSharp.MemberSpec> Mono.CSharp.Binary:CreateLiftedOperators (Mono.CSharp.ResolveContext,System.Collections.Generic.IList`1<Mono.CSharp.MemberSpec>)",
      "code_size" : "1356",
      "class" : "Binary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CombineUserOperators",
      "signature" : "System.Collections.Generic.IList`1<Mono.CSharp.MemberSpec> Mono.CSharp.Binary:CombineUserOperators (System.Collections.Generic.IList`1<Mono.CSharp.MemberSpec>,System.Collections.Generic.IList`1<Mono.CSharp.MemberSpec>)",
      "code_size" : "509",
      "class" : "Binary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CheckOutOfRangeComparison",
      "signature" : "void Mono.CSharp.Binary:CheckOutOfRangeComparison (Mono.CSharp.ResolveContext,Mono.CSharp.Constant,Mono.CSharp.TypeSpec)",
      "code_size" : "293",
      "class" : "Binary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitBranchable",
      "signature" : "void Mono.CSharp.Binary:EmitBranchable (Mono.CSharp.EmitContext,System.Reflection.Emit.Label,bool)",
      "code_size" : "5438",
      "class" : "Binary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.Binary:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "871",
      "class" : "Binary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitOperator",
      "signature" : "void Mono.CSharp.Binary:EmitOperator (Mono.CSharp.EmitContext,Mono.CSharp.Expression,Mono.CSharp.Expression)",
      "code_size" : "144",
      "class" : "Binary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitSideEffect",
      "signature" : "void Mono.CSharp.Binary:EmitSideEffect (Mono.CSharp.EmitContext)",
      "code_size" : "165",
      "class" : "Binary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitToField",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Binary:EmitToField (Mono.CSharp.EmitContext)",
      "code_size" : "391",
      "class" : "Binary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.Binary:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Expression)",
      "code_size" : "203",
      "class" : "Binary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateCallSiteBinder",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Binary:CreateCallSiteBinder (Mono.CSharp.ResolveContext,Mono.CSharp.Arguments)",
      "code_size" : "1521",
      "class" : "Binary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Binary:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "25",
      "class" : "Binary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Binary:CreateExpressionTree (Mono.CSharp.ResolveContext,Mono.CSharp.Expression)",
      "code_size" : "1298",
      "class" : "Binary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.Binary:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "Binary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Binary/PredefinedOperator:.ctor (Mono.CSharp.TypeSpec,Mono.CSharp.TypeSpec,Mono.CSharp.Binary/Operator)",
      "code_size" : "38",
      "class" : "PredefinedOperator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Binary/PredefinedOperator:.ctor (Mono.CSharp.TypeSpec,Mono.CSharp.Binary/Operator,Mono.CSharp.TypeSpec)",
      "code_size" : "46",
      "class" : "PredefinedOperator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Binary/PredefinedOperator:.ctor (Mono.CSharp.TypeSpec,Mono.CSharp.Binary/Operator)",
      "code_size" : "41",
      "class" : "PredefinedOperator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Binary/PredefinedOperator:.ctor (Mono.CSharp.TypeSpec,Mono.CSharp.TypeSpec,Mono.CSharp.Binary/Operator,Mono.CSharp.TypeSpec)",
      "code_size" : "308",
      "class" : "PredefinedOperator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsLifted",
      "signature" : "bool Mono.CSharp.Binary/PredefinedOperator:get_IsLifted ()",
      "code_size" : "45",
      "class" : "PredefinedOperator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "ConvertResult",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Binary/PredefinedOperator:ConvertResult (Mono.CSharp.ResolveContext,Mono.CSharp.Binary)",
      "code_size" : "4002",
      "class" : "PredefinedOperator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsPrimitiveApplicable",
      "signature" : "bool Mono.CSharp.Binary/PredefinedOperator:IsPrimitiveApplicable (Mono.CSharp.TypeSpec,Mono.CSharp.TypeSpec)",
      "code_size" : "65",
      "class" : "PredefinedOperator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsApplicable",
      "signature" : "bool Mono.CSharp.Binary/PredefinedOperator:IsApplicable (Mono.CSharp.ResolveContext,Mono.CSharp.Expression,Mono.CSharp.Expression)",
      "code_size" : "148",
      "class" : "PredefinedOperator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveBetterOperator",
      "signature" : "Mono.CSharp.Binary/PredefinedOperator Mono.CSharp.Binary/PredefinedOperator:ResolveBetterOperator (Mono.CSharp.ResolveContext,Mono.CSharp.Binary/PredefinedOperator)",
      "code_size" : "218",
      "class" : "PredefinedOperator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Binary/PredefinedStringOperator:.ctor (Mono.CSharp.TypeSpec,Mono.CSharp.Binary/Operator,Mono.CSharp.TypeSpec)",
      "code_size" : "46",
      "class" : "PredefinedStringOperator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Binary/PredefinedStringOperator:.ctor (Mono.CSharp.TypeSpec,Mono.CSharp.TypeSpec,Mono.CSharp.Binary/Operator,Mono.CSharp.TypeSpec)",
      "code_size" : "38",
      "class" : "PredefinedStringOperator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "ConvertResult",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Binary/PredefinedStringOperator:ConvertResult (Mono.CSharp.ResolveContext,Mono.CSharp.Binary)",
      "code_size" : "392",
      "class" : "PredefinedStringOperator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Binary/PredefinedEqualityOperator:.ctor (Mono.CSharp.TypeSpec,Mono.CSharp.TypeSpec)",
      "code_size" : "41",
      "class" : "PredefinedEqualityOperator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "ConvertResult",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Binary/PredefinedEqualityOperator:ConvertResult (Mono.CSharp.ResolveContext,Mono.CSharp.Binary)",
      "code_size" : "1219",
      "class" : "PredefinedEqualityOperator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Binary/PredefinedPointerOperator:.ctor (Mono.CSharp.TypeSpec,Mono.CSharp.TypeSpec,Mono.CSharp.Binary/Operator)",
      "code_size" : "33",
      "class" : "PredefinedPointerOperator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Binary/PredefinedPointerOperator:.ctor (Mono.CSharp.TypeSpec,Mono.CSharp.TypeSpec,Mono.CSharp.Binary/Operator,Mono.CSharp.TypeSpec)",
      "code_size" : "38",
      "class" : "PredefinedPointerOperator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Binary/PredefinedPointerOperator:.ctor (Mono.CSharp.TypeSpec,Mono.CSharp.Binary/Operator,Mono.CSharp.TypeSpec)",
      "code_size" : "33",
      "class" : "PredefinedPointerOperator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsApplicable",
      "signature" : "bool Mono.CSharp.Binary/PredefinedPointerOperator:IsApplicable (Mono.CSharp.ResolveContext,Mono.CSharp.Expression,Mono.CSharp.Expression)",
      "code_size" : "196",
      "class" : "PredefinedPointerOperator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "ConvertResult",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Binary/PredefinedPointerOperator:ConvertResult (Mono.CSharp.ResolveContext,Mono.CSharp.Binary)",
      "code_size" : "322",
      "class" : "PredefinedPointerOperator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.StringConcat:.ctor (Mono.CSharp.Location)",
      "code_size" : "99",
      "class" : "StringConcat",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ContainsEmitWithAwait",
      "signature" : "bool Mono.CSharp.StringConcat:ContainsEmitWithAwait ()",
      "code_size" : "31",
      "class" : "StringConcat",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Create",
      "signature" : "Mono.CSharp.StringConcat Mono.CSharp.StringConcat:Create (Mono.CSharp.ResolveContext,Mono.CSharp.Expression,Mono.CSharp.Expression,Mono.CSharp.Location)",
      "code_size" : "263",
      "class" : "StringConcat",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.StringConcat:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "85",
      "class" : "StringConcat",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionAddCall",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.StringConcat:CreateExpressionAddCall (Mono.CSharp.ResolveContext,Mono.CSharp.Argument,Mono.CSharp.Expression,int)",
      "code_size" : "960",
      "class" : "StringConcat",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.StringConcat:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "16",
      "class" : "StringConcat",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Append",
      "signature" : "void Mono.CSharp.StringConcat:Append (Mono.CSharp.ResolveContext,Mono.CSharp.Expression)",
      "code_size" : "545",
      "class" : "StringConcat",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetConcatMethodCandidates",
      "signature" : "System.Collections.Generic.IList`1<Mono.CSharp.MemberSpec> Mono.CSharp.StringConcat:GetConcatMethodCandidates ()",
      "code_size" : "37",
      "class" : "StringConcat",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.StringConcat:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "482",
      "class" : "StringConcat",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "FlowAnalysis",
      "signature" : "void Mono.CSharp.StringConcat:FlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "41",
      "class" : "StringConcat",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MakeExpression",
      "signature" : "System.Linq.Expressions.Expression Mono.CSharp.StringConcat:MakeExpression (Mono.CSharp.BuilderContext)",
      "code_size" : "335",
      "class" : "StringConcat",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ConditionalLogicalOperator:.ctor (Mono.CSharp.MethodSpec,Mono.CSharp.Arguments,System.Func`3<Mono.CSharp.ResolveContext, Mono.CSharp.Expression, Mono.CSharp.Expression>,bool,Mono.CSharp.Location)",
      "code_size" : "65",
      "class" : "ConditionalLogicalOperator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.ConditionalLogicalOperator:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "609",
      "class" : "ConditionalLogicalOperator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.ConditionalLogicalOperator:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "818",
      "class" : "ConditionalLogicalOperator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.PointerArithmetic:.ctor (Mono.CSharp.Binary/Operator,Mono.CSharp.Expression,Mono.CSharp.Expression,Mono.CSharp.TypeSpec,Mono.CSharp.Location)",
      "code_size" : "131",
      "class" : "PointerArithmetic",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ContainsEmitWithAwait",
      "signature" : "bool Mono.CSharp.PointerArithmetic:ContainsEmitWithAwait ()",
      "code_size" : "27",
      "class" : "PointerArithmetic",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.PointerArithmetic:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "25",
      "class" : "PointerArithmetic",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.PointerArithmetic:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "150",
      "class" : "PointerArithmetic",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.PointerArithmetic:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "2828",
      "class" : "PointerArithmetic",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.BooleanExpression:.ctor (Mono.CSharp.Expression)",
      "code_size" : "69",
      "class" : "BooleanExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.BooleanExpression:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "49",
      "class" : "BooleanExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.BooleanExpression:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "691",
      "class" : "BooleanExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.BooleanExpression:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "BooleanExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.BooleanExpressionFalse:.ctor (Mono.CSharp.Expression)",
      "code_size" : "63",
      "class" : "BooleanExpressionFalse",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveOperator",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.BooleanExpressionFalse:ResolveOperator (Mono.CSharp.ResolveContext,Mono.CSharp.Expression)",
      "code_size" : "100",
      "class" : "BooleanExpressionFalse",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Conditional:.ctor (Mono.CSharp.Expression,Mono.CSharp.Expression,Mono.CSharp.Expression,Mono.CSharp.Location)",
      "code_size" : "125",
      "class" : "Conditional",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Expr",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Conditional:get_Expr ()",
      "code_size" : "20",
      "class" : "Conditional",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_TrueExpr",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Conditional:get_TrueExpr ()",
      "code_size" : "20",
      "class" : "Conditional",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_FalseExpr",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Conditional:get_FalseExpr ()",
      "code_size" : "20",
      "class" : "Conditional",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ContainsEmitWithAwait",
      "signature" : "bool Mono.CSharp.Conditional:ContainsEmitWithAwait ()",
      "code_size" : "94",
      "class" : "Conditional",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Conditional:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "407",
      "class" : "Conditional",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Conditional:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "1518",
      "class" : "Conditional",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.Conditional:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "798",
      "class" : "Conditional",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "FlowAnalysis",
      "signature" : "void Mono.CSharp.Conditional:FlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "206",
      "class" : "Conditional",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "FlowAnalysisConditional",
      "signature" : "void Mono.CSharp.Conditional:FlowAnalysisConditional (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "564",
      "class" : "Conditional",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.Conditional:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Expression)",
      "code_size" : "251",
      "class" : "Conditional",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.VariableReference:.ctor ()",
      "code_size" : "9",
      "class" : "VariableReference",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddressOf",
      "signature" : "void Mono.CSharp.VariableReference:AddressOf (Mono.CSharp.EmitContext,Mono.CSharp.AddressOp)",
      "code_size" : "111",
      "class" : "VariableReference",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ContainsEmitWithAwait",
      "signature" : "bool Mono.CSharp.VariableReference:ContainsEmitWithAwait ()",
      "code_size" : "11",
      "class" : "VariableReference",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.VariableReference:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "235",
      "class" : "VariableReference",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolveLValue",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.VariableReference:DoResolveLValue (Mono.CSharp.ResolveContext,Mono.CSharp.Expression)",
      "code_size" : "140",
      "class" : "VariableReference",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.VariableReference:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "25",
      "class" : "VariableReference",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitSideEffect",
      "signature" : "void Mono.CSharp.VariableReference:EmitSideEffect (Mono.CSharp.EmitContext)",
      "code_size" : "9",
      "class" : "VariableReference",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitLoad",
      "signature" : "void Mono.CSharp.VariableReference:EmitLoad (Mono.CSharp.EmitContext)",
      "code_size" : "51",
      "class" : "VariableReference",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.VariableReference:Emit (Mono.CSharp.EmitContext,bool)",
      "code_size" : "370",
      "class" : "VariableReference",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitAssign",
      "signature" : "void Mono.CSharp.VariableReference:EmitAssign (Mono.CSharp.EmitContext,Mono.CSharp.Expression,bool,bool)",
      "code_size" : "683",
      "class" : "VariableReference",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitToField",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.VariableReference:EmitToField (Mono.CSharp.EmitContext)",
      "code_size" : "75",
      "class" : "VariableReference",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetHoistedVariable",
      "signature" : "Mono.CSharp.HoistedVariable Mono.CSharp.VariableReference:GetHoistedVariable (Mono.CSharp.ResolveContext)",
      "code_size" : "41",
      "class" : "VariableReference",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetHoistedVariable",
      "signature" : "Mono.CSharp.HoistedVariable Mono.CSharp.VariableReference:GetHoistedVariable (Mono.CSharp.EmitContext)",
      "code_size" : "41",
      "class" : "VariableReference",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSignatureForError",
      "signature" : "string Mono.CSharp.VariableReference:GetSignatureForError ()",
      "code_size" : "25",
      "class" : "VariableReference",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsHoisted",
      "signature" : "bool Mono.CSharp.VariableReference:get_IsHoisted ()",
      "code_size" : "49",
      "class" : "VariableReference",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.LocalVariableReference:.ctor (Mono.CSharp.LocalVariable,Mono.CSharp.Location)",
      "code_size" : "63",
      "class" : "LocalVariableReference",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_VariableInfo",
      "signature" : "Mono.CSharp.VariableInfo Mono.CSharp.LocalVariableReference:get_VariableInfo ()",
      "code_size" : "24",
      "class" : "LocalVariableReference",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetHoistedVariable",
      "signature" : "Mono.CSharp.HoistedVariable Mono.CSharp.LocalVariableReference:GetHoistedVariable (Mono.CSharp.AnonymousExpression)",
      "code_size" : "30",
      "class" : "LocalVariableReference",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsFixed",
      "signature" : "bool Mono.CSharp.LocalVariableReference:get_IsFixed ()",
      "code_size" : "14",
      "class" : "LocalVariableReference",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsLockedByStatement",
      "signature" : "bool Mono.CSharp.LocalVariableReference:get_IsLockedByStatement ()",
      "code_size" : "55",
      "class" : "LocalVariableReference",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_IsLockedByStatement",
      "signature" : "void Mono.CSharp.LocalVariableReference:set_IsLockedByStatement (bool)",
      "code_size" : "41",
      "class" : "LocalVariableReference",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsRef",
      "signature" : "bool Mono.CSharp.LocalVariableReference:get_IsRef ()",
      "code_size" : "11",
      "class" : "LocalVariableReference",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Name",
      "signature" : "string Mono.CSharp.LocalVariableReference:get_Name ()",
      "code_size" : "30",
      "class" : "LocalVariableReference",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "FlowAnalysis",
      "signature" : "void Mono.CSharp.LocalVariableReference:FlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "205",
      "class" : "LocalVariableReference",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetHasAddressTaken",
      "signature" : "void Mono.CSharp.LocalVariableReference:SetHasAddressTaken ()",
      "code_size" : "36",
      "class" : "LocalVariableReference",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolveBase",
      "signature" : "void Mono.CSharp.LocalVariableReference:DoResolveBase (Mono.CSharp.ResolveContext)",
      "code_size" : "409",
      "class" : "LocalVariableReference",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.LocalVariableReference:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "219",
      "class" : "LocalVariableReference",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolveLValue",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.LocalVariableReference:DoResolveLValue (Mono.CSharp.ResolveContext,Mono.CSharp.Expression)",
      "code_size" : "464",
      "class" : "LocalVariableReference",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetHashCode",
      "signature" : "int Mono.CSharp.LocalVariableReference:GetHashCode ()",
      "code_size" : "29",
      "class" : "LocalVariableReference",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Equals",
      "signature" : "bool Mono.CSharp.LocalVariableReference:Equals (object)",
      "code_size" : "108",
      "class" : "LocalVariableReference",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Variable",
      "signature" : "Mono.CSharp.ILocalVariable Mono.CSharp.LocalVariableReference:get_Variable ()",
      "code_size" : "20",
      "class" : "LocalVariableReference",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ToString",
      "signature" : "string Mono.CSharp.LocalVariableReference:ToString ()",
      "code_size" : "127",
      "class" : "LocalVariableReference",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.LocalVariableReference:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Expression)",
      "code_size" : "9",
      "class" : "LocalVariableReference",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ParameterReference:.ctor (Mono.CSharp.ParametersBlock/ParameterInfo,Mono.CSharp.Location)",
      "code_size" : "63",
      "class" : "ParameterReference",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsLockedByStatement",
      "signature" : "bool Mono.CSharp.ParameterReference:get_IsLockedByStatement ()",
      "code_size" : "30",
      "class" : "ParameterReference",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_IsLockedByStatement",
      "signature" : "void Mono.CSharp.ParameterReference:set_IsLockedByStatement (bool)",
      "code_size" : "37",
      "class" : "ParameterReference",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsRef",
      "signature" : "bool Mono.CSharp.ParameterReference:get_IsRef ()",
      "code_size" : "77",
      "class" : "ParameterReference",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_HasOutModifier",
      "signature" : "bool Mono.CSharp.ParameterReference:get_HasOutModifier ()",
      "code_size" : "77",
      "class" : "ParameterReference",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetHoistedVariable",
      "signature" : "Mono.CSharp.HoistedVariable Mono.CSharp.ParameterReference:GetHoistedVariable (Mono.CSharp.AnonymousExpression)",
      "code_size" : "41",
      "class" : "ParameterReference",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsFixed",
      "signature" : "bool Mono.CSharp.ParameterReference:get_IsFixed ()",
      "code_size" : "35",
      "class" : "ParameterReference",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Name",
      "signature" : "string Mono.CSharp.ParameterReference:get_Name ()",
      "code_size" : "28",
      "class" : "ParameterReference",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Parameter",
      "signature" : "Mono.CSharp.Parameter Mono.CSharp.ParameterReference:get_Parameter ()",
      "code_size" : "31",
      "class" : "ParameterReference",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_VariableInfo",
      "signature" : "Mono.CSharp.VariableInfo Mono.CSharp.ParameterReference:get_VariableInfo ()",
      "code_size" : "24",
      "class" : "ParameterReference",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Variable",
      "signature" : "Mono.CSharp.ILocalVariable Mono.CSharp.ParameterReference:get_Variable ()",
      "code_size" : "18",
      "class" : "ParameterReference",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddressOf",
      "signature" : "void Mono.CSharp.ParameterReference:AddressOf (Mono.CSharp.EmitContext,Mono.CSharp.AddressOp)",
      "code_size" : "77",
      "class" : "ParameterReference",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetHasAddressTaken",
      "signature" : "void Mono.CSharp.ParameterReference:SetHasAddressTaken ()",
      "code_size" : "22",
      "class" : "ParameterReference",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolveBase",
      "signature" : "bool Mono.CSharp.ParameterReference:DoResolveBase (Mono.CSharp.ResolveContext)",
      "code_size" : "469",
      "class" : "ParameterReference",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetHashCode",
      "signature" : "int Mono.CSharp.ParameterReference:GetHashCode ()",
      "code_size" : "34",
      "class" : "ParameterReference",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Equals",
      "signature" : "bool Mono.CSharp.ParameterReference:Equals (object)",
      "code_size" : "134",
      "class" : "ParameterReference",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.ParameterReference:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Expression)",
      "code_size" : "9",
      "class" : "ParameterReference",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.ParameterReference:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "114",
      "class" : "ParameterReference",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.ParameterReference:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "38",
      "class" : "ParameterReference",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolveLValue",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.ParameterReference:DoResolveLValue (Mono.CSharp.ResolveContext,Mono.CSharp.Expression)",
      "code_size" : "112",
      "class" : "ParameterReference",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "FlowAnalysis",
      "signature" : "void Mono.CSharp.ParameterReference:FlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "196",
      "class" : "ParameterReference",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Invocation:.ctor (Mono.CSharp.Expression,Mono.CSharp.Arguments)",
      "code_size" : "109",
      "class" : "Invocation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Arguments",
      "signature" : "Mono.CSharp.Arguments Mono.CSharp.Invocation:get_Arguments ()",
      "code_size" : "20",
      "class" : "Invocation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Exp",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Invocation:get_Exp ()",
      "code_size" : "20",
      "class" : "Invocation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_MethodGroup",
      "signature" : "Mono.CSharp.MethodGroupExpr Mono.CSharp.Invocation:get_MethodGroup ()",
      "code_size" : "20",
      "class" : "Invocation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_StartLocation",
      "signature" : "Mono.CSharp.Location Mono.CSharp.Invocation:get_StartLocation ()",
      "code_size" : "39",
      "class" : "Invocation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CanReduceLambda",
      "signature" : "Mono.CSharp.MethodGroupExpr Mono.CSharp.Invocation:CanReduceLambda (Mono.CSharp.AnonymousMethodBody)",
      "code_size" : "987",
      "class" : "Invocation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.Invocation:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Expression)",
      "code_size" : "211",
      "class" : "Invocation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ContainsEmitWithAwait",
      "signature" : "bool Mono.CSharp.Invocation:ContainsEmitWithAwait ()",
      "code_size" : "75",
      "class" : "Invocation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Invocation:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "299",
      "class" : "Invocation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveConditionalAccessReceiver",
      "signature" : "void Mono.CSharp.Invocation:ResolveConditionalAccessReceiver (Mono.CSharp.ResolveContext)",
      "code_size" : "82",
      "class" : "Invocation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveStatement",
      "signature" : "Mono.CSharp.ExpressionStatement Mono.CSharp.Invocation:ResolveStatement (Mono.CSharp.BlockContext)",
      "code_size" : "40",
      "class" : "Invocation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Invocation:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "37",
      "class" : "Invocation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolveInvocation",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Invocation:DoResolveInvocation (Mono.CSharp.ResolveContext)",
      "code_size" : "1669",
      "class" : "Invocation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolveDynamic",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Invocation:DoResolveDynamic (Mono.CSharp.ResolveContext,Mono.CSharp.Expression)",
      "code_size" : "1612",
      "class" : "Invocation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolveOverload",
      "signature" : "Mono.CSharp.MethodGroupExpr Mono.CSharp.Invocation:DoResolveOverload (Mono.CSharp.ResolveContext)",
      "code_size" : "75",
      "class" : "Invocation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "FlowAnalysis",
      "signature" : "void Mono.CSharp.Invocation:FlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "200",
      "class" : "Invocation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSignatureForError",
      "signature" : "string Mono.CSharp.Invocation:GetSignatureForError ()",
      "code_size" : "32",
      "class" : "Invocation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "HasConditionalAccess",
      "signature" : "bool Mono.CSharp.Invocation:HasConditionalAccess ()",
      "code_size" : "32",
      "class" : "Invocation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsMemberInvocable",
      "signature" : "bool Mono.CSharp.Invocation:IsMemberInvocable (Mono.CSharp.MemberSpec)",
      "code_size" : "300",
      "class" : "Invocation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsSpecialMethodInvocation",
      "signature" : "bool Mono.CSharp.Invocation:IsSpecialMethodInvocation (Mono.CSharp.ResolveContext,Mono.CSharp.MethodSpec,Mono.CSharp.Location)",
      "code_size" : "228",
      "class" : "Invocation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.Invocation:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "136",
      "class" : "Invocation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitStatement",
      "signature" : "void Mono.CSharp.Invocation:EmitStatement (Mono.CSharp.EmitContext)",
      "code_size" : "145",
      "class" : "Invocation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MakeExpression",
      "signature" : "System.Linq.Expressions.Expression Mono.CSharp.Invocation:MakeExpression (Mono.CSharp.BuilderContext)",
      "code_size" : "57",
      "class" : "Invocation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MakeExpression",
      "signature" : "System.Linq.Expressions.Expression Mono.CSharp.Invocation:MakeExpression (Mono.CSharp.BuilderContext,Mono.CSharp.Expression,Mono.CSharp.MethodSpec,Mono.CSharp.Arguments)",
      "code_size" : "170",
      "class" : "Invocation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.Invocation:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "Invocation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Invocation/Predefined:.ctor (Mono.CSharp.MethodGroupExpr,Mono.CSharp.Arguments)",
      "code_size" : "55",
      "class" : "Predefined",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolveOverload",
      "signature" : "Mono.CSharp.MethodGroupExpr Mono.CSharp.Invocation/Predefined:DoResolveOverload (Mono.CSharp.ResolveContext)",
      "code_size" : "76",
      "class" : "Predefined",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.New:.ctor (Mono.CSharp.Expression,Mono.CSharp.Arguments,Mono.CSharp.Location)",
      "code_size" : "90",
      "class" : "New",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Arguments",
      "signature" : "Mono.CSharp.Arguments Mono.CSharp.New:get_Arguments ()",
      "code_size" : "20",
      "class" : "New",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsGeneratedStructConstructor",
      "signature" : "bool Mono.CSharp.New:get_IsGeneratedStructConstructor ()",
      "code_size" : "102",
      "class" : "New",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_TypeExpression",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.New:get_TypeExpression ()",
      "code_size" : "20",
      "class" : "New",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Constantify",
      "signature" : "Mono.CSharp.Constant Mono.CSharp.New:Constantify (Mono.CSharp.TypeSpec,Mono.CSharp.Location)",
      "code_size" : "917",
      "class" : "New",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ContainsEmitWithAwait",
      "signature" : "bool Mono.CSharp.New:ContainsEmitWithAwait ()",
      "code_size" : "55",
      "class" : "New",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CheckComImport",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.New:CheckComImport (Mono.CSharp.ResolveContext)",
      "code_size" : "367",
      "class" : "New",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.New:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "401",
      "class" : "New",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.New:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "1722",
      "class" : "New",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoEmitTypeParameter",
      "signature" : "void Mono.CSharp.New:DoEmitTypeParameter (Mono.CSharp.EmitContext)",
      "code_size" : "299",
      "class" : "New",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "bool Mono.CSharp.New:Emit (Mono.CSharp.EmitContext,Mono.CSharp.IMemoryLocation)",
      "code_size" : "935",
      "class" : "New",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.New:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "168",
      "class" : "New",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitStatement",
      "signature" : "void Mono.CSharp.New:EmitStatement (Mono.CSharp.EmitContext)",
      "code_size" : "269",
      "class" : "New",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CanEmitOptimizedLocalTarget",
      "signature" : "bool Mono.CSharp.New:CanEmitOptimizedLocalTarget (Mono.CSharp.EmitContext)",
      "code_size" : "14",
      "class" : "New",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "FlowAnalysis",
      "signature" : "void Mono.CSharp.New:FlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "54",
      "class" : "New",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddressOf",
      "signature" : "void Mono.CSharp.New:AddressOf (Mono.CSharp.EmitContext,Mono.CSharp.AddressOp)",
      "code_size" : "36",
      "class" : "New",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitAddressOf",
      "signature" : "Mono.CSharp.IMemoryLocation Mono.CSharp.New:EmitAddressOf (Mono.CSharp.EmitContext,Mono.CSharp.AddressOp)",
      "code_size" : "533",
      "class" : "New",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.New:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Expression)",
      "code_size" : "223",
      "class" : "New",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MakeExpression",
      "signature" : "System.Linq.Expressions.Expression Mono.CSharp.New:MakeExpression (Mono.CSharp.BuilderContext)",
      "code_size" : "129",
      "class" : "New",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.New:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "New",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ArrayInitializer:.ctor (System.Collections.Generic.List`1<Mono.CSharp.Expression>,Mono.CSharp.Location)",
      "code_size" : "63",
      "class" : "ArrayInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ArrayInitializer:.ctor (int,Mono.CSharp.Location)",
      "code_size" : "77",
      "class" : "ArrayInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ArrayInitializer:.ctor (Mono.CSharp.Location)",
      "code_size" : "33",
      "class" : "ArrayInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Count",
      "signature" : "int Mono.CSharp.ArrayInitializer:get_Count ()",
      "code_size" : "30",
      "class" : "ArrayInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Elements",
      "signature" : "System.Collections.Generic.List`1<Mono.CSharp.Expression> Mono.CSharp.ArrayInitializer:get_Elements ()",
      "code_size" : "20",
      "class" : "ArrayInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Item",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.ArrayInitializer:get_Item (int)",
      "code_size" : "41",
      "class" : "ArrayInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_VariableDeclaration",
      "signature" : "Mono.CSharp.BlockVariable Mono.CSharp.ArrayInitializer:get_VariableDeclaration ()",
      "code_size" : "20",
      "class" : "ArrayInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_VariableDeclaration",
      "signature" : "void Mono.CSharp.ArrayInitializer:set_VariableDeclaration (Mono.CSharp.BlockVariable)",
      "code_size" : "43",
      "class" : "ArrayInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Add",
      "signature" : "void Mono.CSharp.ArrayInitializer:Add (Mono.CSharp.Expression)",
      "code_size" : "41",
      "class" : "ArrayInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ContainsEmitWithAwait",
      "signature" : "bool Mono.CSharp.ArrayInitializer:ContainsEmitWithAwait ()",
      "code_size" : "27",
      "class" : "ArrayInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.ArrayInitializer:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "47",
      "class" : "ArrayInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.ArrayInitializer:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Expression)",
      "code_size" : "344",
      "class" : "ArrayInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.ArrayInitializer:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "558",
      "class" : "ArrayInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.ArrayInitializer:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "79",
      "class" : "ArrayInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "FlowAnalysis",
      "signature" : "void Mono.CSharp.ArrayInitializer:FlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "79",
      "class" : "ArrayInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.ArrayInitializer:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "ArrayInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ArrayCreation:.ctor (Mono.CSharp.FullNamedExpression,System.Collections.Generic.List`1<Mono.CSharp.Expression>,Mono.CSharp.ComposedTypeSpecifier,Mono.CSharp.ArrayInitializer,Mono.CSharp.Location)",
      "code_size" : "143",
      "class" : "ArrayCreation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ArrayCreation:.ctor (Mono.CSharp.FullNamedExpression,Mono.CSharp.ComposedTypeSpecifier,Mono.CSharp.ArrayInitializer,Mono.CSharp.Location)",
      "code_size" : "141",
      "class" : "ArrayCreation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ArrayCreation:.ctor (Mono.CSharp.FullNamedExpression,Mono.CSharp.ArrayInitializer,Mono.CSharp.Location)",
      "code_size" : "62",
      "class" : "ArrayCreation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ArrayCreation:.ctor (Mono.CSharp.FullNamedExpression,Mono.CSharp.ArrayInitializer)",
      "code_size" : "70",
      "class" : "ArrayCreation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_NoEmptyInterpolation",
      "signature" : "bool Mono.CSharp.ArrayCreation:get_NoEmptyInterpolation ()",
      "code_size" : "20",
      "class" : "ArrayCreation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_NoEmptyInterpolation",
      "signature" : "void Mono.CSharp.ArrayCreation:set_NoEmptyInterpolation (bool)",
      "code_size" : "31",
      "class" : "ArrayCreation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Rank",
      "signature" : "Mono.CSharp.ComposedTypeSpecifier Mono.CSharp.ArrayCreation:get_Rank ()",
      "code_size" : "20",
      "class" : "ArrayCreation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_TypeExpression",
      "signature" : "Mono.CSharp.FullNamedExpression Mono.CSharp.ArrayCreation:get_TypeExpression ()",
      "code_size" : "20",
      "class" : "ArrayCreation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Initializers",
      "signature" : "Mono.CSharp.ArrayInitializer Mono.CSharp.ArrayCreation:get_Initializers ()",
      "code_size" : "20",
      "class" : "ArrayCreation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CheckIndices",
      "signature" : "bool Mono.CSharp.ArrayCreation:CheckIndices (Mono.CSharp.ResolveContext,Mono.CSharp.ArrayInitializer,int,bool,int)",
      "code_size" : "1772",
      "class" : "ArrayCreation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ContainsEmitWithAwait",
      "signature" : "bool Mono.CSharp.ArrayCreation:ContainsEmitWithAwait ()",
      "code_size" : "206",
      "class" : "ArrayCreation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.ArrayCreation:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "1032",
      "class" : "ArrayCreation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "UpdateIndices",
      "signature" : "void Mono.CSharp.ArrayCreation:UpdateIndices (Mono.CSharp.ResolveContext)",
      "code_size" : "460",
      "class" : "ArrayCreation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_NegativeArrayIndex",
      "signature" : "void Mono.CSharp.ArrayCreation:Error_NegativeArrayIndex (Mono.CSharp.ResolveContext,Mono.CSharp.Location)",
      "code_size" : "61",
      "class" : "ArrayCreation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "FlowAnalysis",
      "signature" : "void Mono.CSharp.ArrayCreation:FlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "324",
      "class" : "ArrayCreation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "InitializersContainAwait",
      "signature" : "bool Mono.CSharp.ArrayCreation:InitializersContainAwait ()",
      "code_size" : "204",
      "class" : "ArrayCreation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveArrayElement",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.ArrayCreation:ResolveArrayElement (Mono.CSharp.ResolveContext,Mono.CSharp.Expression)",
      "code_size" : "466",
      "class" : "ArrayCreation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveInitializers",
      "signature" : "bool Mono.CSharp.ArrayCreation:ResolveInitializers (Mono.CSharp.ResolveContext)",
      "code_size" : "288",
      "class" : "ArrayCreation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveArrayType",
      "signature" : "bool Mono.CSharp.ArrayCreation:ResolveArrayType (Mono.CSharp.ResolveContext)",
      "code_size" : "352",
      "class" : "ArrayCreation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.ArrayCreation:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "92",
      "class" : "ArrayCreation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MakeByteBlob",
      "signature" : "byte[] Mono.CSharp.ArrayCreation:MakeByteBlob ()",
      "code_size" : "3021",
      "class" : "ArrayCreation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MakeExpression",
      "signature" : "System.Linq.Expressions.Expression Mono.CSharp.ArrayCreation:MakeExpression (Mono.CSharp.BuilderContext)",
      "code_size" : "263",
      "class" : "ArrayCreation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitDynamicInitializers",
      "signature" : "void Mono.CSharp.ArrayCreation:EmitDynamicInitializers (Mono.CSharp.EmitContext,bool,Mono.CSharp.StackFieldExpr)",
      "code_size" : "1013",
      "class" : "ArrayCreation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.ArrayCreation:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "97",
      "class" : "ArrayCreation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitOptimizedEmpty",
      "signature" : "bool Mono.CSharp.ArrayCreation:EmitOptimizedEmpty (Mono.CSharp.EmitContext)",
      "code_size" : "527",
      "class" : "ArrayCreation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitToFieldSource",
      "signature" : "Mono.CSharp.FieldExpr Mono.CSharp.ArrayCreation:EmitToFieldSource (Mono.CSharp.EmitContext)",
      "code_size" : "490",
      "class" : "ArrayCreation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EncodeAttributeValue",
      "signature" : "void Mono.CSharp.ArrayCreation:EncodeAttributeValue (Mono.CSharp.IMemberContext,Mono.CSharp.AttributeEncoder,Mono.CSharp.TypeSpec,Mono.CSharp.TypeSpec)",
      "code_size" : "574",
      "class" : "ArrayCreation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.ArrayCreation:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Expression)",
      "code_size" : "532",
      "class" : "ArrayCreation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.ArrayCreation:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "ArrayCreation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ImplicitlyTypedArrayCreation:.ctor (Mono.CSharp.ComposedTypeSpecifier,Mono.CSharp.ArrayInitializer,Mono.CSharp.Location)",
      "code_size" : "50",
      "class" : "ImplicitlyTypedArrayCreation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ImplicitlyTypedArrayCreation:.ctor (Mono.CSharp.ArrayInitializer,Mono.CSharp.Location)",
      "code_size" : "40",
      "class" : "ImplicitlyTypedArrayCreation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.ImplicitlyTypedArrayCreation:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "470",
      "class" : "ImplicitlyTypedArrayCreation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "UnifyInitializerElement",
      "signature" : "void Mono.CSharp.ImplicitlyTypedArrayCreation:UnifyInitializerElement (Mono.CSharp.ResolveContext)",
      "code_size" : "217",
      "class" : "ImplicitlyTypedArrayCreation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveArrayElement",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.ImplicitlyTypedArrayCreation:ResolveArrayElement (Mono.CSharp.ResolveContext,Mono.CSharp.Expression)",
      "code_size" : "86",
      "class" : "ImplicitlyTypedArrayCreation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.CompilerGeneratedThis:.ctor (Mono.CSharp.TypeSpec,Mono.CSharp.Location)",
      "code_size" : "60",
      "class" : "CompilerGeneratedThis",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.CompilerGeneratedThis:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "143",
      "class" : "CompilerGeneratedThis",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolveLValue",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.CompilerGeneratedThis:DoResolveLValue (Mono.CSharp.ResolveContext,Mono.CSharp.Expression)",
      "code_size" : "31",
      "class" : "CompilerGeneratedThis",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetHoistedVariable",
      "signature" : "Mono.CSharp.HoistedVariable Mono.CSharp.CompilerGeneratedThis:GetHoistedVariable (Mono.CSharp.AnonymousExpression)",
      "code_size" : "11",
      "class" : "CompilerGeneratedThis",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.This:.ctor (Mono.CSharp.Location)",
      "code_size" : "32",
      "class" : "This",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Name",
      "signature" : "string Mono.CSharp.This:get_Name ()",
      "code_size" : "16",
      "class" : "This",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsLockedByStatement",
      "signature" : "bool Mono.CSharp.This:get_IsLockedByStatement ()",
      "code_size" : "11",
      "class" : "This",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_IsLockedByStatement",
      "signature" : "void Mono.CSharp.This:set_IsLockedByStatement (bool)",
      "code_size" : "9",
      "class" : "This",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsRef",
      "signature" : "bool Mono.CSharp.This:get_IsRef ()",
      "code_size" : "31",
      "class" : "This",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsSideEffectFree",
      "signature" : "bool Mono.CSharp.This:get_IsSideEffectFree ()",
      "code_size" : "14",
      "class" : "This",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Variable",
      "signature" : "Mono.CSharp.ILocalVariable Mono.CSharp.This:get_Variable ()",
      "code_size" : "19",
      "class" : "This",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_VariableInfo",
      "signature" : "Mono.CSharp.VariableInfo Mono.CSharp.This:get_VariableInfo ()",
      "code_size" : "20",
      "class" : "This",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsFixed",
      "signature" : "bool Mono.CSharp.This:get_IsFixed ()",
      "code_size" : "11",
      "class" : "This",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CheckStructThisDefiniteAssignment",
      "signature" : "void Mono.CSharp.This:CheckStructThisDefiniteAssignment (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "132",
      "class" : "This",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_ThisNotAvailable",
      "signature" : "void Mono.CSharp.This:Error_ThisNotAvailable (Mono.CSharp.ResolveContext)",
      "code_size" : "270",
      "class" : "This",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "FlowAnalysis",
      "signature" : "void Mono.CSharp.This:FlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "23",
      "class" : "This",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetHoistedVariable",
      "signature" : "Mono.CSharp.HoistedVariable Mono.CSharp.This:GetHoistedVariable (Mono.CSharp.AnonymousExpression)",
      "code_size" : "68",
      "class" : "This",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsThisAvailable",
      "signature" : "bool Mono.CSharp.This:IsThisAvailable (Mono.CSharp.ResolveContext,bool)",
      "code_size" : "200",
      "class" : "This",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveBase",
      "signature" : "void Mono.CSharp.This:ResolveBase (Mono.CSharp.ResolveContext)",
      "code_size" : "364",
      "class" : "This",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.This:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "35",
      "class" : "This",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolveLValue",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.This:DoResolveLValue (Mono.CSharp.ResolveContext,Mono.CSharp.Expression)",
      "code_size" : "294",
      "class" : "This",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetHashCode",
      "signature" : "int Mono.CSharp.This:GetHashCode ()",
      "code_size" : "27",
      "class" : "This",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Equals",
      "signature" : "bool Mono.CSharp.This:Equals (object)",
      "code_size" : "84",
      "class" : "This",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.This:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Expression)",
      "code_size" : "9",
      "class" : "This",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetHasAddressTaken",
      "signature" : "void Mono.CSharp.This:SetHasAddressTaken ()",
      "code_size" : "9",
      "class" : "This",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.This:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "This",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.This/ThisVariable:.ctor ()",
      "code_size" : "9",
      "class" : "ThisVariable",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.This/ThisVariable:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "162",
      "class" : "ThisVariable",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitAssign",
      "signature" : "void Mono.CSharp.This/ThisVariable:EmitAssign (Mono.CSharp.EmitContext)",
      "code_size" : "27",
      "class" : "ThisVariable",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitAddressOf",
      "signature" : "void Mono.CSharp.This/ThisVariable:EmitAddressOf (Mono.CSharp.EmitContext)",
      "code_size" : "162",
      "class" : "ThisVariable",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".cctor",
      "signature" : "void Mono.CSharp.This/ThisVariable:.cctor ()",
      "code_size" : "39",
      "class" : "ThisVariable",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ArglistAccess:.ctor (Mono.CSharp.Location)",
      "code_size" : "32",
      "class" : "ArglistAccess",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.ArglistAccess:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Expression)",
      "code_size" : "9",
      "class" : "ArglistAccess",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ContainsEmitWithAwait",
      "signature" : "bool Mono.CSharp.ArglistAccess:ContainsEmitWithAwait ()",
      "code_size" : "11",
      "class" : "ArglistAccess",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.ArglistAccess:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "47",
      "class" : "ArglistAccess",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.ArglistAccess:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "221",
      "class" : "ArglistAccess",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.ArglistAccess:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "132",
      "class" : "ArglistAccess",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.ArglistAccess:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "ArglistAccess",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Arglist:.ctor (Mono.CSharp.Location)",
      "code_size" : "30",
      "class" : "Arglist",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Arglist:.ctor (Mono.CSharp.Arguments,Mono.CSharp.Location)",
      "code_size" : "63",
      "class" : "Arglist",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Arguments",
      "signature" : "Mono.CSharp.Arguments Mono.CSharp.Arglist:get_Arguments ()",
      "code_size" : "20",
      "class" : "Arglist",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ArgumentTypes",
      "signature" : "System.Type[] Mono.CSharp.Arglist:get_ArgumentTypes ()",
      "code_size" : "192",
      "class" : "Arglist",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ContainsEmitWithAwait",
      "signature" : "bool Mono.CSharp.Arglist:ContainsEmitWithAwait ()",
      "code_size" : "27",
      "class" : "Arglist",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Arglist:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "77",
      "class" : "Arglist",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Arglist:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "109",
      "class" : "Arglist",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.Arglist:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "54",
      "class" : "Arglist",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.Arglist:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Expression)",
      "code_size" : "163",
      "class" : "Arglist",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.Arglist:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "Arglist",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.RefValueExpr:.ctor (Mono.CSharp.Expression,Mono.CSharp.FullNamedExpression,Mono.CSharp.Location)",
      "code_size" : "90",
      "class" : "RefValueExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_TypeExpression",
      "signature" : "Mono.CSharp.FullNamedExpression Mono.CSharp.RefValueExpr:get_TypeExpression ()",
      "code_size" : "20",
      "class" : "RefValueExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ContainsEmitWithAwait",
      "signature" : "bool Mono.CSharp.RefValueExpr:ContainsEmitWithAwait ()",
      "code_size" : "11",
      "class" : "RefValueExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddressOf",
      "signature" : "void Mono.CSharp.RefValueExpr:AddressOf (Mono.CSharp.EmitContext,Mono.CSharp.AddressOp)",
      "code_size" : "159",
      "class" : "RefValueExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.RefValueExpr:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "259",
      "class" : "RefValueExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolveLValue",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.RefValueExpr:DoResolveLValue (Mono.CSharp.ResolveContext,Mono.CSharp.Expression)",
      "code_size" : "31",
      "class" : "RefValueExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.RefValueExpr:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "180",
      "class" : "RefValueExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.RefValueExpr:Emit (Mono.CSharp.EmitContext,bool)",
      "code_size" : "27",
      "class" : "RefValueExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitAssign",
      "signature" : "void Mono.CSharp.RefValueExpr:EmitAssign (Mono.CSharp.EmitContext,Mono.CSharp.Expression,bool,bool)",
      "code_size" : "464",
      "class" : "RefValueExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.RefValueExpr:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "36",
      "class" : "RefValueExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.RefTypeExpr:.ctor (Mono.CSharp.Expression,Mono.CSharp.Location)",
      "code_size" : "63",
      "class" : "RefTypeExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.RefTypeExpr:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "264",
      "class" : "RefTypeExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.RefTypeExpr:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "344",
      "class" : "RefTypeExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.RefTypeExpr:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "36",
      "class" : "RefTypeExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.MakeRefExpr:.ctor (Mono.CSharp.Expression,Mono.CSharp.Location)",
      "code_size" : "63",
      "class" : "MakeRefExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ContainsEmitWithAwait",
      "signature" : "bool Mono.CSharp.MakeRefExpr:ContainsEmitWithAwait ()",
      "code_size" : "27",
      "class" : "MakeRefExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.MakeRefExpr:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "155",
      "class" : "MakeRefExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.MakeRefExpr:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "305",
      "class" : "MakeRefExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.MakeRefExpr:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "36",
      "class" : "MakeRefExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.TypeOf:.ctor (Mono.CSharp.FullNamedExpression,Mono.CSharp.Location)",
      "code_size" : "63",
      "class" : "TypeOf",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.TypeOf:.ctor (Mono.CSharp.TypeSpec,Mono.CSharp.Location)",
      "code_size" : "63",
      "class" : "TypeOf",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsSideEffectFree",
      "signature" : "bool Mono.CSharp.TypeOf:get_IsSideEffectFree ()",
      "code_size" : "14",
      "class" : "TypeOf",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_TypeArgument",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.TypeOf:get_TypeArgument ()",
      "code_size" : "20",
      "class" : "TypeOf",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_TypeExpression",
      "signature" : "Mono.CSharp.FullNamedExpression Mono.CSharp.TypeOf:get_TypeExpression ()",
      "code_size" : "20",
      "class" : "TypeOf",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.TypeOf:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Expression)",
      "code_size" : "194",
      "class" : "TypeOf",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ContainsEmitWithAwait",
      "signature" : "bool Mono.CSharp.TypeOf:ContainsEmitWithAwait ()",
      "code_size" : "11",
      "class" : "TypeOf",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.TypeOf:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "349",
      "class" : "TypeOf",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.TypeOf:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "328",
      "class" : "TypeOf",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ContainsDynamicType",
      "signature" : "bool Mono.CSharp.TypeOf:ContainsDynamicType (Mono.CSharp.TypeSpec)",
      "code_size" : "224",
      "class" : "TypeOf",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EncodeAttributeValue",
      "signature" : "void Mono.CSharp.TypeOf:EncodeAttributeValue (Mono.CSharp.IMemberContext,Mono.CSharp.AttributeEncoder,Mono.CSharp.TypeSpec,Mono.CSharp.TypeSpec)",
      "code_size" : "365",
      "class" : "TypeOf",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.TypeOf:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "317",
      "class" : "TypeOf",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.TypeOf:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "TypeOf",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.TypeOfMethod:.ctor (Mono.CSharp.MethodSpec,Mono.CSharp.Location)",
      "code_size" : "33",
      "class" : "TypeOfMethod",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.TypeOfMethod:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "224",
      "class" : "TypeOfMethod",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.TypeOfMethod:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "262",
      "class" : "TypeOfMethod",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetTypeFromHandle",
      "signature" : "Mono.CSharp.PredefinedMember`1<Mono.CSharp.MethodSpec> Mono.CSharp.TypeOfMethod:GetTypeFromHandle (Mono.CSharp.EmitContext)",
      "code_size" : "48",
      "class" : "TypeOfMethod",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetTypeFromHandleGeneric",
      "signature" : "Mono.CSharp.PredefinedMember`1<Mono.CSharp.MethodSpec> Mono.CSharp.TypeOfMethod:GetTypeFromHandleGeneric (Mono.CSharp.EmitContext)",
      "code_size" : "48",
      "class" : "TypeOfMethod",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.TypeOfMember`1<T_REF>:.ctor (T_REF,Mono.CSharp.Location)",
      "code_size" : "70",
      "class" : "TypeOfMember`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsSideEffectFree",
      "signature" : "bool Mono.CSharp.TypeOfMember`1<T_REF>:get_IsSideEffectFree ()",
      "code_size" : "18",
      "class" : "TypeOfMember`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ContainsEmitWithAwait",
      "signature" : "bool Mono.CSharp.TypeOfMember`1<T_REF>:ContainsEmitWithAwait ()",
      "code_size" : "15",
      "class" : "TypeOfMember`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.TypeOfMember`1<T_REF>:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "291",
      "class" : "TypeOfMember`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.TypeOfMember`1<T_REF>:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "24",
      "class" : "TypeOfMember`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.TypeOfMember`1<T_REF>:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "405",
      "class" : "TypeOfMember`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.TypeOfField:.ctor (Mono.CSharp.FieldSpec,Mono.CSharp.Location)",
      "code_size" : "33",
      "class" : "TypeOfField",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.TypeOfField:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "118",
      "class" : "TypeOfField",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.TypeOfField:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "150",
      "class" : "TypeOfField",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetTypeFromHandle",
      "signature" : "Mono.CSharp.PredefinedMember`1<Mono.CSharp.MethodSpec> Mono.CSharp.TypeOfField:GetTypeFromHandle (Mono.CSharp.EmitContext)",
      "code_size" : "48",
      "class" : "TypeOfField",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetTypeFromHandleGeneric",
      "signature" : "Mono.CSharp.PredefinedMember`1<Mono.CSharp.MethodSpec> Mono.CSharp.TypeOfField:GetTypeFromHandleGeneric (Mono.CSharp.EmitContext)",
      "code_size" : "48",
      "class" : "TypeOfField",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.SizeOf:.ctor (Mono.CSharp.Expression,Mono.CSharp.Location)",
      "code_size" : "63",
      "class" : "SizeOf",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsSideEffectFree",
      "signature" : "bool Mono.CSharp.SizeOf:get_IsSideEffectFree ()",
      "code_size" : "14",
      "class" : "SizeOf",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_TypeExpression",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.SizeOf:get_TypeExpression ()",
      "code_size" : "20",
      "class" : "SizeOf",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ContainsEmitWithAwait",
      "signature" : "bool Mono.CSharp.SizeOf:ContainsEmitWithAwait ()",
      "code_size" : "11",
      "class" : "SizeOf",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.SizeOf:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "25",
      "class" : "SizeOf",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.SizeOf:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "464",
      "class" : "SizeOf",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.SizeOf:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "135",
      "class" : "SizeOf",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.SizeOf:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Expression)",
      "code_size" : "9",
      "class" : "SizeOf",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.SizeOf:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "SizeOf",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.QualifiedAliasMember:.ctor (string,string,Mono.CSharp.Location)",
      "code_size" : "72",
      "class" : "QualifiedAliasMember",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.QualifiedAliasMember:.ctor (string,string,Mono.CSharp.TypeArguments,Mono.CSharp.Location)",
      "code_size" : "82",
      "class" : "QualifiedAliasMember",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.QualifiedAliasMember:.ctor (string,string,int,Mono.CSharp.Location)",
      "code_size" : "82",
      "class" : "QualifiedAliasMember",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Alias",
      "signature" : "string Mono.CSharp.QualifiedAliasMember:get_Alias ()",
      "code_size" : "20",
      "class" : "QualifiedAliasMember",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionFromAlias",
      "signature" : "Mono.CSharp.FullNamedExpression Mono.CSharp.QualifiedAliasMember:CreateExpressionFromAlias (Mono.CSharp.IMemberContext)",
      "code_size" : "415",
      "class" : "QualifiedAliasMember",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveAsTypeOrNamespace",
      "signature" : "Mono.CSharp.FullNamedExpression Mono.CSharp.QualifiedAliasMember:ResolveAsTypeOrNamespace (Mono.CSharp.IMemberContext,bool)",
      "code_size" : "89",
      "class" : "QualifiedAliasMember",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.QualifiedAliasMember:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "33",
      "class" : "QualifiedAliasMember",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSignatureForError",
      "signature" : "string Mono.CSharp.QualifiedAliasMember:GetSignatureForError ()",
      "code_size" : "130",
      "class" : "QualifiedAliasMember",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "HasConditionalAccess",
      "signature" : "bool Mono.CSharp.QualifiedAliasMember:HasConditionalAccess ()",
      "code_size" : "11",
      "class" : "QualifiedAliasMember",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "LookupNameExpression",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.QualifiedAliasMember:LookupNameExpression (Mono.CSharp.ResolveContext,Mono.CSharp.Expression/MemberLookupRestrictions)",
      "code_size" : "184",
      "class" : "QualifiedAliasMember",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.QualifiedAliasMember:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Expression)",
      "code_size" : "9",
      "class" : "QualifiedAliasMember",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.QualifiedAliasMember:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "QualifiedAliasMember",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".cctor",
      "signature" : "void Mono.CSharp.QualifiedAliasMember:.cctor ()",
      "code_size" : "26",
      "class" : "QualifiedAliasMember",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.MemberAccess:.ctor (Mono.CSharp.Expression,string)",
      "code_size" : "83",
      "class" : "MemberAccess",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.MemberAccess:.ctor (Mono.CSharp.Expression,string,Mono.CSharp.Location)",
      "code_size" : "68",
      "class" : "MemberAccess",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.MemberAccess:.ctor (Mono.CSharp.Expression,string,Mono.CSharp.TypeArguments,Mono.CSharp.Location)",
      "code_size" : "78",
      "class" : "MemberAccess",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.MemberAccess:.ctor (Mono.CSharp.Expression,string,int,Mono.CSharp.Location)",
      "code_size" : "78",
      "class" : "MemberAccess",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_LeftExpression",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.MemberAccess:get_LeftExpression ()",
      "code_size" : "20",
      "class" : "MemberAccess",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_StartLocation",
      "signature" : "Mono.CSharp.Location Mono.CSharp.MemberAccess:get_StartLocation ()",
      "code_size" : "80",
      "class" : "MemberAccess",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.MemberAccess:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "75",
      "class" : "MemberAccess",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolveLValue",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.MemberAccess:DoResolveLValue (Mono.CSharp.ResolveContext,Mono.CSharp.Expression)",
      "code_size" : "200",
      "class" : "MemberAccess",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_OperatorCannotBeApplied",
      "signature" : "void Mono.CSharp.MemberAccess:Error_OperatorCannotBeApplied (Mono.CSharp.ResolveContext,Mono.CSharp.TypeSpec)",
      "code_size" : "184",
      "class" : "MemberAccess",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "HasConditionalAccess",
      "signature" : "bool Mono.CSharp.MemberAccess:HasConditionalAccess ()",
      "code_size" : "32",
      "class" : "MemberAccess",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsValidDotExpression",
      "signature" : "bool Mono.CSharp.MemberAccess:IsValidDotExpression (Mono.CSharp.TypeSpec)",
      "code_size" : "67",
      "class" : "MemberAccess",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "LookupNameExpression",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.MemberAccess:LookupNameExpression (Mono.CSharp.ResolveContext,Mono.CSharp.Expression/MemberLookupRestrictions)",
      "code_size" : "3419",
      "class" : "MemberAccess",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveAsTypeOrNamespace",
      "signature" : "Mono.CSharp.FullNamedExpression Mono.CSharp.MemberAccess:ResolveAsTypeOrNamespace (Mono.CSharp.IMemberContext,bool)",
      "code_size" : "1822",
      "class" : "MemberAccess",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_IdentifierNotFound",
      "signature" : "void Mono.CSharp.MemberAccess:Error_IdentifierNotFound (Mono.CSharp.IMemberContext,Mono.CSharp.TypeSpec)",
      "code_size" : "385",
      "class" : "MemberAccess",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_InvalidExpressionStatement",
      "signature" : "void Mono.CSharp.MemberAccess:Error_InvalidExpressionStatement (Mono.CSharp.Report,Mono.CSharp.Location)",
      "code_size" : "53",
      "class" : "MemberAccess",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_TypeDoesNotContainDefinition",
      "signature" : "void Mono.CSharp.MemberAccess:Error_TypeDoesNotContainDefinition (Mono.CSharp.ResolveContext,Mono.CSharp.TypeSpec,string)",
      "code_size" : "564",
      "class" : "MemberAccess",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSignatureForError",
      "signature" : "string Mono.CSharp.MemberAccess:GetSignatureForError ()",
      "code_size" : "76",
      "class" : "MemberAccess",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.MemberAccess:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Expression)",
      "code_size" : "155",
      "class" : "MemberAccess",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.MemberAccess:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "MemberAccess",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ConditionalMemberAccess:.ctor (Mono.CSharp.Expression,string,Mono.CSharp.TypeArguments,Mono.CSharp.Location)",
      "code_size" : "43",
      "class" : "ConditionalMemberAccess",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "HasConditionalAccess",
      "signature" : "bool Mono.CSharp.ConditionalMemberAccess:HasConditionalAccess ()",
      "code_size" : "14",
      "class" : "ConditionalMemberAccess",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.CheckedExpr:.ctor (Mono.CSharp.Expression,Mono.CSharp.Location)",
      "code_size" : "63",
      "class" : "CheckedExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ContainsEmitWithAwait",
      "signature" : "bool Mono.CSharp.CheckedExpr:ContainsEmitWithAwait ()",
      "code_size" : "32",
      "class" : "CheckedExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.CheckedExpr:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "126",
      "class" : "CheckedExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.CheckedExpr:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "424",
      "class" : "CheckedExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.CheckedExpr:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "123",
      "class" : "CheckedExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitBranchable",
      "signature" : "void Mono.CSharp.CheckedExpr:EmitBranchable (Mono.CSharp.EmitContext,System.Reflection.Emit.Label,bool)",
      "code_size" : "139",
      "class" : "CheckedExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "FlowAnalysis",
      "signature" : "void Mono.CSharp.CheckedExpr:FlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "42",
      "class" : "CheckedExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MakeExpression",
      "signature" : "System.Linq.Expressions.Expression Mono.CSharp.CheckedExpr:MakeExpression (Mono.CSharp.BuilderContext)",
      "code_size" : "126",
      "class" : "CheckedExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.CheckedExpr:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Expression)",
      "code_size" : "155",
      "class" : "CheckedExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.CheckedExpr:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "CheckedExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.UnCheckedExpr:.ctor (Mono.CSharp.Expression,Mono.CSharp.Location)",
      "code_size" : "63",
      "class" : "UnCheckedExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ContainsEmitWithAwait",
      "signature" : "bool Mono.CSharp.UnCheckedExpr:ContainsEmitWithAwait ()",
      "code_size" : "32",
      "class" : "UnCheckedExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.UnCheckedExpr:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "123",
      "class" : "UnCheckedExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.UnCheckedExpr:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "421",
      "class" : "UnCheckedExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.UnCheckedExpr:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "120",
      "class" : "UnCheckedExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitBranchable",
      "signature" : "void Mono.CSharp.UnCheckedExpr:EmitBranchable (Mono.CSharp.EmitContext,System.Reflection.Emit.Label,bool)",
      "code_size" : "136",
      "class" : "UnCheckedExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "FlowAnalysis",
      "signature" : "void Mono.CSharp.UnCheckedExpr:FlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "42",
      "class" : "UnCheckedExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.UnCheckedExpr:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Expression)",
      "code_size" : "155",
      "class" : "UnCheckedExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.UnCheckedExpr:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "UnCheckedExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ElementAccess:.ctor (Mono.CSharp.Expression,Mono.CSharp.Arguments,Mono.CSharp.Location)",
      "code_size" : "90",
      "class" : "ElementAccess",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ConditionalAccess",
      "signature" : "bool Mono.CSharp.ElementAccess:get_ConditionalAccess ()",
      "code_size" : "20",
      "class" : "ElementAccess",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_ConditionalAccess",
      "signature" : "void Mono.CSharp.ElementAccess:set_ConditionalAccess (bool)",
      "code_size" : "31",
      "class" : "ElementAccess",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_StartLocation",
      "signature" : "Mono.CSharp.Location Mono.CSharp.ElementAccess:get_StartLocation ()",
      "code_size" : "39",
      "class" : "ElementAccess",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ContainsEmitWithAwait",
      "signature" : "bool Mono.CSharp.ElementAccess:ContainsEmitWithAwait ()",
      "code_size" : "69",
      "class" : "ElementAccess",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateAccessExpression",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.ElementAccess:CreateAccessExpression (Mono.CSharp.ResolveContext,bool)",
      "code_size" : "809",
      "class" : "ElementAccess",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.ElementAccess:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "145",
      "class" : "ElementAccess",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_CannotApplyIndexing",
      "signature" : "void Mono.CSharp.ElementAccess:Error_CannotApplyIndexing (Mono.CSharp.ResolveContext,Mono.CSharp.TypeSpec,Mono.CSharp.Location)",
      "code_size" : "126",
      "class" : "ElementAccess",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "HasConditionalAccess",
      "signature" : "bool Mono.CSharp.ElementAccess:HasConditionalAccess ()",
      "code_size" : "59",
      "class" : "ElementAccess",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveConditionalAccessReceiver",
      "signature" : "void Mono.CSharp.ElementAccess:ResolveConditionalAccessReceiver (Mono.CSharp.ResolveContext)",
      "code_size" : "78",
      "class" : "ElementAccess",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.ElementAccess:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "77",
      "class" : "ElementAccess",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolveLValue",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.ElementAccess:DoResolveLValue (Mono.CSharp.ResolveContext,Mono.CSharp.Expression)",
      "code_size" : "72",
      "class" : "ElementAccess",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.ElementAccess:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "47",
      "class" : "ElementAccess",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "FlowAnalysis",
      "signature" : "void Mono.CSharp.ElementAccess:FlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "66",
      "class" : "ElementAccess",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSignatureForError",
      "signature" : "string Mono.CSharp.ElementAccess:GetSignatureForError ()",
      "code_size" : "32",
      "class" : "ElementAccess",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.ElementAccess:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Expression)",
      "code_size" : "223",
      "class" : "ElementAccess",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.ElementAccess:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "ElementAccess",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ArrayAccess:.ctor (Mono.CSharp.ElementAccess,Mono.CSharp.Location)",
      "code_size" : "63",
      "class" : "ArrayAccess",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ConditionalAccess",
      "signature" : "bool Mono.CSharp.ArrayAccess:get_ConditionalAccess ()",
      "code_size" : "20",
      "class" : "ArrayAccess",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_ConditionalAccess",
      "signature" : "void Mono.CSharp.ArrayAccess:set_ConditionalAccess (bool)",
      "code_size" : "31",
      "class" : "ArrayAccess",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddressOf",
      "signature" : "void Mono.CSharp.ArrayAccess:AddressOf (Mono.CSharp.EmitContext,Mono.CSharp.AddressOp)",
      "code_size" : "430",
      "class" : "ArrayAccess",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.ArrayAccess:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "65",
      "class" : "ArrayAccess",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ContainsEmitWithAwait",
      "signature" : "bool Mono.CSharp.ArrayAccess:ContainsEmitWithAwait ()",
      "code_size" : "32",
      "class" : "ArrayAccess",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolveLValue",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.ArrayAccess:DoResolveLValue (Mono.CSharp.ResolveContext,Mono.CSharp.Expression)",
      "code_size" : "68",
      "class" : "ArrayAccess",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.ArrayAccess:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "793",
      "class" : "ArrayAccess",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_NegativeArrayIndex",
      "signature" : "void Mono.CSharp.ArrayAccess:Error_NegativeArrayIndex (Mono.CSharp.ResolveContext,Mono.CSharp.Location)",
      "code_size" : "66",
      "class" : "ArrayAccess",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "FlowAnalysis",
      "signature" : "void Mono.CSharp.ArrayAccess:FlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "133",
      "class" : "ArrayAccess",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "HasConditionalAccess",
      "signature" : "bool Mono.CSharp.ArrayAccess:HasConditionalAccess ()",
      "code_size" : "63",
      "class" : "ArrayAccess",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "LoadInstanceAndArguments",
      "signature" : "void Mono.CSharp.ArrayAccess:LoadInstanceAndArguments (Mono.CSharp.EmitContext,bool,bool)",
      "code_size" : "488",
      "class" : "ArrayAccess",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.ArrayAccess:Emit (Mono.CSharp.EmitContext,bool)",
      "code_size" : "733",
      "class" : "ArrayAccess",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.ArrayAccess:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "25",
      "class" : "ArrayAccess",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitAssign",
      "signature" : "void Mono.CSharp.ArrayAccess:EmitAssign (Mono.CSharp.EmitContext,Mono.CSharp.Expression,bool,bool)",
      "code_size" : "1302",
      "class" : "ArrayAccess",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitToField",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.ArrayAccess:EmitToField (Mono.CSharp.EmitContext)",
      "code_size" : "148",
      "class" : "ArrayAccess",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MakeAssignExpression",
      "signature" : "System.Linq.Expressions.Expression Mono.CSharp.ArrayAccess:MakeAssignExpression (Mono.CSharp.BuilderContext,Mono.CSharp.Expression)",
      "code_size" : "75",
      "class" : "ArrayAccess",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MakeExpression",
      "signature" : "System.Linq.Expressions.Expression Mono.CSharp.ArrayAccess:MakeExpression (Mono.CSharp.BuilderContext)",
      "code_size" : "75",
      "class" : "ArrayAccess",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MakeExpressionArguments",
      "signature" : "System.Linq.Expressions.Expression[] Mono.CSharp.ArrayAccess:MakeExpressionArguments (Mono.CSharp.BuilderContext)",
      "code_size" : "126",
      "class" : "ArrayAccess",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetConditionalAccessReceiver",
      "signature" : "void Mono.CSharp.ArrayAccess:SetConditionalAccessReceiver ()",
      "code_size" : "20",
      "class" : "ArrayAccess",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.IndexerExpr:.ctor (System.Collections.Generic.IList`1<Mono.CSharp.MemberSpec>,Mono.CSharp.TypeSpec,Mono.CSharp.ElementAccess)",
      "code_size" : "83",
      "class" : "IndexerExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.IndexerExpr:.ctor (System.Collections.Generic.IList`1<Mono.CSharp.MemberSpec>,Mono.CSharp.TypeSpec,Mono.CSharp.Expression,Mono.CSharp.Arguments,Mono.CSharp.Location)",
      "code_size" : "148",
      "class" : "IndexerExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Arguments",
      "signature" : "Mono.CSharp.Arguments Mono.CSharp.IndexerExpr:get_Arguments ()",
      "code_size" : "20",
      "class" : "IndexerExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Arguments",
      "signature" : "void Mono.CSharp.IndexerExpr:set_Arguments (Mono.CSharp.Arguments)",
      "code_size" : "43",
      "class" : "IndexerExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_DeclaringType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.IndexerExpr:get_DeclaringType ()",
      "code_size" : "30",
      "class" : "IndexerExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsInstance",
      "signature" : "bool Mono.CSharp.IndexerExpr:get_IsInstance ()",
      "code_size" : "14",
      "class" : "IndexerExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsStatic",
      "signature" : "bool Mono.CSharp.IndexerExpr:get_IsStatic ()",
      "code_size" : "11",
      "class" : "IndexerExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_KindName",
      "signature" : "string Mono.CSharp.IndexerExpr:get_KindName ()",
      "code_size" : "16",
      "class" : "IndexerExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Name",
      "signature" : "string Mono.CSharp.IndexerExpr:get_Name ()",
      "code_size" : "16",
      "class" : "IndexerExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ContainsEmitWithAwait",
      "signature" : "bool Mono.CSharp.IndexerExpr:ContainsEmitWithAwait ()",
      "code_size" : "58",
      "class" : "IndexerExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.IndexerExpr:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "275",
      "class" : "IndexerExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitAssign",
      "signature" : "void Mono.CSharp.IndexerExpr:EmitAssign (Mono.CSharp.EmitContext,Mono.CSharp.Expression,bool,bool)",
      "code_size" : "1080",
      "class" : "IndexerExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "FlowAnalysis",
      "signature" : "void Mono.CSharp.IndexerExpr:FlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "144",
      "class" : "IndexerExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSignatureForError",
      "signature" : "string Mono.CSharp.IndexerExpr:GetSignatureForError ()",
      "code_size" : "29",
      "class" : "IndexerExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MakeAssignExpression",
      "signature" : "System.Linq.Expressions.Expression Mono.CSharp.IndexerExpr:MakeAssignExpression (Mono.CSharp.BuilderContext,Mono.CSharp.Expression)",
      "code_size" : "296",
      "class" : "IndexerExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MakeExpression",
      "signature" : "System.Linq.Expressions.Expression Mono.CSharp.IndexerExpr:MakeExpression (Mono.CSharp.BuilderContext)",
      "code_size" : "157",
      "class" : "IndexerExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "OverloadResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.IndexerExpr:OverloadResolve (Mono.CSharp.ResolveContext,Mono.CSharp.Expression)",
      "code_size" : "956",
      "class" : "IndexerExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.IndexerExpr:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Expression)",
      "code_size" : "163",
      "class" : "IndexerExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetConditionalAccessReceiver",
      "signature" : "void Mono.CSharp.IndexerExpr:SetConditionalAccessReceiver ()",
      "code_size" : "20",
      "class" : "IndexerExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetTypeArguments",
      "signature" : "void Mono.CSharp.IndexerExpr:SetTypeArguments (Mono.CSharp.ResolveContext,Mono.CSharp.TypeArguments)",
      "code_size" : "85",
      "class" : "IndexerExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mono.CSharp.OverloadResolver.IBaseMembersProvider.GetBaseMembers",
      "signature" : "System.Collections.Generic.IList`1<Mono.CSharp.MemberSpec> Mono.CSharp.IndexerExpr:Mono.CSharp.OverloadResolver.IBaseMembersProvider.GetBaseMembers (Mono.CSharp.TypeSpec)",
      "code_size" : "56",
      "class" : "IndexerExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mono.CSharp.OverloadResolver.IBaseMembersProvider.GetOverrideMemberParameters",
      "signature" : "Mono.CSharp.IParametersMember Mono.CSharp.IndexerExpr:Mono.CSharp.OverloadResolver.IBaseMembersProvider.GetOverrideMemberParameters (Mono.CSharp.MemberSpec)",
      "code_size" : "387",
      "class" : "IndexerExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mono.CSharp.OverloadResolver.IBaseMembersProvider.LookupExtensionMethod",
      "signature" : "Mono.CSharp.MethodGroupExpr Mono.CSharp.IndexerExpr:Mono.CSharp.OverloadResolver.IBaseMembersProvider.LookupExtensionMethod (Mono.CSharp.ResolveContext)",
      "code_size" : "11",
      "class" : "IndexerExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.BaseThis:.ctor (Mono.CSharp.Location)",
      "code_size" : "32",
      "class" : "BaseThis",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.BaseThis:.ctor (Mono.CSharp.TypeSpec,Mono.CSharp.Location)",
      "code_size" : "69",
      "class" : "BaseThis",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Name",
      "signature" : "string Mono.CSharp.BaseThis:get_Name ()",
      "code_size" : "16",
      "class" : "BaseThis",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.BaseThis:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "94",
      "class" : "BaseThis",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.BaseThis:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "329",
      "class" : "BaseThis",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_ThisNotAvailable",
      "signature" : "void Mono.CSharp.BaseThis:Error_ThisNotAvailable (Mono.CSharp.ResolveContext)",
      "code_size" : "162",
      "class" : "BaseThis",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveBase",
      "signature" : "void Mono.CSharp.BaseThis:ResolveBase (Mono.CSharp.ResolveContext)",
      "code_size" : "82",
      "class" : "BaseThis",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.BaseThis:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "BaseThis",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.EmptyExpression:.ctor (Mono.CSharp.TypeSpec)",
      "code_size" : "98",
      "class" : "EmptyExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.EmptyExpression:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Expression)",
      "code_size" : "9",
      "class" : "EmptyExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ContainsEmitWithAwait",
      "signature" : "bool Mono.CSharp.EmptyExpression:ContainsEmitWithAwait ()",
      "code_size" : "11",
      "class" : "EmptyExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.EmptyExpression:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "47",
      "class" : "EmptyExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.EmptyExpression:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "16",
      "class" : "EmptyExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.EmptyExpression:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "9",
      "class" : "EmptyExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitBranchable",
      "signature" : "void Mono.CSharp.EmptyExpression:EmitBranchable (Mono.CSharp.EmitContext,System.Reflection.Emit.Label,bool)",
      "code_size" : "9",
      "class" : "EmptyExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitSideEffect",
      "signature" : "void Mono.CSharp.EmptyExpression:EmitSideEffect (Mono.CSharp.EmitContext)",
      "code_size" : "9",
      "class" : "EmptyExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.EmptyExpression:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "EmptyExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".cctor",
      "signature" : "void Mono.CSharp.EmptyExpression:.cctor ()",
      "code_size" : "533",
      "class" : "EmptyExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.EmptyExpression/OutAccessExpression:.ctor (Mono.CSharp.TypeSpec)",
      "code_size" : "23",
      "class" : "OutAccessExpression",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolveLValue",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.EmptyExpression/OutAccessExpression:DoResolveLValue (Mono.CSharp.ResolveContext,Mono.CSharp.Expression)",
      "code_size" : "80",
      "class" : "OutAccessExpression",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.EmptyAwaitExpression:.ctor (Mono.CSharp.TypeSpec)",
      "code_size" : "23",
      "class" : "EmptyAwaitExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ContainsEmitWithAwait",
      "signature" : "bool Mono.CSharp.EmptyAwaitExpression:ContainsEmitWithAwait ()",
      "code_size" : "14",
      "class" : "EmptyAwaitExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.EmptyExpressionStatement:.ctor ()",
      "code_size" : "64",
      "class" : "EmptyExpressionStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ContainsEmitWithAwait",
      "signature" : "bool Mono.CSharp.EmptyExpressionStatement:ContainsEmitWithAwait ()",
      "code_size" : "11",
      "class" : "EmptyExpressionStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.EmptyExpressionStatement:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "11",
      "class" : "EmptyExpressionStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitStatement",
      "signature" : "void Mono.CSharp.EmptyExpressionStatement:EmitStatement (Mono.CSharp.EmitContext)",
      "code_size" : "9",
      "class" : "EmptyExpressionStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.EmptyExpressionStatement:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "76",
      "class" : "EmptyExpressionStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.EmptyExpressionStatement:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "9",
      "class" : "EmptyExpressionStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.EmptyExpressionStatement:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "EmptyExpressionStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".cctor",
      "signature" : "void Mono.CSharp.EmptyExpressionStatement:.cctor ()",
      "code_size" : "94",
      "class" : "EmptyExpressionStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ErrorExpression:.ctor ()",
      "code_size" : "32",
      "class" : "ErrorExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.ErrorExpression:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "16",
      "class" : "ErrorExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolveLValue",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.ErrorExpression:DoResolveLValue (Mono.CSharp.ResolveContext,Mono.CSharp.Expression)",
      "code_size" : "16",
      "class" : "ErrorExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_ValueAssignment",
      "signature" : "void Mono.CSharp.ErrorExpression:Error_ValueAssignment (Mono.CSharp.ResolveContext,Mono.CSharp.Expression)",
      "code_size" : "9",
      "class" : "ErrorExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_UnexpectedKind",
      "signature" : "void Mono.CSharp.ErrorExpression:Error_UnexpectedKind (Mono.CSharp.ResolveContext,Mono.CSharp.ResolveFlags,Mono.CSharp.Location)",
      "code_size" : "9",
      "class" : "ErrorExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_ValueCannotBeConverted",
      "signature" : "void Mono.CSharp.ErrorExpression:Error_ValueCannotBeConverted (Mono.CSharp.ResolveContext,Mono.CSharp.TypeSpec,bool)",
      "code_size" : "9",
      "class" : "ErrorExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_OperatorCannotBeApplied",
      "signature" : "void Mono.CSharp.ErrorExpression:Error_OperatorCannotBeApplied (Mono.CSharp.ResolveContext,Mono.CSharp.Location,string,Mono.CSharp.TypeSpec)",
      "code_size" : "9",
      "class" : "ErrorExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.ErrorExpression:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "ErrorExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".cctor",
      "signature" : "void Mono.CSharp.ErrorExpression:.cctor ()",
      "code_size" : "52",
      "class" : "ErrorExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.UserCast:.ctor (Mono.CSharp.MethodSpec,Mono.CSharp.Expression,Mono.CSharp.Location)",
      "code_size" : "171",
      "class" : "UserCast",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Source",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.UserCast:get_Source ()",
      "code_size" : "20",
      "class" : "UserCast",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Source",
      "signature" : "void Mono.CSharp.UserCast:set_Source (Mono.CSharp.Expression)",
      "code_size" : "43",
      "class" : "UserCast",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ContainsEmitWithAwait",
      "signature" : "bool Mono.CSharp.UserCast:ContainsEmitWithAwait ()",
      "code_size" : "32",
      "class" : "UserCast",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.UserCast:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "505",
      "class" : "UserCast",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.UserCast:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "80",
      "class" : "UserCast",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.UserCast:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "192",
      "class" : "UserCast",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "FlowAnalysis",
      "signature" : "void Mono.CSharp.UserCast:FlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "42",
      "class" : "UserCast",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSignatureForError",
      "signature" : "string Mono.CSharp.UserCast:GetSignatureForError ()",
      "code_size" : "25",
      "class" : "UserCast",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MakeExpression",
      "signature" : "System.Linq.Expressions.Expression Mono.CSharp.UserCast:MakeExpression (Mono.CSharp.BuilderContext)",
      "code_size" : "165",
      "class" : "UserCast",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ComposedTypeSpecifier:.ctor (int,Mono.CSharp.Location)",
      "code_size" : "44",
      "class" : "ComposedTypeSpecifier",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsNullable",
      "signature" : "bool Mono.CSharp.ComposedTypeSpecifier:get_IsNullable ()",
      "code_size" : "31",
      "class" : "ComposedTypeSpecifier",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsPointer",
      "signature" : "bool Mono.CSharp.ComposedTypeSpecifier:get_IsPointer ()",
      "code_size" : "31",
      "class" : "ComposedTypeSpecifier",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Next",
      "signature" : "Mono.CSharp.ComposedTypeSpecifier Mono.CSharp.ComposedTypeSpecifier:get_Next ()",
      "code_size" : "20",
      "class" : "ComposedTypeSpecifier",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Next",
      "signature" : "void Mono.CSharp.ComposedTypeSpecifier:set_Next (Mono.CSharp.ComposedTypeSpecifier)",
      "code_size" : "43",
      "class" : "ComposedTypeSpecifier",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateArrayDimension",
      "signature" : "Mono.CSharp.ComposedTypeSpecifier Mono.CSharp.ComposedTypeSpecifier:CreateArrayDimension (int,Mono.CSharp.Location)",
      "code_size" : "62",
      "class" : "ComposedTypeSpecifier",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateNullable",
      "signature" : "Mono.CSharp.ComposedTypeSpecifier Mono.CSharp.ComposedTypeSpecifier:CreateNullable (Mono.CSharp.Location)",
      "code_size" : "62",
      "class" : "ComposedTypeSpecifier",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreatePointer",
      "signature" : "Mono.CSharp.ComposedTypeSpecifier Mono.CSharp.ComposedTypeSpecifier:CreatePointer (Mono.CSharp.Location)",
      "code_size" : "62",
      "class" : "ComposedTypeSpecifier",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSignatureForError",
      "signature" : "string Mono.CSharp.ComposedTypeSpecifier:GetSignatureForError ()",
      "code_size" : "157",
      "class" : "ComposedTypeSpecifier",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".cctor",
      "signature" : "void Mono.CSharp.ComposedTypeSpecifier:.cctor ()",
      "code_size" : "98",
      "class" : "ComposedTypeSpecifier",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ComposedCast:.ctor (Mono.CSharp.FullNamedExpression,Mono.CSharp.ComposedTypeSpecifier)",
      "code_size" : "150",
      "class" : "ComposedCast",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveAsType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.ComposedCast:ResolveAsType (Mono.CSharp.IMemberContext,bool)",
      "code_size" : "1108",
      "class" : "ComposedCast",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MakeArray",
      "signature" : "void Mono.CSharp.ComposedCast:MakeArray (Mono.CSharp.ModuleContainer,Mono.CSharp.ComposedTypeSpecifier)",
      "code_size" : "113",
      "class" : "ComposedCast",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSignatureForError",
      "signature" : "string Mono.CSharp.ComposedCast:GetSignatureForError ()",
      "code_size" : "69",
      "class" : "ComposedCast",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.ComposedCast:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "ComposedCast",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.FixedBufferPtr:.ctor (Mono.CSharp.Expression,Mono.CSharp.TypeSpec,Mono.CSharp.Location)",
      "code_size" : "90",
      "class" : "FixedBufferPtr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ContainsEmitWithAwait",
      "signature" : "bool Mono.CSharp.FixedBufferPtr:ContainsEmitWithAwait ()",
      "code_size" : "27",
      "class" : "FixedBufferPtr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.FixedBufferPtr:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "25",
      "class" : "FixedBufferPtr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.FixedBufferPtr:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "42",
      "class" : "FixedBufferPtr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.FixedBufferPtr:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "82",
      "class" : "FixedBufferPtr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ArrayPtr:.ctor (Mono.CSharp.Expression,Mono.CSharp.TypeSpec,Mono.CSharp.Location)",
      "code_size" : "38",
      "class" : "ArrayPtr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.ArrayPtr:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "230",
      "class" : "ArrayPtr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ArrayIndexCast:.ctor (Mono.CSharp.Expression,Mono.CSharp.TypeSpec)",
      "code_size" : "88",
      "class" : "ArrayIndexCast",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.ArrayIndexCast:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "113",
      "class" : "ArrayIndexCast",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.ArrayIndexCast:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "612",
      "class" : "ArrayIndexCast",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.StackAlloc:.ctor (Mono.CSharp.Expression,Mono.CSharp.Expression,Mono.CSharp.Location)",
      "code_size" : "90",
      "class" : "StackAlloc",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_TypeExpression",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.StackAlloc:get_TypeExpression ()",
      "code_size" : "20",
      "class" : "StackAlloc",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_CountExpression",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.StackAlloc:get_CountExpression ()",
      "code_size" : "20",
      "class" : "StackAlloc",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ContainsEmitWithAwait",
      "signature" : "bool Mono.CSharp.StackAlloc:ContainsEmitWithAwait ()",
      "code_size" : "11",
      "class" : "StackAlloc",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.StackAlloc:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "47",
      "class" : "StackAlloc",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.StackAlloc:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "624",
      "class" : "StackAlloc",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.StackAlloc:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "445",
      "class" : "StackAlloc",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.StackAlloc:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Expression)",
      "code_size" : "203",
      "class" : "StackAlloc",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.StackAlloc:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "StackAlloc",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ElementInitializer:.ctor (string,Mono.CSharp.Expression,Mono.CSharp.Location)",
      "code_size" : "72",
      "class" : "ElementInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsDictionaryInitializer",
      "signature" : "bool Mono.CSharp.ElementInitializer:get_IsDictionaryInitializer ()",
      "code_size" : "31",
      "class" : "ElementInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.ElementInitializer:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Expression)",
      "code_size" : "155",
      "class" : "ElementInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.ElementInitializer:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "721",
      "class" : "ElementInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.ElementInitializer:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "381",
      "class" : "ElementInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitStatement",
      "signature" : "void Mono.CSharp.ElementInitializer:EmitStatement (Mono.CSharp.EmitContext)",
      "code_size" : "130",
      "class" : "ElementInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveElement",
      "signature" : "bool Mono.CSharp.ElementInitializer:ResolveElement (Mono.CSharp.ResolveContext)",
      "code_size" : "1029",
      "class" : "ElementInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.CollectionElementInitializer:.ctor (Mono.CSharp.Expression)",
      "code_size" : "181",
      "class" : "CollectionElementInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.CollectionElementInitializer:.ctor (System.Collections.Generic.List`1<Mono.CSharp.Expression>,Mono.CSharp.Location)",
      "code_size" : "288",
      "class" : "CollectionElementInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.CollectionElementInitializer:.ctor (Mono.CSharp.Location)",
      "code_size" : "42",
      "class" : "CollectionElementInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.CollectionElementInitializer:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "733",
      "class" : "CollectionElementInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.CollectionElementInitializer:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Expression)",
      "code_size" : "163",
      "class" : "CollectionElementInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.CollectionElementInitializer:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "129",
      "class" : "CollectionElementInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.CollectionElementInitializer/ElementInitializerArgument:.ctor (Mono.CSharp.Expression)",
      "code_size" : "43",
      "class" : "ElementInitializerArgument",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.CollectionElementInitializer/AddMemberAccess:.ctor (Mono.CSharp.Expression,Mono.CSharp.Location)",
      "code_size" : "49",
      "class" : "AddMemberAccess",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_TypeDoesNotContainDefinition",
      "signature" : "void Mono.CSharp.CollectionElementInitializer/AddMemberAccess:Error_TypeDoesNotContainDefinition (Mono.CSharp.ResolveContext,Mono.CSharp.TypeSpec,string)",
      "code_size" : "123",
      "class" : "AddMemberAccess",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.DictionaryElementInitializer:.ctor (Mono.CSharp.Arguments,Mono.CSharp.Expression,Mono.CSharp.Location)",
      "code_size" : "72",
      "class" : "DictionaryElementInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.DictionaryElementInitializer:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "77",
      "class" : "DictionaryElementInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveElement",
      "signature" : "bool Mono.CSharp.DictionaryElementInitializer:ResolveElement (Mono.CSharp.ResolveContext)",
      "code_size" : "520",
      "class" : "DictionaryElementInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.CollectionOrObjectInitializers:.ctor (Mono.CSharp.Location)",
      "code_size" : "71",
      "class" : "CollectionOrObjectInitializers",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.CollectionOrObjectInitializers:.ctor (System.Collections.Generic.IList`1<Mono.CSharp.Expression>,Mono.CSharp.Location)",
      "code_size" : "63",
      "class" : "CollectionOrObjectInitializers",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Initializers",
      "signature" : "System.Collections.Generic.IList`1<Mono.CSharp.Expression> Mono.CSharp.CollectionOrObjectInitializers:get_Initializers ()",
      "code_size" : "20",
      "class" : "CollectionOrObjectInitializers",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsEmpty",
      "signature" : "bool Mono.CSharp.CollectionOrObjectInitializers:get_IsEmpty ()",
      "code_size" : "49",
      "class" : "CollectionOrObjectInitializers",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsCollectionInitializer",
      "signature" : "bool Mono.CSharp.CollectionOrObjectInitializers:get_IsCollectionInitializer ()",
      "code_size" : "20",
      "class" : "CollectionOrObjectInitializers",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.CollectionOrObjectInitializers:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Expression)",
      "code_size" : "379",
      "class" : "CollectionOrObjectInitializers",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ContainsEmitWithAwait",
      "signature" : "bool Mono.CSharp.CollectionOrObjectInitializers:ContainsEmitWithAwait ()",
      "code_size" : "212",
      "class" : "CollectionOrObjectInitializers",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.CollectionOrObjectInitializers:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "25",
      "class" : "CollectionOrObjectInitializers",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.CollectionOrObjectInitializers:CreateExpressionTree (Mono.CSharp.ResolveContext,bool)",
      "code_size" : "536",
      "class" : "CollectionOrObjectInitializers",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.CollectionOrObjectInitializers:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "1563",
      "class" : "CollectionOrObjectInitializers",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.CollectionOrObjectInitializers:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "31",
      "class" : "CollectionOrObjectInitializers",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitStatement",
      "signature" : "void Mono.CSharp.CollectionOrObjectInitializers:EmitStatement (Mono.CSharp.EmitContext)",
      "code_size" : "283",
      "class" : "CollectionOrObjectInitializers",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "FlowAnalysis",
      "signature" : "void Mono.CSharp.CollectionOrObjectInitializers:FlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "197",
      "class" : "CollectionOrObjectInitializers",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.NewInitialize:.ctor (Mono.CSharp.FullNamedExpression,Mono.CSharp.Arguments,Mono.CSharp.CollectionOrObjectInitializers,Mono.CSharp.Location)",
      "code_size" : "70",
      "class" : "NewInitialize",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Initializers",
      "signature" : "Mono.CSharp.CollectionOrObjectInitializers Mono.CSharp.NewInitialize:get_Initializers ()",
      "code_size" : "20",
      "class" : "NewInitialize",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.NewInitialize:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Expression)",
      "code_size" : "186",
      "class" : "NewInitialize",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ContainsEmitWithAwait",
      "signature" : "bool Mono.CSharp.NewInitialize:ContainsEmitWithAwait ()",
      "code_size" : "59",
      "class" : "NewInitialize",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.NewInitialize:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "372",
      "class" : "NewInitialize",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.NewInitialize:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "326",
      "class" : "NewInitialize",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.NewInitialize:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "136",
      "class" : "NewInitialize",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "bool Mono.CSharp.NewInitialize:Emit (Mono.CSharp.EmitContext,Mono.CSharp.IMemoryLocation)",
      "code_size" : "843",
      "class" : "NewInitialize",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CanEmitOptimizedLocalTarget",
      "signature" : "bool Mono.CSharp.NewInitialize:CanEmitOptimizedLocalTarget (Mono.CSharp.EmitContext)",
      "code_size" : "166",
      "class" : "NewInitialize",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitAddressOf",
      "signature" : "Mono.CSharp.IMemoryLocation Mono.CSharp.NewInitialize:EmitAddressOf (Mono.CSharp.EmitContext,Mono.CSharp.AddressOp)",
      "code_size" : "106",
      "class" : "NewInitialize",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "FlowAnalysis",
      "signature" : "void Mono.CSharp.NewInitialize:FlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "48",
      "class" : "NewInitialize",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.NewInitialize:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "NewInitialize",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.NewInitialize/InitializerTargetExpression:.ctor (Mono.CSharp.NewInitialize)",
      "code_size" : "104",
      "class" : "InitializerTargetExpression",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "ContainsEmitWithAwait",
      "signature" : "bool Mono.CSharp.NewInitialize/InitializerTargetExpression:ContainsEmitWithAwait ()",
      "code_size" : "11",
      "class" : "InitializerTargetExpression",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.NewInitialize/InitializerTargetExpression:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "47",
      "class" : "InitializerTargetExpression",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.NewInitialize/InitializerTargetExpression:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "16",
      "class" : "InitializerTargetExpression",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolveLValue",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.NewInitialize/InitializerTargetExpression:DoResolveLValue (Mono.CSharp.ResolveContext,Mono.CSharp.Expression)",
      "code_size" : "16",
      "class" : "InitializerTargetExpression",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.NewInitialize/InitializerTargetExpression:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "108",
      "class" : "InitializerTargetExpression",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitToField",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.NewInitialize/InitializerTargetExpression:EmitToField (Mono.CSharp.EmitContext)",
      "code_size" : "81",
      "class" : "InitializerTargetExpression",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddressOf",
      "signature" : "void Mono.CSharp.NewInitialize/InitializerTargetExpression:AddressOf (Mono.CSharp.EmitContext,Mono.CSharp.AddressOp)",
      "code_size" : "60",
      "class" : "InitializerTargetExpression",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.NewAnonymousType:.ctor (System.Collections.Generic.List`1<Mono.CSharp.AnonymousTypeParameter>,Mono.CSharp.TypeContainer,Mono.CSharp.Location)",
      "code_size" : "95",
      "class" : "NewAnonymousType",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Parameters",
      "signature" : "System.Collections.Generic.List`1<Mono.CSharp.AnonymousTypeParameter> Mono.CSharp.NewAnonymousType:get_Parameters ()",
      "code_size" : "20",
      "class" : "NewAnonymousType",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.NewAnonymousType:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Expression)",
      "code_size" : "395",
      "class" : "NewAnonymousType",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateAnonymousType",
      "signature" : "Mono.CSharp.AnonymousTypeClass Mono.CSharp.NewAnonymousType:CreateAnonymousType (Mono.CSharp.ResolveContext,System.Collections.Generic.IList`1<Mono.CSharp.AnonymousTypeParameter>)",
      "code_size" : "305",
      "class" : "NewAnonymousType",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.NewAnonymousType:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "1268",
      "class" : "NewAnonymousType",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.NewAnonymousType:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "1016",
      "class" : "NewAnonymousType",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.NewAnonymousType:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "NewAnonymousType",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".cctor",
      "signature" : "void Mono.CSharp.NewAnonymousType:.cctor ()",
      "code_size" : "58",
      "class" : "NewAnonymousType",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.AnonymousTypeParameter:.ctor (Mono.CSharp.Expression,string,Mono.CSharp.Location)",
      "code_size" : "90",
      "class" : "AnonymousTypeParameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.AnonymousTypeParameter:.ctor (Mono.CSharp.Parameter)",
      "code_size" : "186",
      "class" : "AnonymousTypeParameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Equals",
      "signature" : "bool Mono.CSharp.AnonymousTypeParameter:Equals (object)",
      "code_size" : "109",
      "class" : "AnonymousTypeParameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetHashCode",
      "signature" : "int Mono.CSharp.AnonymousTypeParameter:GetHashCode ()",
      "code_size" : "29",
      "class" : "AnonymousTypeParameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.AnonymousTypeParameter:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "272",
      "class" : "AnonymousTypeParameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_InvalidInitializer",
      "signature" : "void Mono.CSharp.AnonymousTypeParameter:Error_InvalidInitializer (Mono.CSharp.ResolveContext,string)",
      "code_size" : "92",
      "class" : "AnonymousTypeParameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.CatchFilterExpression:.ctor (Mono.CSharp.Expression,Mono.CSharp.Location)",
      "code_size" : "43",
      "class" : "CatchFilterExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.InterpolatedString:.ctor (Mono.CSharp.StringLiteral,System.Collections.Generic.List`1<Mono.CSharp.Expression>,Mono.CSharp.StringLiteral)",
      "code_size" : "136",
      "class" : "InterpolatedString",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.InterpolatedString:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Expression)",
      "code_size" : "360",
      "class" : "InterpolatedString",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ConvertTo",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.InterpolatedString:ConvertTo (Mono.CSharp.ResolveContext,Mono.CSharp.TypeSpec)",
      "code_size" : "365",
      "class" : "InterpolatedString",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ContainsEmitWithAwait",
      "signature" : "bool Mono.CSharp.InterpolatedString:ContainsEmitWithAwait ()",
      "code_size" : "204",
      "class" : "InterpolatedString",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.InterpolatedString:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "301",
      "class" : "InterpolatedString",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.InterpolatedString:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "1126",
      "class" : "InterpolatedString",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.InterpolatedString:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "416",
      "class" : "InterpolatedString",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "FlowAnalysis",
      "signature" : "void Mono.CSharp.InterpolatedString:FlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "184",
      "class" : "InterpolatedString",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveBestFormatOverload",
      "signature" : "Mono.CSharp.MethodSpec Mono.CSharp.InterpolatedString:ResolveBestFormatOverload (Mono.CSharp.ResolveContext)",
      "code_size" : "170",
      "class" : "InterpolatedString",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.InterpolatedStringInsert:.ctor (Mono.CSharp.Expression)",
      "code_size" : "23",
      "class" : "InterpolatedStringInsert",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Alignment",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.InterpolatedStringInsert:get_Alignment ()",
      "code_size" : "20",
      "class" : "InterpolatedStringInsert",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Alignment",
      "signature" : "void Mono.CSharp.InterpolatedStringInsert:set_Alignment (Mono.CSharp.Expression)",
      "code_size" : "43",
      "class" : "InterpolatedStringInsert",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Format",
      "signature" : "string Mono.CSharp.InterpolatedStringInsert:get_Format ()",
      "code_size" : "20",
      "class" : "InterpolatedStringInsert",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Format",
      "signature" : "void Mono.CSharp.InterpolatedStringInsert:set_Format (string)",
      "code_size" : "43",
      "class" : "InterpolatedStringInsert",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.InterpolatedStringInsert:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Expression)",
      "code_size" : "229",
      "class" : "InterpolatedStringInsert",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.InterpolatedStringInsert:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "100",
      "class" : "InterpolatedStringInsert",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "FlowAnalysis",
      "signature" : "void Mono.CSharp.InterpolatedStringInsert:FlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "42",
      "class" : "InterpolatedStringInsert",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveAligment",
      "signature" : "System.Nullable`1<int> Mono.CSharp.InterpolatedStringInsert:ResolveAligment (Mono.CSharp.ResolveContext)",
      "code_size" : "309",
      "class" : "InterpolatedStringInsert",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.FieldDeclarator:.ctor (Mono.CSharp.SimpleMemberName,Mono.CSharp.Expression)",
      "code_size" : "74",
      "class" : "FieldDeclarator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Name",
      "signature" : "Mono.CSharp.SimpleMemberName Mono.CSharp.FieldDeclarator:get_Name ()",
      "code_size" : "20",
      "class" : "FieldDeclarator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Name",
      "signature" : "void Mono.CSharp.FieldDeclarator:set_Name (Mono.CSharp.SimpleMemberName)",
      "code_size" : "43",
      "class" : "FieldDeclarator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Initializer",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.FieldDeclarator:get_Initializer ()",
      "code_size" : "20",
      "class" : "FieldDeclarator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Initializer",
      "signature" : "void Mono.CSharp.FieldDeclarator:set_Initializer (Mono.CSharp.Expression)",
      "code_size" : "43",
      "class" : "FieldDeclarator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetFieldTypeExpression",
      "signature" : "Mono.CSharp.FullNamedExpression Mono.CSharp.FieldDeclarator:GetFieldTypeExpression (Mono.CSharp.FieldBase)",
      "code_size" : "97",
      "class" : "FieldDeclarator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.FieldBase:.ctor (Mono.CSharp.TypeDefinition,Mono.CSharp.FullNamedExpression,Mono.CSharp.Modifiers,Mono.CSharp.Modifiers,Mono.CSharp.MemberName,Mono.CSharp.Attributes)",
      "code_size" : "151",
      "class" : "FieldBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_AttributeTargets",
      "signature" : "System.AttributeTargets Mono.CSharp.FieldBase:get_AttributeTargets ()",
      "code_size" : "14",
      "class" : "FieldBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Declarators",
      "signature" : "System.Collections.Generic.List`1<Mono.CSharp.FieldDeclarator> Mono.CSharp.FieldBase:get_Declarators ()",
      "code_size" : "20",
      "class" : "FieldBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Initializer",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.FieldBase:get_Initializer ()",
      "code_size" : "20",
      "class" : "FieldBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Initializer",
      "signature" : "void Mono.CSharp.FieldBase:set_Initializer (Mono.CSharp.Expression)",
      "code_size" : "43",
      "class" : "FieldBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Name",
      "signature" : "string Mono.CSharp.FieldBase:get_Name ()",
      "code_size" : "24",
      "class" : "FieldBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Spec",
      "signature" : "Mono.CSharp.FieldSpec Mono.CSharp.FieldBase:get_Spec ()",
      "code_size" : "20",
      "class" : "FieldBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ValidAttributeTargets",
      "signature" : "string[] Mono.CSharp.FieldBase:get_ValidAttributeTargets ()",
      "code_size" : "19",
      "class" : "FieldBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddDeclarator",
      "signature" : "void Mono.CSharp.FieldBase:AddDeclarator (Mono.CSharp.FieldDeclarator)",
      "code_size" : "158",
      "class" : "FieldBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ApplyAttributeBuilder",
      "signature" : "void Mono.CSharp.FieldBase:ApplyAttributeBuilder (Mono.CSharp.Attribute,Mono.CSharp.MethodSpec,byte[],Mono.CSharp.PredefinedAttributes)",
      "code_size" : "652",
      "class" : "FieldBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetCustomAttribute",
      "signature" : "void Mono.CSharp.FieldBase:SetCustomAttribute (Mono.CSharp.MethodSpec,byte[])",
      "code_size" : "212",
      "class" : "FieldBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CheckBase",
      "signature" : "bool Mono.CSharp.FieldBase:CheckBase ()",
      "code_size" : "553",
      "class" : "FieldBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ConvertInitializer",
      "signature" : "Mono.CSharp.Constant Mono.CSharp.FieldBase:ConvertInitializer (Mono.CSharp.ResolveContext,Mono.CSharp.Constant)",
      "code_size" : "42",
      "class" : "FieldBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoMemberTypeDependentChecks",
      "signature" : "void Mono.CSharp.FieldBase:DoMemberTypeDependentChecks ()",
      "code_size" : "199",
      "class" : "FieldBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_DocCommentHeader",
      "signature" : "string Mono.CSharp.FieldBase:get_DocCommentHeader ()",
      "code_size" : "16",
      "class" : "FieldBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.FieldBase:Emit ()",
      "code_size" : "617",
      "class" : "FieldBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_VariableOfStaticClass",
      "signature" : "void Mono.CSharp.FieldBase:Error_VariableOfStaticClass (Mono.CSharp.Location,string,Mono.CSharp.TypeSpec,Mono.CSharp.Report)",
      "code_size" : "86",
      "class" : "FieldBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "VerifyClsCompliance",
      "signature" : "bool Mono.CSharp.FieldBase:VerifyClsCompliance ()",
      "code_size" : "211",
      "class" : "FieldBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".cctor",
      "signature" : "void Mono.CSharp.FieldBase:.cctor ()",
      "code_size" : "68",
      "class" : "FieldBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.FieldSpec:.ctor (Mono.CSharp.TypeSpec,Mono.CSharp.IMemberDefinition,Mono.CSharp.TypeSpec,System.Reflection.FieldInfo,Mono.CSharp.Modifiers)",
      "code_size" : "116",
      "class" : "FieldSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsReadOnly",
      "signature" : "bool Mono.CSharp.FieldSpec:get_IsReadOnly ()",
      "code_size" : "45",
      "class" : "FieldSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_MemberType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.FieldSpec:get_MemberType ()",
      "code_size" : "20",
      "class" : "FieldSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetMetaInfo",
      "signature" : "System.Reflection.FieldInfo Mono.CSharp.FieldSpec:GetMetaInfo ()",
      "code_size" : "297",
      "class" : "FieldSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "InflateMember",
      "signature" : "Mono.CSharp.MemberSpec Mono.CSharp.FieldSpec:InflateMember (Mono.CSharp.TypeParameterInflator)",
      "code_size" : "207",
      "class" : "FieldSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mutate",
      "signature" : "Mono.CSharp.FieldSpec Mono.CSharp.FieldSpec:Mutate (Mono.CSharp.TypeParameterMutator)",
      "code_size" : "257",
      "class" : "FieldSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveMissingDependencies",
      "signature" : "System.Collections.Generic.List`1<Mono.CSharp.MissingTypeSpecReference> Mono.CSharp.FieldSpec:ResolveMissingDependencies (Mono.CSharp.MemberSpec)",
      "code_size" : "29",
      "class" : "FieldSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.FixedField:.ctor (Mono.CSharp.TypeDefinition,Mono.CSharp.FullNamedExpression,Mono.CSharp.Modifiers,Mono.CSharp.MemberName,Mono.CSharp.Attributes)",
      "code_size" : "72",
      "class" : "FixedField",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_CharSetValue",
      "signature" : "System.Nullable`1<System.Runtime.InteropServices.CharSet> Mono.CSharp.FixedField:get_CharSetValue ()",
      "code_size" : "34",
      "class" : "FixedField",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_CharSetValue",
      "signature" : "void Mono.CSharp.FixedField:set_CharSetValue (System.Nullable`1<System.Runtime.InteropServices.CharSet>)",
      "code_size" : "35",
      "class" : "FixedField",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ConvertInitializer",
      "signature" : "Mono.CSharp.Constant Mono.CSharp.FixedField:ConvertInitializer (Mono.CSharp.ResolveContext,Mono.CSharp.Constant)",
      "code_size" : "62",
      "class" : "FixedField",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Define",
      "signature" : "bool Mono.CSharp.FixedField:Define ()",
      "code_size" : "1813",
      "class" : "FixedField",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoMemberTypeIndependentChecks",
      "signature" : "void Mono.CSharp.FixedField:DoMemberTypeIndependentChecks ()",
      "code_size" : "192",
      "class" : "FixedField",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.FixedField:Emit ()",
      "code_size" : "393",
      "class" : "FixedField",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitFieldSize",
      "signature" : "void Mono.CSharp.FixedField:EmitFieldSize (int)",
      "code_size" : "1890",
      "class" : "FixedField",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.FixedFieldSpec:.ctor (Mono.CSharp.ModuleContainer,Mono.CSharp.TypeSpec,Mono.CSharp.IMemberDefinition,System.Reflection.FieldInfo,Mono.CSharp.FieldSpec,Mono.CSharp.Modifiers)",
      "code_size" : "117",
      "class" : "FixedFieldSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Element",
      "signature" : "Mono.CSharp.FieldSpec Mono.CSharp.FixedFieldSpec:get_Element ()",
      "code_size" : "20",
      "class" : "FixedFieldSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ElementType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.FixedFieldSpec:get_ElementType ()",
      "code_size" : "30",
      "class" : "FixedFieldSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Field:.ctor (Mono.CSharp.TypeDefinition,Mono.CSharp.FullNamedExpression,Mono.CSharp.Modifiers,Mono.CSharp.MemberName,Mono.CSharp.Attributes)",
      "code_size" : "72",
      "class" : "Field",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CanBeVolatile",
      "signature" : "bool Mono.CSharp.Field:CanBeVolatile ()",
      "code_size" : "245",
      "class" : "Field",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "void Mono.CSharp.Field:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "Field",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Define",
      "signature" : "bool Mono.CSharp.Field:Define ()",
      "code_size" : "1237",
      "class" : "Field",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoMemberTypeDependentChecks",
      "signature" : "void Mono.CSharp.Field:DoMemberTypeDependentChecks ()",
      "code_size" : "290",
      "class" : "Field",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "VerifyClsCompliance",
      "signature" : "bool Mono.CSharp.Field:VerifyClsCompliance ()",
      "code_size" : "149",
      "class" : "Field",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.PrimaryConstructorField:.ctor (Mono.CSharp.TypeDefinition,Mono.CSharp.Parameter)",
      "code_size" : "182",
      "class" : "PrimaryConstructorField",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSignatureForError",
      "signature" : "string Mono.CSharp.PrimaryConstructorField:GetSignatureForError ()",
      "code_size" : "24",
      "class" : "PrimaryConstructorField",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.PrimaryConstructorField/TypeExpressionFromParameter:.ctor (Mono.CSharp.Parameter)",
      "code_size" : "77",
      "class" : "TypeExpressionFromParameter",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveAsType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.PrimaryConstructorField/TypeExpressionFromParameter:ResolveAsType (Mono.CSharp.IMemberContext,bool)",
      "code_size" : "30",
      "class" : "TypeExpressionFromParameter",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".cctor",
      "signature" : "void Mono.CSharp.TypeInfo:.cctor ()",
      "code_size" : "62",
      "class" : "TypeInfo",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.TypeInfo:.ctor (int)",
      "code_size" : "28",
      "class" : "TypeInfo",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.TypeInfo:.ctor (Mono.CSharp.TypeInfo/StructInfo,int)",
      "code_size" : "108",
      "class" : "TypeInfo",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Reset",
      "signature" : "void Mono.CSharp.TypeInfo:Reset ()",
      "code_size" : "52",
      "class" : "TypeInfo",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetFieldIndex",
      "signature" : "int Mono.CSharp.TypeInfo:GetFieldIndex (string)",
      "code_size" : "58",
      "class" : "TypeInfo",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetStructField",
      "signature" : "Mono.CSharp.TypeInfo Mono.CSharp.TypeInfo:GetStructField (string)",
      "code_size" : "58",
      "class" : "TypeInfo",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetTypeInfo",
      "signature" : "Mono.CSharp.TypeInfo Mono.CSharp.TypeInfo:GetTypeInfo (Mono.CSharp.TypeSpec,Mono.CSharp.IMemberContext)",
      "code_size" : "357",
      "class" : "TypeInfo",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsFullyInitialized",
      "signature" : "bool Mono.CSharp.TypeInfo:IsFullyInitialized (Mono.CSharp.FlowAnalysisContext,Mono.CSharp.VariableInfo,Mono.CSharp.Location)",
      "code_size" : "561",
      "class" : "TypeInfo",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ToString",
      "signature" : "string Mono.CSharp.TypeInfo:ToString ()",
      "code_size" : "176",
      "class" : "TypeInfo",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.TypeInfo/StructInfo:.ctor (Mono.CSharp.TypeSpec,Mono.CSharp.IMemberContext)",
      "code_size" : "1079",
      "class" : "StructInfo",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Count",
      "signature" : "int Mono.CSharp.TypeInfo/StructInfo:get_Count ()",
      "code_size" : "30",
      "class" : "StructInfo",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Fields",
      "signature" : "System.Collections.Generic.List`1<Mono.CSharp.FieldSpec> Mono.CSharp.TypeInfo/StructInfo:get_Fields ()",
      "code_size" : "20",
      "class" : "StructInfo",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Item",
      "signature" : "int Mono.CSharp.TypeInfo/StructInfo:get_Item (string)",
      "code_size" : "69",
      "class" : "StructInfo",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetStructField",
      "signature" : "Mono.CSharp.TypeInfo Mono.CSharp.TypeInfo/StructInfo:GetStructField (string)",
      "code_size" : "70",
      "class" : "StructInfo",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetStructInfo",
      "signature" : "Mono.CSharp.TypeInfo/StructInfo Mono.CSharp.TypeInfo/StructInfo:GetStructInfo (Mono.CSharp.TypeSpec,Mono.CSharp.IMemberContext)",
      "code_size" : "170",
      "class" : "StructInfo",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.VariableInfo:.ctor (string,Mono.CSharp.TypeSpec,int,Mono.CSharp.IMemberContext)",
      "code_size" : "126",
      "class" : "VariableInfo",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.VariableInfo:.ctor (Mono.CSharp.VariableInfo,Mono.CSharp.TypeInfo)",
      "code_size" : "124",
      "class" : "VariableInfo",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Initialize",
      "signature" : "void Mono.CSharp.VariableInfo:Initialize ()",
      "code_size" : "340",
      "class" : "VariableInfo",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Create",
      "signature" : "Mono.CSharp.VariableInfo Mono.CSharp.VariableInfo:Create (Mono.CSharp.BlockContext,Mono.CSharp.LocalVariable)",
      "code_size" : "135",
      "class" : "VariableInfo",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Create",
      "signature" : "Mono.CSharp.VariableInfo Mono.CSharp.VariableInfo:Create (Mono.CSharp.BlockContext,Mono.CSharp.Parameter)",
      "code_size" : "142",
      "class" : "VariableInfo",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsAssigned",
      "signature" : "bool Mono.CSharp.VariableInfo:IsAssigned (Mono.CSharp.DefiniteAssignmentBitSet)",
      "code_size" : "300",
      "class" : "VariableInfo",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsEverAssigned",
      "signature" : "bool Mono.CSharp.VariableInfo:get_IsEverAssigned ()",
      "code_size" : "20",
      "class" : "VariableInfo",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_IsEverAssigned",
      "signature" : "void Mono.CSharp.VariableInfo:set_IsEverAssigned (bool)",
      "code_size" : "31",
      "class" : "VariableInfo",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsFullyInitialized",
      "signature" : "bool Mono.CSharp.VariableInfo:IsFullyInitialized (Mono.CSharp.FlowAnalysisContext,Mono.CSharp.Location)",
      "code_size" : "51",
      "class" : "VariableInfo",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsStructFieldAssigned",
      "signature" : "bool Mono.CSharp.VariableInfo:IsStructFieldAssigned (Mono.CSharp.DefiniteAssignmentBitSet,string)",
      "code_size" : "93",
      "class" : "VariableInfo",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetAssigned",
      "signature" : "void Mono.CSharp.VariableInfo:SetAssigned (Mono.CSharp.DefiniteAssignmentBitSet,bool)",
      "code_size" : "99",
      "class" : "VariableInfo",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetStructFieldAssigned",
      "signature" : "void Mono.CSharp.VariableInfo:SetStructFieldAssigned (Mono.CSharp.DefiniteAssignmentBitSet,string)",
      "code_size" : "261",
      "class" : "VariableInfo",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetStructFieldInfo",
      "signature" : "Mono.CSharp.VariableInfo Mono.CSharp.VariableInfo:GetStructFieldInfo (string)",
      "code_size" : "101",
      "class" : "VariableInfo",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ToString",
      "signature" : "string Mono.CSharp.VariableInfo:ToString ()",
      "code_size" : "272",
      "class" : "VariableInfo",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Reachability:.ctor (bool)",
      "code_size" : "30",
      "class" : "Reachability",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsUnreachable",
      "signature" : "bool Mono.CSharp.Reachability:get_IsUnreachable ()",
      "code_size" : "19",
      "class" : "Reachability",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateUnreachable",
      "signature" : "Mono.CSharp.Reachability Mono.CSharp.Reachability:CreateUnreachable ()",
      "code_size" : "33",
      "class" : "Reachability",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "op_BitwiseAnd",
      "signature" : "Mono.CSharp.Reachability Mono.CSharp.Reachability:op_BitwiseAnd (Mono.CSharp.Reachability,Mono.CSharp.Reachability)",
      "code_size" : "71",
      "class" : "Reachability",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "op_BitwiseOr",
      "signature" : "Mono.CSharp.Reachability Mono.CSharp.Reachability:op_BitwiseOr (Mono.CSharp.Reachability,Mono.CSharp.Reachability)",
      "code_size" : "53",
      "class" : "Reachability",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.DefiniteAssignmentBitSet:.ctor (int)",
      "code_size" : "90",
      "class" : "DefiniteAssignmentBitSet",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.DefiniteAssignmentBitSet:.ctor (Mono.CSharp.DefiniteAssignmentBitSet)",
      "code_size" : "97",
      "class" : "DefiniteAssignmentBitSet",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "op_BitwiseAnd",
      "signature" : "Mono.CSharp.DefiniteAssignmentBitSet Mono.CSharp.DefiniteAssignmentBitSet:op_BitwiseAnd (Mono.CSharp.DefiniteAssignmentBitSet,Mono.CSharp.DefiniteAssignmentBitSet)",
      "code_size" : "308",
      "class" : "DefiniteAssignmentBitSet",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "op_BitwiseOr",
      "signature" : "Mono.CSharp.DefiniteAssignmentBitSet Mono.CSharp.DefiniteAssignmentBitSet:op_BitwiseOr (Mono.CSharp.DefiniteAssignmentBitSet,Mono.CSharp.DefiniteAssignmentBitSet)",
      "code_size" : "316",
      "class" : "DefiniteAssignmentBitSet",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "And",
      "signature" : "Mono.CSharp.DefiniteAssignmentBitSet Mono.CSharp.DefiniteAssignmentBitSet:And (System.Collections.Generic.List`1<Mono.CSharp.DefiniteAssignmentBitSet>)",
      "code_size" : "177",
      "class" : "DefiniteAssignmentBitSet",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_CopyOnWrite",
      "signature" : "bool Mono.CSharp.DefiniteAssignmentBitSet:get_CopyOnWrite ()",
      "code_size" : "44",
      "class" : "DefiniteAssignmentBitSet",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Length",
      "signature" : "int Mono.CSharp.DefiniteAssignmentBitSet:get_Length ()",
      "code_size" : "55",
      "class" : "DefiniteAssignmentBitSet",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Set",
      "signature" : "void Mono.CSharp.DefiniteAssignmentBitSet:Set (int)",
      "code_size" : "96",
      "class" : "DefiniteAssignmentBitSet",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Set",
      "signature" : "void Mono.CSharp.DefiniteAssignmentBitSet:Set (int,int)",
      "code_size" : "145",
      "class" : "DefiniteAssignmentBitSet",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Item",
      "signature" : "bool Mono.CSharp.DefiniteAssignmentBitSet:get_Item (int)",
      "code_size" : "23",
      "class" : "DefiniteAssignmentBitSet",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ToString",
      "signature" : "string Mono.CSharp.DefiniteAssignmentBitSet:ToString ()",
      "code_size" : "181",
      "class" : "DefiniteAssignmentBitSet",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Clone",
      "signature" : "void Mono.CSharp.DefiniteAssignmentBitSet:Clone ()",
      "code_size" : "160",
      "class" : "DefiniteAssignmentBitSet",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetBit",
      "signature" : "bool Mono.CSharp.DefiniteAssignmentBitSet:GetBit (int)",
      "code_size" : "193",
      "class" : "DefiniteAssignmentBitSet",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetBit",
      "signature" : "void Mono.CSharp.DefiniteAssignmentBitSet:SetBit (int)",
      "code_size" : "144",
      "class" : "DefiniteAssignmentBitSet",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsEqual",
      "signature" : "bool Mono.CSharp.DefiniteAssignmentBitSet:IsEqual (Mono.CSharp.DefiniteAssignmentBitSet,Mono.CSharp.DefiniteAssignmentBitSet)",
      "code_size" : "198",
      "class" : "DefiniteAssignmentBitSet",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsIncluded",
      "signature" : "bool Mono.CSharp.DefiniteAssignmentBitSet:IsIncluded (Mono.CSharp.DefiniteAssignmentBitSet,Mono.CSharp.DefiniteAssignmentBitSet)",
      "code_size" : "226",
      "class" : "DefiniteAssignmentBitSet",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".cctor",
      "signature" : "void Mono.CSharp.DefiniteAssignmentBitSet:.cctor ()",
      "code_size" : "54",
      "class" : "DefiniteAssignmentBitSet",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.VarianceDecl:.ctor (Mono.CSharp.Variance,Mono.CSharp.Location)",
      "code_size" : "44",
      "class" : "VarianceDecl",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Variance",
      "signature" : "Mono.CSharp.Variance Mono.CSharp.VarianceDecl:get_Variance ()",
      "code_size" : "20",
      "class" : "VarianceDecl",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Variance",
      "signature" : "void Mono.CSharp.VarianceDecl:set_Variance (Mono.CSharp.Variance)",
      "code_size" : "28",
      "class" : "VarianceDecl",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Location",
      "signature" : "Mono.CSharp.Location Mono.CSharp.VarianceDecl:get_Location ()",
      "code_size" : "30",
      "class" : "VarianceDecl",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Location",
      "signature" : "void Mono.CSharp.VarianceDecl:set_Location (Mono.CSharp.Location)",
      "code_size" : "32",
      "class" : "VarianceDecl",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CheckTypeVariance",
      "signature" : "Mono.CSharp.Variance Mono.CSharp.VarianceDecl:CheckTypeVariance (Mono.CSharp.TypeSpec,Mono.CSharp.Variance,Mono.CSharp.IMemberContext)",
      "code_size" : "523",
      "class" : "VarianceDecl",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.SpecialContraintExpr:.ctor (Mono.CSharp.SpecialConstraint,Mono.CSharp.Location)",
      "code_size" : "48",
      "class" : "SpecialContraintExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Constraint",
      "signature" : "Mono.CSharp.SpecialConstraint Mono.CSharp.SpecialContraintExpr:get_Constraint ()",
      "code_size" : "20",
      "class" : "SpecialContraintExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Constraint",
      "signature" : "void Mono.CSharp.SpecialContraintExpr:set_Constraint (Mono.CSharp.SpecialConstraint)",
      "code_size" : "28",
      "class" : "SpecialContraintExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.SpecialContraintExpr:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "27",
      "class" : "SpecialContraintExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveAsTypeOrNamespace",
      "signature" : "Mono.CSharp.FullNamedExpression Mono.CSharp.SpecialContraintExpr:ResolveAsTypeOrNamespace (Mono.CSharp.IMemberContext,bool)",
      "code_size" : "27",
      "class" : "SpecialContraintExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Constraints:.ctor (Mono.CSharp.SimpleMemberName,System.Collections.Generic.List`1<Mono.CSharp.FullNamedExpression>,Mono.CSharp.Location)",
      "code_size" : "90",
      "class" : "Constraints",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_TypeExpressions",
      "signature" : "System.Collections.Generic.List`1<Mono.CSharp.FullNamedExpression> Mono.CSharp.Constraints:get_TypeExpressions ()",
      "code_size" : "20",
      "class" : "Constraints",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Location",
      "signature" : "Mono.CSharp.Location Mono.CSharp.Constraints:get_Location ()",
      "code_size" : "30",
      "class" : "Constraints",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_TypeParameter",
      "signature" : "Mono.CSharp.SimpleMemberName Mono.CSharp.Constraints:get_TypeParameter ()",
      "code_size" : "20",
      "class" : "Constraints",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CheckConflictingInheritedConstraint",
      "signature" : "bool Mono.CSharp.Constraints:CheckConflictingInheritedConstraint (Mono.CSharp.TypeParameterSpec,Mono.CSharp.TypeSpec,Mono.CSharp.IMemberContext,Mono.CSharp.Location)",
      "code_size" : "391",
      "class" : "Constraints",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CheckConflictingInheritedConstraint",
      "signature" : "bool Mono.CSharp.Constraints:CheckConflictingInheritedConstraint (Mono.CSharp.TypeParameterSpec,Mono.CSharp.TypeSpec,Mono.CSharp.TypeSpec,Mono.CSharp.IMemberContext,Mono.CSharp.Location)",
      "code_size" : "132",
      "class" : "Constraints",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_ConflictingConstraints",
      "signature" : "void Mono.CSharp.Constraints:Error_ConflictingConstraints (Mono.CSharp.IMemberContext,Mono.CSharp.TypeParameterSpec,Mono.CSharp.TypeSpec,Mono.CSharp.TypeSpec,Mono.CSharp.Location)",
      "code_size" : "298",
      "class" : "Constraints",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CheckGenericConstraints",
      "signature" : "void Mono.CSharp.Constraints:CheckGenericConstraints (Mono.CSharp.IMemberContext,bool)",
      "code_size" : "283",
      "class" : "Constraints",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Resolve",
      "signature" : "bool Mono.CSharp.Constraints:Resolve (Mono.CSharp.IMemberContext,Mono.CSharp.TypeParameter)",
      "code_size" : "3786",
      "class" : "Constraints",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "VerifyClsCompliance",
      "signature" : "void Mono.CSharp.Constraints:VerifyClsCompliance (Mono.CSharp.Report)",
      "code_size" : "300",
      "class" : "Constraints",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.TypeParameter:.ctor (int,Mono.CSharp.MemberName,Mono.CSharp.Constraints,Mono.CSharp.Attributes,Mono.CSharp.Variance)",
      "code_size" : "157",
      "class" : "TypeParameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.TypeParameter:.ctor (Mono.CSharp.MemberName,Mono.CSharp.Attributes,Mono.CSharp.VarianceDecl)",
      "code_size" : "183",
      "class" : "TypeParameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.TypeParameter:.ctor (Mono.CSharp.TypeParameterSpec,Mono.CSharp.TypeSpec,Mono.CSharp.MemberName,Mono.CSharp.Attributes)",
      "code_size" : "338",
      "class" : "TypeParameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_AttributeTargets",
      "signature" : "System.AttributeTargets Mono.CSharp.TypeParameter:get_AttributeTargets ()",
      "code_size" : "14",
      "class" : "TypeParameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Constraints",
      "signature" : "Mono.CSharp.Constraints Mono.CSharp.TypeParameter:get_Constraints ()",
      "code_size" : "20",
      "class" : "TypeParameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Constraints",
      "signature" : "void Mono.CSharp.TypeParameter:set_Constraints (Mono.CSharp.Constraints)",
      "code_size" : "43",
      "class" : "TypeParameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_DeclaringAssembly",
      "signature" : "Mono.CSharp.IAssemblyDefinition Mono.CSharp.TypeParameter:get_DeclaringAssembly ()",
      "code_size" : "38",
      "class" : "TypeParameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_DocCommentHeader",
      "signature" : "string Mono.CSharp.TypeParameter:get_DocCommentHeader ()",
      "code_size" : "70",
      "class" : "TypeParameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mono.CSharp.ITypeDefinition.get_IsComImport",
      "signature" : "bool Mono.CSharp.TypeParameter:Mono.CSharp.ITypeDefinition.get_IsComImport ()",
      "code_size" : "11",
      "class" : "TypeParameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mono.CSharp.ITypeDefinition.get_IsPartial",
      "signature" : "bool Mono.CSharp.TypeParameter:Mono.CSharp.ITypeDefinition.get_IsPartial ()",
      "code_size" : "11",
      "class" : "TypeParameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsMethodTypeParameter",
      "signature" : "bool Mono.CSharp.TypeParameter:get_IsMethodTypeParameter ()",
      "code_size" : "41",
      "class" : "TypeParameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mono.CSharp.ITypeDefinition.get_IsTypeForwarder",
      "signature" : "bool Mono.CSharp.TypeParameter:Mono.CSharp.ITypeDefinition.get_IsTypeForwarder ()",
      "code_size" : "11",
      "class" : "TypeParameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mono.CSharp.ITypeDefinition.get_IsCyclicTypeForwarder",
      "signature" : "bool Mono.CSharp.TypeParameter:Mono.CSharp.ITypeDefinition.get_IsCyclicTypeForwarder ()",
      "code_size" : "11",
      "class" : "TypeParameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Name",
      "signature" : "string Mono.CSharp.TypeParameter:get_Name ()",
      "code_size" : "24",
      "class" : "TypeParameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Namespace",
      "signature" : "string Mono.CSharp.TypeParameter:get_Namespace ()",
      "code_size" : "11",
      "class" : "TypeParameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Type",
      "signature" : "Mono.CSharp.TypeParameterSpec Mono.CSharp.TypeParameter:get_Type ()",
      "code_size" : "20",
      "class" : "TypeParameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_TypeParametersCount",
      "signature" : "int Mono.CSharp.TypeParameter:get_TypeParametersCount ()",
      "code_size" : "11",
      "class" : "TypeParameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_TypeParameters",
      "signature" : "Mono.CSharp.TypeParameterSpec[] Mono.CSharp.TypeParameter:get_TypeParameters ()",
      "code_size" : "11",
      "class" : "TypeParameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ValidAttributeTargets",
      "signature" : "string[] Mono.CSharp.TypeParameter:get_ValidAttributeTargets ()",
      "code_size" : "19",
      "class" : "TypeParameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Variance",
      "signature" : "Mono.CSharp.Variance Mono.CSharp.TypeParameter:get_Variance ()",
      "code_size" : "30",
      "class" : "TypeParameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_VarianceDecl",
      "signature" : "Mono.CSharp.VarianceDecl Mono.CSharp.TypeParameter:get_VarianceDecl ()",
      "code_size" : "20",
      "class" : "TypeParameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_VarianceDecl",
      "signature" : "void Mono.CSharp.TypeParameter:set_VarianceDecl (Mono.CSharp.VarianceDecl)",
      "code_size" : "43",
      "class" : "TypeParameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddPartialConstraints",
      "signature" : "bool Mono.CSharp.TypeParameter:AddPartialConstraints (Mono.CSharp.TypeDefinition,Mono.CSharp.TypeParameter)",
      "code_size" : "382",
      "class" : "TypeParameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ApplyAttributeBuilder",
      "signature" : "void Mono.CSharp.TypeParameter:ApplyAttributeBuilder (Mono.CSharp.Attribute,Mono.CSharp.MethodSpec,byte[],Mono.CSharp.PredefinedAttributes)",
      "code_size" : "212",
      "class" : "TypeParameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CheckGenericConstraints",
      "signature" : "void Mono.CSharp.TypeParameter:CheckGenericConstraints (bool)",
      "code_size" : "54",
      "class" : "TypeParameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateHoistedCopy",
      "signature" : "Mono.CSharp.TypeParameter Mono.CSharp.TypeParameter:CreateHoistedCopy (Mono.CSharp.TypeSpec)",
      "code_size" : "92",
      "class" : "TypeParameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Define",
      "signature" : "bool Mono.CSharp.TypeParameter:Define ()",
      "code_size" : "14",
      "class" : "TypeParameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Create",
      "signature" : "void Mono.CSharp.TypeParameter:Create (Mono.CSharp.TypeSpec,Mono.CSharp.TypeContainer)",
      "code_size" : "159",
      "class" : "TypeParameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Define",
      "signature" : "void Mono.CSharp.TypeParameter:Define (System.Reflection.Emit.GenericTypeParameterBuilder)",
      "code_size" : "62",
      "class" : "TypeParameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Define",
      "signature" : "void Mono.CSharp.TypeParameter:Define (Mono.CSharp.TypeParameter)",
      "code_size" : "52",
      "class" : "TypeParameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitConstraints",
      "signature" : "void Mono.CSharp.TypeParameter:EmitConstraints (System.Reflection.Emit.GenericTypeParameterBuilder)",
      "code_size" : "867",
      "class" : "TypeParameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.TypeParameter:Emit ()",
      "code_size" : "64",
      "class" : "TypeParameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ErrorInvalidVariance",
      "signature" : "void Mono.CSharp.TypeParameter:ErrorInvalidVariance (Mono.CSharp.IMemberContext,Mono.CSharp.Variance)",
      "code_size" : "580",
      "class" : "TypeParameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetAttributeCoClass",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.TypeParameter:GetAttributeCoClass ()",
      "code_size" : "11",
      "class" : "TypeParameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetAttributeDefaultMember",
      "signature" : "string Mono.CSharp.TypeParameter:GetAttributeDefaultMember ()",
      "code_size" : "27",
      "class" : "TypeParameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetAttributeUsage",
      "signature" : "System.AttributeUsageAttribute Mono.CSharp.TypeParameter:GetAttributeUsage (Mono.CSharp.PredefinedAttribute)",
      "code_size" : "27",
      "class" : "TypeParameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSignatureForDocumentation",
      "signature" : "string Mono.CSharp.TypeParameter:GetSignatureForDocumentation ()",
      "code_size" : "27",
      "class" : "TypeParameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSignatureForError",
      "signature" : "string Mono.CSharp.TypeParameter:GetSignatureForError ()",
      "code_size" : "24",
      "class" : "TypeParameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mono.CSharp.ITypeDefinition.IsInternalAsPublic",
      "signature" : "bool Mono.CSharp.TypeParameter:Mono.CSharp.ITypeDefinition.IsInternalAsPublic (Mono.CSharp.IAssemblyDefinition)",
      "code_size" : "65",
      "class" : "TypeParameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "LoadMembers",
      "signature" : "void Mono.CSharp.TypeParameter:LoadMembers (Mono.CSharp.TypeSpec,bool,Mono.CSharp.MemberCache&)",
      "code_size" : "47",
      "class" : "TypeParameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveConstraints",
      "signature" : "bool Mono.CSharp.TypeParameter:ResolveConstraints (Mono.CSharp.IMemberContext)",
      "code_size" : "168",
      "class" : "TypeParameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsClsComplianceRequired",
      "signature" : "bool Mono.CSharp.TypeParameter:IsClsComplianceRequired ()",
      "code_size" : "11",
      "class" : "TypeParameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "VerifyClsCompliance",
      "signature" : "void Mono.CSharp.TypeParameter:VerifyClsCompliance ()",
      "code_size" : "62",
      "class" : "TypeParameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "WarningParentNameConflict",
      "signature" : "void Mono.CSharp.TypeParameter:WarningParentNameConflict (Mono.CSharp.TypeParameter)",
      "code_size" : "198",
      "class" : "TypeParameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".cctor",
      "signature" : "void Mono.CSharp.TypeParameter:.cctor ()",
      "code_size" : "68",
      "class" : "TypeParameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "<EmitConstraints>m__0",
      "signature" : "System.Type Mono.CSharp.TypeParameter:<EmitConstraints>m__0 (Mono.CSharp.TypeSpec)",
      "code_size" : "25",
      "class" : "TypeParameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.TypeParameterSpec:.ctor (Mono.CSharp.TypeSpec,int,Mono.CSharp.ITypeDefinition,Mono.CSharp.SpecialConstraint,Mono.CSharp.Variance,System.Type)",
      "code_size" : "97",
      "class" : "TypeParameterSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.TypeParameterSpec:.ctor (int,Mono.CSharp.ITypeDefinition,Mono.CSharp.SpecialConstraint,Mono.CSharp.Variance,System.Type)",
      "code_size" : "68",
      "class" : "TypeParameterSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_DeclaredPosition",
      "signature" : "int Mono.CSharp.TypeParameterSpec:get_DeclaredPosition ()",
      "code_size" : "20",
      "class" : "TypeParameterSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_DeclaredPosition",
      "signature" : "void Mono.CSharp.TypeParameterSpec:set_DeclaredPosition (int)",
      "code_size" : "28",
      "class" : "TypeParameterSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_HasSpecialConstructor",
      "signature" : "bool Mono.CSharp.TypeParameterSpec:get_HasSpecialConstructor ()",
      "code_size" : "43",
      "class" : "TypeParameterSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_HasSpecialClass",
      "signature" : "bool Mono.CSharp.TypeParameterSpec:get_HasSpecialClass ()",
      "code_size" : "43",
      "class" : "TypeParameterSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_HasSpecialStruct",
      "signature" : "bool Mono.CSharp.TypeParameterSpec:get_HasSpecialStruct ()",
      "code_size" : "43",
      "class" : "TypeParameterSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_HasAnyTypeConstraint",
      "signature" : "bool Mono.CSharp.TypeParameterSpec:get_HasAnyTypeConstraint ()",
      "code_size" : "71",
      "class" : "TypeParameterSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_HasTypeConstraint",
      "signature" : "bool Mono.CSharp.TypeParameterSpec:get_HasTypeConstraint ()",
      "code_size" : "79",
      "class" : "TypeParameterSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Interfaces",
      "signature" : "System.Collections.Generic.IList`1<Mono.CSharp.TypeSpec> Mono.CSharp.TypeParameterSpec:get_Interfaces ()",
      "code_size" : "828",
      "class" : "TypeParameterSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_InterfacesDefined",
      "signature" : "Mono.CSharp.TypeSpec[] Mono.CSharp.TypeParameterSpec:get_InterfacesDefined ()",
      "code_size" : "155",
      "class" : "TypeParameterSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_InterfacesDefined",
      "signature" : "void Mono.CSharp.TypeParameterSpec:set_InterfacesDefined (Mono.CSharp.TypeSpec[])",
      "code_size" : "128",
      "class" : "TypeParameterSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsConstrained",
      "signature" : "bool Mono.CSharp.TypeParameterSpec:get_IsConstrained ()",
      "code_size" : "68",
      "class" : "TypeParameterSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsReferenceType",
      "signature" : "bool Mono.CSharp.TypeParameterSpec:get_IsReferenceType ()",
      "code_size" : "310",
      "class" : "TypeParameterSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsValueType",
      "signature" : "bool Mono.CSharp.TypeParameterSpec:get_IsValueType ()",
      "code_size" : "176",
      "class" : "TypeParameterSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Name",
      "signature" : "string Mono.CSharp.TypeParameterSpec:get_Name ()",
      "code_size" : "36",
      "class" : "TypeParameterSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsMethodOwned",
      "signature" : "bool Mono.CSharp.TypeParameterSpec:get_IsMethodOwned ()",
      "code_size" : "31",
      "class" : "TypeParameterSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_SpecialConstraint",
      "signature" : "Mono.CSharp.SpecialConstraint Mono.CSharp.TypeParameterSpec:get_SpecialConstraint ()",
      "code_size" : "20",
      "class" : "TypeParameterSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_SpecialConstraint",
      "signature" : "void Mono.CSharp.TypeParameterSpec:set_SpecialConstraint (Mono.CSharp.SpecialConstraint)",
      "code_size" : "28",
      "class" : "TypeParameterSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_TypeArguments",
      "signature" : "Mono.CSharp.TypeSpec[] Mono.CSharp.TypeParameterSpec:get_TypeArguments ()",
      "code_size" : "20",
      "class" : "TypeParameterSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_TypeArguments",
      "signature" : "void Mono.CSharp.TypeParameterSpec:set_TypeArguments (Mono.CSharp.TypeSpec[])",
      "code_size" : "43",
      "class" : "TypeParameterSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Variance",
      "signature" : "Mono.CSharp.Variance Mono.CSharp.TypeParameterSpec:get_Variance ()",
      "code_size" : "20",
      "class" : "TypeParameterSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DisplayDebugInfo",
      "signature" : "string Mono.CSharp.TypeParameterSpec:DisplayDebugInfo ()",
      "code_size" : "103",
      "class" : "TypeParameterSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetEffectiveBase",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.TypeParameterSpec:GetEffectiveBase ()",
      "code_size" : "638",
      "class" : "TypeParameterSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSignatureForDocumentation",
      "signature" : "string Mono.CSharp.TypeParameterSpec:GetSignatureForDocumentation (bool)",
      "code_size" : "140",
      "class" : "TypeParameterSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSignatureForError",
      "signature" : "string Mono.CSharp.TypeParameterSpec:GetSignatureForError ()",
      "code_size" : "25",
      "class" : "TypeParameterSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "HasSameConstraintsDefinition",
      "signature" : "bool Mono.CSharp.TypeParameterSpec:HasSameConstraintsDefinition (Mono.CSharp.TypeParameterSpec)",
      "code_size" : "176",
      "class" : "TypeParameterSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "HasSameConstraintsImplementation",
      "signature" : "bool Mono.CSharp.TypeParameterSpec:HasSameConstraintsImplementation (Mono.CSharp.TypeParameterSpec)",
      "code_size" : "1964",
      "class" : "TypeParameterSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "InflateConstraints",
      "signature" : "Mono.CSharp.TypeParameterSpec[] Mono.CSharp.TypeParameterSpec:InflateConstraints (Mono.CSharp.TypeParameterInflator,Mono.CSharp.TypeParameterSpec[])",
      "code_size" : "181",
      "class" : "TypeParameterSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "InflateConstraints",
      "signature" : "Mono.CSharp.TypeParameterSpec[] Mono.CSharp.TypeParameterSpec:InflateConstraints<T_REF> (Mono.CSharp.TypeParameterSpec[],System.Func`2<T_REF, Mono.CSharp.TypeParameterInflator>,T_REF)",
      "code_size" : "734",
      "class" : "TypeParameterSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "InflateConstraints",
      "signature" : "void Mono.CSharp.TypeParameterSpec:InflateConstraints (Mono.CSharp.TypeParameterInflator,Mono.CSharp.TypeParameterSpec)",
      "code_size" : "751",
      "class" : "TypeParameterSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "InflateMember",
      "signature" : "Mono.CSharp.MemberSpec Mono.CSharp.TypeParameterSpec:InflateMember (Mono.CSharp.TypeParameterInflator)",
      "code_size" : "141",
      "class" : "TypeParameterSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "InitializeMemberCache",
      "signature" : "void Mono.CSharp.TypeParameterSpec:InitializeMemberCache (bool)",
      "code_size" : "868",
      "class" : "TypeParameterSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsConvertibleToInterface",
      "signature" : "bool Mono.CSharp.TypeParameterSpec:IsConvertibleToInterface (Mono.CSharp.TypeSpec)",
      "code_size" : "461",
      "class" : "TypeParameterSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "HasAnyTypeParameterTypeConstrained",
      "signature" : "bool Mono.CSharp.TypeParameterSpec:HasAnyTypeParameterTypeConstrained (Mono.CSharp.IGenericMethodDefinition)",
      "code_size" : "151",
      "class" : "TypeParameterSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "HasAnyTypeParameterConstrained",
      "signature" : "bool Mono.CSharp.TypeParameterSpec:HasAnyTypeParameterConstrained (Mono.CSharp.IGenericMethodDefinition)",
      "code_size" : "151",
      "class" : "TypeParameterSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "HasDependencyOn",
      "signature" : "bool Mono.CSharp.TypeParameterSpec:HasDependencyOn (Mono.CSharp.TypeSpec)",
      "code_size" : "244",
      "class" : "TypeParameterSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mutate",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.TypeParameterSpec:Mutate (Mono.CSharp.TypeParameterMutator)",
      "code_size" : "38",
      "class" : "TypeParameterSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".cctor",
      "signature" : "void Mono.CSharp.TypeParameterSpec:.cctor ()",
      "code_size" : "58",
      "class" : "TypeParameterSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "<InflateConstraints>m__0",
      "signature" : "Mono.CSharp.TypeParameterInflator Mono.CSharp.TypeParameterSpec:<InflateConstraints>m__0 (Mono.CSharp.TypeParameterInflator)",
      "code_size" : "146",
      "class" : "TypeParameterSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.TypeParameterInflator:.ctor (Mono.CSharp.TypeParameterInflator,Mono.CSharp.TypeSpec)",
      "code_size" : "43",
      "class" : "TypeParameterInflator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.TypeParameterInflator:.ctor (Mono.CSharp.IModuleContext,Mono.CSharp.TypeSpec,Mono.CSharp.TypeParameterSpec[],Mono.CSharp.TypeSpec[])",
      "code_size" : "192",
      "class" : "TypeParameterInflator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Context",
      "signature" : "Mono.CSharp.IModuleContext Mono.CSharp.TypeParameterInflator:get_Context ()",
      "code_size" : "20",
      "class" : "TypeParameterInflator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_TypeInstance",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.TypeParameterInflator:get_TypeInstance ()",
      "code_size" : "19",
      "class" : "TypeParameterInflator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_TypeParameters",
      "signature" : "Mono.CSharp.TypeParameterSpec[] Mono.CSharp.TypeParameterInflator:get_TypeParameters ()",
      "code_size" : "20",
      "class" : "TypeParameterInflator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Inflate",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.TypeParameterInflator:Inflate (Mono.CSharp.TypeSpec)",
      "code_size" : "1109",
      "class" : "TypeParameterInflator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Inflate",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.TypeParameterInflator:Inflate (Mono.CSharp.TypeParameterSpec)",
      "code_size" : "147",
      "class" : "TypeParameterInflator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.TypeParameterMutator:.ctor (Mono.CSharp.TypeParameters,Mono.CSharp.TypeParameters)",
      "code_size" : "134",
      "class" : "TypeParameterMutator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.TypeParameterMutator:.ctor (Mono.CSharp.TypeParameterSpec[],Mono.CSharp.TypeParameters)",
      "code_size" : "125",
      "class" : "TypeParameterMutator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_MethodTypeParameters",
      "signature" : "Mono.CSharp.TypeParameters Mono.CSharp.TypeParameterMutator:get_MethodTypeParameters ()",
      "code_size" : "20",
      "class" : "TypeParameterMutator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetMemberDeclaringType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.TypeParameterMutator:GetMemberDeclaringType (Mono.CSharp.TypeSpec)",
      "code_size" : "146",
      "class" : "TypeParameterMutator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mutate",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.TypeParameterMutator:Mutate (Mono.CSharp.TypeSpec)",
      "code_size" : "207",
      "class" : "TypeParameterMutator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mutate",
      "signature" : "Mono.CSharp.TypeParameterSpec Mono.CSharp.TypeParameterMutator:Mutate (Mono.CSharp.TypeParameterSpec)",
      "code_size" : "272",
      "class" : "TypeParameterMutator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mutate",
      "signature" : "Mono.CSharp.TypeSpec[] Mono.CSharp.TypeParameterMutator:Mutate (Mono.CSharp.TypeSpec[])",
      "code_size" : "256",
      "class" : "TypeParameterMutator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.TypeParameterExpr:.ctor (Mono.CSharp.TypeParameter,Mono.CSharp.Location)",
      "code_size" : "55",
      "class" : "TypeParameterExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.InflatedTypeSpec:.ctor (Mono.CSharp.IModuleContext,Mono.CSharp.TypeSpec,Mono.CSharp.TypeSpec,Mono.CSharp.TypeSpec[])",
      "code_size" : "410",
      "class" : "InflatedTypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_BaseType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.InflatedTypeSpec:get_BaseType ()",
      "code_size" : "67",
      "class" : "InflatedTypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Constraints",
      "signature" : "Mono.CSharp.TypeParameterSpec[] Mono.CSharp.InflatedTypeSpec:get_Constraints ()",
      "code_size" : "225",
      "class" : "InflatedTypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_HasConstraintsChecked",
      "signature" : "bool Mono.CSharp.InflatedTypeSpec:get_HasConstraintsChecked ()",
      "code_size" : "45",
      "class" : "InflatedTypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_HasConstraintsChecked",
      "signature" : "void Mono.CSharp.InflatedTypeSpec:set_HasConstraintsChecked (bool)",
      "code_size" : "87",
      "class" : "InflatedTypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Interfaces",
      "signature" : "System.Collections.Generic.IList`1<Mono.CSharp.TypeSpec> Mono.CSharp.InflatedTypeSpec:get_Interfaces ()",
      "code_size" : "54",
      "class" : "InflatedTypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsExpressionTreeType",
      "signature" : "bool Mono.CSharp.InflatedTypeSpec:get_IsExpressionTreeType ()",
      "code_size" : "49",
      "class" : "InflatedTypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsArrayGenericInterface",
      "signature" : "bool Mono.CSharp.InflatedTypeSpec:get_IsArrayGenericInterface ()",
      "code_size" : "49",
      "class" : "InflatedTypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsGenericTask",
      "signature" : "bool Mono.CSharp.InflatedTypeSpec:get_IsGenericTask ()",
      "code_size" : "49",
      "class" : "InflatedTypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsNullableType",
      "signature" : "bool Mono.CSharp.InflatedTypeSpec:get_IsNullableType ()",
      "code_size" : "49",
      "class" : "InflatedTypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_TypeArguments",
      "signature" : "Mono.CSharp.TypeSpec[] Mono.CSharp.InflatedTypeSpec:get_TypeArguments ()",
      "code_size" : "20",
      "class" : "InflatedTypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddInterface",
      "signature" : "bool Mono.CSharp.InflatedTypeSpec:AddInterface (Mono.CSharp.TypeSpec)",
      "code_size" : "108",
      "class" : "InflatedTypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ContainsTypeParameter",
      "signature" : "bool Mono.CSharp.InflatedTypeSpec:ContainsTypeParameter (Mono.CSharp.TypeSpec)",
      "code_size" : "224",
      "class" : "InflatedTypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateLocalInflator",
      "signature" : "Mono.CSharp.TypeParameterInflator Mono.CSharp.InflatedTypeSpec:CreateLocalInflator (Mono.CSharp.IModuleContext)",
      "code_size" : "909",
      "class" : "InflatedTypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateMetaInfo",
      "signature" : "System.Type Mono.CSharp.InflatedTypeSpec:CreateMetaInfo ()",
      "code_size" : "687",
      "class" : "InflatedTypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CheckObsoleteness",
      "signature" : "void Mono.CSharp.InflatedTypeSpec:CheckObsoleteness (Mono.CSharp.IMemberContext,Mono.CSharp.Location)",
      "code_size" : "167",
      "class" : "InflatedTypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetAttributeObsolete",
      "signature" : "System.ObsoleteAttribute Mono.CSharp.InflatedTypeSpec:GetAttributeObsolete ()",
      "code_size" : "32",
      "class" : "InflatedTypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsNotCLSCompliant",
      "signature" : "bool Mono.CSharp.InflatedTypeSpec:IsNotCLSCompliant (bool&)",
      "code_size" : "242",
      "class" : "InflatedTypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetDefinition",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.InflatedTypeSpec:GetDefinition ()",
      "code_size" : "20",
      "class" : "InflatedTypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetMetaInfo",
      "signature" : "System.Type Mono.CSharp.InflatedTypeSpec:GetMetaInfo ()",
      "code_size" : "78",
      "class" : "InflatedTypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSignatureForError",
      "signature" : "string Mono.CSharp.InflatedTypeSpec:GetSignatureForError ()",
      "code_size" : "104",
      "class" : "InflatedTypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetTypeNameSignature",
      "signature" : "string Mono.CSharp.InflatedTypeSpec:GetTypeNameSignature ()",
      "code_size" : "170",
      "class" : "InflatedTypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "HasDynamicArgument",
      "signature" : "bool Mono.CSharp.InflatedTypeSpec:HasDynamicArgument ()",
      "code_size" : "402",
      "class" : "InflatedTypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "InitializeMemberCache",
      "signature" : "void Mono.CSharp.InflatedTypeSpec:InitializeMemberCache (bool)",
      "code_size" : "1228",
      "class" : "InflatedTypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mutate",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.InflatedTypeSpec:Mutate (Mono.CSharp.TypeParameterMutator)",
      "code_size" : "316",
      "class" : "InflatedTypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "<get_Constraints>m__0",
      "signature" : "Mono.CSharp.TypeParameterInflator Mono.CSharp.InflatedTypeSpec:<get_Constraints>m__0 (Mono.CSharp.InflatedTypeSpec)",
      "code_size" : "201",
      "class" : "InflatedTypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "<CreateMetaInfo>m__1",
      "signature" : "System.Type Mono.CSharp.InflatedTypeSpec:<CreateMetaInfo>m__1 (Mono.CSharp.TypeSpec)",
      "code_size" : "25",
      "class" : "InflatedTypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "<CreateMetaInfo>m__2",
      "signature" : "System.Type Mono.CSharp.InflatedTypeSpec:<CreateMetaInfo>m__2 (Mono.CSharp.TypeParameterSpec)",
      "code_size" : "25",
      "class" : "InflatedTypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.TypeArguments:.ctor (Mono.CSharp.FullNamedExpression[])",
      "code_size" : "85",
      "class" : "TypeArguments",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Add",
      "signature" : "void Mono.CSharp.TypeArguments:Add (Mono.CSharp.FullNamedExpression)",
      "code_size" : "41",
      "class" : "TypeArguments",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Arguments",
      "signature" : "Mono.CSharp.TypeSpec[] Mono.CSharp.TypeArguments:get_Arguments ()",
      "code_size" : "20",
      "class" : "TypeArguments",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Arguments",
      "signature" : "void Mono.CSharp.TypeArguments:set_Arguments (Mono.CSharp.TypeSpec[])",
      "code_size" : "43",
      "class" : "TypeArguments",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Count",
      "signature" : "int Mono.CSharp.TypeArguments:get_Count ()",
      "code_size" : "30",
      "class" : "TypeArguments",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsEmpty",
      "signature" : "bool Mono.CSharp.TypeArguments:get_IsEmpty ()",
      "code_size" : "11",
      "class" : "TypeArguments",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_TypeExpressions",
      "signature" : "System.Collections.Generic.List`1<Mono.CSharp.FullNamedExpression> Mono.CSharp.TypeArguments:get_TypeExpressions ()",
      "code_size" : "20",
      "class" : "TypeArguments",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSignatureForError",
      "signature" : "string Mono.CSharp.TypeArguments:GetSignatureForError ()",
      "code_size" : "224",
      "class" : "TypeArguments",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Resolve",
      "signature" : "bool Mono.CSharp.TypeArguments:Resolve (Mono.CSharp.IMemberContext,bool)",
      "code_size" : "823",
      "class" : "TypeArguments",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Clone",
      "signature" : "Mono.CSharp.TypeArguments Mono.CSharp.TypeArguments:Clone ()",
      "code_size" : "251",
      "class" : "TypeArguments",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.UnboundTypeArguments:.ctor (int,Mono.CSharp.Location)",
      "code_size" : "67",
      "class" : "UnboundTypeArguments",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsEmpty",
      "signature" : "bool Mono.CSharp.UnboundTypeArguments:get_IsEmpty ()",
      "code_size" : "14",
      "class" : "UnboundTypeArguments",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Resolve",
      "signature" : "bool Mono.CSharp.UnboundTypeArguments:Resolve (Mono.CSharp.IMemberContext,bool)",
      "code_size" : "127",
      "class" : "UnboundTypeArguments",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.TypeParameters:.ctor ()",
      "code_size" : "103",
      "class" : "TypeParameters",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.TypeParameters:.ctor (int)",
      "code_size" : "85",
      "class" : "TypeParameters",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Count",
      "signature" : "int Mono.CSharp.TypeParameters:get_Count ()",
      "code_size" : "30",
      "class" : "TypeParameters",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Types",
      "signature" : "Mono.CSharp.TypeParameterSpec[] Mono.CSharp.TypeParameters:get_Types ()",
      "code_size" : "20",
      "class" : "TypeParameters",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Add",
      "signature" : "void Mono.CSharp.TypeParameters:Add (Mono.CSharp.TypeParameter)",
      "code_size" : "41",
      "class" : "TypeParameters",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Add",
      "signature" : "void Mono.CSharp.TypeParameters:Add (Mono.CSharp.TypeParameters)",
      "code_size" : "45",
      "class" : "TypeParameters",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Create",
      "signature" : "void Mono.CSharp.TypeParameters:Create (Mono.CSharp.TypeSpec,int,Mono.CSharp.TypeContainer)",
      "code_size" : "406",
      "class" : "TypeParameters",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Define",
      "signature" : "void Mono.CSharp.TypeParameters:Define (System.Reflection.Emit.GenericTypeParameterBuilder[])",
      "code_size" : "189",
      "class" : "TypeParameters",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Item",
      "signature" : "Mono.CSharp.TypeParameter Mono.CSharp.TypeParameters:get_Item (int)",
      "code_size" : "41",
      "class" : "TypeParameters",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Item",
      "signature" : "void Mono.CSharp.TypeParameters:set_Item (int,Mono.CSharp.TypeParameter)",
      "code_size" : "51",
      "class" : "TypeParameters",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Find",
      "signature" : "Mono.CSharp.TypeParameter Mono.CSharp.TypeParameters:Find (string)",
      "code_size" : "207",
      "class" : "TypeParameters",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetAllNames",
      "signature" : "string[] Mono.CSharp.TypeParameters:GetAllNames ()",
      "code_size" : "170",
      "class" : "TypeParameters",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSignatureForError",
      "signature" : "string Mono.CSharp.TypeParameters:GetSignatureForError ()",
      "code_size" : "207",
      "class" : "TypeParameters",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CheckPartialConstraints",
      "signature" : "void Mono.CSharp.TypeParameters:CheckPartialConstraints (Mono.CSharp.Method)",
      "code_size" : "490",
      "class" : "TypeParameters",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "UpdateConstraints",
      "signature" : "void Mono.CSharp.TypeParameters:UpdateConstraints (Mono.CSharp.TypeDefinition)",
      "code_size" : "372",
      "class" : "TypeParameters",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "VerifyClsCompliance",
      "signature" : "void Mono.CSharp.TypeParameters:VerifyClsCompliance ()",
      "code_size" : "152",
      "class" : "TypeParameters",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "<GetAllNames>m__0",
      "signature" : "string Mono.CSharp.TypeParameters:<GetAllNames>m__0 (Mono.CSharp.TypeParameter)",
      "code_size" : "27",
      "class" : "TypeParameters",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.GenericTypeExpr:.ctor (Mono.CSharp.TypeSpec,Mono.CSharp.TypeArguments,Mono.CSharp.Location)",
      "code_size" : "90",
      "class" : "GenericTypeExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSignatureForError",
      "signature" : "string Mono.CSharp.GenericTypeExpr:GetSignatureForError ()",
      "code_size" : "29",
      "class" : "GenericTypeExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveAsType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.GenericTypeExpr:ResolveAsType (Mono.CSharp.IMemberContext,bool)",
      "code_size" : "388",
      "class" : "GenericTypeExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Equals",
      "signature" : "bool Mono.CSharp.GenericTypeExpr:Equals (object)",
      "code_size" : "138",
      "class" : "GenericTypeExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetHashCode",
      "signature" : "int Mono.CSharp.GenericTypeExpr:GetHashCode ()",
      "code_size" : "18",
      "class" : "GenericTypeExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.GenericOpenTypeExpr:.ctor (Mono.CSharp.TypeSpec,Mono.CSharp.Location)",
      "code_size" : "55",
      "class" : "GenericOpenTypeExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ConstraintChecker:.ctor (Mono.CSharp.IMemberContext)",
      "code_size" : "46",
      "class" : "ConstraintChecker",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Check",
      "signature" : "bool Mono.CSharp.ConstraintChecker:Check (Mono.CSharp.IMemberContext,Mono.CSharp.TypeSpec,Mono.CSharp.Location)",
      "code_size" : "520",
      "class" : "ConstraintChecker",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CheckAll",
      "signature" : "bool Mono.CSharp.ConstraintChecker:CheckAll (Mono.CSharp.MemberSpec,Mono.CSharp.TypeSpec[],Mono.CSharp.TypeParameterSpec[],Mono.CSharp.Location)",
      "code_size" : "250",
      "class" : "ConstraintChecker",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CheckConstraint",
      "signature" : "bool Mono.CSharp.ConstraintChecker:CheckConstraint (Mono.CSharp.MemberSpec,Mono.CSharp.TypeSpec,Mono.CSharp.TypeParameterSpec,Mono.CSharp.Location)",
      "code_size" : "1525",
      "class" : "ConstraintChecker",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "HasDynamicTypeArgument",
      "signature" : "bool Mono.CSharp.ConstraintChecker:HasDynamicTypeArgument (Mono.CSharp.TypeSpec[])",
      "code_size" : "163",
      "class" : "ConstraintChecker",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CheckConversion",
      "signature" : "bool Mono.CSharp.ConstraintChecker:CheckConversion (Mono.CSharp.IMemberContext,Mono.CSharp.MemberSpec,Mono.CSharp.TypeSpec,Mono.CSharp.TypeParameterSpec,Mono.CSharp.TypeSpec,Mono.CSharp.Location)",
      "code_size" : "1938",
      "class" : "ConstraintChecker",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "HasDefaultConstructor",
      "signature" : "bool Mono.CSharp.ConstraintChecker:HasDefaultConstructor (Mono.CSharp.TypeSpec)",
      "code_size" : "407",
      "class" : "ConstraintChecker",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.TypeInference:.ctor (Mono.CSharp.Arguments)",
      "code_size" : "69",
      "class" : "TypeInference",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_InferenceScore",
      "signature" : "int Mono.CSharp.TypeInference:get_InferenceScore ()",
      "code_size" : "20",
      "class" : "TypeInference",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "InferMethodArguments",
      "signature" : "Mono.CSharp.TypeSpec[] Mono.CSharp.TypeInference:InferMethodArguments (Mono.CSharp.ResolveContext,Mono.CSharp.MethodSpec)",
      "code_size" : "334",
      "class" : "TypeInference",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "InferInPhases",
      "signature" : "bool Mono.CSharp.TypeInference:InferInPhases (Mono.CSharp.ResolveContext,Mono.CSharp.TypeInferenceContext,Mono.CSharp.AParametersCollection)",
      "code_size" : "1145",
      "class" : "TypeInference",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoSecondPhase",
      "signature" : "bool Mono.CSharp.TypeInference:DoSecondPhase (Mono.CSharp.ResolveContext,Mono.CSharp.TypeInferenceContext,Mono.CSharp.TypeSpec[],bool)",
      "code_size" : "510",
      "class" : "TypeInference",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.TypeInferenceContext:.ctor (Mono.CSharp.TypeSpec[])",
      "code_size" : "406",
      "class" : "TypeInferenceContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.TypeInferenceContext:.ctor ()",
      "code_size" : "168",
      "class" : "TypeInferenceContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_InferredTypeArguments",
      "signature" : "Mono.CSharp.TypeSpec[] Mono.CSharp.TypeInferenceContext:get_InferredTypeArguments ()",
      "code_size" : "20",
      "class" : "TypeInferenceContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddCommonTypeBound",
      "signature" : "void Mono.CSharp.TypeInferenceContext:AddCommonTypeBound (Mono.CSharp.TypeSpec)",
      "code_size" : "107",
      "class" : "TypeInferenceContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddCommonTypeBoundAsync",
      "signature" : "void Mono.CSharp.TypeInferenceContext:AddCommonTypeBoundAsync (Mono.CSharp.TypeSpec)",
      "code_size" : "110",
      "class" : "TypeInferenceContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddToBounds",
      "signature" : "void Mono.CSharp.TypeInferenceContext:AddToBounds (Mono.CSharp.TypeInferenceContext/BoundInfo,int,bool)",
      "code_size" : "456",
      "class" : "TypeInferenceContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AllTypesAreFixed",
      "signature" : "bool Mono.CSharp.TypeInferenceContext:AllTypesAreFixed (Mono.CSharp.TypeSpec[])",
      "code_size" : "244",
      "class" : "TypeInferenceContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ExactInference",
      "signature" : "int Mono.CSharp.TypeInferenceContext:ExactInference (Mono.CSharp.TypeSpec,Mono.CSharp.TypeSpec)",
      "code_size" : "831",
      "class" : "TypeInferenceContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "FixAllTypes",
      "signature" : "bool Mono.CSharp.TypeInferenceContext:FixAllTypes (Mono.CSharp.ResolveContext)",
      "code_size" : "94",
      "class" : "TypeInferenceContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "FixDependentTypes",
      "signature" : "bool Mono.CSharp.TypeInferenceContext:FixDependentTypes (Mono.CSharp.ResolveContext,bool&)",
      "code_size" : "195",
      "class" : "TypeInferenceContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "FixIndependentTypeArguments",
      "signature" : "bool Mono.CSharp.TypeInferenceContext:FixIndependentTypeArguments (Mono.CSharp.ResolveContext,Mono.CSharp.TypeSpec[],bool&)",
      "code_size" : "663",
      "class" : "TypeInferenceContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "FixType",
      "signature" : "bool Mono.CSharp.TypeInferenceContext:FixType (Mono.CSharp.ResolveContext,int)",
      "code_size" : "1580",
      "class" : "TypeInferenceContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "HasBounds",
      "signature" : "bool Mono.CSharp.TypeInferenceContext:HasBounds (int)",
      "code_size" : "86",
      "class" : "TypeInferenceContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "InflateGenericArgument",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.TypeInferenceContext:InflateGenericArgument (Mono.CSharp.IModuleContext,Mono.CSharp.TypeSpec)",
      "code_size" : "639",
      "class" : "TypeInferenceContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsReturnTypeNonDependent",
      "signature" : "bool Mono.CSharp.TypeInferenceContext:IsReturnTypeNonDependent (Mono.CSharp.MethodSpec,Mono.CSharp.TypeSpec)",
      "code_size" : "317",
      "class" : "TypeInferenceContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsFixed",
      "signature" : "bool Mono.CSharp.TypeInferenceContext:IsFixed (Mono.CSharp.TypeSpec)",
      "code_size" : "34",
      "class" : "TypeInferenceContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsUnfixed",
      "signature" : "int Mono.CSharp.TypeInferenceContext:IsUnfixed (Mono.CSharp.TypeSpec)",
      "code_size" : "194",
      "class" : "TypeInferenceContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "LowerBoundInference",
      "signature" : "int Mono.CSharp.TypeInferenceContext:LowerBoundInference (Mono.CSharp.TypeSpec,Mono.CSharp.TypeSpec)",
      "code_size" : "30",
      "class" : "TypeInferenceContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "LowerBoundInference",
      "signature" : "int Mono.CSharp.TypeInferenceContext:LowerBoundInference (Mono.CSharp.TypeSpec,Mono.CSharp.TypeSpec,bool)",
      "code_size" : "1814",
      "class" : "TypeInferenceContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "OutputTypeInference",
      "signature" : "int Mono.CSharp.TypeInferenceContext:OutputTypeInference (Mono.CSharp.ResolveContext,Mono.CSharp.Expression,Mono.CSharp.TypeSpec)",
      "code_size" : "851",
      "class" : "TypeInferenceContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "RemoveDependentTypes",
      "signature" : "void Mono.CSharp.TypeInferenceContext:RemoveDependentTypes (System.Collections.Generic.List`1<Mono.CSharp.TypeSpec>,Mono.CSharp.TypeSpec)",
      "code_size" : "227",
      "class" : "TypeInferenceContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_UnfixedVariableExists",
      "signature" : "bool Mono.CSharp.TypeInferenceContext:get_UnfixedVariableExists ()",
      "code_size" : "116",
      "class" : "TypeInferenceContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.TypeInferenceContext/BoundInfo:.ctor (Mono.CSharp.TypeSpec,Mono.CSharp.TypeInferenceContext/BoundKind)",
      "code_size" : "55",
      "class" : "BoundInfo",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetHashCode",
      "signature" : "int Mono.CSharp.TypeInferenceContext/BoundInfo:GetHashCode ()",
      "code_size" : "28",
      "class" : "BoundInfo",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetTypeExpression",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.TypeInferenceContext/BoundInfo:GetTypeExpression ()",
      "code_size" : "104",
      "class" : "BoundInfo",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Equals",
      "signature" : "bool Mono.CSharp.TypeInferenceContext/BoundInfo:Equals (Mono.CSharp.TypeInferenceContext/BoundInfo)",
      "code_size" : "70",
      "class" : "BoundInfo",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.MetadataImporter:.ctor (Mono.CSharp.ModuleContainer)",
      "code_size" : "295",
      "class" : "MetadataImporter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Assemblies",
      "signature" : "System.Collections.Generic.ICollection`1<Mono.CSharp.IAssemblyDefinition> Mono.CSharp.MetadataImporter:get_Assemblies ()",
      "code_size" : "31",
      "class" : "MetadataImporter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IgnorePrivateMembers",
      "signature" : "bool Mono.CSharp.MetadataImporter:get_IgnorePrivateMembers ()",
      "code_size" : "20",
      "class" : "MetadataImporter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_IgnorePrivateMembers",
      "signature" : "void Mono.CSharp.MetadataImporter:set_IgnorePrivateMembers (bool)",
      "code_size" : "31",
      "class" : "MetadataImporter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateField",
      "signature" : "Mono.CSharp.FieldSpec Mono.CSharp.MetadataImporter:CreateField (System.Reflection.FieldInfo,Mono.CSharp.TypeSpec)",
      "code_size" : "1805",
      "class" : "MetadataImporter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateConstantFromValue",
      "signature" : "Mono.CSharp.Constant Mono.CSharp.MetadataImporter:CreateConstantFromValue (Mono.CSharp.TypeSpec,System.Reflection.FieldInfo)",
      "code_size" : "210",
      "class" : "MetadataImporter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateEvent",
      "signature" : "Mono.CSharp.EventSpec Mono.CSharp.MetadataImporter:CreateEvent (System.Reflection.EventInfo,Mono.CSharp.TypeSpec,Mono.CSharp.MethodSpec,Mono.CSharp.MethodSpec)",
      "code_size" : "406",
      "class" : "MetadataImporter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateGenericParameters",
      "signature" : "Mono.CSharp.TypeParameterSpec[] Mono.CSharp.MetadataImporter:CreateGenericParameters (System.Type,Mono.CSharp.TypeSpec)",
      "code_size" : "401",
      "class" : "MetadataImporter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateGenericParameters",
      "signature" : "Mono.CSharp.TypeParameterSpec[] Mono.CSharp.MetadataImporter:CreateGenericParameters (int,System.Type[])",
      "code_size" : "336",
      "class" : "MetadataImporter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateGenericArguments",
      "signature" : "Mono.CSharp.TypeSpec[] Mono.CSharp.MetadataImporter:CreateGenericArguments (int,System.Type[],Mono.CSharp.MetadataImporter/DynamicTypeReader)",
      "code_size" : "785",
      "class" : "MetadataImporter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateMethod",
      "signature" : "Mono.CSharp.MethodSpec Mono.CSharp.MetadataImporter:CreateMethod (System.Reflection.MethodBase,Mono.CSharp.TypeSpec)",
      "code_size" : "1889",
      "class" : "MetadataImporter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsOverrideMethodBaseTypeAccessible",
      "signature" : "bool Mono.CSharp.MetadataImporter:IsOverrideMethodBaseTypeAccessible (Mono.CSharp.TypeSpec)",
      "code_size" : "182",
      "class" : "MetadataImporter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateParameters",
      "signature" : "Mono.CSharp.AParametersCollection Mono.CSharp.MetadataImporter:CreateParameters (Mono.CSharp.TypeSpec,System.Reflection.ParameterInfo[],System.Reflection.MethodBase)",
      "code_size" : "2836",
      "class" : "MetadataImporter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateProperty",
      "signature" : "Mono.CSharp.PropertySpec Mono.CSharp.MetadataImporter:CreateProperty (System.Reflection.PropertyInfo,Mono.CSharp.TypeSpec,Mono.CSharp.MethodSpec,Mono.CSharp.MethodSpec)",
      "code_size" : "1514",
      "class" : "MetadataImporter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.MetadataImporter:CreateType (System.Type)",
      "code_size" : "76",
      "class" : "MetadataImporter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateNestedType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.MetadataImporter:CreateNestedType (System.Type,Mono.CSharp.TypeSpec)",
      "code_size" : "121",
      "class" : "MetadataImporter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.MetadataImporter:CreateType (System.Type,Mono.CSharp.MetadataImporter/DynamicTypeReader,bool)",
      "code_size" : "258",
      "class" : "MetadataImporter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.MetadataImporter:CreateType (System.Type,Mono.CSharp.TypeSpec,Mono.CSharp.MetadataImporter/DynamicTypeReader,bool)",
      "code_size" : "3029",
      "class" : "MetadataImporter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetAssemblyDefinition",
      "signature" : "Mono.CSharp.IAssemblyDefinition Mono.CSharp.MetadataImporter:GetAssemblyDefinition (System.Reflection.Assembly)",
      "code_size" : "168",
      "class" : "MetadataImporter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetImportedAssemblyDefinition",
      "signature" : "Mono.CSharp.ImportedAssemblyDefinition Mono.CSharp.MetadataImporter:GetImportedAssemblyDefinition (System.Reflection.AssemblyName)",
      "code_size" : "317",
      "class" : "MetadataImporter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ImportTypeBase",
      "signature" : "void Mono.CSharp.MetadataImporter:ImportTypeBase (System.Type)",
      "code_size" : "76",
      "class" : "MetadataImporter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateTypeParameter",
      "signature" : "Mono.CSharp.TypeParameterSpec Mono.CSharp.MetadataImporter:CreateTypeParameter (System.Type,Mono.CSharp.TypeSpec)",
      "code_size" : "395",
      "class" : "MetadataImporter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "HasAttribute",
      "signature" : "bool Mono.CSharp.MetadataImporter:HasAttribute (System.Collections.Generic.IList`1<System.Reflection.CustomAttributeData>,string,string)",
      "code_size" : "331",
      "class" : "MetadataImporter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ImportTypeBase",
      "signature" : "void Mono.CSharp.MetadataImporter:ImportTypeBase (Mono.CSharp.TypeSpec,System.Type)",
      "code_size" : "509",
      "class" : "MetadataImporter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ImportTypes",
      "signature" : "void Mono.CSharp.MetadataImporter:ImportTypes (System.Type[],Mono.CSharp.Namespace,bool)",
      "code_size" : "611",
      "class" : "MetadataImporter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ImportTypeParameterTypeConstraints",
      "signature" : "void Mono.CSharp.MetadataImporter:ImportTypeParameterTypeConstraints (Mono.CSharp.TypeParameterSpec,System.Type)",
      "code_size" : "458",
      "class" : "MetadataImporter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ImportConstant",
      "signature" : "Mono.CSharp.Constant Mono.CSharp.MetadataImporter:ImportConstant (object)",
      "code_size" : "2491",
      "class" : "MetadataImporter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ImportType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.MetadataImporter:ImportType (System.Type)",
      "code_size" : "111",
      "class" : "MetadataImporter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ImportType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.MetadataImporter:ImportType (System.Type,Mono.CSharp.MetadataImporter/DynamicTypeReader)",
      "code_size" : "529",
      "class" : "MetadataImporter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsMissingType",
      "signature" : "bool Mono.CSharp.MetadataImporter:IsMissingType (System.Type)",
      "code_size" : "11",
      "class" : "MetadataImporter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ReadDecimalConstant",
      "signature" : "Mono.CSharp.Constant Mono.CSharp.MetadataImporter:ReadDecimalConstant (System.Collections.Generic.IList`1<System.Reflection.CustomAttributeData>)",
      "code_size" : "1159",
      "class" : "MetadataImporter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ReadMethodModifiers",
      "signature" : "Mono.CSharp.Modifiers Mono.CSharp.MetadataImporter:ReadMethodModifiers (System.Reflection.MethodBase,Mono.CSharp.TypeSpec)",
      "code_size" : "269",
      "class" : "MetadataImporter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".cctor",
      "signature" : "void Mono.CSharp.MetadataImporter:.cctor ()",
      "code_size" : "26",
      "class" : "MetadataImporter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.MetadataImporter/DynamicTypeReader:.ctor (object)",
      "code_size" : "63",
      "class" : "DynamicTypeReader",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsDynamicObject",
      "signature" : "bool Mono.CSharp.MetadataImporter/DynamicTypeReader:IsDynamicObject ()",
      "code_size" : "112",
      "class" : "DynamicTypeReader",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "HasDynamicAttribute",
      "signature" : "bool Mono.CSharp.MetadataImporter/DynamicTypeReader:HasDynamicAttribute ()",
      "code_size" : "63",
      "class" : "DynamicTypeReader",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetCustomAttributes",
      "signature" : "System.Collections.Generic.IList`1<System.Reflection.CustomAttributeData> Mono.CSharp.MetadataImporter/DynamicTypeReader:GetCustomAttributes ()",
      "code_size" : "185",
      "class" : "DynamicTypeReader",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "ReadAttribute",
      "signature" : "void Mono.CSharp.MetadataImporter/DynamicTypeReader:ReadAttribute ()",
      "code_size" : "950",
      "class" : "DynamicTypeReader",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".cctor",
      "signature" : "void Mono.CSharp.MetadataImporter/DynamicTypeReader:.cctor ()",
      "code_size" : "68",
      "class" : "DynamicTypeReader",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ImportedDefinition:.ctor (System.Reflection.MemberInfo,Mono.CSharp.MetadataImporter)",
      "code_size" : "74",
      "class" : "ImportedDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsImported",
      "signature" : "bool Mono.CSharp.ImportedDefinition:get_IsImported ()",
      "code_size" : "14",
      "class" : "ImportedDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Name",
      "signature" : "string Mono.CSharp.ImportedDefinition:get_Name ()",
      "code_size" : "32",
      "class" : "ImportedDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ConditionalConditions",
      "signature" : "string[] Mono.CSharp.ImportedDefinition:ConditionalConditions ()",
      "code_size" : "46",
      "class" : "ImportedDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetAttributeObsolete",
      "signature" : "System.ObsoleteAttribute Mono.CSharp.ImportedDefinition:GetAttributeObsolete ()",
      "code_size" : "46",
      "class" : "ImportedDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_CLSAttributeValue",
      "signature" : "System.Nullable`1<bool> Mono.CSharp.ImportedDefinition:get_CLSAttributeValue ()",
      "code_size" : "71",
      "class" : "ImportedDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ReadAttributes",
      "signature" : "void Mono.CSharp.ImportedDefinition:ReadAttributes ()",
      "code_size" : "56",
      "class" : "ImportedDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetIsAssigned",
      "signature" : "void Mono.CSharp.ImportedDefinition:SetIsAssigned ()",
      "code_size" : "9",
      "class" : "ImportedDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetIsUsed",
      "signature" : "void Mono.CSharp.ImportedDefinition:SetIsUsed ()",
      "code_size" : "9",
      "class" : "ImportedDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ImportedDefinition/AttributesBag:.ctor ()",
      "code_size" : "9",
      "class" : "AttributesBag",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "HasMissingType",
      "signature" : "bool Mono.CSharp.ImportedDefinition/AttributesBag:HasMissingType (System.Reflection.ConstructorInfo)",
      "code_size" : "11",
      "class" : "AttributesBag",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Read",
      "signature" : "Mono.CSharp.ImportedDefinition/AttributesBag Mono.CSharp.ImportedDefinition/AttributesBag:Read (System.Reflection.MemberInfo,Mono.CSharp.MetadataImporter)",
      "code_size" : "2892",
      "class" : "AttributesBag",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".cctor",
      "signature" : "void Mono.CSharp.ImportedDefinition/AttributesBag:.cctor ()",
      "code_size" : "39",
      "class" : "AttributesBag",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ImportedModuleDefinition:.ctor (System.Reflection.Module)",
      "code_size" : "43",
      "class" : "ImportedModuleDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsCLSCompliant",
      "signature" : "bool Mono.CSharp.ImportedModuleDefinition:get_IsCLSCompliant ()",
      "code_size" : "20",
      "class" : "ImportedModuleDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Name",
      "signature" : "string Mono.CSharp.ImportedModuleDefinition:get_Name ()",
      "code_size" : "32",
      "class" : "ImportedModuleDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ReadAttributes",
      "signature" : "void Mono.CSharp.ImportedModuleDefinition:ReadAttributes ()",
      "code_size" : "408",
      "class" : "ImportedModuleDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ReadAssemblyAttributes",
      "signature" : "System.Collections.Generic.List`1<Mono.CSharp.Attribute> Mono.CSharp.ImportedModuleDefinition:ReadAssemblyAttributes ()",
      "code_size" : "147",
      "class" : "ImportedModuleDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ImportedAssemblyDefinition:.ctor (System.Reflection.Assembly)",
      "code_size" : "81",
      "class" : "ImportedAssemblyDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Assembly",
      "signature" : "System.Reflection.Assembly Mono.CSharp.ImportedAssemblyDefinition:get_Assembly ()",
      "code_size" : "20",
      "class" : "ImportedAssemblyDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_FullName",
      "signature" : "string Mono.CSharp.ImportedAssemblyDefinition:get_FullName ()",
      "code_size" : "31",
      "class" : "ImportedAssemblyDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_HasStrongName",
      "signature" : "bool Mono.CSharp.ImportedAssemblyDefinition:get_HasStrongName ()",
      "code_size" : "54",
      "class" : "ImportedAssemblyDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsMissing",
      "signature" : "bool Mono.CSharp.ImportedAssemblyDefinition:get_IsMissing ()",
      "code_size" : "11",
      "class" : "ImportedAssemblyDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsCLSCompliant",
      "signature" : "bool Mono.CSharp.ImportedAssemblyDefinition:get_IsCLSCompliant ()",
      "code_size" : "20",
      "class" : "ImportedAssemblyDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Location",
      "signature" : "string Mono.CSharp.ImportedAssemblyDefinition:get_Location ()",
      "code_size" : "32",
      "class" : "ImportedAssemblyDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Name",
      "signature" : "string Mono.CSharp.ImportedAssemblyDefinition:get_Name ()",
      "code_size" : "30",
      "class" : "ImportedAssemblyDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetPublicKeyToken",
      "signature" : "byte[] Mono.CSharp.ImportedAssemblyDefinition:GetPublicKeyToken ()",
      "code_size" : "31",
      "class" : "ImportedAssemblyDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetAssemblyVisibleToName",
      "signature" : "System.Reflection.AssemblyName Mono.CSharp.ImportedAssemblyDefinition:GetAssemblyVisibleToName (Mono.CSharp.IAssemblyDefinition)",
      "code_size" : "41",
      "class" : "ImportedAssemblyDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsFriendAssemblyTo",
      "signature" : "bool Mono.CSharp.ImportedAssemblyDefinition:IsFriendAssemblyTo (Mono.CSharp.IAssemblyDefinition)",
      "code_size" : "583",
      "class" : "ImportedAssemblyDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ReadAttributes",
      "signature" : "void Mono.CSharp.ImportedAssemblyDefinition:ReadAttributes ()",
      "code_size" : "1033",
      "class" : "ImportedAssemblyDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ToString",
      "signature" : "string Mono.CSharp.ImportedAssemblyDefinition:ToString ()",
      "code_size" : "18",
      "class" : "ImportedAssemblyDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ImportedMemberDefinition:.ctor (System.Reflection.MemberInfo,Mono.CSharp.TypeSpec,Mono.CSharp.MetadataImporter)",
      "code_size" : "63",
      "class" : "ImportedMemberDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_MemberType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.ImportedMemberDefinition:get_MemberType ()",
      "code_size" : "20",
      "class" : "ImportedMemberDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ImportedParameterMemberDefinition:.ctor (System.Reflection.MethodBase,Mono.CSharp.TypeSpec,Mono.CSharp.AParametersCollection,Mono.CSharp.MetadataImporter)",
      "code_size" : "68",
      "class" : "ImportedParameterMemberDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ImportedParameterMemberDefinition:.ctor (System.Reflection.PropertyInfo,Mono.CSharp.TypeSpec,Mono.CSharp.AParametersCollection,Mono.CSharp.MetadataImporter)",
      "code_size" : "68",
      "class" : "ImportedParameterMemberDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Parameters",
      "signature" : "Mono.CSharp.AParametersCollection Mono.CSharp.ImportedParameterMemberDefinition:get_Parameters ()",
      "code_size" : "20",
      "class" : "ImportedParameterMemberDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ImportedMethodDefinition:.ctor (System.Reflection.MethodBase,Mono.CSharp.TypeSpec,Mono.CSharp.AParametersCollection,Mono.CSharp.MetadataImporter)",
      "code_size" : "38",
      "class" : "ImportedMethodDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mono.CSharp.IMethodDefinition.get_Metadata",
      "signature" : "System.Reflection.MethodBase Mono.CSharp.ImportedMethodDefinition:Mono.CSharp.IMethodDefinition.get_Metadata ()",
      "code_size" : "82",
      "class" : "ImportedMethodDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ImportedGenericMethodDefinition:.ctor (System.Reflection.MethodInfo,Mono.CSharp.TypeSpec,Mono.CSharp.AParametersCollection,Mono.CSharp.TypeParameterSpec[],Mono.CSharp.MetadataImporter)",
      "code_size" : "73",
      "class" : "ImportedGenericMethodDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_TypeParameters",
      "signature" : "Mono.CSharp.TypeParameterSpec[] Mono.CSharp.ImportedGenericMethodDefinition:get_TypeParameters ()",
      "code_size" : "20",
      "class" : "ImportedGenericMethodDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_TypeParametersCount",
      "signature" : "int Mono.CSharp.ImportedGenericMethodDefinition:get_TypeParametersCount ()",
      "code_size" : "24",
      "class" : "ImportedGenericMethodDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ImportedTypeDefinition:.ctor (System.Type,Mono.CSharp.MetadataImporter)",
      "code_size" : "28",
      "class" : "ImportedTypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_DeclaringAssembly",
      "signature" : "Mono.CSharp.IAssemblyDefinition Mono.CSharp.ImportedTypeDefinition:get_DeclaringAssembly ()",
      "code_size" : "72",
      "class" : "ImportedTypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mono.CSharp.ITypeDefinition.get_IsComImport",
      "signature" : "bool Mono.CSharp.ImportedTypeDefinition:Mono.CSharp.ITypeDefinition.get_IsComImport ()",
      "code_size" : "91",
      "class" : "ImportedTypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mono.CSharp.ITypeDefinition.get_IsPartial",
      "signature" : "bool Mono.CSharp.ImportedTypeDefinition:Mono.CSharp.ITypeDefinition.get_IsPartial ()",
      "code_size" : "11",
      "class" : "ImportedTypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mono.CSharp.ITypeDefinition.get_IsTypeForwarder",
      "signature" : "bool Mono.CSharp.ImportedTypeDefinition:Mono.CSharp.ITypeDefinition.get_IsTypeForwarder ()",
      "code_size" : "11",
      "class" : "ImportedTypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mono.CSharp.ITypeDefinition.get_IsCyclicTypeForwarder",
      "signature" : "bool Mono.CSharp.ImportedTypeDefinition:Mono.CSharp.ITypeDefinition.get_IsCyclicTypeForwarder ()",
      "code_size" : "11",
      "class" : "ImportedTypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Name",
      "signature" : "string Mono.CSharp.ImportedTypeDefinition:get_Name ()",
      "code_size" : "165",
      "class" : "ImportedTypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Namespace",
      "signature" : "string Mono.CSharp.ImportedTypeDefinition:get_Namespace ()",
      "code_size" : "91",
      "class" : "ImportedTypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_TypeParametersCount",
      "signature" : "int Mono.CSharp.ImportedTypeDefinition:get_TypeParametersCount ()",
      "code_size" : "45",
      "class" : "ImportedTypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_TypeParameters",
      "signature" : "Mono.CSharp.TypeParameterSpec[] Mono.CSharp.ImportedTypeDefinition:get_TypeParameters ()",
      "code_size" : "20",
      "class" : "ImportedTypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_TypeParameters",
      "signature" : "void Mono.CSharp.ImportedTypeDefinition:set_TypeParameters (Mono.CSharp.TypeParameterSpec[])",
      "code_size" : "43",
      "class" : "ImportedTypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DefineInterfaces",
      "signature" : "void Mono.CSharp.ImportedTypeDefinition:DefineInterfaces (Mono.CSharp.TypeSpec)",
      "code_size" : "247",
      "class" : "ImportedTypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_MissingDependency",
      "signature" : "void Mono.CSharp.ImportedTypeDefinition:Error_MissingDependency (Mono.CSharp.IMemberContext,System.Collections.Generic.List`1<Mono.CSharp.MissingTypeSpecReference>,Mono.CSharp.Location)",
      "code_size" : "959",
      "class" : "ImportedTypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetAttributeCoClass",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.ImportedTypeDefinition:GetAttributeCoClass ()",
      "code_size" : "46",
      "class" : "ImportedTypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetAttributeDefaultMember",
      "signature" : "string Mono.CSharp.ImportedTypeDefinition:GetAttributeDefaultMember ()",
      "code_size" : "46",
      "class" : "ImportedTypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetAttributeUsage",
      "signature" : "System.AttributeUsageAttribute Mono.CSharp.ImportedTypeDefinition:GetAttributeUsage (Mono.CSharp.PredefinedAttribute)",
      "code_size" : "46",
      "class" : "ImportedTypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mono.CSharp.ITypeDefinition.IsInternalAsPublic",
      "signature" : "bool Mono.CSharp.ImportedTypeDefinition:Mono.CSharp.ITypeDefinition.IsInternalAsPublic (Mono.CSharp.IAssemblyDefinition)",
      "code_size" : "134",
      "class" : "ImportedTypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "LoadMembers",
      "signature" : "void Mono.CSharp.ImportedTypeDefinition:LoadMembers (Mono.CSharp.TypeSpec,bool,Mono.CSharp.MemberCache&)",
      "code_size" : "3903",
      "class" : "ImportedTypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ImportedTypeParameterDefinition:.ctor (System.Type,Mono.CSharp.MetadataImporter)",
      "code_size" : "28",
      "class" : "ImportedTypeParameterDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_DeclaringAssembly",
      "signature" : "Mono.CSharp.IAssemblyDefinition Mono.CSharp.ImportedTypeParameterDefinition:get_DeclaringAssembly ()",
      "code_size" : "27",
      "class" : "ImportedTypeParameterDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mono.CSharp.ITypeDefinition.get_IsComImport",
      "signature" : "bool Mono.CSharp.ImportedTypeParameterDefinition:Mono.CSharp.ITypeDefinition.get_IsComImport ()",
      "code_size" : "11",
      "class" : "ImportedTypeParameterDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mono.CSharp.ITypeDefinition.get_IsPartial",
      "signature" : "bool Mono.CSharp.ImportedTypeParameterDefinition:Mono.CSharp.ITypeDefinition.get_IsPartial ()",
      "code_size" : "11",
      "class" : "ImportedTypeParameterDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mono.CSharp.ITypeDefinition.get_IsTypeForwarder",
      "signature" : "bool Mono.CSharp.ImportedTypeParameterDefinition:Mono.CSharp.ITypeDefinition.get_IsTypeForwarder ()",
      "code_size" : "11",
      "class" : "ImportedTypeParameterDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mono.CSharp.ITypeDefinition.get_IsCyclicTypeForwarder",
      "signature" : "bool Mono.CSharp.ImportedTypeParameterDefinition:Mono.CSharp.ITypeDefinition.get_IsCyclicTypeForwarder ()",
      "code_size" : "11",
      "class" : "ImportedTypeParameterDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Namespace",
      "signature" : "string Mono.CSharp.ImportedTypeParameterDefinition:get_Namespace ()",
      "code_size" : "11",
      "class" : "ImportedTypeParameterDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_TypeParametersCount",
      "signature" : "int Mono.CSharp.ImportedTypeParameterDefinition:get_TypeParametersCount ()",
      "code_size" : "11",
      "class" : "ImportedTypeParameterDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_TypeParameters",
      "signature" : "Mono.CSharp.TypeParameterSpec[] Mono.CSharp.ImportedTypeParameterDefinition:get_TypeParameters ()",
      "code_size" : "11",
      "class" : "ImportedTypeParameterDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetAttributeCoClass",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.ImportedTypeParameterDefinition:GetAttributeCoClass ()",
      "code_size" : "11",
      "class" : "ImportedTypeParameterDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetAttributeDefaultMember",
      "signature" : "string Mono.CSharp.ImportedTypeParameterDefinition:GetAttributeDefaultMember ()",
      "code_size" : "27",
      "class" : "ImportedTypeParameterDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetAttributeUsage",
      "signature" : "System.AttributeUsageAttribute Mono.CSharp.ImportedTypeParameterDefinition:GetAttributeUsage (Mono.CSharp.PredefinedAttribute)",
      "code_size" : "27",
      "class" : "ImportedTypeParameterDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mono.CSharp.ITypeDefinition.IsInternalAsPublic",
      "signature" : "bool Mono.CSharp.ImportedTypeParameterDefinition:Mono.CSharp.ITypeDefinition.IsInternalAsPublic (Mono.CSharp.IAssemblyDefinition)",
      "code_size" : "27",
      "class" : "ImportedTypeParameterDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "LoadMembers",
      "signature" : "void Mono.CSharp.ImportedTypeParameterDefinition:LoadMembers (Mono.CSharp.TypeSpec,bool,Mono.CSharp.MemberCache&)",
      "code_size" : "27",
      "class" : "ImportedTypeParameterDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.YieldStatement`1<T_REF>:.ctor (Mono.CSharp.Expression,Mono.CSharp.Location)",
      "code_size" : "70",
      "class" : "YieldStatement`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Expr",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.YieldStatement`1<T_REF>:get_Expr ()",
      "code_size" : "20",
      "class" : "YieldStatement`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.YieldStatement`1<T_REF>:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Statement)",
      "code_size" : "163",
      "class" : "YieldStatement`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoEmit",
      "signature" : "void Mono.CSharp.YieldStatement`1<T_REF>:DoEmit (Mono.CSharp.EmitContext)",
      "code_size" : "117",
      "class" : "YieldStatement`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoFlowAnalysis",
      "signature" : "bool Mono.CSharp.YieldStatement`1<T_REF>:DoFlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "53",
      "class" : "YieldStatement`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Resolve",
      "signature" : "bool Mono.CSharp.YieldStatement`1<T_REF>:Resolve (Mono.CSharp.BlockContext)",
      "code_size" : "317",
      "class" : "YieldStatement`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "RegisterResumePoint",
      "signature" : "void Mono.CSharp.YieldStatement`1<T_REF>:RegisterResumePoint ()",
      "code_size" : "198",
      "class" : "YieldStatement`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Yield:.ctor (Mono.CSharp.Expression,Mono.CSharp.Location)",
      "code_size" : "33",
      "class" : "Yield",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CheckContext",
      "signature" : "bool Mono.CSharp.Yield:CheckContext (Mono.CSharp.BlockContext,Mono.CSharp.Location)",
      "code_size" : "175",
      "class" : "Yield",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Resolve",
      "signature" : "bool Mono.CSharp.Yield:Resolve (Mono.CSharp.BlockContext)",
      "code_size" : "429",
      "class" : "Yield",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.Yield:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "Yield",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.YieldBreak:.ctor (Mono.CSharp.Location)",
      "code_size" : "32",
      "class" : "YieldBreak",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsLocalExit",
      "signature" : "bool Mono.CSharp.YieldBreak:get_IsLocalExit ()",
      "code_size" : "11",
      "class" : "YieldBreak",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.YieldBreak:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Statement)",
      "code_size" : "27",
      "class" : "YieldBreak",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "bool Mono.CSharp.YieldBreak:DoResolve (Mono.CSharp.BlockContext)",
      "code_size" : "138",
      "class" : "YieldBreak",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoEmit",
      "signature" : "void Mono.CSharp.YieldBreak:DoEmit (Mono.CSharp.EmitContext)",
      "code_size" : "45",
      "class" : "YieldBreak",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoFlowAnalysis",
      "signature" : "bool Mono.CSharp.YieldBreak:DoFlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "14",
      "class" : "YieldBreak",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MarkReachable",
      "signature" : "Mono.CSharp.Reachability Mono.CSharp.YieldBreak:MarkReachable (Mono.CSharp.Reachability)",
      "code_size" : "58",
      "class" : "YieldBreak",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.YieldBreak:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "YieldBreak",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.StateMachine:.ctor (Mono.CSharp.ParametersBlock,Mono.CSharp.TypeDefinition,Mono.CSharp.MemberBase,Mono.CSharp.TypeParameters,string,Mono.CSharp.MemberKind)",
      "code_size" : "102",
      "class" : "StateMachine",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_OriginalTypeParameters",
      "signature" : "Mono.CSharp.TypeParameters Mono.CSharp.StateMachine:get_OriginalTypeParameters ()",
      "code_size" : "23",
      "class" : "StateMachine",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_OriginalTypeParameters",
      "signature" : "void Mono.CSharp.StateMachine:set_OriginalTypeParameters (Mono.CSharp.TypeParameters)",
      "code_size" : "49",
      "class" : "StateMachine",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_StateMachineMethod",
      "signature" : "Mono.CSharp.StateMachineMethod Mono.CSharp.StateMachine:get_StateMachineMethod ()",
      "code_size" : "23",
      "class" : "StateMachine",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_PC",
      "signature" : "Mono.CSharp.Field Mono.CSharp.StateMachine:get_PC ()",
      "code_size" : "23",
      "class" : "StateMachine",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddEntryMethod",
      "signature" : "void Mono.CSharp.StateMachine:AddEntryMethod (Mono.CSharp.StateMachineMethod)",
      "code_size" : "128",
      "class" : "StateMachine",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoDefineMembers",
      "signature" : "bool Mono.CSharp.StateMachine:DoDefineMembers ()",
      "code_size" : "173",
      "class" : "StateMachine",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetVariableMangledName",
      "signature" : "string Mono.CSharp.StateMachine:GetVariableMangledName (Mono.CSharp.ResolveContext,Mono.CSharp.LocalVariable)",
      "code_size" : "302",
      "class" : "StateMachine",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.IteratorStorey:.ctor (Mono.CSharp.Iterator)",
      "code_size" : "202",
      "class" : "IteratorStorey",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_CurrentField",
      "signature" : "Mono.CSharp.Field Mono.CSharp.IteratorStorey:get_CurrentField ()",
      "code_size" : "23",
      "class" : "IteratorStorey",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_DisposingField",
      "signature" : "Mono.CSharp.Field Mono.CSharp.IteratorStorey:get_DisposingField ()",
      "code_size" : "23",
      "class" : "IteratorStorey",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_HoistedParameters",
      "signature" : "System.Collections.Generic.IList`1<Mono.CSharp.HoistedParameter> Mono.CSharp.IteratorStorey:get_HoistedParameters ()",
      "code_size" : "23",
      "class" : "IteratorStorey",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DefineDefaultConstructor",
      "signature" : "Mono.CSharp.Constructor Mono.CSharp.IteratorStorey:DefineDefaultConstructor (bool)",
      "code_size" : "65",
      "class" : "IteratorStorey",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveBaseTypes",
      "signature" : "Mono.CSharp.TypeSpec[] Mono.CSharp.IteratorStorey:ResolveBaseTypes (Mono.CSharp.FullNamedExpression&)",
      "code_size" : "886",
      "class" : "IteratorStorey",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoDefineMembers",
      "signature" : "bool Mono.CSharp.IteratorStorey:DoDefineMembers ()",
      "code_size" : "1752",
      "class" : "IteratorStorey",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Define_Current",
      "signature" : "void Mono.CSharp.IteratorStorey:Define_Current (bool)",
      "code_size" : "956",
      "class" : "IteratorStorey",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Define_Reset",
      "signature" : "void Mono.CSharp.IteratorStorey:Define_Reset ()",
      "code_size" : "669",
      "class" : "IteratorStorey",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitHoistedParameters",
      "signature" : "void Mono.CSharp.IteratorStorey:EmitHoistedParameters (Mono.CSharp.EmitContext,System.Collections.Generic.List`1<Mono.CSharp.HoistedParameter>)",
      "code_size" : "67",
      "class" : "IteratorStorey",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.IteratorStorey/GetEnumeratorMethod:.ctor (Mono.CSharp.IteratorStorey,Mono.CSharp.FullNamedExpression,Mono.CSharp.MemberName)",
      "code_size" : "63",
      "class" : "GetEnumeratorMethod",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Create",
      "signature" : "Mono.CSharp.IteratorStorey/GetEnumeratorMethod Mono.CSharp.IteratorStorey/GetEnumeratorMethod:Create (Mono.CSharp.IteratorStorey,Mono.CSharp.FullNamedExpression,Mono.CSharp.MemberName)",
      "code_size" : "30",
      "class" : "GetEnumeratorMethod",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Create",
      "signature" : "Mono.CSharp.IteratorStorey/GetEnumeratorMethod Mono.CSharp.IteratorStorey/GetEnumeratorMethod:Create (Mono.CSharp.IteratorStorey,Mono.CSharp.FullNamedExpression,Mono.CSharp.MemberName,Mono.CSharp.Statement)",
      "code_size" : "189",
      "class" : "GetEnumeratorMethod",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.IteratorStorey/GetEnumeratorMethod/GetEnumeratorStatement:.ctor (Mono.CSharp.IteratorStorey,Mono.CSharp.StateMachineMethod)",
      "code_size" : "102",
      "class" : "GetEnumeratorStatement",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.IteratorStorey/GetEnumeratorMethod/GetEnumeratorStatement:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Statement)",
      "code_size" : "27",
      "class" : "GetEnumeratorStatement",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Resolve",
      "signature" : "bool Mono.CSharp.IteratorStorey/GetEnumeratorMethod/GetEnumeratorStatement:Resolve (Mono.CSharp.BlockContext)",
      "code_size" : "1754",
      "class" : "GetEnumeratorStatement",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoEmit",
      "signature" : "void Mono.CSharp.IteratorStorey/GetEnumeratorMethod/GetEnumeratorStatement:DoEmit (Mono.CSharp.EmitContext)",
      "code_size" : "1180",
      "class" : "GetEnumeratorStatement",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoFlowAnalysis",
      "signature" : "bool Mono.CSharp.IteratorStorey/GetEnumeratorMethod/GetEnumeratorStatement:DoFlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "27",
      "class" : "GetEnumeratorStatement",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "MarkReachable",
      "signature" : "Mono.CSharp.Reachability Mono.CSharp.IteratorStorey/GetEnumeratorMethod/GetEnumeratorStatement:MarkReachable (Mono.CSharp.Reachability)",
      "code_size" : "58",
      "class" : "GetEnumeratorStatement",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.IteratorStorey/DisposeMethod:.ctor (Mono.CSharp.IteratorStorey)",
      "code_size" : "313",
      "class" : "DisposeMethod",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.IteratorStorey/DisposeMethod/DisposeMethodStatement:.ctor (Mono.CSharp.Iterator)",
      "code_size" : "69",
      "class" : "DisposeMethodStatement",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.IteratorStorey/DisposeMethod/DisposeMethodStatement:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Statement)",
      "code_size" : "27",
      "class" : "DisposeMethodStatement",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Resolve",
      "signature" : "bool Mono.CSharp.IteratorStorey/DisposeMethod/DisposeMethodStatement:Resolve (Mono.CSharp.BlockContext)",
      "code_size" : "14",
      "class" : "DisposeMethodStatement",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoEmit",
      "signature" : "void Mono.CSharp.IteratorStorey/DisposeMethod/DisposeMethodStatement:DoEmit (Mono.CSharp.EmitContext)",
      "code_size" : "77",
      "class" : "DisposeMethodStatement",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoFlowAnalysis",
      "signature" : "bool Mono.CSharp.IteratorStorey/DisposeMethod/DisposeMethodStatement:DoFlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "27",
      "class" : "DisposeMethodStatement",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.IteratorStorey/DynamicMethodGroupExpr:.ctor (Mono.CSharp.Method,Mono.CSharp.Location)",
      "code_size" : "72",
      "class" : "DynamicMethodGroupExpr",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.IteratorStorey/DynamicMethodGroupExpr:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "298",
      "class" : "DynamicMethodGroupExpr",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.IteratorStorey/DynamicFieldExpr:.ctor (Mono.CSharp.Field,Mono.CSharp.Location)",
      "code_size" : "60",
      "class" : "DynamicFieldExpr",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.IteratorStorey/DynamicFieldExpr:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "227",
      "class" : "DynamicFieldExpr",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.StateMachineMethod:.ctor (Mono.CSharp.StateMachine,Mono.CSharp.StateMachineInitializer,Mono.CSharp.FullNamedExpression,Mono.CSharp.Modifiers,Mono.CSharp.MemberName,Mono.CSharp.Block/Flags)",
      "code_size" : "254",
      "class" : "StateMachineMethod",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateEmitContext",
      "signature" : "Mono.CSharp.EmitContext Mono.CSharp.StateMachineMethod:CreateEmitContext (System.Reflection.Emit.ILGenerator,Mono.CompilerServices.SymbolWriter.SourceMethodBuilder)",
      "code_size" : "223",
      "class" : "StateMachineMethod",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.StateMachineInitializer:.ctor (Mono.CSharp.ParametersBlock,Mono.CSharp.TypeDefinition,Mono.CSharp.TypeSpec)",
      "code_size" : "89",
      "class" : "StateMachineInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_BodyEnd",
      "signature" : "System.Reflection.Emit.Label Mono.CSharp.StateMachineInitializer:get_BodyEnd ()",
      "code_size" : "30",
      "class" : "StateMachineInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_BodyEnd",
      "signature" : "void Mono.CSharp.StateMachineInitializer:set_BodyEnd (System.Reflection.Emit.Label)",
      "code_size" : "32",
      "class" : "StateMachineInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_CurrentPC",
      "signature" : "System.Reflection.Emit.LocalBuilder Mono.CSharp.StateMachineInitializer:get_CurrentPC ()",
      "code_size" : "20",
      "class" : "StateMachineInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_SkipFinally",
      "signature" : "System.Reflection.Emit.LocalBuilder Mono.CSharp.StateMachineInitializer:get_SkipFinally ()",
      "code_size" : "20",
      "class" : "StateMachineInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Storey",
      "signature" : "Mono.CSharp.AnonymousMethodStorey Mono.CSharp.StateMachineInitializer:get_Storey ()",
      "code_size" : "20",
      "class" : "StateMachineInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddResumePoint",
      "signature" : "int Mono.CSharp.StateMachineInitializer:AddResumePoint (Mono.CSharp.ResumableStatement)",
      "code_size" : "158",
      "class" : "StateMachineInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.StateMachineInitializer:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "47",
      "class" : "StateMachineInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateBlockContext",
      "signature" : "Mono.CSharp.BlockContext Mono.CSharp.StateMachineInitializer:CreateBlockContext (Mono.CSharp.BlockContext)",
      "code_size" : "315",
      "class" : "StateMachineInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.StateMachineInitializer:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "468",
      "class" : "StateMachineInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.StateMachineInitializer:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "49",
      "class" : "StateMachineInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitMoveNext_NoResumePoints",
      "signature" : "void Mono.CSharp.StateMachineInitializer:EmitMoveNext_NoResumePoints (Mono.CSharp.EmitContext)",
      "code_size" : "1262",
      "class" : "StateMachineInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitMoveNext",
      "signature" : "void Mono.CSharp.StateMachineInitializer:EmitMoveNext (Mono.CSharp.EmitContext)",
      "code_size" : "3287",
      "class" : "StateMachineInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitMoveNextEpilogue",
      "signature" : "void Mono.CSharp.StateMachineInitializer:EmitMoveNextEpilogue (Mono.CSharp.EmitContext)",
      "code_size" : "9",
      "class" : "StateMachineInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitLeave",
      "signature" : "void Mono.CSharp.StateMachineInitializer:EmitLeave (Mono.CSharp.EmitContext,bool)",
      "code_size" : "313",
      "class" : "StateMachineInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "InjectYield",
      "signature" : "void Mono.CSharp.StateMachineInitializer:InjectYield (Mono.CSharp.EmitContext,Mono.CSharp.Expression,int,bool,System.Reflection.Emit.Label)",
      "code_size" : "1112",
      "class" : "StateMachineInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetStateMachine",
      "signature" : "void Mono.CSharp.StateMachineInitializer:SetStateMachine (Mono.CSharp.StateMachine)",
      "code_size" : "43",
      "class" : "StateMachineInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.StateMachineInitializer/MoveNextBodyStatement:.ctor (Mono.CSharp.StateMachineInitializer)",
      "code_size" : "69",
      "class" : "MoveNextBodyStatement",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.StateMachineInitializer/MoveNextBodyStatement:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Statement)",
      "code_size" : "27",
      "class" : "MoveNextBodyStatement",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Resolve",
      "signature" : "bool Mono.CSharp.StateMachineInitializer/MoveNextBodyStatement:Resolve (Mono.CSharp.BlockContext)",
      "code_size" : "14",
      "class" : "MoveNextBodyStatement",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoEmit",
      "signature" : "void Mono.CSharp.StateMachineInitializer/MoveNextBodyStatement:DoEmit (Mono.CSharp.EmitContext)",
      "code_size" : "41",
      "class" : "MoveNextBodyStatement",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.StateMachineInitializer/MoveNextBodyStatement:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "31",
      "class" : "MoveNextBodyStatement",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoFlowAnalysis",
      "signature" : "bool Mono.CSharp.StateMachineInitializer/MoveNextBodyStatement:DoFlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "51",
      "class" : "MoveNextBodyStatement",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "MarkReachable",
      "signature" : "Mono.CSharp.Reachability Mono.CSharp.StateMachineInitializer/MoveNextBodyStatement:MarkReachable (Mono.CSharp.Reachability)",
      "code_size" : "93",
      "class" : "MoveNextBodyStatement",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Iterator:.ctor (Mono.CSharp.ParametersBlock,Mono.CSharp.IMethodData,Mono.CSharp.TypeDefinition,Mono.CSharp.TypeSpec,bool)",
      "code_size" : "185",
      "class" : "Iterator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Container",
      "signature" : "Mono.CSharp.ToplevelBlock Mono.CSharp.Iterator:get_Container ()",
      "code_size" : "39",
      "class" : "Iterator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ContainerType",
      "signature" : "string Mono.CSharp.Iterator:get_ContainerType ()",
      "code_size" : "16",
      "class" : "Iterator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsIterator",
      "signature" : "bool Mono.CSharp.Iterator:get_IsIterator ()",
      "code_size" : "14",
      "class" : "Iterator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateFinallyHost",
      "signature" : "Mono.CSharp.Method Mono.CSharp.Iterator:CreateFinallyHost (Mono.CSharp.TryFinallyBlock)",
      "code_size" : "527",
      "class" : "Iterator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitYieldBreak",
      "signature" : "void Mono.CSharp.Iterator:EmitYieldBreak (Mono.CSharp.EmitContext,bool)",
      "code_size" : "313",
      "class" : "Iterator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSignatureForError",
      "signature" : "string Mono.CSharp.Iterator:GetSignatureForError ()",
      "code_size" : "36",
      "class" : "Iterator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.Iterator:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "452",
      "class" : "Iterator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitDispose",
      "signature" : "void Mono.CSharp.Iterator:EmitDispose (Mono.CSharp.EmitContext)",
      "code_size" : "1927",
      "class" : "Iterator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitStatement",
      "signature" : "void Mono.CSharp.Iterator:EmitStatement (Mono.CSharp.EmitContext)",
      "code_size" : "27",
      "class" : "Iterator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "InjectYield",
      "signature" : "void Mono.CSharp.Iterator:InjectYield (Mono.CSharp.EmitContext,Mono.CSharp.Expression,int,bool,System.Reflection.Emit.Label)",
      "code_size" : "477",
      "class" : "Iterator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateIterator",
      "signature" : "void Mono.CSharp.Iterator:CreateIterator (Mono.CSharp.IMethodData,Mono.CSharp.TypeDefinition,Mono.CSharp.Modifiers)",
      "code_size" : "1040",
      "class" : "Iterator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CheckType",
      "signature" : "bool Mono.CSharp.Iterator:CheckType (Mono.CSharp.TypeSpec,Mono.CSharp.TypeContainer,Mono.CSharp.TypeSpec&,bool&)",
      "code_size" : "634",
      "class" : "Iterator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Iterator/TryFinallyBlockProxyStatement:.ctor (Mono.CSharp.Iterator,Mono.CSharp.TryFinallyBlock)",
      "code_size" : "74",
      "class" : "TryFinallyBlockProxyStatement",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.Iterator/TryFinallyBlockProxyStatement:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Statement)",
      "code_size" : "27",
      "class" : "TryFinallyBlockProxyStatement",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoFlowAnalysis",
      "signature" : "bool Mono.CSharp.Iterator/TryFinallyBlockProxyStatement:DoFlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "27",
      "class" : "TryFinallyBlockProxyStatement",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoEmit",
      "signature" : "void Mono.CSharp.Iterator/TryFinallyBlockProxyStatement:DoEmit (Mono.CSharp.EmitContext)",
      "code_size" : "186",
      "class" : "TryFinallyBlockProxyStatement",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.LambdaExpression:.ctor (Mono.CSharp.Location)",
      "code_size" : "28",
      "class" : "LambdaExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.LambdaExpression:CreateExpressionTree (Mono.CSharp.ResolveContext,Mono.CSharp.TypeSpec)",
      "code_size" : "678",
      "class" : "LambdaExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_HasExplicitParameters",
      "signature" : "bool Mono.CSharp.LambdaExpression:get_HasExplicitParameters ()",
      "code_size" : "185",
      "class" : "LambdaExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveParameters",
      "signature" : "Mono.CSharp.ParametersCompiled Mono.CSharp.LambdaExpression:ResolveParameters (Mono.CSharp.ResolveContext,Mono.CSharp.TypeInferenceContext,Mono.CSharp.TypeSpec)",
      "code_size" : "710",
      "class" : "LambdaExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CompatibleMethodFactory",
      "signature" : "Mono.CSharp.AnonymousMethodBody Mono.CSharp.LambdaExpression:CompatibleMethodFactory (Mono.CSharp.TypeSpec,Mono.CSharp.TypeSpec,Mono.CSharp.ParametersCompiled,Mono.CSharp.ParametersBlock)",
      "code_size" : "106",
      "class" : "LambdaExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolveParameters",
      "signature" : "bool Mono.CSharp.LambdaExpression:DoResolveParameters (Mono.CSharp.ResolveContext)",
      "code_size" : "79",
      "class" : "LambdaExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSignatureForError",
      "signature" : "string Mono.CSharp.LambdaExpression:GetSignatureForError ()",
      "code_size" : "16",
      "class" : "LambdaExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.LambdaExpression:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "LambdaExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.LambdaMethod:.ctor (Mono.CSharp.ParametersCompiled,Mono.CSharp.ParametersBlock,Mono.CSharp.TypeSpec,Mono.CSharp.TypeSpec,Mono.CSharp.Location)",
      "code_size" : "48",
      "class" : "LambdaMethod",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ContainerType",
      "signature" : "string Mono.CSharp.LambdaMethod:get_ContainerType ()",
      "code_size" : "16",
      "class" : "LambdaMethod",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.LambdaMethod:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Expression)",
      "code_size" : "9",
      "class" : "LambdaMethod",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.LambdaMethod:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "563",
      "class" : "LambdaMethod",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ContextualReturn:.ctor (Mono.CSharp.Expression)",
      "code_size" : "56",
      "class" : "ContextualReturn",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.ContextualReturn:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "39",
      "class" : "ContextualReturn",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoEmit",
      "signature" : "void Mono.CSharp.ContextualReturn:DoEmit (Mono.CSharp.EmitContext)",
      "code_size" : "386",
      "class" : "ContextualReturn",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "bool Mono.CSharp.ContextualReturn:DoResolve (Mono.CSharp.BlockContext)",
      "code_size" : "396",
      "class" : "ContextualReturn",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Linq.QueryExpression:.ctor (Mono.CSharp.Linq.AQueryClause)",
      "code_size" : "77",
      "class" : "QueryExpression",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
    },
    {
      "name" : "BuildQueryClause",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Linq.QueryExpression:BuildQueryClause (Mono.CSharp.ResolveContext,Mono.CSharp.Expression,Mono.CSharp.Parameter)",
      "code_size" : "62",
      "class" : "QueryExpression",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Linq.QueryExpression:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "146",
      "class" : "QueryExpression",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_MethodName",
      "signature" : "string Mono.CSharp.Linq.QueryExpression:get_MethodName ()",
      "code_size" : "27",
      "class" : "QueryExpression",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Linq.AQueryClause:.ctor (Mono.CSharp.Linq.QueryBlock,Mono.CSharp.Expression,Mono.CSharp.Location)",
      "code_size" : "90",
      "class" : "AQueryClause",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.Linq.AQueryClause:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Expression)",
      "code_size" : "292",
      "class" : "AQueryClause",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Linq.AQueryClause:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "41",
      "class" : "AQueryClause",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
    },
    {
      "name" : "BuildQueryClause",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Linq.AQueryClause:BuildQueryClause (Mono.CSharp.ResolveContext,Mono.CSharp.Expression,Mono.CSharp.Parameter)",
      "code_size" : "318",
      "class" : "AQueryClause",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateChildrenParameters",
      "signature" : "Mono.CSharp.Parameter Mono.CSharp.Linq.AQueryClause:CreateChildrenParameters (Mono.CSharp.Parameter)",
      "code_size" : "28",
      "class" : "AQueryClause",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateArguments",
      "signature" : "void Mono.CSharp.Linq.AQueryClause:CreateArguments (Mono.CSharp.ResolveContext,Mono.CSharp.Parameter,Mono.CSharp.Arguments&)",
      "code_size" : "411",
      "class" : "AQueryClause",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateQueryExpression",
      "signature" : "Mono.CSharp.Invocation Mono.CSharp.Linq.AQueryClause:CreateQueryExpression (Mono.CSharp.Expression,Mono.CSharp.Arguments)",
      "code_size" : "145",
      "class" : "AQueryClause",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Next",
      "signature" : "void Mono.CSharp.Linq.AQueryClause:set_Next (Mono.CSharp.Linq.AQueryClause)",
      "code_size" : "43",
      "class" : "AQueryClause",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Tail",
      "signature" : "Mono.CSharp.Linq.AQueryClause Mono.CSharp.Linq.AQueryClause:get_Tail ()",
      "code_size" : "52",
      "class" : "AQueryClause",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Linq.AQueryClause/QueryExpressionAccess:.ctor (Mono.CSharp.Expression,string,Mono.CSharp.Location)",
      "code_size" : "38",
      "class" : "QueryExpressionAccess",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Linq.AQueryClause/QueryExpressionAccess:.ctor (Mono.CSharp.Expression,string,Mono.CSharp.TypeArguments,Mono.CSharp.Location)",
      "code_size" : "43",
      "class" : "QueryExpressionAccess",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_TypeDoesNotContainDefinition",
      "signature" : "void Mono.CSharp.Linq.AQueryClause/QueryExpressionAccess:Error_TypeDoesNotContainDefinition (Mono.CSharp.ResolveContext,Mono.CSharp.TypeSpec,string)",
      "code_size" : "85",
      "class" : "QueryExpressionAccess",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Linq.AQueryClause/QueryExpressionInvocation:.ctor (Mono.CSharp.Linq.AQueryClause/QueryExpressionAccess,Mono.CSharp.Arguments)",
      "code_size" : "28",
      "class" : "QueryExpressionInvocation",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolveOverload",
      "signature" : "Mono.CSharp.MethodGroupExpr Mono.CSharp.Linq.AQueryClause/QueryExpressionInvocation:DoResolveOverload (Mono.CSharp.ResolveContext)",
      "code_size" : "80",
      "class" : "QueryExpressionInvocation",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolveDynamic",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Linq.AQueryClause/QueryExpressionInvocation:DoResolveDynamic (Mono.CSharp.ResolveContext,Mono.CSharp.Expression)",
      "code_size" : "77",
      "class" : "QueryExpressionInvocation",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mono.CSharp.OverloadResolver.IErrorHandler.AmbiguousCandidates",
      "signature" : "bool Mono.CSharp.Linq.AQueryClause/QueryExpressionInvocation:Mono.CSharp.OverloadResolver.IErrorHandler.AmbiguousCandidates (Mono.CSharp.ResolveContext,Mono.CSharp.MemberSpec,Mono.CSharp.MemberSpec)",
      "code_size" : "315",
      "class" : "QueryExpressionInvocation",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mono.CSharp.OverloadResolver.IErrorHandler.ArgumentMismatch",
      "signature" : "bool Mono.CSharp.Linq.AQueryClause/QueryExpressionInvocation:Mono.CSharp.OverloadResolver.IErrorHandler.ArgumentMismatch (Mono.CSharp.ResolveContext,Mono.CSharp.MemberSpec,Mono.CSharp.Argument,int)",
      "code_size" : "11",
      "class" : "QueryExpressionInvocation",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mono.CSharp.OverloadResolver.IErrorHandler.NoArgumentMatch",
      "signature" : "bool Mono.CSharp.Linq.AQueryClause/QueryExpressionInvocation:Mono.CSharp.OverloadResolver.IErrorHandler.NoArgumentMatch (Mono.CSharp.ResolveContext,Mono.CSharp.MemberSpec)",
      "code_size" : "11",
      "class" : "QueryExpressionInvocation",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mono.CSharp.OverloadResolver.IErrorHandler.TypeInferenceFailed",
      "signature" : "bool Mono.CSharp.Linq.AQueryClause/QueryExpressionInvocation:Mono.CSharp.OverloadResolver.IErrorHandler.TypeInferenceFailed (Mono.CSharp.ResolveContext,Mono.CSharp.MemberSpec)",
      "code_size" : "869",
      "class" : "QueryExpressionInvocation",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Linq.ARangeVariableQueryClause:.ctor (Mono.CSharp.Linq.QueryBlock,Mono.CSharp.Linq.RangeVariable,Mono.CSharp.Expression,Mono.CSharp.Location)",
      "code_size" : "73",
      "class" : "ARangeVariableQueryClause",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Identifier",
      "signature" : "Mono.CSharp.Linq.RangeVariable Mono.CSharp.Linq.ARangeVariableQueryClause:get_Identifier ()",
      "code_size" : "20",
      "class" : "ARangeVariableQueryClause",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IdentifierType",
      "signature" : "Mono.CSharp.FullNamedExpression Mono.CSharp.Linq.ARangeVariableQueryClause:get_IdentifierType ()",
      "code_size" : "20",
      "class" : "ARangeVariableQueryClause",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_IdentifierType",
      "signature" : "void Mono.CSharp.Linq.ARangeVariableQueryClause:set_IdentifierType (Mono.CSharp.FullNamedExpression)",
      "code_size" : "43",
      "class" : "ARangeVariableQueryClause",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateCastExpression",
      "signature" : "Mono.CSharp.Invocation Mono.CSharp.Linq.ARangeVariableQueryClause:CreateCastExpression (Mono.CSharp.Expression)",
      "code_size" : "220",
      "class" : "ARangeVariableQueryClause",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateChildrenParameters",
      "signature" : "Mono.CSharp.Parameter Mono.CSharp.Linq.ARangeVariableQueryClause:CreateChildrenParameters (Mono.CSharp.Parameter)",
      "code_size" : "103",
      "class" : "ARangeVariableQueryClause",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateRangeVariableType",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Linq.ARangeVariableQueryClause:CreateRangeVariableType (Mono.CSharp.ResolveContext,Mono.CSharp.Parameter,Mono.CSharp.Linq.RangeVariable,Mono.CSharp.Expression)",
      "code_size" : "391",
      "class" : "ARangeVariableQueryClause",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetIntoVariable",
      "signature" : "Mono.CSharp.Linq.RangeVariable Mono.CSharp.Linq.ARangeVariableQueryClause:GetIntoVariable ()",
      "code_size" : "20",
      "class" : "ARangeVariableQueryClause",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Linq.ARangeVariableQueryClause/RangeAnonymousTypeParameter:.ctor (Mono.CSharp.Expression,Mono.CSharp.Linq.RangeVariable)",
      "code_size" : "73",
      "class" : "RangeAnonymousTypeParameter",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_InvalidInitializer",
      "signature" : "void Mono.CSharp.Linq.ARangeVariableQueryClause/RangeAnonymousTypeParameter:Error_InvalidInitializer (Mono.CSharp.ResolveContext,string)",
      "code_size" : "92",
      "class" : "RangeAnonymousTypeParameter",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Linq.ARangeVariableQueryClause/RangeParameterReference:.ctor (Mono.CSharp.Parameter)",
      "code_size" : "75",
      "class" : "RangeParameterReference",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Linq.ARangeVariableQueryClause/RangeParameterReference:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "87",
      "class" : "RangeParameterReference",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Linq.RangeVariable:.ctor (string,Mono.CSharp.Location)",
      "code_size" : "63",
      "class" : "RangeVariable",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Block",
      "signature" : "Mono.CSharp.Block Mono.CSharp.Linq.RangeVariable:get_Block ()",
      "code_size" : "20",
      "class" : "RangeVariable",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Block",
      "signature" : "void Mono.CSharp.Linq.RangeVariable:set_Block (Mono.CSharp.Block)",
      "code_size" : "43",
      "class" : "RangeVariable",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsDeclared",
      "signature" : "bool Mono.CSharp.Linq.RangeVariable:get_IsDeclared ()",
      "code_size" : "14",
      "class" : "RangeVariable",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsParameter",
      "signature" : "bool Mono.CSharp.Linq.RangeVariable:get_IsParameter ()",
      "code_size" : "11",
      "class" : "RangeVariable",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Location",
      "signature" : "Mono.CSharp.Location Mono.CSharp.Linq.RangeVariable:get_Location ()",
      "code_size" : "30",
      "class" : "RangeVariable",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Location",
      "signature" : "void Mono.CSharp.Linq.RangeVariable:set_Location (Mono.CSharp.Location)",
      "code_size" : "32",
      "class" : "RangeVariable",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Name",
      "signature" : "string Mono.CSharp.Linq.RangeVariable:get_Name ()",
      "code_size" : "20",
      "class" : "RangeVariable",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Name",
      "signature" : "void Mono.CSharp.Linq.RangeVariable:set_Name (string)",
      "code_size" : "43",
      "class" : "RangeVariable",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateReferenceExpression",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Linq.RangeVariable:CreateReferenceExpression (Mono.CSharp.ResolveContext,Mono.CSharp.Location)",
      "code_size" : "721",
      "class" : "RangeVariable",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Linq.QueryStartClause:.ctor (Mono.CSharp.Linq.QueryBlock,Mono.CSharp.Expression,Mono.CSharp.Linq.RangeVariable,Mono.CSharp.Location)",
      "code_size" : "76",
      "class" : "QueryStartClause",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
    },
    {
      "name" : "BuildQueryClause",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Linq.QueryStartClause:BuildQueryClause (Mono.CSharp.ResolveContext,Mono.CSharp.Expression,Mono.CSharp.Parameter)",
      "code_size" : "227",
      "class" : "QueryStartClause",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Linq.QueryStartClause:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "51",
      "class" : "QueryStartClause",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_MethodName",
      "signature" : "string Mono.CSharp.Linq.QueryStartClause:get_MethodName ()",
      "code_size" : "27",
      "class" : "QueryStartClause",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Linq.GroupBy:.ctor (Mono.CSharp.Linq.QueryBlock,Mono.CSharp.Expression,Mono.CSharp.Linq.QueryBlock,Mono.CSharp.Expression,Mono.CSharp.Location)",
      "code_size" : "125",
      "class" : "GroupBy",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_SelectorExpression",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Linq.GroupBy:get_SelectorExpression ()",
      "code_size" : "20",
      "class" : "GroupBy",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateArguments",
      "signature" : "void Mono.CSharp.Linq.GroupBy:CreateArguments (Mono.CSharp.ResolveContext,Mono.CSharp.Parameter,Mono.CSharp.Arguments&)",
      "code_size" : "361",
      "class" : "GroupBy",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.Linq.GroupBy:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Expression)",
      "code_size" : "257",
      "class" : "GroupBy",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_MethodName",
      "signature" : "string Mono.CSharp.Linq.GroupBy:get_MethodName ()",
      "code_size" : "16",
      "class" : "GroupBy",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.Linq.GroupBy:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "GroupBy",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Linq.Join:.ctor (Mono.CSharp.Linq.QueryBlock,Mono.CSharp.Linq.RangeVariable,Mono.CSharp.Expression,Mono.CSharp.Linq.QueryBlock,Mono.CSharp.Linq.QueryBlock,Mono.CSharp.Location)",
      "code_size" : "93",
      "class" : "Join",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_InnerSelector",
      "signature" : "Mono.CSharp.Linq.QueryBlock Mono.CSharp.Linq.Join:get_InnerSelector ()",
      "code_size" : "20",
      "class" : "Join",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_OuterSelector",
      "signature" : "Mono.CSharp.Linq.QueryBlock Mono.CSharp.Linq.Join:get_OuterSelector ()",
      "code_size" : "20",
      "class" : "Join",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateArguments",
      "signature" : "void Mono.CSharp.Linq.Join:CreateArguments (Mono.CSharp.ResolveContext,Mono.CSharp.Parameter,Mono.CSharp.Arguments&)",
      "code_size" : "807",
      "class" : "Join",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.Linq.Join:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Expression)",
      "code_size" : "315",
      "class" : "Join",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_MethodName",
      "signature" : "string Mono.CSharp.Linq.Join:get_MethodName ()",
      "code_size" : "16",
      "class" : "Join",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.Linq.Join:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "Join",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Linq.GroupJoin:.ctor (Mono.CSharp.Linq.QueryBlock,Mono.CSharp.Linq.RangeVariable,Mono.CSharp.Expression,Mono.CSharp.Linq.QueryBlock,Mono.CSharp.Linq.QueryBlock,Mono.CSharp.Linq.RangeVariable,Mono.CSharp.Location)",
      "code_size" : "71",
      "class" : "GroupJoin",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetIntoVariable",
      "signature" : "Mono.CSharp.Linq.RangeVariable Mono.CSharp.Linq.GroupJoin:GetIntoVariable ()",
      "code_size" : "20",
      "class" : "GroupJoin",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_MethodName",
      "signature" : "string Mono.CSharp.Linq.GroupJoin:get_MethodName ()",
      "code_size" : "16",
      "class" : "GroupJoin",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.Linq.GroupJoin:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "GroupJoin",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Linq.Let:.ctor (Mono.CSharp.Linq.QueryBlock,Mono.CSharp.Linq.RangeVariable,Mono.CSharp.Expression,Mono.CSharp.Location)",
      "code_size" : "43",
      "class" : "Let",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateArguments",
      "signature" : "void Mono.CSharp.Linq.Let:CreateArguments (Mono.CSharp.ResolveContext,Mono.CSharp.Parameter,Mono.CSharp.Arguments&)",
      "code_size" : "108",
      "class" : "Let",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_MethodName",
      "signature" : "string Mono.CSharp.Linq.Let:get_MethodName ()",
      "code_size" : "16",
      "class" : "Let",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.Linq.Let:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "Let",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Linq.Select:.ctor (Mono.CSharp.Linq.QueryBlock,Mono.CSharp.Expression,Mono.CSharp.Location)",
      "code_size" : "38",
      "class" : "Select",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsRequired",
      "signature" : "bool Mono.CSharp.Linq.Select:IsRequired (Mono.CSharp.Parameter)",
      "code_size" : "118",
      "class" : "Select",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_MethodName",
      "signature" : "string Mono.CSharp.Linq.Select:get_MethodName ()",
      "code_size" : "16",
      "class" : "Select",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.Linq.Select:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "Select",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Linq.SelectMany:.ctor (Mono.CSharp.Linq.QueryBlock,Mono.CSharp.Linq.RangeVariable,Mono.CSharp.Expression,Mono.CSharp.Location)",
      "code_size" : "43",
      "class" : "SelectMany",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateArguments",
      "signature" : "void Mono.CSharp.Linq.SelectMany:CreateArguments (Mono.CSharp.ResolveContext,Mono.CSharp.Parameter,Mono.CSharp.Arguments&)",
      "code_size" : "817",
      "class" : "SelectMany",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_MethodName",
      "signature" : "string Mono.CSharp.Linq.SelectMany:get_MethodName ()",
      "code_size" : "16",
      "class" : "SelectMany",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.Linq.SelectMany:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "SelectMany",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Linq.Where:.ctor (Mono.CSharp.Linq.QueryBlock,Mono.CSharp.Expression,Mono.CSharp.Location)",
      "code_size" : "38",
      "class" : "Where",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_MethodName",
      "signature" : "string Mono.CSharp.Linq.Where:get_MethodName ()",
      "code_size" : "16",
      "class" : "Where",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.Linq.Where:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "Where",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Linq.OrderByAscending:.ctor (Mono.CSharp.Linq.QueryBlock,Mono.CSharp.Expression)",
      "code_size" : "68",
      "class" : "OrderByAscending",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_MethodName",
      "signature" : "string Mono.CSharp.Linq.OrderByAscending:get_MethodName ()",
      "code_size" : "16",
      "class" : "OrderByAscending",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.Linq.OrderByAscending:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "OrderByAscending",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Linq.OrderByDescending:.ctor (Mono.CSharp.Linq.QueryBlock,Mono.CSharp.Expression)",
      "code_size" : "68",
      "class" : "OrderByDescending",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_MethodName",
      "signature" : "string Mono.CSharp.Linq.OrderByDescending:get_MethodName ()",
      "code_size" : "16",
      "class" : "OrderByDescending",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.Linq.OrderByDescending:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "OrderByDescending",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Linq.ThenByAscending:.ctor (Mono.CSharp.Linq.QueryBlock,Mono.CSharp.Expression)",
      "code_size" : "28",
      "class" : "ThenByAscending",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_MethodName",
      "signature" : "string Mono.CSharp.Linq.ThenByAscending:get_MethodName ()",
      "code_size" : "16",
      "class" : "ThenByAscending",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.Linq.ThenByAscending:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "ThenByAscending",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Linq.ThenByDescending:.ctor (Mono.CSharp.Linq.QueryBlock,Mono.CSharp.Expression)",
      "code_size" : "28",
      "class" : "ThenByDescending",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_MethodName",
      "signature" : "string Mono.CSharp.Linq.ThenByDescending:get_MethodName ()",
      "code_size" : "16",
      "class" : "ThenByDescending",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.Linq.ThenByDescending:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "36",
      "class" : "ThenByDescending",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Linq.QueryBlock:.ctor (Mono.CSharp.Block,Mono.CSharp.Location)",
      "code_size" : "58",
      "class" : "QueryBlock",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddRangeVariable",
      "signature" : "void Mono.CSharp.Linq.QueryBlock:AddRangeVariable (Mono.CSharp.Linq.RangeVariable)",
      "code_size" : "86",
      "class" : "QueryBlock",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_AlreadyDeclared",
      "signature" : "void Mono.CSharp.Linq.QueryBlock:Error_AlreadyDeclared (string,Mono.CSharp.INamedBlockVariable,string)",
      "code_size" : "126",
      "class" : "QueryBlock",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_AlreadyDeclared",
      "signature" : "void Mono.CSharp.Linq.QueryBlock:Error_AlreadyDeclared (string,Mono.CSharp.INamedBlockVariable)",
      "code_size" : "126",
      "class" : "QueryBlock",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_AlreadyDeclaredTypeParameter",
      "signature" : "void Mono.CSharp.Linq.QueryBlock:Error_AlreadyDeclaredTypeParameter (string,Mono.CSharp.Location)",
      "code_size" : "90",
      "class" : "QueryBlock",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetParameter",
      "signature" : "void Mono.CSharp.Linq.QueryBlock:SetParameter (Mono.CSharp.Parameter)",
      "code_size" : "246",
      "class" : "QueryBlock",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetParameters",
      "signature" : "void Mono.CSharp.Linq.QueryBlock:SetParameters (Mono.CSharp.Parameter,Mono.CSharp.Parameter)",
      "code_size" : "366",
      "class" : "QueryBlock",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Linq.QueryBlock/TransparentParameter:.ctor (Mono.CSharp.Parameter,Mono.CSharp.Linq.RangeVariable)",
      "code_size" : "202",
      "class" : "TransparentParameter",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Reset",
      "signature" : "void Mono.CSharp.Linq.QueryBlock/TransparentParameter:Reset ()",
      "code_size" : "22",
      "class" : "TransparentParameter",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Linq.TransparentMemberAccess:.ctor (Mono.CSharp.Expression,string)",
      "code_size" : "28",
      "class" : "TransparentMemberAccess",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolveLValue",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Linq.TransparentMemberAccess:DoResolveLValue (Mono.CSharp.ResolveContext,Mono.CSharp.Expression)",
      "code_size" : "84",
      "class" : "TransparentMemberAccess",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.NullLiteral:.ctor (Mono.CSharp.Location)",
      "code_size" : "42",
      "class" : "NullLiteral",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_ValueCannotBeConverted",
      "signature" : "void Mono.CSharp.NullLiteral:Error_ValueCannotBeConverted (Mono.CSharp.ResolveContext,Mono.CSharp.TypeSpec,bool)",
      "code_size" : "297",
      "class" : "NullLiteral",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetValueAsLiteral",
      "signature" : "string Mono.CSharp.NullLiteral:GetValueAsLiteral ()",
      "code_size" : "16",
      "class" : "NullLiteral",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsLiteral",
      "signature" : "bool Mono.CSharp.NullLiteral:get_IsLiteral ()",
      "code_size" : "14",
      "class" : "NullLiteral",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MakeExpression",
      "signature" : "System.Linq.Expressions.Expression Mono.CSharp.NullLiteral:MakeExpression (Mono.CSharp.BuilderContext)",
      "code_size" : "16",
      "class" : "NullLiteral",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.BoolLiteral:.ctor (Mono.CSharp.BuiltinTypes,bool,Mono.CSharp.Location)",
      "code_size" : "43",
      "class" : "BoolLiteral",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsLiteral",
      "signature" : "bool Mono.CSharp.BoolLiteral:get_IsLiteral ()",
      "code_size" : "14",
      "class" : "BoolLiteral",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.BoolLiteral:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "BoolLiteral",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.CharLiteral:.ctor (Mono.CSharp.BuiltinTypes,char,Mono.CSharp.Location)",
      "code_size" : "43",
      "class" : "CharLiteral",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsLiteral",
      "signature" : "bool Mono.CSharp.CharLiteral:get_IsLiteral ()",
      "code_size" : "14",
      "class" : "CharLiteral",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.CharLiteral:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "CharLiteral",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.IntLiteral:.ctor (Mono.CSharp.BuiltinTypes,int,Mono.CSharp.Location)",
      "code_size" : "38",
      "class" : "IntLiteral",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ConvertImplicitly",
      "signature" : "Mono.CSharp.Constant Mono.CSharp.IntLiteral:ConvertImplicitly (Mono.CSharp.TypeSpec)",
      "code_size" : "157",
      "class" : "IntLiteral",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsLiteral",
      "signature" : "bool Mono.CSharp.IntLiteral:get_IsLiteral ()",
      "code_size" : "14",
      "class" : "IntLiteral",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.IntLiteral:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "IntLiteral",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.UIntLiteral:.ctor (Mono.CSharp.BuiltinTypes,uint,Mono.CSharp.Location)",
      "code_size" : "42",
      "class" : "UIntLiteral",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsLiteral",
      "signature" : "bool Mono.CSharp.UIntLiteral:get_IsLiteral ()",
      "code_size" : "14",
      "class" : "UIntLiteral",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.UIntLiteral:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "UIntLiteral",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.LongLiteral:.ctor (Mono.CSharp.BuiltinTypes,long,Mono.CSharp.Location)",
      "code_size" : "43",
      "class" : "LongLiteral",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsLiteral",
      "signature" : "bool Mono.CSharp.LongLiteral:get_IsLiteral ()",
      "code_size" : "14",
      "class" : "LongLiteral",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.LongLiteral:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "LongLiteral",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ULongLiteral:.ctor (Mono.CSharp.BuiltinTypes,ulong,Mono.CSharp.Location)",
      "code_size" : "43",
      "class" : "ULongLiteral",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsLiteral",
      "signature" : "bool Mono.CSharp.ULongLiteral:get_IsLiteral ()",
      "code_size" : "14",
      "class" : "ULongLiteral",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.ULongLiteral:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "ULongLiteral",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.FloatLiteral:.ctor (Mono.CSharp.BuiltinTypes,single,Mono.CSharp.Location)",
      "code_size" : "58",
      "class" : "FloatLiteral",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsLiteral",
      "signature" : "bool Mono.CSharp.FloatLiteral:get_IsLiteral ()",
      "code_size" : "14",
      "class" : "FloatLiteral",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.FloatLiteral:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "FloatLiteral",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.DoubleLiteral:.ctor (Mono.CSharp.BuiltinTypes,double,Mono.CSharp.Location)",
      "code_size" : "54",
      "class" : "DoubleLiteral",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_ValueCannotBeConverted",
      "signature" : "void Mono.CSharp.DoubleLiteral:Error_ValueCannotBeConverted (Mono.CSharp.ResolveContext,Mono.CSharp.TypeSpec,bool)",
      "code_size" : "197",
      "class" : "DoubleLiteral",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_664",
      "signature" : "void Mono.CSharp.DoubleLiteral:Error_664 (Mono.CSharp.ResolveContext,Mono.CSharp.Location,string,string)",
      "code_size" : "78",
      "class" : "DoubleLiteral",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsLiteral",
      "signature" : "bool Mono.CSharp.DoubleLiteral:get_IsLiteral ()",
      "code_size" : "14",
      "class" : "DoubleLiteral",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.DoubleLiteral:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "DoubleLiteral",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.DecimalLiteral:.ctor (Mono.CSharp.BuiltinTypes,System.Decimal,Mono.CSharp.Location)",
      "code_size" : "53",
      "class" : "DecimalLiteral",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsLiteral",
      "signature" : "bool Mono.CSharp.DecimalLiteral:get_IsLiteral ()",
      "code_size" : "14",
      "class" : "DecimalLiteral",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.DecimalLiteral:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "DecimalLiteral",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.StringLiteral:.ctor (Mono.CSharp.BuiltinTypes,string,Mono.CSharp.Location)",
      "code_size" : "38",
      "class" : "StringLiteral",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsLiteral",
      "signature" : "bool Mono.CSharp.StringLiteral:get_IsLiteral ()",
      "code_size" : "14",
      "class" : "StringLiteral",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.StringLiteral:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "StringLiteral",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.SourceFile:.ctor (string,string,int)",
      "code_size" : "93",
      "class" : "SourceFile",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Checksum",
      "signature" : "byte[] Mono.CSharp.SourceFile:get_Checksum ()",
      "code_size" : "20",
      "class" : "SourceFile",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_HasChecksum",
      "signature" : "bool Mono.CSharp.SourceFile:get_HasChecksum ()",
      "code_size" : "41",
      "class" : "SourceFile",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_SourceFileEntry",
      "signature" : "Mono.CompilerServices.SymbolWriter.SourceFileEntry Mono.CSharp.SourceFile:get_SourceFileEntry ()",
      "code_size" : "20",
      "class" : "SourceFile",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetChecksum",
      "signature" : "void Mono.CSharp.SourceFile:SetChecksum (byte[])",
      "code_size" : "84",
      "class" : "SourceFile",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetChecksum",
      "signature" : "void Mono.CSharp.SourceFile:SetChecksum (byte[],byte[])",
      "code_size" : "74",
      "class" : "SourceFile",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateSymbolInfo",
      "signature" : "Mono.CompilerServices.SymbolWriter.SourceFileEntry Mono.CSharp.SourceFile:CreateSymbolInfo (Mono.CompilerServices.SymbolWriter.MonoSymbolFile)",
      "code_size" : "186",
      "class" : "SourceFile",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Equals",
      "signature" : "bool Mono.CSharp.SourceFile:Equals (Mono.CSharp.SourceFile)",
      "code_size" : "39",
      "class" : "SourceFile",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsHiddenLocation",
      "signature" : "bool Mono.CSharp.SourceFile:IsHiddenLocation (Mono.CSharp.Location)",
      "code_size" : "260",
      "class" : "SourceFile",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "RegisterHiddenScope",
      "signature" : "void Mono.CSharp.SourceFile:RegisterHiddenScope (Mono.CSharp.Location,Mono.CSharp.Location)",
      "code_size" : "191",
      "class" : "SourceFile",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ToString",
      "signature" : "string Mono.CSharp.SourceFile:ToString ()",
      "code_size" : "106",
      "class" : "SourceFile",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".cctor",
      "signature" : "void Mono.CSharp.SourceFile:.cctor ()",
      "code_size" : "68",
      "class" : "SourceFile",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.SourceFile/LocationRegion:.ctor (Mono.CSharp.Location,Mono.CSharp.Location)",
      "code_size" : "44",
      "class" : "LocationRegion",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "CompareTo",
      "signature" : "int Mono.CSharp.SourceFile/LocationRegion:CompareTo (Mono.CSharp.SourceFile/LocationRegion)",
      "code_size" : "291",
      "class" : "LocationRegion",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "ToString",
      "signature" : "string Mono.CSharp.SourceFile/LocationRegion:ToString ()",
      "code_size" : "109",
      "class" : "LocationRegion",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".cctor",
      "signature" : "void Mono.CSharp.Location:.cctor ()",
      "code_size" : "34",
      "class" : "Location",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Location:.ctor (Mono.CSharp.SourceFile,int,int)",
      "code_size" : "518",
      "class" : "Location",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Reset",
      "signature" : "void Mono.CSharp.Location:Reset ()",
      "code_size" : "115",
      "class" : "Location",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddFile",
      "signature" : "void Mono.CSharp.Location:AddFile (Mono.CSharp.SourceFile)",
      "code_size" : "60",
      "class" : "Location",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Initialize",
      "signature" : "void Mono.CSharp.Location:Initialize (System.Collections.Generic.List`1<Mono.CSharp.SourceFile>)",
      "code_size" : "254",
      "class" : "Location",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "op_Subtraction",
      "signature" : "Mono.CSharp.Location Mono.CSharp.Location:op_Subtraction (Mono.CSharp.Location,int)",
      "code_size" : "105",
      "class" : "Location",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddCheckpoint",
      "signature" : "void Mono.CSharp.Location:AddCheckpoint (int,int)",
      "code_size" : "267",
      "class" : "Location",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "FormatLocation",
      "signature" : "string Mono.CSharp.Location:FormatLocation (string)",
      "code_size" : "499",
      "class" : "Location",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ToString",
      "signature" : "string Mono.CSharp.Location:ToString ()",
      "code_size" : "30",
      "class" : "Location",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ToStringFullName",
      "signature" : "string Mono.CSharp.Location:ToStringFullName ()",
      "code_size" : "30",
      "class" : "Location",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsNull",
      "signature" : "bool Mono.CSharp.Location:get_IsNull ()",
      "code_size" : "29",
      "class" : "Location",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Name",
      "signature" : "string Mono.CSharp.Location:get_Name ()",
      "code_size" : "87",
      "class" : "Location",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_NameFullPath",
      "signature" : "string Mono.CSharp.Location:get_NameFullPath ()",
      "code_size" : "81",
      "class" : "Location",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_CheckpointIndex",
      "signature" : "int Mono.CSharp.Location:get_CheckpointIndex ()",
      "code_size" : "27",
      "class" : "Location",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Row",
      "signature" : "int Mono.CSharp.Location:get_Row ()",
      "code_size" : "124",
      "class" : "Location",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Column",
      "signature" : "int Mono.CSharp.Location:get_Column ()",
      "code_size" : "42",
      "class" : "Location",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_File",
      "signature" : "int Mono.CSharp.Location:get_File ()",
      "code_size" : "314",
      "class" : "Location",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_SourceFile",
      "signature" : "Mono.CSharp.SourceFile Mono.CSharp.Location:get_SourceFile ()",
      "code_size" : "62",
      "class" : "Location",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Equals",
      "signature" : "bool Mono.CSharp.Location:Equals (Mono.CSharp.Location)",
      "code_size" : "39",
      "class" : "Location",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Location/Checkpoint:.ctor (int,int)",
      "code_size" : "65",
      "class" : "Checkpoint",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.LocationsBag:.ctor ()",
      "code_size" : "176",
      "class" : "LocationsBag",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddLocation",
      "signature" : "void Mono.CSharp.LocationsBag:AddLocation (object,Mono.CSharp.Location[])",
      "code_size" : "96",
      "class" : "LocationsBag",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "InsertLocation",
      "signature" : "void Mono.CSharp.LocationsBag:InsertLocation (object,int,Mono.CSharp.Location)",
      "code_size" : "194",
      "class" : "LocationsBag",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddStatement",
      "signature" : "void Mono.CSharp.LocationsBag:AddStatement (object,Mono.CSharp.Location[])",
      "code_size" : "63",
      "class" : "LocationsBag",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddMember",
      "signature" : "void Mono.CSharp.LocationsBag:AddMember (Mono.CSharp.MemberCore,System.Collections.Generic.IList`1<System.Tuple`2<Mono.CSharp.Modifiers, Mono.CSharp.Location>>)",
      "code_size" : "109",
      "class" : "LocationsBag",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddMember",
      "signature" : "void Mono.CSharp.LocationsBag:AddMember (Mono.CSharp.MemberCore,System.Collections.Generic.IList`1<System.Tuple`2<Mono.CSharp.Modifiers, Mono.CSharp.Location>>,Mono.CSharp.Location)",
      "code_size" : "106",
      "class" : "LocationsBag",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddMember",
      "signature" : "void Mono.CSharp.LocationsBag:AddMember (Mono.CSharp.MemberCore,System.Collections.Generic.IList`1<System.Tuple`2<Mono.CSharp.Modifiers, Mono.CSharp.Location>>,Mono.CSharp.Location[])",
      "code_size" : "106",
      "class" : "LocationsBag",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddMember",
      "signature" : "void Mono.CSharp.LocationsBag:AddMember (Mono.CSharp.MemberCore,System.Collections.Generic.IList`1<System.Tuple`2<Mono.CSharp.Modifiers, Mono.CSharp.Location>>,System.Collections.Generic.List`1<Mono.CSharp.Location>)",
      "code_size" : "160",
      "class" : "LocationsBag",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AppendTo",
      "signature" : "void Mono.CSharp.LocationsBag:AppendTo (object,Mono.CSharp.Location)",
      "code_size" : "184",
      "class" : "LocationsBag",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AppendToMember",
      "signature" : "void Mono.CSharp.LocationsBag:AppendToMember (Mono.CSharp.MemberCore,Mono.CSharp.Location[])",
      "code_size" : "84",
      "class" : "LocationsBag",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetLocations",
      "signature" : "System.Collections.Generic.List`1<Mono.CSharp.Location> Mono.CSharp.LocationsBag:GetLocations (object)",
      "code_size" : "59",
      "class" : "LocationsBag",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetMemberLocation",
      "signature" : "Mono.CSharp.LocationsBag/MemberLocations Mono.CSharp.LocationsBag:GetMemberLocation (Mono.CSharp.MemberCore)",
      "code_size" : "59",
      "class" : "LocationsBag",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.LocationsBag/MemberLocations:.ctor (System.Collections.Generic.IList`1<System.Tuple`2<Mono.CSharp.Modifiers, Mono.CSharp.Location>>)",
      "code_size" : "43",
      "class" : "MemberLocations",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.LocationsBag/MemberLocations:.ctor (System.Collections.Generic.IList`1<System.Tuple`2<Mono.CSharp.Modifiers, Mono.CSharp.Location>>,Mono.CSharp.Location)",
      "code_size" : "62",
      "class" : "MemberLocations",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.LocationsBag/MemberLocations:.ctor (System.Collections.Generic.IList`1<System.Tuple`2<Mono.CSharp.Modifiers, Mono.CSharp.Location>>,Mono.CSharp.Location[])",
      "code_size" : "62",
      "class" : "MemberLocations",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.LocationsBag/MemberLocations:.ctor (System.Collections.Generic.IList`1<System.Tuple`2<Mono.CSharp.Modifiers, Mono.CSharp.Location>>,System.Collections.Generic.List`1<Mono.CSharp.Location>)",
      "code_size" : "74",
      "class" : "MemberLocations",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Item",
      "signature" : "Mono.CSharp.Location Mono.CSharp.LocationsBag/MemberLocations:get_Item (int)",
      "code_size" : "48",
      "class" : "MemberLocations",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Count",
      "signature" : "int Mono.CSharp.LocationsBag/MemberLocations:get_Count ()",
      "code_size" : "30",
      "class" : "MemberLocations",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddLocations",
      "signature" : "void Mono.CSharp.LocationsBag/MemberLocations:AddLocations (Mono.CSharp.Location)",
      "code_size" : "144",
      "class" : "MemberLocations",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddLocations",
      "signature" : "void Mono.CSharp.LocationsBag/MemberLocations:AddLocations (Mono.CSharp.Location[])",
      "code_size" : "126",
      "class" : "MemberLocations",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.MemberFilter:.ctor (Mono.CSharp.MethodSpec)",
      "code_size" : "152",
      "class" : "MemberFilter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.MemberFilter:.ctor (string,int,Mono.CSharp.MemberKind,Mono.CSharp.AParametersCollection,Mono.CSharp.TypeSpec)",
      "code_size" : "127",
      "class" : "MemberFilter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Constructor",
      "signature" : "Mono.CSharp.MemberFilter Mono.CSharp.MemberFilter:Constructor (Mono.CSharp.AParametersCollection)",
      "code_size" : "295",
      "class" : "MemberFilter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Property",
      "signature" : "Mono.CSharp.MemberFilter Mono.CSharp.MemberFilter:Property (string,Mono.CSharp.TypeSpec)",
      "code_size" : "301",
      "class" : "MemberFilter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Field",
      "signature" : "Mono.CSharp.MemberFilter Mono.CSharp.MemberFilter:Field (string,Mono.CSharp.TypeSpec)",
      "code_size" : "301",
      "class" : "MemberFilter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Method",
      "signature" : "Mono.CSharp.MemberFilter Mono.CSharp.MemberFilter:Method (string,int,Mono.CSharp.AParametersCollection,Mono.CSharp.TypeSpec)",
      "code_size" : "328",
      "class" : "MemberFilter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Equals",
      "signature" : "bool Mono.CSharp.MemberFilter:Equals (Mono.CSharp.MemberSpec)",
      "code_size" : "688",
      "class" : "MemberFilter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.MemberCache:.ctor ()",
      "code_size" : "23",
      "class" : "MemberCache",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.MemberCache:.ctor (int)",
      "code_size" : "85",
      "class" : "MemberCache",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.MemberCache:.ctor (Mono.CSharp.MemberCache)",
      "code_size" : "66",
      "class" : "MemberCache",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.MemberCache:.ctor (Mono.CSharp.TypeContainer)",
      "code_size" : "18",
      "class" : "MemberCache",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddBaseType",
      "signature" : "void Mono.CSharp.MemberCache:AddBaseType (Mono.CSharp.TypeSpec)",
      "code_size" : "898",
      "class" : "MemberCache",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddInterface",
      "signature" : "void Mono.CSharp.MemberCache:AddInterface (Mono.CSharp.TypeSpec)",
      "code_size" : "657",
      "class" : "MemberCache",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddMember",
      "signature" : "void Mono.CSharp.MemberCache:AddMember (Mono.CSharp.InterfaceMemberBase,string,Mono.CSharp.MemberSpec)",
      "code_size" : "76",
      "class" : "MemberCache",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddMember",
      "signature" : "void Mono.CSharp.MemberCache:AddMember (Mono.CSharp.MemberSpec)",
      "code_size" : "45",
      "class" : "MemberCache",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddMember",
      "signature" : "void Mono.CSharp.MemberCache:AddMember (string,Mono.CSharp.MemberSpec,bool)",
      "code_size" : "657",
      "class" : "MemberCache",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddMemberImported",
      "signature" : "void Mono.CSharp.MemberCache:AddMemberImported (Mono.CSharp.MemberSpec)",
      "code_size" : "48",
      "class" : "MemberCache",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddInterfaceMember",
      "signature" : "bool Mono.CSharp.MemberCache:AddInterfaceMember (Mono.CSharp.MemberSpec,System.Collections.Generic.IList`1<Mono.CSharp.MemberSpec>&)",
      "code_size" : "1171",
      "class" : "MemberCache",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "FindMember",
      "signature" : "Mono.CSharp.MemberSpec Mono.CSharp.MemberCache:FindMember (Mono.CSharp.TypeSpec,Mono.CSharp.MemberFilter,Mono.CSharp.BindingRestriction)",
      "code_size" : "417",
      "class" : "MemberCache",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "FindMembers",
      "signature" : "System.Collections.Generic.IList`1<Mono.CSharp.MemberSpec> Mono.CSharp.MemberCache:FindMembers (Mono.CSharp.TypeSpec,string,bool)",
      "code_size" : "134",
      "class" : "MemberCache",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "FindNestedType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.MemberCache:FindNestedType (Mono.CSharp.TypeSpec,string,int)",
      "code_size" : "446",
      "class" : "MemberCache",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "FindExtensionMethods",
      "signature" : "System.Collections.Generic.List`1<Mono.CSharp.MethodSpec> Mono.CSharp.MemberCache:FindExtensionMethods (Mono.CSharp.IMemberContext,string,int)",
      "code_size" : "602",
      "class" : "MemberCache",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "FindBaseMember",
      "signature" : "Mono.CSharp.MemberSpec Mono.CSharp.MemberCache:FindBaseMember (Mono.CSharp.MemberCore,Mono.CSharp.MemberSpec&,bool&)",
      "code_size" : "1352",
      "class" : "MemberCache",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetDeclaredNestedTypes",
      "signature" : "System.Collections.Generic.List`1<Mono.CSharp.TypeSpec> Mono.CSharp.MemberCache:GetDeclaredNestedTypes (Mono.CSharp.TypeSpec)",
      "code_size" : "531",
      "class" : "MemberCache",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetMember",
      "signature" : "T_REF Mono.CSharp.MemberCache:GetMember<T_REF> (Mono.CSharp.TypeSpec,T_REF)",
      "code_size" : "459",
      "class" : "MemberCache",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetMemberCoreKind",
      "signature" : "Mono.CSharp.MemberKind Mono.CSharp.MemberCache:GetMemberCoreKind (Mono.CSharp.MemberCore)",
      "code_size" : "789",
      "class" : "MemberCache",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetAllFieldsForDefiniteAssignment",
      "signature" : "System.Collections.Generic.List`1<Mono.CSharp.FieldSpec> Mono.CSharp.MemberCache:GetAllFieldsForDefiniteAssignment (Mono.CSharp.TypeSpec,Mono.CSharp.IMemberContext)",
      "code_size" : "787",
      "class" : "MemberCache",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ShouldIgnoreFieldForDefiniteAssignment",
      "signature" : "bool Mono.CSharp.MemberCache:ShouldIgnoreFieldForDefiniteAssignment (Mono.CSharp.FieldSpec,Mono.CSharp.IMemberContext)",
      "code_size" : "214",
      "class" : "MemberCache",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetCompletitionMembers",
      "signature" : "System.Collections.Generic.IList`1<Mono.CSharp.MemberSpec> Mono.CSharp.MemberCache:GetCompletitionMembers (Mono.CSharp.IMemberContext,Mono.CSharp.TypeSpec,string)",
      "code_size" : "602",
      "class" : "MemberCache",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetInterfaceMethods",
      "signature" : "System.Collections.Generic.List`1<Mono.CSharp.MethodSpec> Mono.CSharp.MemberCache:GetInterfaceMethods (Mono.CSharp.TypeSpec)",
      "code_size" : "482",
      "class" : "MemberCache",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetNotImplementedAbstractMethods",
      "signature" : "System.Collections.Generic.IList`1<Mono.CSharp.MethodSpec> Mono.CSharp.MemberCache:GetNotImplementedAbstractMethods (Mono.CSharp.TypeSpec)",
      "code_size" : "1842",
      "class" : "MemberCache",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetLookupName",
      "signature" : "string Mono.CSharp.MemberCache:GetLookupName (Mono.CSharp.MemberSpec)",
      "code_size" : "126",
      "class" : "MemberCache",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetLookupName",
      "signature" : "string Mono.CSharp.MemberCache:GetLookupName (Mono.CSharp.MemberCore)",
      "code_size" : "237",
      "class" : "MemberCache",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetUserOperator",
      "signature" : "System.Collections.Generic.IList`1<Mono.CSharp.MemberSpec> Mono.CSharp.MemberCache:GetUserOperator (Mono.CSharp.TypeSpec,Mono.CSharp.Operator/OpType,bool)",
      "code_size" : "980",
      "class" : "MemberCache",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "InflateTypes",
      "signature" : "void Mono.CSharp.MemberCache:InflateTypes (Mono.CSharp.MemberCache,Mono.CSharp.TypeParameterInflator)",
      "code_size" : "514",
      "class" : "MemberCache",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "InflateMembers",
      "signature" : "void Mono.CSharp.MemberCache:InflateMembers (Mono.CSharp.MemberCache,Mono.CSharp.TypeSpec,Mono.CSharp.TypeParameterInflator)",
      "code_size" : "1978",
      "class" : "MemberCache",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "RemoveHiddenMembers",
      "signature" : "void Mono.CSharp.MemberCache:RemoveHiddenMembers (Mono.CSharp.TypeSpec)",
      "code_size" : "1298",
      "class" : "MemberCache",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "VerifyClsCompliance",
      "signature" : "void Mono.CSharp.MemberCache:VerifyClsCompliance (Mono.CSharp.TypeSpec,Mono.CSharp.Report)",
      "code_size" : "2587",
      "class" : "MemberCache",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetLaterDefinedMember",
      "signature" : "Mono.CSharp.MemberCore Mono.CSharp.MemberCache:GetLaterDefinedMember (Mono.CSharp.MemberSpec,Mono.CSharp.MemberSpec)",
      "code_size" : "455",
      "class" : "MemberCache",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ReportOverloadedMethodClsDifference",
      "signature" : "void Mono.CSharp.MemberCache:ReportOverloadedMethodClsDifference (Mono.CSharp.MemberSpec,Mono.CSharp.MemberSpec,int,Mono.CSharp.Report)",
      "code_size" : "302",
      "class" : "MemberCache",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CheckExistingMembersOverloads",
      "signature" : "bool Mono.CSharp.MemberCache:CheckExistingMembersOverloads (Mono.CSharp.MemberCore,Mono.CSharp.AParametersCollection)",
      "code_size" : "162",
      "class" : "MemberCache",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CheckExistingMembersOverloads",
      "signature" : "bool Mono.CSharp.MemberCache:CheckExistingMembersOverloads (Mono.CSharp.MemberCore,string,Mono.CSharp.AParametersCollection)",
      "code_size" : "4269",
      "class" : "MemberCache",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".cctor",
      "signature" : "void Mono.CSharp.MemberCache:.cctor ()",
      "code_size" : "71",
      "class" : "MemberCache",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.MethodCore:.ctor (Mono.CSharp.TypeDefinition,Mono.CSharp.FullNamedExpression,Mono.CSharp.Modifiers,Mono.CSharp.Modifiers,Mono.CSharp.MemberName,Mono.CSharp.Attributes,Mono.CSharp.ParametersCompiled)",
      "code_size" : "96",
      "class" : "MethodCore",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ExpectedMemberTypeVariance",
      "signature" : "Mono.CSharp.Variance Mono.CSharp.MethodCore:get_ExpectedMemberTypeVariance ()",
      "code_size" : "14",
      "class" : "MethodCore",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ParameterTypes",
      "signature" : "Mono.CSharp.TypeSpec[] Mono.CSharp.MethodCore:get_ParameterTypes ()",
      "code_size" : "30",
      "class" : "MethodCore",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ParameterInfo",
      "signature" : "Mono.CSharp.ParametersCompiled Mono.CSharp.MethodCore:get_ParameterInfo ()",
      "code_size" : "20",
      "class" : "MethodCore",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mono.CSharp.IParametersMember.get_Parameters",
      "signature" : "Mono.CSharp.AParametersCollection Mono.CSharp.MethodCore:Mono.CSharp.IParametersMember.get_Parameters ()",
      "code_size" : "20",
      "class" : "MethodCore",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Block",
      "signature" : "Mono.CSharp.ToplevelBlock Mono.CSharp.MethodCore:get_Block ()",
      "code_size" : "20",
      "class" : "MethodCore",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Block",
      "signature" : "void Mono.CSharp.MethodCore:set_Block (Mono.CSharp.ToplevelBlock)",
      "code_size" : "43",
      "class" : "MethodCore",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_CallingConventions",
      "signature" : "System.Reflection.CallingConventions Mono.CSharp.MethodCore:get_CallingConventions ()",
      "code_size" : "91",
      "class" : "MethodCore",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CheckOverrideAgainstBase",
      "signature" : "bool Mono.CSharp.MethodCore:CheckOverrideAgainstBase (Mono.CSharp.MemberSpec)",
      "code_size" : "86",
      "class" : "MethodCore",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CheckBase",
      "signature" : "bool Mono.CSharp.MethodCore:CheckBase ()",
      "code_size" : "39",
      "class" : "MethodCore",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_DocCommentHeader",
      "signature" : "string Mono.CSharp.MethodCore:get_DocCommentHeader ()",
      "code_size" : "16",
      "class" : "MethodCore",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.MethodCore:Emit ()",
      "code_size" : "59",
      "class" : "MethodCore",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EnableOverloadChecks",
      "signature" : "bool Mono.CSharp.MethodCore:EnableOverloadChecks (Mono.CSharp.MemberCore)",
      "code_size" : "167",
      "class" : "MethodCore",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSignatureForDocumentation",
      "signature" : "string Mono.CSharp.MethodCore:GetSignatureForDocumentation ()",
      "code_size" : "158",
      "class" : "MethodCore",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "PrepareEmit",
      "signature" : "void Mono.CSharp.MethodCore:PrepareEmit ()",
      "code_size" : "37",
      "class" : "MethodCore",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Spec",
      "signature" : "Mono.CSharp.MethodSpec Mono.CSharp.MethodCore:get_Spec ()",
      "code_size" : "23",
      "class" : "MethodCore",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "VerifyClsCompliance",
      "signature" : "bool Mono.CSharp.MethodCore:VerifyClsCompliance ()",
      "code_size" : "264",
      "class" : "MethodCore",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.MethodSpec:.ctor (Mono.CSharp.MemberKind,Mono.CSharp.TypeSpec,Mono.CSharp.IMethodDefinition,Mono.CSharp.TypeSpec,Mono.CSharp.AParametersCollection,Mono.CSharp.Modifiers)",
      "code_size" : "93",
      "class" : "MethodSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Arity",
      "signature" : "int Mono.CSharp.MethodSpec:get_Arity ()",
      "code_size" : "203",
      "class" : "MethodSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Constraints",
      "signature" : "Mono.CSharp.TypeParameterSpec[] Mono.CSharp.MethodSpec:get_Constraints ()",
      "code_size" : "243",
      "class" : "MethodSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsConstructor",
      "signature" : "bool Mono.CSharp.MethodSpec:get_IsConstructor ()",
      "code_size" : "31",
      "class" : "MethodSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_MemberDefinition",
      "signature" : "Mono.CSharp.IMethodDefinition Mono.CSharp.MethodSpec:get_MemberDefinition ()",
      "code_size" : "142",
      "class" : "MethodSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_GenericDefinition",
      "signature" : "Mono.CSharp.IGenericMethodDefinition Mono.CSharp.MethodSpec:get_GenericDefinition ()",
      "code_size" : "142",
      "class" : "MethodSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsAsync",
      "signature" : "bool Mono.CSharp.MethodSpec:get_IsAsync ()",
      "code_size" : "45",
      "class" : "MethodSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsExtensionMethod",
      "signature" : "bool Mono.CSharp.MethodSpec:get_IsExtensionMethod ()",
      "code_size" : "79",
      "class" : "MethodSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsSealed",
      "signature" : "bool Mono.CSharp.MethodSpec:get_IsSealed ()",
      "code_size" : "43",
      "class" : "MethodSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsVirtual",
      "signature" : "bool Mono.CSharp.MethodSpec:get_IsVirtual ()",
      "code_size" : "45",
      "class" : "MethodSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsReservedMethod",
      "signature" : "bool Mono.CSharp.MethodSpec:get_IsReservedMethod ()",
      "code_size" : "69",
      "class" : "MethodSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mono.CSharp.IInterfaceMemberSpec.get_MemberType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.MethodSpec:Mono.CSharp.IInterfaceMemberSpec.get_MemberType ()",
      "code_size" : "20",
      "class" : "MethodSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Parameters",
      "signature" : "Mono.CSharp.AParametersCollection Mono.CSharp.MethodSpec:get_Parameters ()",
      "code_size" : "20",
      "class" : "MethodSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ReturnType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.MethodSpec:get_ReturnType ()",
      "code_size" : "20",
      "class" : "MethodSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_TypeArguments",
      "signature" : "Mono.CSharp.TypeSpec[] Mono.CSharp.MethodSpec:get_TypeArguments ()",
      "code_size" : "20",
      "class" : "MethodSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetGenericMethodDefinition",
      "signature" : "Mono.CSharp.MethodSpec Mono.CSharp.MethodSpec:GetGenericMethodDefinition ()",
      "code_size" : "120",
      "class" : "MethodSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetMetaInfo",
      "signature" : "System.Reflection.MethodBase Mono.CSharp.MethodSpec:GetMetaInfo ()",
      "code_size" : "1166",
      "class" : "MethodSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSignatureForDocumentation",
      "signature" : "string Mono.CSharp.MethodSpec:GetSignatureForDocumentation ()",
      "code_size" : "415",
      "class" : "MethodSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSignatureForError",
      "signature" : "string Mono.CSharp.MethodSpec:GetSignatureForError ()",
      "code_size" : "1429",
      "class" : "MethodSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "InflateMember",
      "signature" : "Mono.CSharp.MemberSpec Mono.CSharp.MethodSpec:InflateMember (Mono.CSharp.TypeParameterInflator)",
      "code_size" : "470",
      "class" : "MethodSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MakeGenericMethod",
      "signature" : "Mono.CSharp.MethodSpec Mono.CSharp.MethodSpec:MakeGenericMethod (Mono.CSharp.IMemberContext,Mono.CSharp.TypeSpec[])",
      "code_size" : "919",
      "class" : "MethodSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mutate",
      "signature" : "Mono.CSharp.MethodSpec Mono.CSharp.MethodSpec:Mutate (Mono.CSharp.TypeParameterMutator)",
      "code_size" : "298",
      "class" : "MethodSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveMissingDependencies",
      "signature" : "System.Collections.Generic.List`1<Mono.CSharp.MissingTypeSpecReference> Mono.CSharp.MethodSpec:ResolveMissingDependencies (Mono.CSharp.MemberSpec)",
      "code_size" : "600",
      "class" : "MethodSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".cctor",
      "signature" : "void Mono.CSharp.MethodSpec:.cctor ()",
      "code_size" : "107",
      "class" : "MethodSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.MethodOrOperator:.ctor (Mono.CSharp.TypeDefinition,Mono.CSharp.FullNamedExpression,Mono.CSharp.Modifiers,Mono.CSharp.Modifiers,Mono.CSharp.MemberName,Mono.CSharp.Attributes,Mono.CSharp.ParametersCompiled)",
      "code_size" : "80",
      "class" : "MethodOrOperator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ApplyAttributeBuilder",
      "signature" : "void Mono.CSharp.MethodOrOperator:ApplyAttributeBuilder (Mono.CSharp.Attribute,Mono.CSharp.MethodSpec,byte[],Mono.CSharp.PredefinedAttributes)",
      "code_size" : "939",
      "class" : "MethodOrOperator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_AttributeTargets",
      "signature" : "System.AttributeTargets Mono.CSharp.MethodOrOperator:get_AttributeTargets ()",
      "code_size" : "14",
      "class" : "MethodOrOperator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mono.CSharp.IMethodDefinition.get_Metadata",
      "signature" : "System.Reflection.MethodBase Mono.CSharp.MethodOrOperator:Mono.CSharp.IMethodDefinition.get_Metadata ()",
      "code_size" : "33",
      "class" : "MethodOrOperator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_MethodBuilder",
      "signature" : "System.Reflection.Emit.MethodBuilder Mono.CSharp.MethodOrOperator:get_MethodBuilder ()",
      "code_size" : "33",
      "class" : "MethodOrOperator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CheckForDuplications",
      "signature" : "bool Mono.CSharp.MethodOrOperator:CheckForDuplications ()",
      "code_size" : "50",
      "class" : "MethodOrOperator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateEmitContext",
      "signature" : "Mono.CSharp.EmitContext Mono.CSharp.MethodOrOperator:CreateEmitContext (System.Reflection.Emit.ILGenerator,Mono.CompilerServices.SymbolWriter.SourceMethodBuilder)",
      "code_size" : "89",
      "class" : "MethodOrOperator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Define",
      "signature" : "bool Mono.CSharp.MethodOrOperator:Define ()",
      "code_size" : "708",
      "class" : "MethodOrOperator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoMemberTypeIndependentChecks",
      "signature" : "void Mono.CSharp.MethodOrOperator:DoMemberTypeIndependentChecks ()",
      "code_size" : "422",
      "class" : "MethodOrOperator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoMemberTypeDependentChecks",
      "signature" : "void Mono.CSharp.MethodOrOperator:DoMemberTypeDependentChecks ()",
      "code_size" : "74",
      "class" : "MethodOrOperator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.MethodOrOperator:Emit ()",
      "code_size" : "1429",
      "class" : "MethodOrOperator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_ConditionalAttributeIsNotValid",
      "signature" : "void Mono.CSharp.MethodOrOperator:Error_ConditionalAttributeIsNotValid ()",
      "code_size" : "103",
      "class" : "MethodOrOperator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsPartialDefinition",
      "signature" : "bool Mono.CSharp.MethodOrOperator:get_IsPartialDefinition ()",
      "code_size" : "56",
      "class" : "MethodOrOperator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsPartialImplementation",
      "signature" : "bool Mono.CSharp.MethodOrOperator:get_IsPartialImplementation ()",
      "code_size" : "66",
      "class" : "MethodOrOperator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ValidAttributeTargets",
      "signature" : "string[] Mono.CSharp.MethodOrOperator:get_ValidAttributeTargets ()",
      "code_size" : "19",
      "class" : "MethodOrOperator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mono.CSharp.IMethodData.get_IsAccessor",
      "signature" : "bool Mono.CSharp.MethodOrOperator:Mono.CSharp.IMethodData.get_IsAccessor ()",
      "code_size" : "11",
      "class" : "MethodOrOperator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ReturnType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.MethodOrOperator:get_ReturnType ()",
      "code_size" : "20",
      "class" : "MethodOrOperator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_MethodName",
      "signature" : "Mono.CSharp.MemberName Mono.CSharp.MethodOrOperator:get_MethodName ()",
      "code_size" : "20",
      "class" : "MethodOrOperator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ConditionalConditions",
      "signature" : "string[] Mono.CSharp.MethodOrOperator:ConditionalConditions ()",
      "code_size" : "530",
      "class" : "MethodOrOperator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "PrepareEmit",
      "signature" : "void Mono.CSharp.MethodOrOperator:PrepareEmit ()",
      "code_size" : "484",
      "class" : "MethodOrOperator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "WriteDebugSymbol",
      "signature" : "void Mono.CSharp.MethodOrOperator:WriteDebugSymbol (Mono.CompilerServices.SymbolWriter.MonoSymbolFile)",
      "code_size" : "77",
      "class" : "MethodOrOperator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".cctor",
      "signature" : "void Mono.CSharp.MethodOrOperator:.cctor ()",
      "code_size" : "105",
      "class" : "MethodOrOperator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Method:.ctor (Mono.CSharp.TypeDefinition,Mono.CSharp.FullNamedExpression,Mono.CSharp.Modifiers,Mono.CSharp.MemberName,Mono.CSharp.ParametersCompiled,Mono.CSharp.Attributes)",
      "code_size" : "187",
      "class" : "Method",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Method:.ctor (Mono.CSharp.TypeDefinition,Mono.CSharp.FullNamedExpression,Mono.CSharp.Modifiers,Mono.CSharp.Modifiers,Mono.CSharp.MemberName,Mono.CSharp.ParametersCompiled,Mono.CSharp.Attributes)",
      "code_size" : "80",
      "class" : "Method",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_CurrentTypeParameters",
      "signature" : "Mono.CSharp.TypeParameters Mono.CSharp.Method:get_CurrentTypeParameters ()",
      "code_size" : "24",
      "class" : "Method",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_TypeParameters",
      "signature" : "Mono.CSharp.TypeParameterSpec[] Mono.CSharp.Method:get_TypeParameters ()",
      "code_size" : "35",
      "class" : "Method",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_TypeParametersCount",
      "signature" : "int Mono.CSharp.Method:get_TypeParametersCount ()",
      "code_size" : "74",
      "class" : "Method",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "void Mono.CSharp.Method:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "Method",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Create",
      "signature" : "Mono.CSharp.Method Mono.CSharp.Method:Create (Mono.CSharp.TypeDefinition,Mono.CSharp.FullNamedExpression,Mono.CSharp.Modifiers,Mono.CSharp.MemberName,Mono.CSharp.ParametersCompiled,Mono.CSharp.Attributes)",
      "code_size" : "425",
      "class" : "Method",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSignatureForError",
      "signature" : "string Mono.CSharp.Method:GetSignatureForError ()",
      "code_size" : "55",
      "class" : "Method",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_DuplicateEntryPoint",
      "signature" : "void Mono.CSharp.Method:Error_DuplicateEntryPoint (Mono.CSharp.Method)",
      "code_size" : "159",
      "class" : "Method",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsEntryPoint",
      "signature" : "bool Mono.CSharp.Method:IsEntryPoint ()",
      "code_size" : "426",
      "class" : "Method",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "LookupNamespaceOrType",
      "signature" : "Mono.CSharp.FullNamedExpression Mono.CSharp.Method:LookupNamespaceOrType (string,int,Mono.CSharp.LookupMode,Mono.CSharp.Location)",
      "code_size" : "188",
      "class" : "Method",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ApplyAttributeBuilder",
      "signature" : "void Mono.CSharp.Method:ApplyAttributeBuilder (Mono.CSharp.Attribute,Mono.CSharp.MethodSpec,byte[],Mono.CSharp.PredefinedAttributes)",
      "code_size" : "928",
      "class" : "Method",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateTypeParameters",
      "signature" : "void Mono.CSharp.Method:CreateTypeParameters ()",
      "code_size" : "672",
      "class" : "Method",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DefineTypeParameters",
      "signature" : "void Mono.CSharp.Method:DefineTypeParameters ()",
      "code_size" : "2389",
      "class" : "Method",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CheckImplementingMethodConstraints",
      "signature" : "bool Mono.CSharp.Method:CheckImplementingMethodConstraints (Mono.CSharp.TypeContainer,Mono.CSharp.MethodSpec,Mono.CSharp.MethodSpec)",
      "code_size" : "830",
      "class" : "Method",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Define",
      "signature" : "bool Mono.CSharp.Method:Define ()",
      "code_size" : "2550",
      "class" : "Method",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "PrepareEmit",
      "signature" : "void Mono.CSharp.Method:PrepareEmit ()",
      "code_size" : "102",
      "class" : "Method",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.Method:Emit ()",
      "code_size" : "786",
      "class" : "Method",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EnableOverloadChecks",
      "signature" : "bool Mono.CSharp.Method:EnableOverloadChecks (Mono.CSharp.MemberCore)",
      "code_size" : "117",
      "class" : "Method",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error1599",
      "signature" : "void Mono.CSharp.Method:Error1599 (Mono.CSharp.Location,Mono.CSharp.TypeSpec,Mono.CSharp.Report)",
      "code_size" : "86",
      "class" : "Method",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveMemberType",
      "signature" : "bool Mono.CSharp.Method:ResolveMemberType ()",
      "code_size" : "50",
      "class" : "Method",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetPartialDefinition",
      "signature" : "void Mono.CSharp.Method:SetPartialDefinition (Mono.CSharp.Method)",
      "code_size" : "815",
      "class" : "Method",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ConstructorInitializer:.ctor (Mono.CSharp.Arguments,Mono.CSharp.Location)",
      "code_size" : "63",
      "class" : "ConstructorInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Arguments",
      "signature" : "Mono.CSharp.Arguments Mono.CSharp.ConstructorInitializer:get_Arguments ()",
      "code_size" : "20",
      "class" : "ConstructorInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ContainsEmitWithAwait",
      "signature" : "bool Mono.CSharp.ConstructorInitializer:ContainsEmitWithAwait ()",
      "code_size" : "27",
      "class" : "ConstructorInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.ConstructorInitializer:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "47",
      "class" : "ConstructorInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.ConstructorInitializer:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "1129",
      "class" : "ConstructorInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.ConstructorInitializer:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "527",
      "class" : "ConstructorInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitStatement",
      "signature" : "void Mono.CSharp.ConstructorInitializer:EmitStatement (Mono.CSharp.EmitContext)",
      "code_size" : "31",
      "class" : "ConstructorInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "FlowAnalysis",
      "signature" : "void Mono.CSharp.ConstructorInitializer:FlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "54",
      "class" : "ConstructorInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ConstructorBaseInitializer:.ctor (Mono.CSharp.Arguments,Mono.CSharp.Location)",
      "code_size" : "33",
      "class" : "ConstructorBaseInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.GeneratedBaseInitializer:.ctor (Mono.CSharp.Location,Mono.CSharp.Arguments)",
      "code_size" : "36",
      "class" : "GeneratedBaseInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ConstructorThisInitializer:.ctor (Mono.CSharp.Arguments,Mono.CSharp.Location)",
      "code_size" : "33",
      "class" : "ConstructorThisInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Constructor:.ctor (Mono.CSharp.TypeDefinition,string,Mono.CSharp.Modifiers,Mono.CSharp.Attributes,Mono.CSharp.ParametersCompiled,Mono.CSharp.Location)",
      "code_size" : "117",
      "class" : "Constructor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_HasCompliantArgs",
      "signature" : "bool Mono.CSharp.Constructor:get_HasCompliantArgs ()",
      "code_size" : "23",
      "class" : "Constructor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_AttributeTargets",
      "signature" : "System.AttributeTargets Mono.CSharp.Constructor:get_AttributeTargets ()",
      "code_size" : "14",
      "class" : "Constructor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mono.CSharp.IMethodData.get_IsAccessor",
      "signature" : "bool Mono.CSharp.Constructor:Mono.CSharp.IMethodData.get_IsAccessor ()",
      "code_size" : "11",
      "class" : "Constructor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsPrimaryConstructor",
      "signature" : "bool Mono.CSharp.Constructor:get_IsPrimaryConstructor ()",
      "code_size" : "23",
      "class" : "Constructor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_IsPrimaryConstructor",
      "signature" : "void Mono.CSharp.Constructor:set_IsPrimaryConstructor (bool)",
      "code_size" : "34",
      "class" : "Constructor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mono.CSharp.IMethodDefinition.get_Metadata",
      "signature" : "System.Reflection.MethodBase Mono.CSharp.Constructor:Mono.CSharp.IMethodDefinition.get_Metadata ()",
      "code_size" : "23",
      "class" : "Constructor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsDefault",
      "signature" : "bool Mono.CSharp.Constructor:IsDefault ()",
      "code_size" : "207",
      "class" : "Constructor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "void Mono.CSharp.Constructor:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "Constructor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ApplyAttributeBuilder",
      "signature" : "void Mono.CSharp.Constructor:ApplyAttributeBuilder (Mono.CSharp.Attribute,Mono.CSharp.MethodSpec,byte[],Mono.CSharp.PredefinedAttributes)",
      "code_size" : "334",
      "class" : "Constructor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CheckBase",
      "signature" : "bool Mono.CSharp.Constructor:CheckBase ()",
      "code_size" : "175",
      "class" : "Constructor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Define",
      "signature" : "bool Mono.CSharp.Constructor:Define ()",
      "code_size" : "1433",
      "class" : "Constructor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.Constructor:Emit ()",
      "code_size" : "1664",
      "class" : "Constructor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "FindBaseMember",
      "signature" : "Mono.CSharp.MemberSpec Mono.CSharp.Constructor:FindBaseMember (Mono.CSharp.MemberSpec&,bool&)",
      "code_size" : "26",
      "class" : "Constructor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetCallerMemberName",
      "signature" : "string Mono.CSharp.Constructor:GetCallerMemberName ()",
      "code_size" : "78",
      "class" : "Constructor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSignatureForDocumentation",
      "signature" : "string Mono.CSharp.Constructor:GetSignatureForDocumentation ()",
      "code_size" : "86",
      "class" : "Constructor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSignatureForError",
      "signature" : "string Mono.CSharp.Constructor:GetSignatureForError ()",
      "code_size" : "55",
      "class" : "Constructor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ValidAttributeTargets",
      "signature" : "string[] Mono.CSharp.Constructor:get_ValidAttributeTargets ()",
      "code_size" : "19",
      "class" : "Constructor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "VerifyClsCompliance",
      "signature" : "bool Mono.CSharp.Constructor:VerifyClsCompliance ()",
      "code_size" : "262",
      "class" : "Constructor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "WriteDebugSymbol",
      "signature" : "void Mono.CSharp.Constructor:WriteDebugSymbol (Mono.CompilerServices.SymbolWriter.MonoSymbolFile)",
      "code_size" : "123",
      "class" : "Constructor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_MethodName",
      "signature" : "Mono.CSharp.MemberName Mono.CSharp.Constructor:get_MethodName ()",
      "code_size" : "20",
      "class" : "Constructor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ReturnType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.Constructor:get_ReturnType ()",
      "code_size" : "20",
      "class" : "Constructor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mono.CSharp.IMethodData.CreateEmitContext",
      "signature" : "Mono.CSharp.EmitContext Mono.CSharp.Constructor:Mono.CSharp.IMethodData.CreateEmitContext (System.Reflection.Emit.ILGenerator,Mono.CompilerServices.SymbolWriter.SourceMethodBuilder)",
      "code_size" : "27",
      "class" : "Constructor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".cctor",
      "signature" : "void Mono.CSharp.Constructor:.cctor ()",
      "code_size" : "102",
      "class" : "Constructor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.MethodData:.ctor (Mono.CSharp.InterfaceMemberBase,Mono.CSharp.Modifiers,System.Reflection.MethodAttributes,Mono.CSharp.IMethodData)",
      "code_size" : "100",
      "class" : "MethodData",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.MethodData:.ctor (Mono.CSharp.InterfaceMemberBase,Mono.CSharp.Modifiers,System.Reflection.MethodAttributes,Mono.CSharp.IMethodData,Mono.CSharp.MethodSpec)",
      "code_size" : "70",
      "class" : "MethodData",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_MethodBuilder",
      "signature" : "System.Reflection.Emit.MethodBuilder Mono.CSharp.MethodData:get_MethodBuilder ()",
      "code_size" : "20",
      "class" : "MethodData",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_DeclaringType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.MethodData:get_DeclaringType ()",
      "code_size" : "20",
      "class" : "MethodData",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_MetadataName",
      "signature" : "string Mono.CSharp.MethodData:get_MetadataName ()",
      "code_size" : "20",
      "class" : "MethodData",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Define",
      "signature" : "bool Mono.CSharp.MethodData:Define (Mono.CSharp.TypeDefinition,string)",
      "code_size" : "3267",
      "class" : "MethodData",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DefineOverride",
      "signature" : "void Mono.CSharp.MethodData:DefineOverride (Mono.CSharp.TypeDefinition)",
      "code_size" : "248",
      "class" : "MethodData",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DefineMethodBuilder",
      "signature" : "System.Reflection.Emit.MethodBuilder Mono.CSharp.MethodData:DefineMethodBuilder (Mono.CSharp.TypeDefinition)",
      "code_size" : "361",
      "class" : "MethodData",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DefineMethodBuilder",
      "signature" : "System.Reflection.Emit.MethodBuilder Mono.CSharp.MethodData:DefineMethodBuilder (Mono.CSharp.TypeDefinition,Mono.CSharp.ParametersCompiled)",
      "code_size" : "163",
      "class" : "MethodData",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.MethodData:Emit (Mono.CSharp.TypeDefinition)",
      "code_size" : "348",
      "class" : "MethodData",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "WriteDebugSymbol",
      "signature" : "void Mono.CSharp.MethodData:WriteDebugSymbol (Mono.CompilerServices.SymbolWriter.MonoSymbolFile)",
      "code_size" : "114",
      "class" : "MethodData",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Destructor:.ctor (Mono.CSharp.TypeDefinition,Mono.CSharp.Modifiers,Mono.CSharp.ParametersCompiled,Mono.CSharp.Attributes,Mono.CSharp.Location)",
      "code_size" : "170",
      "class" : "Destructor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "void Mono.CSharp.Destructor:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "Destructor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ApplyAttributeBuilder",
      "signature" : "void Mono.CSharp.Destructor:ApplyAttributeBuilder (Mono.CSharp.Attribute,Mono.CSharp.MethodSpec,byte[],Mono.CSharp.PredefinedAttributes)",
      "code_size" : "98",
      "class" : "Destructor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CheckBase",
      "signature" : "bool Mono.CSharp.Destructor:CheckBase ()",
      "code_size" : "50",
      "class" : "Destructor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Define",
      "signature" : "bool Mono.CSharp.Destructor:Define ()",
      "code_size" : "71",
      "class" : "Destructor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.Destructor:Emit ()",
      "code_size" : "997",
      "class" : "Destructor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSignatureForError",
      "signature" : "string Mono.CSharp.Destructor:GetSignatureForError ()",
      "code_size" : "76",
      "class" : "Destructor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveMemberType",
      "signature" : "bool Mono.CSharp.Destructor:ResolveMemberType ()",
      "code_size" : "74",
      "class" : "Destructor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ValidAttributeTargets",
      "signature" : "string[] Mono.CSharp.Destructor:get_ValidAttributeTargets ()",
      "code_size" : "19",
      "class" : "Destructor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".cctor",
      "signature" : "void Mono.CSharp.Destructor:.cctor ()",
      "code_size" : "85",
      "class" : "Destructor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.AbstractPropertyEventMethod:.ctor (Mono.CSharp.InterfaceMemberBase,string,Mono.CSharp.Attributes,Mono.CSharp.Location)",
      "code_size" : "106",
      "class" : "AbstractPropertyEventMethod",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetupName",
      "signature" : "Mono.CSharp.MemberName Mono.CSharp.AbstractPropertyEventMethod:SetupName (string,Mono.CSharp.InterfaceMemberBase,Mono.CSharp.Location)",
      "code_size" : "146",
      "class" : "AbstractPropertyEventMethod",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "UpdateName",
      "signature" : "void Mono.CSharp.AbstractPropertyEventMethod:UpdateName (Mono.CSharp.InterfaceMemberBase)",
      "code_size" : "74",
      "class" : "AbstractPropertyEventMethod",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Block",
      "signature" : "Mono.CSharp.ToplevelBlock Mono.CSharp.AbstractPropertyEventMethod:get_Block ()",
      "code_size" : "20",
      "class" : "AbstractPropertyEventMethod",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Block",
      "signature" : "void Mono.CSharp.AbstractPropertyEventMethod:set_Block (Mono.CSharp.ToplevelBlock)",
      "code_size" : "43",
      "class" : "AbstractPropertyEventMethod",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_CallingConventions",
      "signature" : "System.Reflection.CallingConventions Mono.CSharp.AbstractPropertyEventMethod:get_CallingConventions ()",
      "code_size" : "14",
      "class" : "AbstractPropertyEventMethod",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateEmitContext",
      "signature" : "Mono.CSharp.EmitContext Mono.CSharp.AbstractPropertyEventMethod:CreateEmitContext (System.Reflection.Emit.ILGenerator,Mono.CompilerServices.SymbolWriter.SourceMethodBuilder)",
      "code_size" : "94",
      "class" : "AbstractPropertyEventMethod",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsAccessor",
      "signature" : "bool Mono.CSharp.AbstractPropertyEventMethod:get_IsAccessor ()",
      "code_size" : "14",
      "class" : "AbstractPropertyEventMethod",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_MethodName",
      "signature" : "Mono.CSharp.MemberName Mono.CSharp.AbstractPropertyEventMethod:get_MethodName ()",
      "code_size" : "20",
      "class" : "AbstractPropertyEventMethod",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ParameterTypes",
      "signature" : "Mono.CSharp.TypeSpec[] Mono.CSharp.AbstractPropertyEventMethod:get_ParameterTypes ()",
      "code_size" : "35",
      "class" : "AbstractPropertyEventMethod",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mono.CSharp.IMethodDefinition.get_Metadata",
      "signature" : "System.Reflection.MethodBase Mono.CSharp.AbstractPropertyEventMethod:Mono.CSharp.IMethodDefinition.get_Metadata ()",
      "code_size" : "30",
      "class" : "AbstractPropertyEventMethod",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ApplyAttributeBuilder",
      "signature" : "void Mono.CSharp.AbstractPropertyEventMethod:ApplyAttributeBuilder (Mono.CSharp.Attribute,Mono.CSharp.MethodSpec,byte[],Mono.CSharp.PredefinedAttributes)",
      "code_size" : "691",
      "class" : "AbstractPropertyEventMethod",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ApplyToExtraTarget",
      "signature" : "void Mono.CSharp.AbstractPropertyEventMethod:ApplyToExtraTarget (Mono.CSharp.Attribute,Mono.CSharp.MethodSpec,byte[],Mono.CSharp.PredefinedAttributes)",
      "code_size" : "47",
      "class" : "AbstractPropertyEventMethod",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Define",
      "signature" : "bool Mono.CSharp.AbstractPropertyEventMethod:Define ()",
      "code_size" : "27",
      "class" : "AbstractPropertyEventMethod",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.AbstractPropertyEventMethod:Emit (Mono.CSharp.TypeDefinition)",
      "code_size" : "1084",
      "class" : "AbstractPropertyEventMethod",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EnableOverloadChecks",
      "signature" : "bool Mono.CSharp.AbstractPropertyEventMethod:EnableOverloadChecks (Mono.CSharp.MemberCore)",
      "code_size" : "159",
      "class" : "AbstractPropertyEventMethod",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetCallerMemberName",
      "signature" : "string Mono.CSharp.AbstractPropertyEventMethod:GetCallerMemberName ()",
      "code_size" : "43",
      "class" : "AbstractPropertyEventMethod",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSignatureForDocumentation",
      "signature" : "string Mono.CSharp.AbstractPropertyEventMethod:GetSignatureForDocumentation ()",
      "code_size" : "27",
      "class" : "AbstractPropertyEventMethod",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsClsComplianceRequired",
      "signature" : "bool Mono.CSharp.AbstractPropertyEventMethod:IsClsComplianceRequired ()",
      "code_size" : "11",
      "class" : "AbstractPropertyEventMethod",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "PrepareEmit",
      "signature" : "void Mono.CSharp.AbstractPropertyEventMethod:PrepareEmit ()",
      "code_size" : "84",
      "class" : "AbstractPropertyEventMethod",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "WriteDebugSymbol",
      "signature" : "void Mono.CSharp.AbstractPropertyEventMethod:WriteDebugSymbol (Mono.CompilerServices.SymbolWriter.MonoSymbolFile)",
      "code_size" : "54",
      "class" : "AbstractPropertyEventMethod",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Spec",
      "signature" : "Mono.CSharp.MethodSpec Mono.CSharp.AbstractPropertyEventMethod:get_Spec ()",
      "code_size" : "20",
      "class" : "AbstractPropertyEventMethod",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Spec",
      "signature" : "void Mono.CSharp.AbstractPropertyEventMethod:set_Spec (Mono.CSharp.MethodSpec)",
      "code_size" : "43",
      "class" : "AbstractPropertyEventMethod",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_DocCommentHeader",
      "signature" : "string Mono.CSharp.AbstractPropertyEventMethod:get_DocCommentHeader ()",
      "code_size" : "107",
      "class" : "AbstractPropertyEventMethod",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".cctor",
      "signature" : "void Mono.CSharp.Operator:.cctor ()",
      "code_size" : "3805",
      "class" : "Operator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Operator:.ctor (Mono.CSharp.TypeDefinition,Mono.CSharp.Operator/OpType,Mono.CSharp.FullNamedExpression,Mono.CSharp.Modifiers,Mono.CSharp.ParametersCompiled,Mono.CSharp.ToplevelBlock,Mono.CSharp.Attributes,Mono.CSharp.Location)",
      "code_size" : "168",
      "class" : "Operator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "void Mono.CSharp.Operator:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "Operator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ApplyAttributeBuilder",
      "signature" : "void Mono.CSharp.Operator:ApplyAttributeBuilder (Mono.CSharp.Attribute,Mono.CSharp.MethodSpec,byte[],Mono.CSharp.PredefinedAttributes)",
      "code_size" : "98",
      "class" : "Operator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Define",
      "signature" : "bool Mono.CSharp.Operator:Define ()",
      "code_size" : "2088",
      "class" : "Operator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveMemberType",
      "signature" : "bool Mono.CSharp.Operator:ResolveMemberType ()",
      "code_size" : "48",
      "class" : "Operator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "FindBaseMember",
      "signature" : "Mono.CSharp.MemberSpec Mono.CSharp.Operator:FindBaseMember (Mono.CSharp.MemberSpec&,bool&)",
      "code_size" : "26",
      "class" : "Operator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetName",
      "signature" : "string Mono.CSharp.Operator:GetName (Mono.CSharp.Operator/OpType)",
      "code_size" : "105",
      "class" : "Operator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetName",
      "signature" : "string Mono.CSharp.Operator:GetName (string)",
      "code_size" : "277",
      "class" : "Operator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetMetadataName",
      "signature" : "string Mono.CSharp.Operator:GetMetadataName (Mono.CSharp.Operator/OpType)",
      "code_size" : "105",
      "class" : "Operator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetMetadataName",
      "signature" : "string Mono.CSharp.Operator:GetMetadataName (string)",
      "code_size" : "277",
      "class" : "Operator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetType",
      "signature" : "System.Nullable`1<Mono.CSharp.Operator/OpType> Mono.CSharp.Operator:GetType (string)",
      "code_size" : "301",
      "class" : "Operator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetMatchingOperator",
      "signature" : "Mono.CSharp.Operator/OpType Mono.CSharp.Operator:GetMatchingOperator ()",
      "code_size" : "154",
      "class" : "Operator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSignatureForDocumentation",
      "signature" : "string Mono.CSharp.Operator:GetSignatureForDocumentation ()",
      "code_size" : "115",
      "class" : "Operator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSignatureForError",
      "signature" : "string Mono.CSharp.Operator:GetSignatureForError ()",
      "code_size" : "405",
      "class" : "Operator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AccessibilityName",
      "signature" : "string Mono.CSharp.ModifiersExtensions:AccessibilityName (Mono.CSharp.Modifiers)",
      "code_size" : "193",
      "class" : "ModifiersExtensions",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Name",
      "signature" : "string Mono.CSharp.ModifiersExtensions:Name (Mono.CSharp.Modifiers)",
      "code_size" : "382",
      "class" : "ModifiersExtensions",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsRestrictedModifier",
      "signature" : "bool Mono.CSharp.ModifiersExtensions:IsRestrictedModifier (Mono.CSharp.Modifiers,Mono.CSharp.Modifiers)",
      "code_size" : "141",
      "class" : "ModifiersExtensions",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "TypeAttr",
      "signature" : "System.Reflection.TypeAttributes Mono.CSharp.ModifiersExtensions:TypeAttr (Mono.CSharp.Modifiers,bool)",
      "code_size" : "219",
      "class" : "ModifiersExtensions",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "FieldAttr",
      "signature" : "System.Reflection.FieldAttributes Mono.CSharp.ModifiersExtensions:FieldAttr (Mono.CSharp.Modifiers)",
      "code_size" : "142",
      "class" : "ModifiersExtensions",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MethodAttr",
      "signature" : "System.Reflection.MethodAttributes Mono.CSharp.ModifiersExtensions:MethodAttr (Mono.CSharp.Modifiers)",
      "code_size" : "289",
      "class" : "ModifiersExtensions",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Check",
      "signature" : "Mono.CSharp.Modifiers Mono.CSharp.ModifiersExtensions:Check (Mono.CSharp.Modifiers,Mono.CSharp.Modifiers,Mono.CSharp.Modifiers,Mono.CSharp.Location,Mono.CSharp.Report)",
      "code_size" : "189",
      "class" : "ModifiersExtensions",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_InvalidModifier",
      "signature" : "void Mono.CSharp.ModifiersExtensions:Error_InvalidModifier (Mono.CSharp.Modifiers,Mono.CSharp.Location,Mono.CSharp.Report)",
      "code_size" : "82",
      "class" : "ModifiersExtensions",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ModuleContainer:.ctor (Mono.CSharp.CompilerContext)",
      "code_size" : "796",
      "class" : "ModuleContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreatePatterMatchingHelper",
      "signature" : "Mono.CSharp.ModuleContainer/PatternMatchingHelper Mono.CSharp.ModuleContainer:CreatePatterMatchingHelper ()",
      "code_size" : "158",
      "class" : "ModuleContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ArrayTypesCache",
      "signature" : "System.Collections.Generic.Dictionary`2<Mono.CSharp.ArrayContainer/TypeRankPair, Mono.CSharp.ArrayContainer> Mono.CSharp.ModuleContainer:get_ArrayTypesCache ()",
      "code_size" : "23",
      "class" : "ModuleContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_AttributeConstructorCache",
      "signature" : "System.Collections.Generic.Dictionary`2<Mono.CSharp.TypeSpec, Mono.CSharp.MethodSpec> Mono.CSharp.ModuleContainer:get_AttributeConstructorCache ()",
      "code_size" : "23",
      "class" : "ModuleContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_AttributeTargets",
      "signature" : "System.AttributeTargets Mono.CSharp.ModuleContainer:get_AttributeTargets ()",
      "code_size" : "14",
      "class" : "ModuleContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Builder",
      "signature" : "System.Reflection.Emit.ModuleBuilder Mono.CSharp.ModuleContainer:get_Builder ()",
      "code_size" : "23",
      "class" : "ModuleContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Compiler",
      "signature" : "Mono.CSharp.CompilerContext Mono.CSharp.ModuleContainer:get_Compiler ()",
      "code_size" : "23",
      "class" : "ModuleContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_CounterAnonymousTypes",
      "signature" : "int Mono.CSharp.ModuleContainer:get_CounterAnonymousTypes ()",
      "code_size" : "23",
      "class" : "ModuleContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_CounterAnonymousTypes",
      "signature" : "void Mono.CSharp.ModuleContainer:set_CounterAnonymousTypes (int)",
      "code_size" : "31",
      "class" : "ModuleContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_DeclaringAssembly",
      "signature" : "Mono.CSharp.AssemblyDefinition Mono.CSharp.ModuleContainer:get_DeclaringAssembly ()",
      "code_size" : "23",
      "class" : "ModuleContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_DocumentationBuilder",
      "signature" : "Mono.CSharp.DocumentationBuilder Mono.CSharp.ModuleContainer:get_DocumentationBuilder ()",
      "code_size" : "23",
      "class" : "ModuleContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_DocumentationBuilder",
      "signature" : "void Mono.CSharp.ModuleContainer:set_DocumentationBuilder (Mono.CSharp.DocumentationBuilder)",
      "code_size" : "49",
      "class" : "ModuleContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_DocCommentHeader",
      "signature" : "string Mono.CSharp.ModuleContainer:get_DocCommentHeader ()",
      "code_size" : "27",
      "class" : "ModuleContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Evaluator",
      "signature" : "Mono.CSharp.Evaluator Mono.CSharp.ModuleContainer:get_Evaluator ()",
      "code_size" : "23",
      "class" : "ModuleContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Evaluator",
      "signature" : "void Mono.CSharp.ModuleContainer:set_Evaluator (Mono.CSharp.Evaluator)",
      "code_size" : "49",
      "class" : "ModuleContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_HasDefaultCharSet",
      "signature" : "bool Mono.CSharp.ModuleContainer:get_HasDefaultCharSet ()",
      "code_size" : "57",
      "class" : "ModuleContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_HasExtensionMethod",
      "signature" : "bool Mono.CSharp.ModuleContainer:get_HasExtensionMethod ()",
      "code_size" : "23",
      "class" : "ModuleContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_HasExtensionMethod",
      "signature" : "void Mono.CSharp.ModuleContainer:set_HasExtensionMethod (bool)",
      "code_size" : "34",
      "class" : "ModuleContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_HasTypesFullyDefined",
      "signature" : "bool Mono.CSharp.ModuleContainer:get_HasTypesFullyDefined ()",
      "code_size" : "23",
      "class" : "ModuleContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_HasTypesFullyDefined",
      "signature" : "void Mono.CSharp.ModuleContainer:set_HasTypesFullyDefined (bool)",
      "code_size" : "34",
      "class" : "ModuleContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_GlobalRootNamespace",
      "signature" : "Mono.CSharp.RootNamespace Mono.CSharp.ModuleContainer:get_GlobalRootNamespace ()",
      "code_size" : "23",
      "class" : "ModuleContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Module",
      "signature" : "Mono.CSharp.ModuleContainer Mono.CSharp.ModuleContainer:get_Module ()",
      "code_size" : "16",
      "class" : "ModuleContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_PointerTypesCache",
      "signature" : "System.Collections.Generic.Dictionary`2<Mono.CSharp.TypeSpec, Mono.CSharp.PointerContainer> Mono.CSharp.ModuleContainer:get_PointerTypesCache ()",
      "code_size" : "23",
      "class" : "ModuleContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_PredefinedAttributes",
      "signature" : "Mono.CSharp.PredefinedAttributes Mono.CSharp.ModuleContainer:get_PredefinedAttributes ()",
      "code_size" : "23",
      "class" : "ModuleContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_PredefinedMembers",
      "signature" : "Mono.CSharp.PredefinedMembers Mono.CSharp.ModuleContainer:get_PredefinedMembers ()",
      "code_size" : "23",
      "class" : "ModuleContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_PredefinedTypes",
      "signature" : "Mono.CSharp.PredefinedTypes Mono.CSharp.ModuleContainer:get_PredefinedTypes ()",
      "code_size" : "23",
      "class" : "ModuleContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ReferenceTypesCache",
      "signature" : "System.Collections.Generic.Dictionary`2<Mono.CSharp.TypeSpec, Mono.CSharp.ReferenceContainer> Mono.CSharp.ModuleContainer:get_ReferenceTypesCache ()",
      "code_size" : "23",
      "class" : "ModuleContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_TypeInfoCache",
      "signature" : "System.Collections.Generic.Dictionary`2<Mono.CSharp.TypeSpec, Mono.CSharp.TypeInfo> Mono.CSharp.ModuleContainer:get_TypeInfoCache ()",
      "code_size" : "23",
      "class" : "ModuleContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ValidAttributeTargets",
      "signature" : "string[] Mono.CSharp.ModuleContainer:get_ValidAttributeTargets ()",
      "code_size" : "19",
      "class" : "ModuleContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_GetResourceStrings",
      "signature" : "System.Collections.Generic.Dictionary`2<string, string> Mono.CSharp.ModuleContainer:get_GetResourceStrings ()",
      "code_size" : "23",
      "class" : "ModuleContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_GetResourceStrings",
      "signature" : "void Mono.CSharp.ModuleContainer:set_GetResourceStrings (System.Collections.Generic.Dictionary`2<string, string>)",
      "code_size" : "49",
      "class" : "ModuleContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "void Mono.CSharp.ModuleContainer:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "ModuleContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddAnonymousType",
      "signature" : "void Mono.CSharp.ModuleContainer:AddAnonymousType (Mono.CSharp.AnonymousTypeClass)",
      "code_size" : "279",
      "class" : "ModuleContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddAttribute",
      "signature" : "void Mono.CSharp.ModuleContainer:AddAttribute (Mono.CSharp.Attribute,Mono.CSharp.IMemberContext)",
      "code_size" : "155",
      "class" : "ModuleContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddTypeContainer",
      "signature" : "void Mono.CSharp.ModuleContainer:AddTypeContainer (Mono.CSharp.TypeContainer)",
      "code_size" : "31",
      "class" : "ModuleContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ApplyAttributeBuilder",
      "signature" : "void Mono.CSharp.ModuleContainer:ApplyAttributeBuilder (Mono.CSharp.Attribute,Mono.CSharp.MethodSpec,byte[],Mono.CSharp.PredefinedAttributes)",
      "code_size" : "917",
      "class" : "ModuleContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloseContainer",
      "signature" : "void Mono.CSharp.ModuleContainer:CloseContainer ()",
      "code_size" : "374",
      "class" : "ModuleContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateBuilder",
      "signature" : "System.Reflection.Emit.TypeBuilder Mono.CSharp.ModuleContainer:CreateBuilder (string,System.Reflection.TypeAttributes,int)",
      "code_size" : "240",
      "class" : "ModuleContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateRootNamespace",
      "signature" : "Mono.CSharp.RootNamespace Mono.CSharp.ModuleContainer:CreateRootNamespace (string)",
      "code_size" : "259",
      "class" : "ModuleContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Create",
      "signature" : "void Mono.CSharp.ModuleContainer:Create (Mono.CSharp.AssemblyDefinition,System.Reflection.Emit.ModuleBuilder)",
      "code_size" : "86",
      "class" : "ModuleContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Define",
      "signature" : "bool Mono.CSharp.ModuleContainer:Define ()",
      "code_size" : "62",
      "class" : "ModuleContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DefineContainer",
      "signature" : "bool Mono.CSharp.ModuleContainer:DefineContainer ()",
      "code_size" : "34",
      "class" : "ModuleContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EnableRedefinition",
      "signature" : "void Mono.CSharp.ModuleContainer:EnableRedefinition ()",
      "code_size" : "20",
      "class" : "ModuleContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitContainer",
      "signature" : "void Mono.CSharp.ModuleContainer:EmitContainer ()",
      "code_size" : "764",
      "class" : "ModuleContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GenerateDocComment",
      "signature" : "void Mono.CSharp.ModuleContainer:GenerateDocComment (Mono.CSharp.DocumentationBuilder)",
      "code_size" : "168",
      "class" : "ModuleContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetAnonymousType",
      "signature" : "Mono.CSharp.AnonymousTypeClass Mono.CSharp.ModuleContainer:GetAnonymousType (System.Collections.Generic.IList`1<Mono.CSharp.AnonymousTypeParameter>)",
      "code_size" : "409",
      "class" : "ModuleContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetAwaiter",
      "signature" : "Mono.CSharp.AwaiterDefinition Mono.CSharp.ModuleContainer:GetAwaiter (Mono.CSharp.TypeSpec)",
      "code_size" : "596",
      "class" : "ModuleContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetCompletionStartingWith",
      "signature" : "void Mono.CSharp.ModuleContainer:GetCompletionStartingWith (string,System.Collections.Generic.List`1<string>)",
      "code_size" : "281",
      "class" : "ModuleContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetRootNamespace",
      "signature" : "Mono.CSharp.RootNamespace Mono.CSharp.ModuleContainer:GetRootNamespace (string)",
      "code_size" : "62",
      "class" : "ModuleContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSignatureForError",
      "signature" : "string Mono.CSharp.ModuleContainer:GetSignatureForError ()",
      "code_size" : "16",
      "class" : "ModuleContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetPredefinedEnumAritmeticOperators",
      "signature" : "Mono.CSharp.Binary/PredefinedOperator[] Mono.CSharp.ModuleContainer:GetPredefinedEnumAritmeticOperators (Mono.CSharp.TypeSpec,bool)",
      "code_size" : "428",
      "class" : "ModuleContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "InitializePredefinedTypes",
      "signature" : "void Mono.CSharp.ModuleContainer:InitializePredefinedTypes ()",
      "code_size" : "295",
      "class" : "ModuleContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsClsComplianceRequired",
      "signature" : "bool Mono.CSharp.ModuleContainer:IsClsComplianceRequired ()",
      "code_size" : "36",
      "class" : "ModuleContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveAssemblyAttribute",
      "signature" : "Mono.CSharp.Attribute Mono.CSharp.ModuleContainer:ResolveAssemblyAttribute (Mono.CSharp.PredefinedAttribute)",
      "code_size" : "76",
      "class" : "ModuleContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetDeclaringAssembly",
      "signature" : "void Mono.CSharp.ModuleContainer:SetDeclaringAssembly (Mono.CSharp.AssemblyDefinition)",
      "code_size" : "49",
      "class" : "ModuleContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "LoadGetResourceStrings",
      "signature" : "void Mono.CSharp.ModuleContainer:LoadGetResourceStrings (System.Collections.Generic.List`1<string>)",
      "code_size" : "686",
      "class" : "ModuleContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".cctor",
      "signature" : "void Mono.CSharp.ModuleContainer:.cctor ()",
      "code_size" : "105",
      "class" : "ModuleContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ModuleContainer/PatternMatchingHelper:.ctor (Mono.CSharp.ModuleContainer)",
      "code_size" : "130",
      "class" : "PatternMatchingHelper",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_NumberMatcher",
      "signature" : "Mono.CSharp.Method Mono.CSharp.ModuleContainer/PatternMatchingHelper:get_NumberMatcher ()",
      "code_size" : "23",
      "class" : "PatternMatchingHelper",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_NumberMatcher",
      "signature" : "void Mono.CSharp.ModuleContainer/PatternMatchingHelper:set_NumberMatcher (Mono.CSharp.Method)",
      "code_size" : "49",
      "class" : "PatternMatchingHelper",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoDefineMembers",
      "signature" : "bool Mono.CSharp.ModuleContainer/PatternMatchingHelper:DoDefineMembers ()",
      "code_size" : "78",
      "class" : "PatternMatchingHelper",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "GenerateNumberMatcher",
      "signature" : "Mono.CSharp.Method Mono.CSharp.ModuleContainer/PatternMatchingHelper:GenerateNumberMatcher ()",
      "code_size" : "4361",
      "class" : "PatternMatchingHelper",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.RootNamespace:.ctor (string)",
      "code_size" : "150",
      "class" : "RootNamespace",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Alias",
      "signature" : "string Mono.CSharp.RootNamespace:get_Alias ()",
      "code_size" : "20",
      "class" : "RootNamespace",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_GlobalNamespaceRedefined",
      "signature" : "void Mono.CSharp.RootNamespace:Error_GlobalNamespaceRedefined (Mono.CSharp.Report,Mono.CSharp.Location)",
      "code_size" : "51",
      "class" : "RootNamespace",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "FindTypeNamespaces",
      "signature" : "System.Collections.Generic.List`1<string> Mono.CSharp.RootNamespace:FindTypeNamespaces (Mono.CSharp.IMemberContext,string,int)",
      "code_size" : "441",
      "class" : "RootNamespace",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "FindExtensionMethodNamespaces",
      "signature" : "System.Collections.Generic.List`1<string> Mono.CSharp.RootNamespace:FindExtensionMethodNamespaces (Mono.CSharp.IMemberContext,string,int)",
      "code_size" : "403",
      "class" : "RootNamespace",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "RegisterNamespace",
      "signature" : "void Mono.CSharp.RootNamespace:RegisterNamespace (Mono.CSharp.Namespace)",
      "code_size" : "63",
      "class" : "RootNamespace",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSignatureForError",
      "signature" : "string Mono.CSharp.RootNamespace:GetSignatureForError ()",
      "code_size" : "32",
      "class" : "RootNamespace",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.GlobalRootNamespace:.ctor ()",
      "code_size" : "29",
      "class" : "GlobalRootNamespace",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Namespace:.ctor (Mono.CSharp.Namespace,string)",
      "code_size" : "361",
      "class" : "Namespace",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Namespace:.ctor ()",
      "code_size" : "136",
      "class" : "Namespace",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Name",
      "signature" : "string Mono.CSharp.Namespace:get_Name ()",
      "code_size" : "20",
      "class" : "Namespace",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Parent",
      "signature" : "Mono.CSharp.Namespace Mono.CSharp.Namespace:get_Parent ()",
      "code_size" : "20",
      "class" : "Namespace",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddNamespace",
      "signature" : "Mono.CSharp.Namespace Mono.CSharp.Namespace:AddNamespace (Mono.CSharp.MemberName)",
      "code_size" : "91",
      "class" : "Namespace",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "TryAddNamespace",
      "signature" : "Mono.CSharp.Namespace Mono.CSharp.Namespace:TryAddNamespace (string)",
      "code_size" : "145",
      "class" : "Namespace",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "TryGetNamespace",
      "signature" : "bool Mono.CSharp.Namespace:TryGetNamespace (string,Mono.CSharp.Namespace&)",
      "code_size" : "51",
      "class" : "Namespace",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetNamespace",
      "signature" : "Mono.CSharp.Namespace Mono.CSharp.Namespace:GetNamespace (string,bool)",
      "code_size" : "306",
      "class" : "Namespace",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetAllTypes",
      "signature" : "System.Collections.Generic.IList`1<Mono.CSharp.TypeSpec> Mono.CSharp.Namespace:GetAllTypes (string)",
      "code_size" : "81",
      "class" : "Namespace",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSignatureForError",
      "signature" : "string Mono.CSharp.Namespace:GetSignatureForError ()",
      "code_size" : "20",
      "class" : "Namespace",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "LookupType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.Namespace:LookupType (Mono.CSharp.IMemberContext,string,int,Mono.CSharp.LookupMode,Mono.CSharp.Location)",
      "code_size" : "1584",
      "class" : "Namespace",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "LookupTypeOrNamespace",
      "signature" : "Mono.CSharp.FullNamedExpression Mono.CSharp.Namespace:LookupTypeOrNamespace (Mono.CSharp.IMemberContext,string,int,Mono.CSharp.LookupMode,Mono.CSharp.Location)",
      "code_size" : "481",
      "class" : "Namespace",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CompletionGetTypesStartingWith",
      "signature" : "System.Collections.Generic.IEnumerable`1<string> Mono.CSharp.Namespace:CompletionGetTypesStartingWith (string)",
      "code_size" : "710",
      "class" : "Namespace",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "LookupExtensionMethod",
      "signature" : "System.Collections.Generic.List`1<Mono.CSharp.MethodSpec> Mono.CSharp.Namespace:LookupExtensionMethod (Mono.CSharp.IMemberContext,string,int)",
      "code_size" : "326",
      "class" : "Namespace",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddType",
      "signature" : "void Mono.CSharp.Namespace:AddType (Mono.CSharp.ModuleContainer,Mono.CSharp.TypeSpec)",
      "code_size" : "1099",
      "class" : "Namespace",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsImportedTypeOverride",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.Namespace:IsImportedTypeOverride (Mono.CSharp.ModuleContainer,Mono.CSharp.TypeSpec,Mono.CSharp.TypeSpec)",
      "code_size" : "237",
      "class" : "Namespace",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "RemoveContainer",
      "signature" : "void Mono.CSharp.Namespace:RemoveContainer (Mono.CSharp.TypeContainer)",
      "code_size" : "362",
      "class" : "Namespace",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetBuiltinType",
      "signature" : "void Mono.CSharp.Namespace:SetBuiltinType (Mono.CSharp.BuiltinTypeSpec)",
      "code_size" : "243",
      "class" : "Namespace",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "VerifyClsCompliance",
      "signature" : "void Mono.CSharp.Namespace:VerifyClsCompliance ()",
      "code_size" : "1455",
      "class" : "Namespace",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "<CompletionGetTypesStartingWith>m__0",
      "signature" : "string Mono.CSharp.Namespace:<CompletionGetTypesStartingWith>m__0 (System.Collections.Generic.KeyValuePair`2<string, System.Collections.Generic.IList`1<Mono.CSharp.TypeSpec>>)",
      "code_size" : "29",
      "class" : "Namespace",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "<CompletionGetTypesStartingWith>m__1",
      "signature" : "string Mono.CSharp.Namespace:<CompletionGetTypesStartingWith>m__1 (System.Collections.Generic.KeyValuePair`2<string, Mono.CSharp.Namespace>)",
      "code_size" : "29",
      "class" : "Namespace",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.CompilationSourceFile:.ctor (Mono.CSharp.ModuleContainer,Mono.CSharp.SourceFile)",
      "code_size" : "61",
      "class" : "CompilationSourceFile",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.CompilationSourceFile:.ctor (Mono.CSharp.ModuleContainer)",
      "code_size" : "23",
      "class" : "CompilationSourceFile",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_SymbolUnitEntry",
      "signature" : "Mono.CompilerServices.SymbolWriter.CompileUnitEntry Mono.CSharp.CompilationSourceFile:get_SymbolUnitEntry ()",
      "code_size" : "23",
      "class" : "CompilationSourceFile",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_FileName",
      "signature" : "string Mono.CSharp.CompilationSourceFile:get_FileName ()",
      "code_size" : "27",
      "class" : "CompilationSourceFile",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_SourceFile",
      "signature" : "Mono.CSharp.SourceFile Mono.CSharp.CompilationSourceFile:get_SourceFile ()",
      "code_size" : "23",
      "class" : "CompilationSourceFile",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddIncludeFile",
      "signature" : "void Mono.CSharp.CompilationSourceFile:AddIncludeFile (Mono.CSharp.SourceFile)",
      "code_size" : "180",
      "class" : "CompilationSourceFile",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddDefine",
      "signature" : "void Mono.CSharp.CompilationSourceFile:AddDefine (string)",
      "code_size" : "138",
      "class" : "CompilationSourceFile",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddUndefine",
      "signature" : "void Mono.CSharp.CompilationSourceFile:AddUndefine (string)",
      "code_size" : "135",
      "class" : "CompilationSourceFile",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "PrepareEmit",
      "signature" : "void Mono.CSharp.CompilationSourceFile:PrepareEmit ()",
      "code_size" : "89",
      "class" : "CompilationSourceFile",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateUnitSymbolInfo",
      "signature" : "void Mono.CSharp.CompilationSourceFile:CreateUnitSymbolInfo (Mono.CompilerServices.SymbolWriter.MonoSymbolFile)",
      "code_size" : "323",
      "class" : "CompilationSourceFile",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsConditionalDefined",
      "signature" : "bool Mono.CSharp.CompilationSourceFile:IsConditionalDefined (string)",
      "code_size" : "157",
      "class" : "CompilationSourceFile",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "void Mono.CSharp.CompilationSourceFile:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "CompilationSourceFile",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.NamespaceContainer:.ctor (Mono.CSharp.MemberName,Mono.CSharp.NamespaceContainer)",
      "code_size" : "205",
      "class" : "NamespaceContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.NamespaceContainer:.ctor (Mono.CSharp.ModuleContainer)",
      "code_size" : "145",
      "class" : "NamespaceContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_AttributeTargets",
      "signature" : "System.AttributeTargets Mono.CSharp.NamespaceContainer:get_AttributeTargets ()",
      "code_size" : "27",
      "class" : "NamespaceContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_DocCommentHeader",
      "signature" : "string Mono.CSharp.NamespaceContainer:get_DocCommentHeader ()",
      "code_size" : "27",
      "class" : "NamespaceContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_NS",
      "signature" : "Mono.CSharp.Namespace Mono.CSharp.NamespaceContainer:get_NS ()",
      "code_size" : "20",
      "class" : "NamespaceContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Usings",
      "signature" : "System.Collections.Generic.List`1<Mono.CSharp.UsingClause> Mono.CSharp.NamespaceContainer:get_Usings ()",
      "code_size" : "23",
      "class" : "NamespaceContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ValidAttributeTargets",
      "signature" : "string[] Mono.CSharp.NamespaceContainer:get_ValidAttributeTargets ()",
      "code_size" : "27",
      "class" : "NamespaceContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddUsing",
      "signature" : "void Mono.CSharp.NamespaceContainer:AddUsing (Mono.CSharp.UsingClause)",
      "code_size" : "243",
      "class" : "NamespaceContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddUsing",
      "signature" : "void Mono.CSharp.NamespaceContainer:AddUsing (Mono.CSharp.UsingAliasNamespace)",
      "code_size" : "125",
      "class" : "NamespaceContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddAlias",
      "signature" : "void Mono.CSharp.NamespaceContainer:AddAlias (Mono.CSharp.UsingAliasNamespace)",
      "code_size" : "561",
      "class" : "NamespaceContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddPartial",
      "signature" : "void Mono.CSharp.NamespaceContainer:AddPartial (Mono.CSharp.TypeDefinition)",
      "code_size" : "269",
      "class" : "NamespaceContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddTypeContainer",
      "signature" : "void Mono.CSharp.NamespaceContainer:AddTypeContainer (Mono.CSharp.TypeContainer)",
      "code_size" : "1151",
      "class" : "NamespaceContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ApplyAttributeBuilder",
      "signature" : "void Mono.CSharp.NamespaceContainer:ApplyAttributeBuilder (Mono.CSharp.Attribute,Mono.CSharp.MethodSpec,byte[],Mono.CSharp.PredefinedAttributes)",
      "code_size" : "27",
      "class" : "NamespaceContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitContainer",
      "signature" : "void Mono.CSharp.NamespaceContainer:EmitContainer ()",
      "code_size" : "34",
      "class" : "NamespaceContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "LookupExtensionMethod",
      "signature" : "Mono.CSharp.ExtensionMethodCandidates Mono.CSharp.NamespaceContainer:LookupExtensionMethod (Mono.CSharp.IMemberContext,string,int,int)",
      "code_size" : "386",
      "class" : "NamespaceContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "LookupExtensionMethodCandidates",
      "signature" : "Mono.CSharp.ExtensionMethodCandidates Mono.CSharp.NamespaceContainer:LookupExtensionMethodCandidates (Mono.CSharp.IMemberContext,string,int,int&)",
      "code_size" : "634",
      "class" : "NamespaceContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "LookupNamespaceOrType",
      "signature" : "Mono.CSharp.FullNamedExpression Mono.CSharp.NamespaceContainer:LookupNamespaceOrType (string,int,Mono.CSharp.LookupMode,Mono.CSharp.Location)",
      "code_size" : "290",
      "class" : "NamespaceContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetCompletionStartingWith",
      "signature" : "void Mono.CSharp.NamespaceContainer:GetCompletionStartingWith (string,System.Collections.Generic.List`1<string>)",
      "code_size" : "584",
      "class" : "NamespaceContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "LookupExternAlias",
      "signature" : "Mono.CSharp.FullNamedExpression Mono.CSharp.NamespaceContainer:LookupExternAlias (string)",
      "code_size" : "161",
      "class" : "NamespaceContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "LookupNamespaceAlias",
      "signature" : "Mono.CSharp.FullNamedExpression Mono.CSharp.NamespaceContainer:LookupNamespaceAlias (string)",
      "code_size" : "169",
      "class" : "NamespaceContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Lookup",
      "signature" : "Mono.CSharp.FullNamedExpression Mono.CSharp.NamespaceContainer:Lookup (string,int,Mono.CSharp.LookupMode,Mono.CSharp.Location)",
      "code_size" : "1494",
      "class" : "NamespaceContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_AmbiguousReference",
      "signature" : "void Mono.CSharp.NamespaceContainer:Error_AmbiguousReference (string,Mono.CSharp.FullNamedExpression,Mono.CSharp.FullNamedExpression,Mono.CSharp.Location)",
      "code_size" : "319",
      "class" : "NamespaceContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "LookupStaticUsings",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.NamespaceContainer:LookupStaticUsings (Mono.CSharp.IMemberContext,string,int,Mono.CSharp.Location)",
      "code_size" : "693",
      "class" : "NamespaceContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DefineNamespace",
      "signature" : "void Mono.CSharp.NamespaceContainer:DefineNamespace ()",
      "code_size" : "46",
      "class" : "NamespaceContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoDefineNamespace",
      "signature" : "void Mono.CSharp.NamespaceContainer:DoDefineNamespace ()",
      "code_size" : "1473",
      "class" : "NamespaceContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoDefineContainer",
      "signature" : "void Mono.CSharp.NamespaceContainer:DoDefineContainer ()",
      "code_size" : "161",
      "class" : "NamespaceContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EnableRedefinition",
      "signature" : "void Mono.CSharp.NamespaceContainer:EnableRedefinition ()",
      "code_size" : "31",
      "class" : "NamespaceContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GenerateDocComment",
      "signature" : "void Mono.CSharp.NamespaceContainer:GenerateDocComment (Mono.CSharp.DocumentationBuilder)",
      "code_size" : "184",
      "class" : "NamespaceContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSignatureForError",
      "signature" : "string Mono.CSharp.NamespaceContainer:GetSignatureForError ()",
      "code_size" : "52",
      "class" : "NamespaceContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "RemoveContainer",
      "signature" : "void Mono.CSharp.NamespaceContainer:RemoveContainer (Mono.CSharp.TypeContainer)",
      "code_size" : "47",
      "class" : "NamespaceContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "VerifyClsCompliance",
      "signature" : "bool Mono.CSharp.NamespaceContainer:VerifyClsCompliance ()",
      "code_size" : "137",
      "class" : "NamespaceContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Warning_DuplicateEntry",
      "signature" : "void Mono.CSharp.NamespaceContainer:Warning_DuplicateEntry (Mono.CSharp.UsingClause)",
      "code_size" : "138",
      "class" : "NamespaceContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "void Mono.CSharp.NamespaceContainer:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "NamespaceContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".cctor",
      "signature" : "void Mono.CSharp.NamespaceContainer:.cctor ()",
      "code_size" : "58",
      "class" : "NamespaceContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.UsingNamespace:.ctor (Mono.CSharp.ATypeNameExpression,Mono.CSharp.Location)",
      "code_size" : "33",
      "class" : "UsingNamespace",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Define",
      "signature" : "void Mono.CSharp.UsingNamespace:Define (Mono.CSharp.NamespaceContainer)",
      "code_size" : "276",
      "class" : "UsingNamespace",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.UsingType:.ctor (Mono.CSharp.ATypeNameExpression,Mono.CSharp.Location)",
      "code_size" : "33",
      "class" : "UsingType",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Define",
      "signature" : "void Mono.CSharp.UsingType:Define (Mono.CSharp.NamespaceContainer)",
      "code_size" : "237",
      "class" : "UsingType",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.UsingClause:.ctor (Mono.CSharp.ATypeNameExpression,Mono.CSharp.Location)",
      "code_size" : "63",
      "class" : "UsingClause",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Alias",
      "signature" : "Mono.CSharp.SimpleMemberName Mono.CSharp.UsingClause:get_Alias ()",
      "code_size" : "11",
      "class" : "UsingClause",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Location",
      "signature" : "Mono.CSharp.Location Mono.CSharp.UsingClause:get_Location ()",
      "code_size" : "30",
      "class" : "UsingClause",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_NamespaceExpression",
      "signature" : "Mono.CSharp.ATypeNameExpression Mono.CSharp.UsingClause:get_NamespaceExpression ()",
      "code_size" : "20",
      "class" : "UsingClause",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ResolvedExpression",
      "signature" : "Mono.CSharp.FullNamedExpression Mono.CSharp.UsingClause:get_ResolvedExpression ()",
      "code_size" : "20",
      "class" : "UsingClause",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSignatureForError",
      "signature" : "string Mono.CSharp.UsingClause:GetSignatureForError ()",
      "code_size" : "32",
      "class" : "UsingClause",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Define",
      "signature" : "void Mono.CSharp.UsingClause:Define (Mono.CSharp.NamespaceContainer)",
      "code_size" : "71",
      "class" : "UsingClause",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ToString",
      "signature" : "string Mono.CSharp.UsingClause:ToString ()",
      "code_size" : "29",
      "class" : "UsingClause",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.UsingExternAlias:.ctor (Mono.CSharp.SimpleMemberName,Mono.CSharp.Location)",
      "code_size" : "35",
      "class" : "UsingExternAlias",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Define",
      "signature" : "void Mono.CSharp.UsingExternAlias:Define (Mono.CSharp.NamespaceContainer)",
      "code_size" : "295",
      "class" : "UsingExternAlias",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.UsingAliasNamespace:.ctor (Mono.CSharp.SimpleMemberName,Mono.CSharp.ATypeNameExpression,Mono.CSharp.Location)",
      "code_size" : "68",
      "class" : "UsingAliasNamespace",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Alias",
      "signature" : "Mono.CSharp.SimpleMemberName Mono.CSharp.UsingAliasNamespace:get_Alias ()",
      "code_size" : "20",
      "class" : "UsingAliasNamespace",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Define",
      "signature" : "void Mono.CSharp.UsingAliasNamespace:Define (Mono.CSharp.NamespaceContainer)",
      "code_size" : "279",
      "class" : "UsingAliasNamespace",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.UsingAliasNamespace/AliasContext:.ctor (Mono.CSharp.NamespaceContainer)",
      "code_size" : "38",
      "class" : "AliasContext",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_CurrentType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.UsingAliasNamespace/AliasContext:get_CurrentType ()",
      "code_size" : "11",
      "class" : "AliasContext",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_CurrentTypeParameters",
      "signature" : "Mono.CSharp.TypeParameters Mono.CSharp.UsingAliasNamespace/AliasContext:get_CurrentTypeParameters ()",
      "code_size" : "11",
      "class" : "AliasContext",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_CurrentMemberDefinition",
      "signature" : "Mono.CSharp.MemberCore Mono.CSharp.UsingAliasNamespace/AliasContext:get_CurrentMemberDefinition ()",
      "code_size" : "11",
      "class" : "AliasContext",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsObsolete",
      "signature" : "bool Mono.CSharp.UsingAliasNamespace/AliasContext:get_IsObsolete ()",
      "code_size" : "11",
      "class" : "AliasContext",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsUnsafe",
      "signature" : "bool Mono.CSharp.UsingAliasNamespace/AliasContext:get_IsUnsafe ()",
      "code_size" : "27",
      "class" : "AliasContext",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsStatic",
      "signature" : "bool Mono.CSharp.UsingAliasNamespace/AliasContext:get_IsStatic ()",
      "code_size" : "27",
      "class" : "AliasContext",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Module",
      "signature" : "Mono.CSharp.ModuleContainer Mono.CSharp.UsingAliasNamespace/AliasContext:get_Module ()",
      "code_size" : "31",
      "class" : "AliasContext",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSignatureForError",
      "signature" : "string Mono.CSharp.UsingAliasNamespace/AliasContext:GetSignatureForError ()",
      "code_size" : "27",
      "class" : "AliasContext",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "LookupExtensionMethod",
      "signature" : "Mono.CSharp.ExtensionMethodCandidates Mono.CSharp.UsingAliasNamespace/AliasContext:LookupExtensionMethod (string,int)",
      "code_size" : "11",
      "class" : "AliasContext",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "LookupNamespaceOrType",
      "signature" : "Mono.CSharp.FullNamedExpression Mono.CSharp.UsingAliasNamespace/AliasContext:LookupNamespaceOrType (string,int,Mono.CSharp.LookupMode,Mono.CSharp.Location)",
      "code_size" : "448",
      "class" : "AliasContext",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "LookupNamespaceAlias",
      "signature" : "Mono.CSharp.FullNamedExpression Mono.CSharp.UsingAliasNamespace/AliasContext:LookupNamespaceAlias (string)",
      "code_size" : "41",
      "class" : "AliasContext",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Nullable.NullableType:.ctor (Mono.CSharp.TypeSpec,Mono.CSharp.Location)",
      "code_size" : "63",
      "class" : "NullableType",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveAsType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.Nullable.NullableType:ResolveAsType (Mono.CSharp.IMemberContext,bool)",
      "code_size" : "372",
      "class" : "NullableType",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetConstructor",
      "signature" : "Mono.CSharp.MethodSpec Mono.CSharp.Nullable.NullableInfo:GetConstructor (Mono.CSharp.TypeSpec)",
      "code_size" : "219",
      "class" : "NullableInfo",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetHasValue",
      "signature" : "Mono.CSharp.MethodSpec Mono.CSharp.Nullable.NullableInfo:GetHasValue (Mono.CSharp.TypeSpec)",
      "code_size" : "172",
      "class" : "NullableInfo",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetGetValueOrDefault",
      "signature" : "Mono.CSharp.MethodSpec Mono.CSharp.Nullable.NullableInfo:GetGetValueOrDefault (Mono.CSharp.TypeSpec)",
      "code_size" : "172",
      "class" : "NullableInfo",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetValue",
      "signature" : "Mono.CSharp.MethodSpec Mono.CSharp.Nullable.NullableInfo:GetValue (Mono.CSharp.TypeSpec)",
      "code_size" : "172",
      "class" : "NullableInfo",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetUnderlyingType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.Nullable.NullableInfo:GetUnderlyingType (Mono.CSharp.TypeSpec)",
      "code_size" : "115",
      "class" : "NullableInfo",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetEnumUnderlyingType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.Nullable.NullableInfo:GetEnumUnderlyingType (Mono.CSharp.ModuleContainer,Mono.CSharp.TypeSpec)",
      "code_size" : "46",
      "class" : "NullableInfo",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : "MakeType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.Nullable.NullableInfo:MakeType (Mono.CSharp.ModuleContainer,Mono.CSharp.TypeSpec)",
      "code_size" : "126",
      "class" : "NullableInfo",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Nullable.Unwrap:.ctor (Mono.CSharp.Expression,bool)",
      "code_size" : "131",
      "class" : "Unwrap",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : "ContainsEmitWithAwait",
      "signature" : "bool Mono.CSharp.Nullable.Unwrap:ContainsEmitWithAwait ()",
      "code_size" : "32",
      "class" : "Unwrap",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : "Create",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Nullable.Unwrap:Create (Mono.CSharp.Expression)",
      "code_size" : "106",
      "class" : "Unwrap",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateUnwrapped",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Nullable.Unwrap:CreateUnwrapped (Mono.CSharp.Expression)",
      "code_size" : "109",
      "class" : "Unwrap",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : "Create",
      "signature" : "Mono.CSharp.Nullable.Unwrap Mono.CSharp.Nullable.Unwrap:Create (Mono.CSharp.Expression,bool)",
      "code_size" : "62",
      "class" : "Unwrap",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Nullable.Unwrap:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "39",
      "class" : "Unwrap",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Nullable.Unwrap:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "16",
      "class" : "Unwrap",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolveLValue",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Nullable.Unwrap:DoResolveLValue (Mono.CSharp.ResolveContext,Mono.CSharp.Expression)",
      "code_size" : "82",
      "class" : "Unwrap",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.Nullable.Unwrap:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "258",
      "class" : "Unwrap",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitCheck",
      "signature" : "void Mono.CSharp.Nullable.Unwrap:EmitCheck (Mono.CSharp.EmitContext)",
      "code_size" : "151",
      "class" : "Unwrap",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitSideEffect",
      "signature" : "void Mono.CSharp.Nullable.Unwrap:EmitSideEffect (Mono.CSharp.EmitContext)",
      "code_size" : "42",
      "class" : "Unwrap",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitToField",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Nullable.Unwrap:EmitToField (Mono.CSharp.EmitContext)",
      "code_size" : "85",
      "class" : "Unwrap",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : "Equals",
      "signature" : "bool Mono.CSharp.Nullable.Unwrap:Equals (object)",
      "code_size" : "113",
      "class" : "Unwrap",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : "FlowAnalysis",
      "signature" : "void Mono.CSharp.Nullable.Unwrap:FlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "42",
      "class" : "Unwrap",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Original",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Nullable.Unwrap:get_Original ()",
      "code_size" : "20",
      "class" : "Unwrap",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetHashCode",
      "signature" : "int Mono.CSharp.Nullable.Unwrap:GetHashCode ()",
      "code_size" : "29",
      "class" : "Unwrap",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsNull",
      "signature" : "bool Mono.CSharp.Nullable.Unwrap:get_IsNull ()",
      "code_size" : "32",
      "class" : "Unwrap",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : "Store",
      "signature" : "void Mono.CSharp.Nullable.Unwrap:Store (Mono.CSharp.EmitContext)",
      "code_size" : "167",
      "class" : "Unwrap",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : "Load",
      "signature" : "void Mono.CSharp.Nullable.Unwrap:Load (Mono.CSharp.EmitContext)",
      "code_size" : "178",
      "class" : "Unwrap",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : "MakeExpression",
      "signature" : "System.Linq.Expressions.Expression Mono.CSharp.Nullable.Unwrap:MakeExpression (Mono.CSharp.BuilderContext)",
      "code_size" : "39",
      "class" : "Unwrap",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddressOf",
      "signature" : "void Mono.CSharp.Nullable.Unwrap:AddressOf (Mono.CSharp.EmitContext,Mono.CSharp.AddressOp)",
      "code_size" : "403",
      "class" : "Unwrap",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_LocalVariable",
      "signature" : "Mono.CSharp.LocalTemporary Mono.CSharp.Nullable.Unwrap:get_LocalVariable ()",
      "code_size" : "132",
      "class" : "Unwrap",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Nullable.UnwrapCall:.ctor (Mono.CSharp.Expression)",
      "code_size" : "23",
      "class" : "UnwrapCall",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Nullable.UnwrapCall:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "78",
      "class" : "UnwrapCall",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.Nullable.UnwrapCall:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "152",
      "class" : "UnwrapCall",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Nullable.Wrap:.ctor (Mono.CSharp.Expression,Mono.CSharp.TypeSpec)",
      "code_size" : "36",
      "class" : "Wrap",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Nullable.Wrap:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "280",
      "class" : "Wrap",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : "Create",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Nullable.Wrap:Create (Mono.CSharp.Expression,Mono.CSharp.TypeSpec)",
      "code_size" : "181",
      "class" : "Wrap",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.Nullable.Wrap:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "167",
      "class" : "Wrap",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Nullable.LiftedNull:.ctor (Mono.CSharp.TypeSpec,Mono.CSharp.Location)",
      "code_size" : "41",
      "class" : "LiftedNull",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : "Create",
      "signature" : "Mono.CSharp.Constant Mono.CSharp.Nullable.LiftedNull:Create (Mono.CSharp.TypeSpec,Mono.CSharp.Location)",
      "code_size" : "62",
      "class" : "LiftedNull",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateFromExpression",
      "signature" : "Mono.CSharp.Constant Mono.CSharp.Nullable.LiftedNull:CreateFromExpression (Mono.CSharp.ResolveContext,Mono.CSharp.Expression)",
      "code_size" : "211",
      "class" : "LiftedNull",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.Nullable.LiftedNull:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "257",
      "class" : "LiftedNull",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddressOf",
      "signature" : "void Mono.CSharp.Nullable.LiftedNull:AddressOf (Mono.CSharp.EmitContext,Mono.CSharp.AddressOp)",
      "code_size" : "242",
      "class" : "LiftedNull",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Nullable.LiftedConversion:.ctor (Mono.CSharp.Expression,Mono.CSharp.Nullable.Unwrap,Mono.CSharp.TypeSpec)",
      "code_size" : "136",
      "class" : "LiftedConversion",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Nullable.LiftedConversion:.ctor (Mono.CSharp.Expression,Mono.CSharp.Expression,Mono.CSharp.TypeSpec)",
      "code_size" : "104",
      "class" : "LiftedConversion",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsNull",
      "signature" : "bool Mono.CSharp.Nullable.LiftedConversion:get_IsNull ()",
      "code_size" : "32",
      "class" : "LiftedConversion",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : "ContainsEmitWithAwait",
      "signature" : "bool Mono.CSharp.Nullable.LiftedConversion:ContainsEmitWithAwait ()",
      "code_size" : "32",
      "class" : "LiftedConversion",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Nullable.LiftedConversion:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "39",
      "class" : "LiftedConversion",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Nullable.LiftedConversion:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "409",
      "class" : "LiftedConversion",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.Nullable.LiftedConversion:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "540",
      "class" : "LiftedConversion",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : "FlowAnalysis",
      "signature" : "void Mono.CSharp.Nullable.LiftedConversion:FlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "42",
      "class" : "LiftedConversion",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddressOf",
      "signature" : "void Mono.CSharp.Nullable.LiftedConversion:AddressOf (Mono.CSharp.EmitContext,Mono.CSharp.AddressOp)",
      "code_size" : "51",
      "class" : "LiftedConversion",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Nullable.LiftedUnaryOperator:.ctor (Mono.CSharp.Unary/Operator,Mono.CSharp.Expression,Mono.CSharp.Location)",
      "code_size" : "48",
      "class" : "LiftedUnaryOperator",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddressOf",
      "signature" : "void Mono.CSharp.Nullable.LiftedUnaryOperator:AddressOf (Mono.CSharp.EmitContext,Mono.CSharp.AddressOp)",
      "code_size" : "51",
      "class" : "LiftedUnaryOperator",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Nullable.LiftedUnaryOperator:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "99",
      "class" : "LiftedUnaryOperator",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Nullable.LiftedUnaryOperator:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "314",
      "class" : "LiftedUnaryOperator",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.Nullable.LiftedUnaryOperator:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "707",
      "class" : "LiftedUnaryOperator",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : "LiftExpression",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Nullable.LiftedUnaryOperator:LiftExpression (Mono.CSharp.ResolveContext,Mono.CSharp.Expression)",
      "code_size" : "185",
      "class" : "LiftedUnaryOperator",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveEnumOperator",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Nullable.LiftedUnaryOperator:ResolveEnumOperator (Mono.CSharp.ResolveContext,Mono.CSharp.Expression,Mono.CSharp.TypeSpec[])",
      "code_size" : "116",
      "class" : "LiftedUnaryOperator",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveUserOperator",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Nullable.LiftedUnaryOperator:ResolveUserOperator (Mono.CSharp.ResolveContext,Mono.CSharp.Expression)",
      "code_size" : "173",
      "class" : "LiftedUnaryOperator",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Nullable.LiftedBinaryOperator:.ctor (Mono.CSharp.Binary)",
      "code_size" : "69",
      "class" : "LiftedBinaryOperator",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Binary",
      "signature" : "Mono.CSharp.Binary Mono.CSharp.Nullable.LiftedBinaryOperator:get_Binary ()",
      "code_size" : "20",
      "class" : "LiftedBinaryOperator",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Binary",
      "signature" : "void Mono.CSharp.Nullable.LiftedBinaryOperator:set_Binary (Mono.CSharp.Binary)",
      "code_size" : "43",
      "class" : "LiftedBinaryOperator",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Left",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Nullable.LiftedBinaryOperator:get_Left ()",
      "code_size" : "20",
      "class" : "LiftedBinaryOperator",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Left",
      "signature" : "void Mono.CSharp.Nullable.LiftedBinaryOperator:set_Left (Mono.CSharp.Expression)",
      "code_size" : "43",
      "class" : "LiftedBinaryOperator",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Right",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Nullable.LiftedBinaryOperator:get_Right ()",
      "code_size" : "20",
      "class" : "LiftedBinaryOperator",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Right",
      "signature" : "void Mono.CSharp.Nullable.LiftedBinaryOperator:set_Right (Mono.CSharp.Expression)",
      "code_size" : "43",
      "class" : "LiftedBinaryOperator",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_UnwrapLeft",
      "signature" : "Mono.CSharp.Nullable.Unwrap Mono.CSharp.Nullable.LiftedBinaryOperator:get_UnwrapLeft ()",
      "code_size" : "20",
      "class" : "LiftedBinaryOperator",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_UnwrapLeft",
      "signature" : "void Mono.CSharp.Nullable.LiftedBinaryOperator:set_UnwrapLeft (Mono.CSharp.Nullable.Unwrap)",
      "code_size" : "43",
      "class" : "LiftedBinaryOperator",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_UnwrapRight",
      "signature" : "Mono.CSharp.Nullable.Unwrap Mono.CSharp.Nullable.LiftedBinaryOperator:get_UnwrapRight ()",
      "code_size" : "20",
      "class" : "LiftedBinaryOperator",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_UnwrapRight",
      "signature" : "void Mono.CSharp.Nullable.LiftedBinaryOperator:set_UnwrapRight (Mono.CSharp.Nullable.Unwrap)",
      "code_size" : "43",
      "class" : "LiftedBinaryOperator",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_UserOperator",
      "signature" : "Mono.CSharp.MethodSpec Mono.CSharp.Nullable.LiftedBinaryOperator:get_UserOperator ()",
      "code_size" : "20",
      "class" : "LiftedBinaryOperator",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_UserOperator",
      "signature" : "void Mono.CSharp.Nullable.LiftedBinaryOperator:set_UserOperator (Mono.CSharp.MethodSpec)",
      "code_size" : "43",
      "class" : "LiftedBinaryOperator",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsBitwiseBoolean",
      "signature" : "bool Mono.CSharp.Nullable.LiftedBinaryOperator:get_IsBitwiseBoolean ()",
      "code_size" : "177",
      "class" : "LiftedBinaryOperator",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : "ContainsEmitWithAwait",
      "signature" : "bool Mono.CSharp.Nullable.LiftedBinaryOperator:ContainsEmitWithAwait ()",
      "code_size" : "70",
      "class" : "LiftedBinaryOperator",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Nullable.LiftedBinaryOperator:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "555",
      "class" : "LiftedBinaryOperator",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Nullable.LiftedBinaryOperator:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "602",
      "class" : "LiftedBinaryOperator",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : "LiftOperand",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Nullable.LiftedBinaryOperator:LiftOperand (Mono.CSharp.ResolveContext,Mono.CSharp.Expression)",
      "code_size" : "180",
      "class" : "LiftedBinaryOperator",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.Nullable.LiftedBinaryOperator:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "1576",
      "class" : "LiftedBinaryOperator",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitBitwiseBoolean",
      "signature" : "void Mono.CSharp.Nullable.LiftedBinaryOperator:EmitBitwiseBoolean (Mono.CSharp.EmitContext)",
      "code_size" : "5336",
      "class" : "LiftedBinaryOperator",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitEquality",
      "signature" : "void Mono.CSharp.Nullable.LiftedBinaryOperator:EmitEquality (Mono.CSharp.EmitContext)",
      "code_size" : "3403",
      "class" : "LiftedBinaryOperator",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : "FlowAnalysis",
      "signature" : "void Mono.CSharp.Nullable.LiftedBinaryOperator:FlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "42",
      "class" : "LiftedBinaryOperator",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : "MakeExpression",
      "signature" : "System.Linq.Expressions.Expression Mono.CSharp.Nullable.LiftedBinaryOperator:MakeExpression (Mono.CSharp.BuilderContext)",
      "code_size" : "49",
      "class" : "LiftedBinaryOperator",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Nullable.NullCoalescingOperator:.ctor (Mono.CSharp.Expression,Mono.CSharp.Expression)",
      "code_size" : "100",
      "class" : "NullCoalescingOperator",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_LeftExpression",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Nullable.NullCoalescingOperator:get_LeftExpression ()",
      "code_size" : "20",
      "class" : "NullCoalescingOperator",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_RightExpression",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Nullable.NullCoalescingOperator:get_RightExpression ()",
      "code_size" : "20",
      "class" : "NullCoalescingOperator",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Nullable.NullCoalescingOperator:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "821",
      "class" : "NullCoalescingOperator",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : "ConvertExpression",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Nullable.NullCoalescingOperator:ConvertExpression (Mono.CSharp.ResolveContext)",
      "code_size" : "1258",
      "class" : "NullCoalescingOperator",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : "ContainsEmitWithAwait",
      "signature" : "bool Mono.CSharp.Nullable.NullCoalescingOperator:ContainsEmitWithAwait ()",
      "code_size" : "138",
      "class" : "NullCoalescingOperator",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Nullable.NullCoalescingOperator:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "228",
      "class" : "NullCoalescingOperator",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.Nullable.NullCoalescingOperator:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "2034",
      "class" : "NullCoalescingOperator",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : "FlowAnalysis",
      "signature" : "void Mono.CSharp.Nullable.NullCoalescingOperator:FlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "120",
      "class" : "NullCoalescingOperator",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.Nullable.NullCoalescingOperator:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Expression)",
      "code_size" : "203",
      "class" : "NullCoalescingOperator",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.Nullable.NullCoalescingOperator:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "NullCoalescingOperator",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Nullable.LiftedUnaryMutator:.ctor (Mono.CSharp.UnaryMutator/Mode,Mono.CSharp.Expression,Mono.CSharp.Location)",
      "code_size" : "48",
      "class" : "LiftedUnaryMutator",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Nullable.LiftedUnaryMutator:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "156",
      "class" : "LiftedUnaryMutator",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitOperation",
      "signature" : "void Mono.CSharp.Nullable.LiftedUnaryMutator:EmitOperation (Mono.CSharp.EmitContext)",
      "code_size" : "1032",
      "class" : "LiftedUnaryMutator",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ParameterBase:.ctor ()",
      "code_size" : "9",
      "class" : "ParameterBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ApplyAttributeBuilder",
      "signature" : "void Mono.CSharp.ParameterBase:ApplyAttributeBuilder (Mono.CSharp.Attribute,Mono.CSharp.MethodSpec,byte[],Mono.CSharp.PredefinedAttributes)",
      "code_size" : "312",
      "class" : "ParameterBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Builder",
      "signature" : "System.Reflection.Emit.ParameterBuilder Mono.CSharp.ParameterBase:get_Builder ()",
      "code_size" : "20",
      "class" : "ParameterBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsClsComplianceRequired",
      "signature" : "bool Mono.CSharp.ParameterBase:IsClsComplianceRequired ()",
      "code_size" : "11",
      "class" : "ParameterBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ReturnParameter:.ctor (Mono.CSharp.MemberCore,System.Reflection.Emit.MethodBuilder,Mono.CSharp.Location)",
      "code_size" : "410",
      "class" : "ReturnParameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ApplyAttributeBuilder",
      "signature" : "void Mono.CSharp.ReturnParameter:ApplyAttributeBuilder (Mono.CSharp.Attribute,Mono.CSharp.MethodSpec,byte[],Mono.CSharp.PredefinedAttributes)",
      "code_size" : "190",
      "class" : "ReturnParameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_AttributeTargets",
      "signature" : "System.AttributeTargets Mono.CSharp.ReturnParameter:get_AttributeTargets ()",
      "code_size" : "14",
      "class" : "ReturnParameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ValidAttributeTargets",
      "signature" : "string[] Mono.CSharp.ReturnParameter:get_ValidAttributeTargets ()",
      "code_size" : "11",
      "class" : "ReturnParameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ImplicitLambdaParameter:.ctor (string,Mono.CSharp.Location)",
      "code_size" : "45",
      "class" : "ImplicitLambdaParameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Resolve",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.ImplicitLambdaParameter:Resolve (Mono.CSharp.IMemberContext,int)",
      "code_size" : "165",
      "class" : "ImplicitLambdaParameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetParameterType",
      "signature" : "void Mono.CSharp.ImplicitLambdaParameter:SetParameterType (Mono.CSharp.TypeSpec)",
      "code_size" : "43",
      "class" : "ImplicitLambdaParameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ParamsParameter:.ctor (Mono.CSharp.FullNamedExpression,string,Mono.CSharp.Attributes,Mono.CSharp.Location)",
      "code_size" : "53",
      "class" : "ParamsParameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Resolve",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.ParamsParameter:Resolve (Mono.CSharp.IMemberContext,int)",
      "code_size" : "224",
      "class" : "ParamsParameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ApplyAttributes",
      "signature" : "void Mono.CSharp.ParamsParameter:ApplyAttributes (System.Reflection.Emit.MethodBuilder,System.Reflection.Emit.ConstructorBuilder,int,Mono.CSharp.PredefinedAttributes)",
      "code_size" : "66",
      "class" : "ParamsParameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ArglistParameter:.ctor (Mono.CSharp.Location)",
      "code_size" : "86",
      "class" : "ArglistParameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ApplyAttributes",
      "signature" : "void Mono.CSharp.ArglistParameter:ApplyAttributes (System.Reflection.Emit.MethodBuilder,System.Reflection.Emit.ConstructorBuilder,int,Mono.CSharp.PredefinedAttributes)",
      "code_size" : "9",
      "class" : "ArglistParameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CheckAccessibility",
      "signature" : "bool Mono.CSharp.ArglistParameter:CheckAccessibility (Mono.CSharp.InterfaceMemberBase)",
      "code_size" : "14",
      "class" : "ArglistParameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Resolve",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.ArglistParameter:Resolve (Mono.CSharp.IMemberContext,int)",
      "code_size" : "20",
      "class" : "ArglistParameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Parameter:.ctor (Mono.CSharp.FullNamedExpression,string,Mono.CSharp.Parameter/Modifier,Mono.CSharp.Attributes,Mono.CSharp.Location)",
      "code_size" : "132",
      "class" : "Parameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_DefaultExpression",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Parameter:get_DefaultExpression ()",
      "code_size" : "20",
      "class" : "Parameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_DefaultValue",
      "signature" : "Mono.CSharp.DefaultParameterValueExpression Mono.CSharp.Parameter:get_DefaultValue ()",
      "code_size" : "74",
      "class" : "Parameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_DefaultValue",
      "signature" : "void Mono.CSharp.Parameter:set_DefaultValue (Mono.CSharp.DefaultParameterValueExpression)",
      "code_size" : "43",
      "class" : "Parameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mono.CSharp.IParameterData.get_DefaultValue",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Parameter:Mono.CSharp.IParameterData.get_DefaultValue ()",
      "code_size" : "106",
      "class" : "Parameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_HasOptionalExpression",
      "signature" : "bool Mono.CSharp.Parameter:get_HasOptionalExpression ()",
      "code_size" : "82",
      "class" : "Parameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Location",
      "signature" : "Mono.CSharp.Location Mono.CSharp.Parameter:get_Location ()",
      "code_size" : "30",
      "class" : "Parameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ParameterModifier",
      "signature" : "Mono.CSharp.Parameter/Modifier Mono.CSharp.Parameter:get_ParameterModifier ()",
      "code_size" : "20",
      "class" : "Parameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Type",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.Parameter:get_Type ()",
      "code_size" : "20",
      "class" : "Parameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Type",
      "signature" : "void Mono.CSharp.Parameter:set_Type (Mono.CSharp.TypeSpec)",
      "code_size" : "43",
      "class" : "Parameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_TypeExpression",
      "signature" : "Mono.CSharp.FullNamedExpression Mono.CSharp.Parameter:get_TypeExpression ()",
      "code_size" : "20",
      "class" : "Parameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ValidAttributeTargets",
      "signature" : "string[] Mono.CSharp.Parameter:get_ValidAttributeTargets ()",
      "code_size" : "19",
      "class" : "Parameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ApplyAttributeBuilder",
      "signature" : "void Mono.CSharp.Parameter:ApplyAttributeBuilder (Mono.CSharp.Attribute,Mono.CSharp.MethodSpec,byte[],Mono.CSharp.PredefinedAttributes)",
      "code_size" : "1135",
      "class" : "Parameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CheckAccessibility",
      "signature" : "bool Mono.CSharp.Parameter:CheckAccessibility (Mono.CSharp.InterfaceMemberBase)",
      "code_size" : "61",
      "class" : "Parameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsValidCallerContext",
      "signature" : "bool Mono.CSharp.Parameter:IsValidCallerContext (Mono.CSharp.MemberCore)",
      "code_size" : "115",
      "class" : "Parameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Resolve",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.Parameter:Resolve (Mono.CSharp.IMemberContext,int)",
      "code_size" : "767",
      "class" : "Parameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveCallerAttributes",
      "signature" : "void Mono.CSharp.Parameter:ResolveCallerAttributes (Mono.CSharp.ResolveContext)",
      "code_size" : "1640",
      "class" : "Parameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveDefaultValue",
      "signature" : "void Mono.CSharp.Parameter:ResolveDefaultValue (Mono.CSharp.ResolveContext)",
      "code_size" : "1210",
      "class" : "Parameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_HasDefaultValue",
      "signature" : "bool Mono.CSharp.Parameter:get_HasDefaultValue ()",
      "code_size" : "41",
      "class" : "Parameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_HasExtensionMethodModifier",
      "signature" : "bool Mono.CSharp.Parameter:get_HasExtensionMethodModifier ()",
      "code_size" : "47",
      "class" : "Parameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_HoistedVariant",
      "signature" : "Mono.CSharp.HoistedParameter Mono.CSharp.Parameter:get_HoistedVariant ()",
      "code_size" : "20",
      "class" : "Parameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_HoistedVariant",
      "signature" : "void Mono.CSharp.Parameter:set_HoistedVariant (Mono.CSharp.HoistedParameter)",
      "code_size" : "43",
      "class" : "Parameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ModFlags",
      "signature" : "Mono.CSharp.Parameter/Modifier Mono.CSharp.Parameter:get_ModFlags ()",
      "code_size" : "29",
      "class" : "Parameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Name",
      "signature" : "string Mono.CSharp.Parameter:get_Name ()",
      "code_size" : "20",
      "class" : "Parameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Name",
      "signature" : "void Mono.CSharp.Parameter:set_Name (string)",
      "code_size" : "43",
      "class" : "Parameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_AttributeTargets",
      "signature" : "System.AttributeTargets Mono.CSharp.Parameter:get_AttributeTargets ()",
      "code_size" : "14",
      "class" : "Parameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_DuplicateName",
      "signature" : "void Mono.CSharp.Parameter:Error_DuplicateName (Mono.CSharp.Report)",
      "code_size" : "73",
      "class" : "Parameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSignatureForError",
      "signature" : "string Mono.CSharp.Parameter:GetSignatureForError ()",
      "code_size" : "120",
      "class" : "Parameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetModifierSignature",
      "signature" : "string Mono.CSharp.Parameter:GetModifierSignature (Mono.CSharp.Parameter/Modifier)",
      "code_size" : "109",
      "class" : "Parameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsClsCompliant",
      "signature" : "void Mono.CSharp.Parameter:IsClsCompliant (Mono.CSharp.IMemberContext)",
      "code_size" : "174",
      "class" : "Parameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ApplyAttributes",
      "signature" : "void Mono.CSharp.Parameter:ApplyAttributes (System.Reflection.Emit.MethodBuilder,System.Reflection.Emit.ConstructorBuilder,int,Mono.CSharp.PredefinedAttributes)",
      "code_size" : "1417",
      "class" : "Parameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Clone",
      "signature" : "Mono.CSharp.Parameter Mono.CSharp.Parameter:Clone ()",
      "code_size" : "157",
      "class" : "Parameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTreeVariable",
      "signature" : "Mono.CSharp.ExpressionStatement Mono.CSharp.Parameter:CreateExpressionTreeVariable (Mono.CSharp.BlockContext)",
      "code_size" : "769",
      "class" : "Parameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.Parameter:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "41",
      "class" : "Parameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitAssign",
      "signature" : "void Mono.CSharp.Parameter:EmitAssign (Mono.CSharp.EmitContext)",
      "code_size" : "41",
      "class" : "Parameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitAddressOf",
      "signature" : "void Mono.CSharp.Parameter:EmitAddressOf (Mono.CSharp.EmitContext)",
      "code_size" : "96",
      "class" : "Parameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ExpressionTreeVariableReference",
      "signature" : "Mono.CSharp.TemporaryVariableReference Mono.CSharp.Parameter:ExpressionTreeVariableReference ()",
      "code_size" : "20",
      "class" : "Parameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveParameterExpressionType",
      "signature" : "Mono.CSharp.TypeExpr Mono.CSharp.Parameter:ResolveParameterExpressionType (Mono.CSharp.IMemberContext,Mono.CSharp.Location)",
      "code_size" : "115",
      "class" : "Parameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetIndex",
      "signature" : "void Mono.CSharp.Parameter:SetIndex (int)",
      "code_size" : "28",
      "class" : "Parameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Warning_UselessOptionalParameter",
      "signature" : "void Mono.CSharp.Parameter:Warning_UselessOptionalParameter (Mono.CSharp.Report)",
      "code_size" : "78",
      "class" : "Parameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".cctor",
      "signature" : "void Mono.CSharp.Parameter:.cctor ()",
      "code_size" : "68",
      "class" : "Parameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ParameterData:.ctor (string,Mono.CSharp.Parameter/Modifier)",
      "code_size" : "61",
      "class" : "ParameterData",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ParameterData:.ctor (string,Mono.CSharp.Parameter/Modifier,Mono.CSharp.Expression)",
      "code_size" : "65",
      "class" : "ParameterData",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_DefaultValue",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.ParameterData:get_DefaultValue ()",
      "code_size" : "20",
      "class" : "ParameterData",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_HasExtensionMethodModifier",
      "signature" : "bool Mono.CSharp.ParameterData:get_HasExtensionMethodModifier ()",
      "code_size" : "47",
      "class" : "ParameterData",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_HasDefaultValue",
      "signature" : "bool Mono.CSharp.ParameterData:get_HasDefaultValue ()",
      "code_size" : "41",
      "class" : "ParameterData",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ModFlags",
      "signature" : "Mono.CSharp.Parameter/Modifier Mono.CSharp.ParameterData:get_ModFlags ()",
      "code_size" : "20",
      "class" : "ParameterData",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Name",
      "signature" : "string Mono.CSharp.ParameterData:get_Name ()",
      "code_size" : "20",
      "class" : "ParameterData",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.AParametersCollection:.ctor ()",
      "code_size" : "9",
      "class" : "AParametersCollection",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_CallingConvention",
      "signature" : "System.Reflection.CallingConventions Mono.CSharp.AParametersCollection:get_CallingConvention ()",
      "code_size" : "36",
      "class" : "AParametersCollection",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Count",
      "signature" : "int Mono.CSharp.AParametersCollection:get_Count ()",
      "code_size" : "24",
      "class" : "AParametersCollection",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ExtensionMethodType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.AParametersCollection:get_ExtensionMethodType ()",
      "code_size" : "125",
      "class" : "AParametersCollection",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_FixedParameters",
      "signature" : "Mono.CSharp.IParameterData[] Mono.CSharp.AParametersCollection:get_FixedParameters ()",
      "code_size" : "20",
      "class" : "AParametersCollection",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetParameterAttribute",
      "signature" : "System.Reflection.ParameterAttributes Mono.CSharp.AParametersCollection:GetParameterAttribute (Mono.CSharp.Parameter/Modifier)",
      "code_size" : "37",
      "class" : "AParametersCollection",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetMetaInfo",
      "signature" : "System.Type[] Mono.CSharp.AParametersCollection:GetMetaInfo ()",
      "code_size" : "379",
      "class" : "AParametersCollection",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetParameterIndexByName",
      "signature" : "int Mono.CSharp.AParametersCollection:GetParameterIndexByName (string)",
      "code_size" : "152",
      "class" : "AParametersCollection",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSignatureForDocumentation",
      "signature" : "string Mono.CSharp.AParametersCollection:GetSignatureForDocumentation ()",
      "code_size" : "363",
      "class" : "AParametersCollection",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSignatureForError",
      "signature" : "string Mono.CSharp.AParametersCollection:GetSignatureForError ()",
      "code_size" : "44",
      "class" : "AParametersCollection",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSignatureForError",
      "signature" : "string Mono.CSharp.AParametersCollection:GetSignatureForError (string,string,int)",
      "code_size" : "198",
      "class" : "AParametersCollection",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "HasSameParameterDefaults",
      "signature" : "bool Mono.CSharp.AParametersCollection:HasSameParameterDefaults (Mono.CSharp.AParametersCollection,Mono.CSharp.AParametersCollection)",
      "code_size" : "239",
      "class" : "AParametersCollection",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_HasArglist",
      "signature" : "bool Mono.CSharp.AParametersCollection:get_HasArglist ()",
      "code_size" : "20",
      "class" : "AParametersCollection",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_HasExtensionMethodType",
      "signature" : "bool Mono.CSharp.AParametersCollection:get_HasExtensionMethodType ()",
      "code_size" : "85",
      "class" : "AParametersCollection",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_HasParams",
      "signature" : "bool Mono.CSharp.AParametersCollection:get_HasParams ()",
      "code_size" : "20",
      "class" : "AParametersCollection",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsEmpty",
      "signature" : "bool Mono.CSharp.AParametersCollection:get_IsEmpty ()",
      "code_size" : "34",
      "class" : "AParametersCollection",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Inflate",
      "signature" : "Mono.CSharp.AParametersCollection Mono.CSharp.AParametersCollection:Inflate (Mono.CSharp.TypeParameterInflator)",
      "code_size" : "1422",
      "class" : "AParametersCollection",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ParameterDesc",
      "signature" : "string Mono.CSharp.AParametersCollection:ParameterDesc (int)",
      "code_size" : "408",
      "class" : "AParametersCollection",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Types",
      "signature" : "Mono.CSharp.TypeSpec[] Mono.CSharp.AParametersCollection:get_Types ()",
      "code_size" : "20",
      "class" : "AParametersCollection",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Types",
      "signature" : "void Mono.CSharp.AParametersCollection:set_Types (Mono.CSharp.TypeSpec[])",
      "code_size" : "43",
      "class" : "AParametersCollection",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ParametersImported:.ctor (Mono.CSharp.IParameterData[],Mono.CSharp.TypeSpec[],bool,bool)",
      "code_size" : "102",
      "class" : "ParametersImported",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ParametersImported:.ctor (Mono.CSharp.IParameterData[],Mono.CSharp.TypeSpec[],bool)",
      "code_size" : "93",
      "class" : "ParametersImported",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ParametersCompiled:.ctor ()",
      "code_size" : "137",
      "class" : "ParametersCompiled",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ParametersCompiled:.ctor (Mono.CSharp.IParameterData[],Mono.CSharp.TypeSpec[])",
      "code_size" : "74",
      "class" : "ParametersCompiled",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ParametersCompiled:.ctor (Mono.CSharp.Parameter[])",
      "code_size" : "244",
      "class" : "ParametersCompiled",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ParametersCompiled:.ctor (Mono.CSharp.Parameter[],bool)",
      "code_size" : "41",
      "class" : "ParametersCompiled",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateFullyResolved",
      "signature" : "Mono.CSharp.ParametersCompiled Mono.CSharp.ParametersCompiled:CreateFullyResolved (Mono.CSharp.Parameter,Mono.CSharp.TypeSpec)",
      "code_size" : "150",
      "class" : "ParametersCompiled",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateFullyResolved",
      "signature" : "Mono.CSharp.ParametersCompiled Mono.CSharp.ParametersCompiled:CreateFullyResolved (Mono.CSharp.Parameter[],Mono.CSharp.TypeSpec[])",
      "code_size" : "62",
      "class" : "ParametersCompiled",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Prefix",
      "signature" : "Mono.CSharp.ParametersCompiled Mono.CSharp.ParametersCompiled:Prefix (Mono.CSharp.ParametersCompiled,Mono.CSharp.Parameter,Mono.CSharp.TypeSpec)",
      "code_size" : "368",
      "class" : "ParametersCompiled",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateFullyResolved",
      "signature" : "Mono.CSharp.AParametersCollection Mono.CSharp.ParametersCompiled:CreateFullyResolved (Mono.CSharp.TypeSpec[])",
      "code_size" : "173",
      "class" : "ParametersCompiled",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateImplicitParameter",
      "signature" : "Mono.CSharp.ParametersCompiled Mono.CSharp.ParametersCompiled:CreateImplicitParameter (Mono.CSharp.FullNamedExpression,Mono.CSharp.Location)",
      "code_size" : "172",
      "class" : "ParametersCompiled",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CheckConstraints",
      "signature" : "void Mono.CSharp.ParametersCompiled:CheckConstraints (Mono.CSharp.IMemberContext)",
      "code_size" : "242",
      "class" : "ParametersCompiled",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsSameClsSignature",
      "signature" : "int Mono.CSharp.ParametersCompiled:IsSameClsSignature (Mono.CSharp.AParametersCollection,Mono.CSharp.AParametersCollection)",
      "code_size" : "702",
      "class" : "ParametersCompiled",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MergeGenerated",
      "signature" : "Mono.CSharp.ParametersCompiled Mono.CSharp.ParametersCompiled:MergeGenerated (Mono.CSharp.CompilerContext,Mono.CSharp.ParametersCompiled,bool,Mono.CSharp.Parameter,Mono.CSharp.TypeSpec)",
      "code_size" : "150",
      "class" : "ParametersCompiled",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MergeGenerated",
      "signature" : "Mono.CSharp.ParametersCompiled Mono.CSharp.ParametersCompiled:MergeGenerated (Mono.CSharp.CompilerContext,Mono.CSharp.ParametersCompiled,bool,Mono.CSharp.Parameter[],Mono.CSharp.TypeSpec[])",
      "code_size" : "907",
      "class" : "ParametersCompiled",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CheckParameters",
      "signature" : "void Mono.CSharp.ParametersCompiled:CheckParameters (Mono.CSharp.MemberCore)",
      "code_size" : "373",
      "class" : "ParametersCompiled",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Resolve",
      "signature" : "bool Mono.CSharp.ParametersCompiled:Resolve (Mono.CSharp.IMemberContext)",
      "code_size" : "322",
      "class" : "ParametersCompiled",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveDefaultValues",
      "signature" : "void Mono.CSharp.ParametersCompiled:ResolveDefaultValues (Mono.CSharp.MemberCore)",
      "code_size" : "368",
      "class" : "ParametersCompiled",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ApplyAttributes",
      "signature" : "void Mono.CSharp.ParametersCompiled:ApplyAttributes (Mono.CSharp.IMemberContext,System.Reflection.MethodBase)",
      "code_size" : "343",
      "class" : "ParametersCompiled",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "VerifyClsCompliance",
      "signature" : "void Mono.CSharp.ParametersCompiled:VerifyClsCompliance (Mono.CSharp.IMemberContext)",
      "code_size" : "195",
      "class" : "ParametersCompiled",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Item",
      "signature" : "Mono.CSharp.Parameter Mono.CSharp.ParametersCompiled:get_Item (int)",
      "code_size" : "120",
      "class" : "ParametersCompiled",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.ParametersCompiled:CreateExpressionTree (Mono.CSharp.BlockContext,Mono.CSharp.Location)",
      "code_size" : "570",
      "class" : "ParametersCompiled",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Clone",
      "signature" : "Mono.CSharp.ParametersCompiled Mono.CSharp.ParametersCompiled:Clone ()",
      "code_size" : "306",
      "class" : "ParametersCompiled",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".cctor",
      "signature" : "void Mono.CSharp.ParametersCompiled:.cctor ()",
      "code_size" : "97",
      "class" : "ParametersCompiled",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.DefaultParameterValueExpression:.ctor (Mono.CSharp.Expression)",
      "code_size" : "23",
      "class" : "DefaultParameterValueExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Resolve",
      "signature" : "void Mono.CSharp.DefaultParameterValueExpression:Resolve (Mono.CSharp.ResolveContext,Mono.CSharp.Parameter)",
      "code_size" : "1177",
      "class" : "DefaultParameterValueExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.DefaultParameterValueExpression:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "DefaultParameterValueExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ProxyMethodContext:.ctor (Mono.CSharp.TypeContainer)",
      "code_size" : "38",
      "class" : "ProxyMethodContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_CurrentType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.ProxyMethodContext:get_CurrentType ()",
      "code_size" : "27",
      "class" : "ProxyMethodContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_CurrentTypeParameters",
      "signature" : "Mono.CSharp.TypeParameters Mono.CSharp.ProxyMethodContext:get_CurrentTypeParameters ()",
      "code_size" : "27",
      "class" : "ProxyMethodContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_CurrentMemberDefinition",
      "signature" : "Mono.CSharp.MemberCore Mono.CSharp.ProxyMethodContext:get_CurrentMemberDefinition ()",
      "code_size" : "27",
      "class" : "ProxyMethodContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsObsolete",
      "signature" : "bool Mono.CSharp.ProxyMethodContext:get_IsObsolete ()",
      "code_size" : "11",
      "class" : "ProxyMethodContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsUnsafe",
      "signature" : "bool Mono.CSharp.ProxyMethodContext:get_IsUnsafe ()",
      "code_size" : "27",
      "class" : "ProxyMethodContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsStatic",
      "signature" : "bool Mono.CSharp.ProxyMethodContext:get_IsStatic ()",
      "code_size" : "11",
      "class" : "ProxyMethodContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Module",
      "signature" : "Mono.CSharp.ModuleContainer Mono.CSharp.ProxyMethodContext:get_Module ()",
      "code_size" : "31",
      "class" : "ProxyMethodContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSignatureForError",
      "signature" : "string Mono.CSharp.ProxyMethodContext:GetSignatureForError ()",
      "code_size" : "27",
      "class" : "ProxyMethodContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "LookupExtensionMethod",
      "signature" : "Mono.CSharp.ExtensionMethodCandidates Mono.CSharp.ProxyMethodContext:LookupExtensionMethod (string,int)",
      "code_size" : "27",
      "class" : "ProxyMethodContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "LookupNamespaceOrType",
      "signature" : "Mono.CSharp.FullNamedExpression Mono.CSharp.ProxyMethodContext:LookupNamespaceOrType (string,int,Mono.CSharp.LookupMode,Mono.CSharp.Location)",
      "code_size" : "27",
      "class" : "ProxyMethodContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "LookupNamespaceAlias",
      "signature" : "Mono.CSharp.FullNamedExpression Mono.CSharp.ProxyMethodContext:LookupNamespaceAlias (string)",
      "code_size" : "27",
      "class" : "ProxyMethodContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.PendingImplementation:.ctor (Mono.CSharp.TypeDefinition,Mono.CSharp.PendingImplementation/MissingInterfacesInfo[],Mono.CSharp.MethodSpec[],int)",
      "code_size" : "933",
      "class" : "PendingImplementation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Report",
      "signature" : "Mono.CSharp.Report Mono.CSharp.PendingImplementation:get_Report ()",
      "code_size" : "54",
      "class" : "PendingImplementation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetMissingInterfaces",
      "signature" : "Mono.CSharp.PendingImplementation/MissingInterfacesInfo[] Mono.CSharp.PendingImplementation:GetMissingInterfaces (Mono.CSharp.TypeDefinition)",
      "code_size" : "667",
      "class" : "PendingImplementation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetPendingImplementations",
      "signature" : "Mono.CSharp.PendingImplementation Mono.CSharp.PendingImplementation:GetPendingImplementations (Mono.CSharp.TypeDefinition)",
      "code_size" : "1620",
      "class" : "PendingImplementation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsInterfaceMethod",
      "signature" : "Mono.CSharp.MethodSpec Mono.CSharp.PendingImplementation:IsInterfaceMethod (Mono.CSharp.MemberName,Mono.CSharp.TypeSpec,Mono.CSharp.MethodData,Mono.CSharp.MethodSpec&,bool&)",
      "code_size" : "69",
      "class" : "PendingImplementation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ImplementMethod",
      "signature" : "void Mono.CSharp.PendingImplementation:ImplementMethod (Mono.CSharp.MemberName,Mono.CSharp.TypeSpec,Mono.CSharp.MethodData,bool,Mono.CSharp.MethodSpec&,bool&)",
      "code_size" : "88",
      "class" : "PendingImplementation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "InterfaceMethod",
      "signature" : "Mono.CSharp.MethodSpec Mono.CSharp.PendingImplementation:InterfaceMethod (Mono.CSharp.MemberName,Mono.CSharp.TypeSpec,Mono.CSharp.MethodData,Mono.CSharp.PendingImplementation/Operation,Mono.CSharp.MethodSpec&,bool&)",
      "code_size" : "1330",
      "class" : "PendingImplementation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DefineProxy",
      "signature" : "void Mono.CSharp.PendingImplementation:DefineProxy (Mono.CSharp.TypeSpec,Mono.CSharp.MethodSpec,Mono.CSharp.MethodSpec)",
      "code_size" : "2443",
      "class" : "PendingImplementation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "BaseImplements",
      "signature" : "bool Mono.CSharp.PendingImplementation:BaseImplements (Mono.CSharp.TypeSpec,Mono.CSharp.MethodSpec,Mono.CSharp.MethodSpec&)",
      "code_size" : "2166",
      "class" : "PendingImplementation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "VerifyPendingMethods",
      "signature" : "bool Mono.CSharp.PendingImplementation:VerifyPendingMethods ()",
      "code_size" : "2273",
      "class" : "PendingImplementation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".cctor",
      "signature" : "void Mono.CSharp.PendingImplementation:.cctor ()",
      "code_size" : "58",
      "class" : "PendingImplementation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "<DefineProxy>m__0",
      "signature" : "string Mono.CSharp.PendingImplementation:<DefineProxy>m__0 (Mono.CSharp.TypeParameterSpec)",
      "code_size" : "25",
      "class" : "PendingImplementation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.PendingImplementation/MissingInterfacesInfo:.ctor (Mono.CSharp.TypeSpec)",
      "code_size" : "46",
      "class" : "MissingInterfacesInfo",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.PropertyBasedMember:.ctor (Mono.CSharp.TypeDefinition,Mono.CSharp.FullNamedExpression,Mono.CSharp.Modifiers,Mono.CSharp.Modifiers,Mono.CSharp.MemberName,Mono.CSharp.Attributes)",
      "code_size" : "71",
      "class" : "PropertyBasedMember",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CheckReservedNameConflict",
      "signature" : "void Mono.CSharp.PropertyBasedMember:CheckReservedNameConflict (string,Mono.CSharp.MethodSpec)",
      "code_size" : "1004",
      "class" : "PropertyBasedMember",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "VerifyClsCompliance",
      "signature" : "bool Mono.CSharp.PropertyBasedMember:VerifyClsCompliance ()",
      "code_size" : "155",
      "class" : "PropertyBasedMember",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.PropertySpec:.ctor (Mono.CSharp.MemberKind,Mono.CSharp.TypeSpec,Mono.CSharp.IMemberDefinition,Mono.CSharp.TypeSpec,System.Reflection.PropertyInfo,Mono.CSharp.Modifiers)",
      "code_size" : "93",
      "class" : "PropertySpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Get",
      "signature" : "Mono.CSharp.MethodSpec Mono.CSharp.PropertySpec:get_Get ()",
      "code_size" : "20",
      "class" : "PropertySpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Get",
      "signature" : "void Mono.CSharp.PropertySpec:set_Get (Mono.CSharp.MethodSpec)",
      "code_size" : "67",
      "class" : "PropertySpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Set",
      "signature" : "Mono.CSharp.MethodSpec Mono.CSharp.PropertySpec:get_Set ()",
      "code_size" : "20",
      "class" : "PropertySpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Set",
      "signature" : "void Mono.CSharp.PropertySpec:set_Set (Mono.CSharp.MethodSpec)",
      "code_size" : "67",
      "class" : "PropertySpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_HasDifferentAccessibility",
      "signature" : "bool Mono.CSharp.PropertySpec:get_HasDifferentAccessibility ()",
      "code_size" : "148",
      "class" : "PropertySpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_HasGet",
      "signature" : "bool Mono.CSharp.PropertySpec:get_HasGet ()",
      "code_size" : "41",
      "class" : "PropertySpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_HasSet",
      "signature" : "bool Mono.CSharp.PropertySpec:get_HasSet ()",
      "code_size" : "41",
      "class" : "PropertySpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_MetaInfo",
      "signature" : "System.Reflection.PropertyInfo Mono.CSharp.PropertySpec:get_MetaInfo ()",
      "code_size" : "55",
      "class" : "PropertySpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_MemberType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.PropertySpec:get_MemberType ()",
      "code_size" : "20",
      "class" : "PropertySpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "InflateMember",
      "signature" : "Mono.CSharp.MemberSpec Mono.CSharp.PropertySpec:InflateMember (Mono.CSharp.TypeParameterInflator)",
      "code_size" : "207",
      "class" : "PropertySpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveMissingDependencies",
      "signature" : "System.Collections.Generic.List`1<Mono.CSharp.MissingTypeSpecReference> Mono.CSharp.PropertySpec:ResolveMissingDependencies (Mono.CSharp.MemberSpec)",
      "code_size" : "29",
      "class" : "PropertySpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.PropertyBase:.ctor (Mono.CSharp.TypeDefinition,Mono.CSharp.FullNamedExpression,Mono.CSharp.Modifiers,Mono.CSharp.Modifiers,Mono.CSharp.MemberName,Mono.CSharp.Attributes)",
      "code_size" : "71",
      "class" : "PropertyBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_AttributeTargets",
      "signature" : "System.AttributeTargets Mono.CSharp.PropertyBase:get_AttributeTargets ()",
      "code_size" : "14",
      "class" : "PropertyBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_AccessorFirst",
      "signature" : "Mono.CSharp.PropertyBase/PropertyMethod Mono.CSharp.PropertyBase:get_AccessorFirst ()",
      "code_size" : "23",
      "class" : "PropertyBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_AccessorSecond",
      "signature" : "Mono.CSharp.PropertyBase/PropertyMethod Mono.CSharp.PropertyBase:get_AccessorSecond ()",
      "code_size" : "59",
      "class" : "PropertyBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ExpectedMemberTypeVariance",
      "signature" : "Mono.CSharp.Variance Mono.CSharp.PropertyBase:get_ExpectedMemberTypeVariance ()",
      "code_size" : "73",
      "class" : "PropertyBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Get",
      "signature" : "Mono.CSharp.PropertyBase/PropertyMethod Mono.CSharp.PropertyBase:get_Get ()",
      "code_size" : "20",
      "class" : "PropertyBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Get",
      "signature" : "void Mono.CSharp.PropertyBase:set_Get (Mono.CSharp.PropertyBase/PropertyMethod)",
      "code_size" : "141",
      "class" : "PropertyBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Set",
      "signature" : "Mono.CSharp.PropertyBase/PropertyMethod Mono.CSharp.PropertyBase:get_Set ()",
      "code_size" : "20",
      "class" : "PropertyBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Set",
      "signature" : "void Mono.CSharp.PropertyBase:set_Set (Mono.CSharp.PropertyBase/PropertyMethod)",
      "code_size" : "141",
      "class" : "PropertyBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ValidAttributeTargets",
      "signature" : "string[] Mono.CSharp.PropertyBase:get_ValidAttributeTargets ()",
      "code_size" : "19",
      "class" : "PropertyBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ApplyAttributeBuilder",
      "signature" : "void Mono.CSharp.PropertyBase:ApplyAttributeBuilder (Mono.CSharp.Attribute,Mono.CSharp.MethodSpec,byte[],Mono.CSharp.PredefinedAttributes)",
      "code_size" : "315",
      "class" : "PropertyBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CheckMissingAccessor",
      "signature" : "void Mono.CSharp.PropertyBase:CheckMissingAccessor (Mono.CSharp.MemberKind,Mono.CSharp.ParametersCompiled,bool)",
      "code_size" : "495",
      "class" : "PropertyBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CheckOverrideAgainstBase",
      "signature" : "bool Mono.CSharp.PropertyBase:CheckOverrideAgainstBase (Mono.CSharp.MemberSpec)",
      "code_size" : "1839",
      "class" : "PropertyBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoMemberTypeDependentChecks",
      "signature" : "void Mono.CSharp.PropertyBase:DoMemberTypeDependentChecks ()",
      "code_size" : "84",
      "class" : "PropertyBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoMemberTypeIndependentChecks",
      "signature" : "void Mono.CSharp.PropertyBase:DoMemberTypeIndependentChecks ()",
      "code_size" : "354",
      "class" : "PropertyBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DefineAccessors",
      "signature" : "bool Mono.CSharp.PropertyBase:DefineAccessors ()",
      "code_size" : "89",
      "class" : "PropertyBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DefineBuilders",
      "signature" : "void Mono.CSharp.PropertyBase:DefineBuilders (Mono.CSharp.MemberKind,Mono.CSharp.ParametersCompiled)",
      "code_size" : "1021",
      "class" : "PropertyBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.PropertyBase:Emit ()",
      "code_size" : "471",
      "class" : "PropertyBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsUsed",
      "signature" : "bool Mono.CSharp.PropertyBase:get_IsUsed ()",
      "code_size" : "89",
      "class" : "PropertyBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "PrepareEmit",
      "signature" : "void Mono.CSharp.PropertyBase:PrepareEmit ()",
      "code_size" : "340",
      "class" : "PropertyBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetMemberName",
      "signature" : "void Mono.CSharp.PropertyBase:SetMemberName (Mono.CSharp.MemberName)",
      "code_size" : "100",
      "class" : "PropertyBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "WriteDebugSymbol",
      "signature" : "void Mono.CSharp.PropertyBase:WriteDebugSymbol (Mono.CompilerServices.SymbolWriter.MonoSymbolFile)",
      "code_size" : "85",
      "class" : "PropertyBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_DocCommentHeader",
      "signature" : "string Mono.CSharp.PropertyBase:get_DocCommentHeader ()",
      "code_size" : "16",
      "class" : "PropertyBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".cctor",
      "signature" : "void Mono.CSharp.PropertyBase:.cctor ()",
      "code_size" : "68",
      "class" : "PropertyBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.PropertyBase/GetMethod:.ctor (Mono.CSharp.PropertyBase,Mono.CSharp.Modifiers,Mono.CSharp.Attributes,Mono.CSharp.Location)",
      "code_size" : "69",
      "class" : "GetMethod",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Define",
      "signature" : "void Mono.CSharp.PropertyBase/GetMethod:Define (Mono.CSharp.TypeContainer)",
      "code_size" : "341",
      "class" : "GetMethod",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ReturnType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.PropertyBase/GetMethod:get_ReturnType ()",
      "code_size" : "30",
      "class" : "GetMethod",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ParameterInfo",
      "signature" : "Mono.CSharp.ParametersCompiled Mono.CSharp.PropertyBase/GetMethod:get_ParameterInfo ()",
      "code_size" : "19",
      "class" : "GetMethod",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ValidAttributeTargets",
      "signature" : "string[] Mono.CSharp.PropertyBase/GetMethod:get_ValidAttributeTargets ()",
      "code_size" : "19",
      "class" : "GetMethod",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".cctor",
      "signature" : "void Mono.CSharp.PropertyBase/GetMethod:.cctor ()",
      "code_size" : "105",
      "class" : "GetMethod",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.PropertyBase/SetMethod:.ctor (Mono.CSharp.PropertyBase,Mono.CSharp.Modifiers,Mono.CSharp.ParametersCompiled,Mono.CSharp.Attributes,Mono.CSharp.Location)",
      "code_size" : "101",
      "class" : "SetMethod",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "ApplyToExtraTarget",
      "signature" : "void Mono.CSharp.PropertyBase/SetMethod:ApplyToExtraTarget (Mono.CSharp.Attribute,Mono.CSharp.MethodSpec,byte[],Mono.CSharp.PredefinedAttributes)",
      "code_size" : "245",
      "class" : "SetMethod",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ParameterInfo",
      "signature" : "Mono.CSharp.ParametersCompiled Mono.CSharp.PropertyBase/SetMethod:get_ParameterInfo ()",
      "code_size" : "20",
      "class" : "SetMethod",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Define",
      "signature" : "void Mono.CSharp.PropertyBase/SetMethod:Define (Mono.CSharp.TypeContainer)",
      "code_size" : "365",
      "class" : "SetMethod",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ReturnType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.PropertyBase/SetMethod:get_ReturnType ()",
      "code_size" : "49",
      "class" : "SetMethod",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ValidAttributeTargets",
      "signature" : "string[] Mono.CSharp.PropertyBase/SetMethod:get_ValidAttributeTargets ()",
      "code_size" : "19",
      "class" : "SetMethod",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".cctor",
      "signature" : "void Mono.CSharp.PropertyBase/SetMethod:.cctor ()",
      "code_size" : "142",
      "class" : "SetMethod",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.PropertyBase/PropertyMethod:.ctor (Mono.CSharp.PropertyBase,string,Mono.CSharp.Modifiers,Mono.CSharp.Attributes,Mono.CSharp.Location)",
      "code_size" : "152",
      "class" : "PropertyMethod",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "ApplyAttributeBuilder",
      "signature" : "void Mono.CSharp.PropertyBase/PropertyMethod:ApplyAttributeBuilder (Mono.CSharp.Attribute,Mono.CSharp.MethodSpec,byte[],Mono.CSharp.PredefinedAttributes)",
      "code_size" : "134",
      "class" : "PropertyMethod",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_AttributeTargets",
      "signature" : "System.AttributeTargets Mono.CSharp.PropertyBase/PropertyMethod:get_AttributeTargets ()",
      "code_size" : "14",
      "class" : "PropertyMethod",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsClsComplianceRequired",
      "signature" : "bool Mono.CSharp.PropertyBase/PropertyMethod:IsClsComplianceRequired ()",
      "code_size" : "29",
      "class" : "PropertyMethod",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Define",
      "signature" : "void Mono.CSharp.PropertyBase/PropertyMethod:Define (Mono.CSharp.TypeContainer)",
      "code_size" : "598",
      "class" : "PropertyMethod",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_HasCustomAccessModifier",
      "signature" : "bool Mono.CSharp.PropertyBase/PropertyMethod:get_HasCustomAccessModifier ()",
      "code_size" : "45",
      "class" : "PropertyMethod",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Property",
      "signature" : "Mono.CSharp.PropertyBase Mono.CSharp.PropertyBase/PropertyMethod:get_Property ()",
      "code_size" : "20",
      "class" : "PropertyMethod",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetAttributeObsolete",
      "signature" : "System.ObsoleteAttribute Mono.CSharp.PropertyBase/PropertyMethod:GetAttributeObsolete ()",
      "code_size" : "32",
      "class" : "PropertyMethod",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSignatureForError",
      "signature" : "string Mono.CSharp.PropertyBase/PropertyMethod:GetSignatureForError ()",
      "code_size" : "93",
      "class" : "PropertyMethod",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "CheckModifiers",
      "signature" : "void Mono.CSharp.PropertyBase/PropertyMethod:CheckModifiers (Mono.CSharp.Modifiers)",
      "code_size" : "173",
      "class" : "PropertyMethod",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Property:.ctor (Mono.CSharp.TypeDefinition,Mono.CSharp.FullNamedExpression,Mono.CSharp.Modifiers,Mono.CSharp.MemberName,Mono.CSharp.Attributes)",
      "code_size" : "166",
      "class" : "Property",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_BackingField",
      "signature" : "Mono.CSharp.Property/BackingFieldDeclaration Mono.CSharp.Property:get_BackingField ()",
      "code_size" : "23",
      "class" : "Property",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_BackingField",
      "signature" : "void Mono.CSharp.Property:set_BackingField (Mono.CSharp.Property/BackingFieldDeclaration)",
      "code_size" : "49",
      "class" : "Property",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Initializer",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Property:get_Initializer ()",
      "code_size" : "23",
      "class" : "Property",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Initializer",
      "signature" : "void Mono.CSharp.Property:set_Initializer (Mono.CSharp.Expression)",
      "code_size" : "49",
      "class" : "Property",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "void Mono.CSharp.Property:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "Property",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ApplyAttributeBuilder",
      "signature" : "void Mono.CSharp.Property:ApplyAttributeBuilder (Mono.CSharp.Attribute,Mono.CSharp.MethodSpec,byte[],Mono.CSharp.PredefinedAttributes)",
      "code_size" : "121",
      "class" : "Property",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateAutomaticProperty",
      "signature" : "void Mono.CSharp.Property:CreateAutomaticProperty ()",
      "code_size" : "1512",
      "class" : "Property",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Define",
      "signature" : "bool Mono.CSharp.Property:Define ()",
      "code_size" : "1165",
      "class" : "Property",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.Property:Emit ()",
      "code_size" : "204",
      "class" : "Property",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ValidAttributeTargets",
      "signature" : "string[] Mono.CSharp.Property:get_ValidAttributeTargets ()",
      "code_size" : "77",
      "class" : "Property",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".cctor",
      "signature" : "void Mono.CSharp.Property:.cctor ()",
      "code_size" : "105",
      "class" : "Property",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Property/BackingFieldDeclaration:.ctor (Mono.CSharp.Property,bool)",
      "code_size" : "270",
      "class" : "BackingFieldDeclaration",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_OriginalProperty",
      "signature" : "Mono.CSharp.Property Mono.CSharp.Property/BackingFieldDeclaration:get_OriginalProperty ()",
      "code_size" : "20",
      "class" : "BackingFieldDeclaration",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSignatureForError",
      "signature" : "string Mono.CSharp.Property/BackingFieldDeclaration:GetSignatureForError ()",
      "code_size" : "32",
      "class" : "BackingFieldDeclaration",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.EventProperty:.ctor (Mono.CSharp.TypeDefinition,Mono.CSharp.FullNamedExpression,Mono.CSharp.Modifiers,Mono.CSharp.MemberName,Mono.CSharp.Attributes)",
      "code_size" : "43",
      "class" : "EventProperty",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "void Mono.CSharp.EventProperty:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "EventProperty",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Define",
      "signature" : "bool Mono.CSharp.EventProperty:Define ()",
      "code_size" : "48",
      "class" : "EventProperty",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ValidAttributeTargets",
      "signature" : "string[] Mono.CSharp.EventProperty:get_ValidAttributeTargets ()",
      "code_size" : "19",
      "class" : "EventProperty",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".cctor",
      "signature" : "void Mono.CSharp.EventProperty:.cctor ()",
      "code_size" : "68",
      "class" : "EventProperty",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.EventProperty/AEventPropertyAccessor:.ctor (Mono.CSharp.EventProperty,string,Mono.CSharp.Attributes,Mono.CSharp.Location)",
      "code_size" : "43",
      "class" : "AEventPropertyAccessor",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Define",
      "signature" : "void Mono.CSharp.EventProperty/AEventPropertyAccessor:Define (Mono.CSharp.TypeContainer)",
      "code_size" : "62",
      "class" : "AEventPropertyAccessor",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSignatureForError",
      "signature" : "string Mono.CSharp.EventProperty/AEventPropertyAccessor:GetSignatureForError ()",
      "code_size" : "97",
      "class" : "AEventPropertyAccessor",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.EventProperty/AddDelegateMethod:.ctor (Mono.CSharp.EventProperty,Mono.CSharp.Attributes,Mono.CSharp.Location)",
      "code_size" : "59",
      "class" : "AddDelegateMethod",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.EventProperty/RemoveDelegateMethod:.ctor (Mono.CSharp.EventProperty,Mono.CSharp.Attributes,Mono.CSharp.Location)",
      "code_size" : "59",
      "class" : "RemoveDelegateMethod",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.EventField:.ctor (Mono.CSharp.TypeDefinition,Mono.CSharp.FullNamedExpression,Mono.CSharp.Modifiers,Mono.CSharp.MemberName,Mono.CSharp.Attributes)",
      "code_size" : "142",
      "class" : "EventField",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Declarators",
      "signature" : "System.Collections.Generic.List`1<Mono.CSharp.FieldDeclarator> Mono.CSharp.EventField:get_Declarators ()",
      "code_size" : "23",
      "class" : "EventField",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_HasBackingField",
      "signature" : "bool Mono.CSharp.EventField:get_HasBackingField ()",
      "code_size" : "54",
      "class" : "EventField",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Initializer",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.EventField:get_Initializer ()",
      "code_size" : "23",
      "class" : "EventField",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Initializer",
      "signature" : "void Mono.CSharp.EventField:set_Initializer (Mono.CSharp.Expression)",
      "code_size" : "49",
      "class" : "EventField",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ValidAttributeTargets",
      "signature" : "string[] Mono.CSharp.EventField:get_ValidAttributeTargets ()",
      "code_size" : "54",
      "class" : "EventField",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "void Mono.CSharp.EventField:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "EventField",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddDeclarator",
      "signature" : "void Mono.CSharp.EventField:AddDeclarator (Mono.CSharp.FieldDeclarator)",
      "code_size" : "170",
      "class" : "EventField",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ApplyAttributeBuilder",
      "signature" : "void Mono.CSharp.EventField:ApplyAttributeBuilder (Mono.CSharp.Attribute,Mono.CSharp.MethodSpec,byte[],Mono.CSharp.PredefinedAttributes)",
      "code_size" : "273",
      "class" : "EventField",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Define",
      "signature" : "bool Mono.CSharp.EventField:Define ()",
      "code_size" : "1040",
      "class" : "EventField",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".cctor",
      "signature" : "void Mono.CSharp.EventField:.cctor ()",
      "code_size" : "240",
      "class" : "EventField",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.EventField/EventFieldAccessor:.ctor (Mono.CSharp.EventField,string)",
      "code_size" : "74",
      "class" : "EventFieldAccessor",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.EventField/EventFieldAccessor:Emit (Mono.CSharp.TypeDefinition)",
      "code_size" : "254",
      "class" : "EventFieldAccessor",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "FabricateBodyStatement",
      "signature" : "void Mono.CSharp.EventField/EventFieldAccessor:FabricateBodyStatement ()",
      "code_size" : "3632",
      "class" : "EventFieldAccessor",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.EventField/AddDelegateMethod:.ctor (Mono.CSharp.EventField)",
      "code_size" : "39",
      "class" : "AddDelegateMethod",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetOperation",
      "signature" : "Mono.CSharp.MethodSpec Mono.CSharp.EventField/AddDelegateMethod:GetOperation (Mono.CSharp.Location)",
      "code_size" : "66",
      "class" : "AddDelegateMethod",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.EventField/RemoveDelegateMethod:.ctor (Mono.CSharp.EventField)",
      "code_size" : "39",
      "class" : "RemoveDelegateMethod",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetOperation",
      "signature" : "Mono.CSharp.MethodSpec Mono.CSharp.EventField/RemoveDelegateMethod:GetOperation (Mono.CSharp.Location)",
      "code_size" : "66",
      "class" : "RemoveDelegateMethod",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Event:.ctor (Mono.CSharp.TypeDefinition,Mono.CSharp.FullNamedExpression,Mono.CSharp.Modifiers,Mono.CSharp.MemberName,Mono.CSharp.Attributes)",
      "code_size" : "166",
      "class" : "Event",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_AttributeTargets",
      "signature" : "System.AttributeTargets Mono.CSharp.Event:get_AttributeTargets ()",
      "code_size" : "14",
      "class" : "Event",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Add",
      "signature" : "Mono.CSharp.Event/AEventAccessor Mono.CSharp.Event:get_Add ()",
      "code_size" : "20",
      "class" : "Event",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Add",
      "signature" : "void Mono.CSharp.Event:set_Add (Mono.CSharp.Event/AEventAccessor)",
      "code_size" : "94",
      "class" : "Event",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ExpectedMemberTypeVariance",
      "signature" : "Mono.CSharp.Variance Mono.CSharp.Event:get_ExpectedMemberTypeVariance ()",
      "code_size" : "19",
      "class" : "Event",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Remove",
      "signature" : "Mono.CSharp.Event/AEventAccessor Mono.CSharp.Event:get_Remove ()",
      "code_size" : "20",
      "class" : "Event",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Remove",
      "signature" : "void Mono.CSharp.Event:set_Remove (Mono.CSharp.Event/AEventAccessor)",
      "code_size" : "94",
      "class" : "Event",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ApplyAttributeBuilder",
      "signature" : "void Mono.CSharp.Event:ApplyAttributeBuilder (Mono.CSharp.Attribute,Mono.CSharp.MethodSpec,byte[],Mono.CSharp.PredefinedAttributes)",
      "code_size" : "256",
      "class" : "Event",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CheckOverrideAgainstBase",
      "signature" : "bool Mono.CSharp.Event:CheckOverrideAgainstBase (Mono.CSharp.MemberSpec)",
      "code_size" : "86",
      "class" : "Event",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Define",
      "signature" : "bool Mono.CSharp.Event:Define ()",
      "code_size" : "867",
      "class" : "Event",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.Event:Emit ()",
      "code_size" : "182",
      "class" : "Event",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "PrepareEmit",
      "signature" : "void Mono.CSharp.Event:PrepareEmit ()",
      "code_size" : "159",
      "class" : "Event",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "WriteDebugSymbol",
      "signature" : "void Mono.CSharp.Event:WriteDebugSymbol (Mono.CompilerServices.SymbolWriter.MonoSymbolFile)",
      "code_size" : "67",
      "class" : "Event",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_DocCommentHeader",
      "signature" : "string Mono.CSharp.Event:get_DocCommentHeader ()",
      "code_size" : "16",
      "class" : "Event",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Event/AEventAccessor:.ctor (Mono.CSharp.Event,string,Mono.CSharp.Attributes,Mono.CSharp.Location)",
      "code_size" : "134",
      "class" : "AEventAccessor",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsInterfaceImplementation",
      "signature" : "bool Mono.CSharp.Event/AEventAccessor:get_IsInterfaceImplementation ()",
      "code_size" : "45",
      "class" : "AEventAccessor",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "ApplyAttributeBuilder",
      "signature" : "void Mono.CSharp.Event/AEventAccessor:ApplyAttributeBuilder (Mono.CSharp.Attribute,Mono.CSharp.MethodSpec,byte[],Mono.CSharp.PredefinedAttributes)",
      "code_size" : "134",
      "class" : "AEventAccessor",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "ApplyToExtraTarget",
      "signature" : "void Mono.CSharp.Event/AEventAccessor:ApplyToExtraTarget (Mono.CSharp.Attribute,Mono.CSharp.MethodSpec,byte[],Mono.CSharp.PredefinedAttributes)",
      "code_size" : "228",
      "class" : "AEventAccessor",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_AttributeTargets",
      "signature" : "System.AttributeTargets Mono.CSharp.Event/AEventAccessor:get_AttributeTargets ()",
      "code_size" : "14",
      "class" : "AEventAccessor",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsClsComplianceRequired",
      "signature" : "bool Mono.CSharp.Event/AEventAccessor:IsClsComplianceRequired ()",
      "code_size" : "29",
      "class" : "AEventAccessor",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Define",
      "signature" : "void Mono.CSharp.Event/AEventAccessor:Define (Mono.CSharp.TypeContainer)",
      "code_size" : "663",
      "class" : "AEventAccessor",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ReturnType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.Event/AEventAccessor:get_ReturnType ()",
      "code_size" : "49",
      "class" : "AEventAccessor",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetAttributeObsolete",
      "signature" : "System.ObsoleteAttribute Mono.CSharp.Event/AEventAccessor:GetAttributeObsolete ()",
      "code_size" : "32",
      "class" : "AEventAccessor",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_MethodData",
      "signature" : "Mono.CSharp.MethodData Mono.CSharp.Event/AEventAccessor:get_MethodData ()",
      "code_size" : "20",
      "class" : "AEventAccessor",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ValidAttributeTargets",
      "signature" : "string[] Mono.CSharp.Event/AEventAccessor:get_ValidAttributeTargets ()",
      "code_size" : "19",
      "class" : "AEventAccessor",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ParameterInfo",
      "signature" : "Mono.CSharp.ParametersCompiled Mono.CSharp.Event/AEventAccessor:get_ParameterInfo ()",
      "code_size" : "20",
      "class" : "AEventAccessor",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".cctor",
      "signature" : "void Mono.CSharp.Event/AEventAccessor:.cctor ()",
      "code_size" : "142",
      "class" : "AEventAccessor",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.EventSpec:.ctor (Mono.CSharp.TypeSpec,Mono.CSharp.IMemberDefinition,Mono.CSharp.TypeSpec,Mono.CSharp.Modifiers,Mono.CSharp.MethodSpec,Mono.CSharp.MethodSpec)",
      "code_size" : "131",
      "class" : "EventSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_AccessorAdd",
      "signature" : "Mono.CSharp.MethodSpec Mono.CSharp.EventSpec:get_AccessorAdd ()",
      "code_size" : "20",
      "class" : "EventSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_AccessorAdd",
      "signature" : "void Mono.CSharp.EventSpec:set_AccessorAdd (Mono.CSharp.MethodSpec)",
      "code_size" : "43",
      "class" : "EventSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_AccessorRemove",
      "signature" : "Mono.CSharp.MethodSpec Mono.CSharp.EventSpec:get_AccessorRemove ()",
      "code_size" : "20",
      "class" : "EventSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_AccessorRemove",
      "signature" : "void Mono.CSharp.EventSpec:set_AccessorRemove (Mono.CSharp.MethodSpec)",
      "code_size" : "43",
      "class" : "EventSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_BackingField",
      "signature" : "Mono.CSharp.FieldSpec Mono.CSharp.EventSpec:get_BackingField ()",
      "code_size" : "20",
      "class" : "EventSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_BackingField",
      "signature" : "void Mono.CSharp.EventSpec:set_BackingField (Mono.CSharp.FieldSpec)",
      "code_size" : "43",
      "class" : "EventSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_MemberType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.EventSpec:get_MemberType ()",
      "code_size" : "20",
      "class" : "EventSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_MemberType",
      "signature" : "void Mono.CSharp.EventSpec:set_MemberType (Mono.CSharp.TypeSpec)",
      "code_size" : "43",
      "class" : "EventSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "InflateMember",
      "signature" : "Mono.CSharp.MemberSpec Mono.CSharp.EventSpec:InflateMember (Mono.CSharp.TypeParameterInflator)",
      "code_size" : "374",
      "class" : "EventSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveMissingDependencies",
      "signature" : "System.Collections.Generic.List`1<Mono.CSharp.MissingTypeSpecReference> Mono.CSharp.EventSpec:ResolveMissingDependencies (Mono.CSharp.MemberSpec)",
      "code_size" : "29",
      "class" : "EventSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Indexer:.ctor (Mono.CSharp.TypeDefinition,Mono.CSharp.FullNamedExpression,Mono.CSharp.MemberName,Mono.CSharp.Modifiers,Mono.CSharp.ParametersCompiled,Mono.CSharp.Attributes)",
      "code_size" : "126",
      "class" : "Indexer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mono.CSharp.IParametersMember.get_Parameters",
      "signature" : "Mono.CSharp.AParametersCollection Mono.CSharp.Indexer:Mono.CSharp.IParametersMember.get_Parameters ()",
      "code_size" : "23",
      "class" : "Indexer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ParameterInfo",
      "signature" : "Mono.CSharp.ParametersCompiled Mono.CSharp.Indexer:get_ParameterInfo ()",
      "code_size" : "23",
      "class" : "Indexer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "void Mono.CSharp.Indexer:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "Indexer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ApplyAttributeBuilder",
      "signature" : "void Mono.CSharp.Indexer:ApplyAttributeBuilder (Mono.CSharp.Attribute,Mono.CSharp.MethodSpec,byte[],Mono.CSharp.PredefinedAttributes)",
      "code_size" : "87",
      "class" : "Indexer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CheckForDuplications",
      "signature" : "bool Mono.CSharp.Indexer:CheckForDuplications ()",
      "code_size" : "53",
      "class" : "Indexer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Define",
      "signature" : "bool Mono.CSharp.Indexer:Define ()",
      "code_size" : "942",
      "class" : "Indexer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EnableOverloadChecks",
      "signature" : "bool Mono.CSharp.Indexer:EnableOverloadChecks (Mono.CSharp.MemberCore)",
      "code_size" : "138",
      "class" : "Indexer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.Indexer:Emit ()",
      "code_size" : "43",
      "class" : "Indexer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSignatureForError",
      "signature" : "string Mono.CSharp.Indexer:GetSignatureForError ()",
      "code_size" : "261",
      "class" : "Indexer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSignatureForDocumentation",
      "signature" : "string Mono.CSharp.Indexer:GetSignatureForDocumentation ()",
      "code_size" : "58",
      "class" : "Indexer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "PrepareEmit",
      "signature" : "void Mono.CSharp.Indexer:PrepareEmit ()",
      "code_size" : "40",
      "class" : "Indexer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "VerifyClsCompliance",
      "signature" : "bool Mono.CSharp.Indexer:VerifyClsCompliance ()",
      "code_size" : "53",
      "class" : "Indexer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Indexer/GetIndexerMethod:.ctor (Mono.CSharp.PropertyBase,Mono.CSharp.Modifiers,Mono.CSharp.ParametersCompiled,Mono.CSharp.Attributes,Mono.CSharp.Location)",
      "code_size" : "78",
      "class" : "GetIndexerMethod",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Define",
      "signature" : "void Mono.CSharp.Indexer/GetIndexerMethod:Define (Mono.CSharp.TypeContainer)",
      "code_size" : "137",
      "class" : "GetIndexerMethod",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ParameterInfo",
      "signature" : "Mono.CSharp.ParametersCompiled Mono.CSharp.Indexer/GetIndexerMethod:get_ParameterInfo ()",
      "code_size" : "20",
      "class" : "GetIndexerMethod",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mono.CSharp.IParametersMember.get_Parameters",
      "signature" : "Mono.CSharp.AParametersCollection Mono.CSharp.Indexer/GetIndexerMethod:Mono.CSharp.IParametersMember.get_Parameters ()",
      "code_size" : "20",
      "class" : "GetIndexerMethod",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mono.CSharp.IInterfaceMemberSpec.get_MemberType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.Indexer/GetIndexerMethod:Mono.CSharp.IInterfaceMemberSpec.get_MemberType ()",
      "code_size" : "25",
      "class" : "GetIndexerMethod",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Indexer/SetIndexerMethod:.ctor (Mono.CSharp.PropertyBase,Mono.CSharp.Modifiers,Mono.CSharp.ParametersCompiled,Mono.CSharp.Attributes,Mono.CSharp.Location)",
      "code_size" : "48",
      "class" : "SetIndexerMethod",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mono.CSharp.IParametersMember.get_Parameters",
      "signature" : "Mono.CSharp.AParametersCollection Mono.CSharp.Indexer/SetIndexerMethod:Mono.CSharp.IParametersMember.get_Parameters ()",
      "code_size" : "20",
      "class" : "SetIndexerMethod",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mono.CSharp.IInterfaceMemberSpec.get_MemberType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.Indexer/SetIndexerMethod:Mono.CSharp.IInterfaceMemberSpec.get_MemberType ()",
      "code_size" : "25",
      "class" : "SetIndexerMethod",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.IndexerSpec:.ctor (Mono.CSharp.TypeSpec,Mono.CSharp.IMemberDefinition,Mono.CSharp.TypeSpec,Mono.CSharp.AParametersCollection,System.Reflection.PropertyInfo,Mono.CSharp.Modifiers)",
      "code_size" : "97",
      "class" : "IndexerSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Parameters",
      "signature" : "Mono.CSharp.AParametersCollection Mono.CSharp.IndexerSpec:get_Parameters ()",
      "code_size" : "20",
      "class" : "IndexerSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSignatureForDocumentation",
      "signature" : "string Mono.CSharp.IndexerSpec:GetSignatureForDocumentation ()",
      "code_size" : "55",
      "class" : "IndexerSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSignatureForError",
      "signature" : "string Mono.CSharp.IndexerSpec:GetSignatureForError ()",
      "code_size" : "115",
      "class" : "IndexerSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "InflateMember",
      "signature" : "Mono.CSharp.MemberSpec Mono.CSharp.IndexerSpec:InflateMember (Mono.CSharp.TypeParameterInflator)",
      "code_size" : "208",
      "class" : "IndexerSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveMissingDependencies",
      "signature" : "System.Collections.Generic.List`1<Mono.CSharp.MissingTypeSpecReference> Mono.CSharp.IndexerSpec:ResolveMissingDependencies (Mono.CSharp.MemberSpec)",
      "code_size" : "268",
      "class" : "IndexerSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ReflectionImporter:.ctor (Mono.CSharp.ModuleContainer,Mono.CSharp.BuiltinTypes)",
      "code_size" : "42",
      "class" : "ReflectionImporter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddCompiledType",
      "signature" : "void Mono.CSharp.ReflectionImporter:AddCompiledType (System.Reflection.Emit.TypeBuilder,Mono.CSharp.TypeSpec)",
      "code_size" : "9",
      "class" : "ReflectionImporter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DetermineKindFromBaseType",
      "signature" : "Mono.CSharp.MemberKind Mono.CSharp.ReflectionImporter:DetermineKindFromBaseType (System.Type)",
      "code_size" : "118",
      "class" : "ReflectionImporter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "HasVolatileModifier",
      "signature" : "bool Mono.CSharp.ReflectionImporter:HasVolatileModifier (System.Type[])",
      "code_size" : "133",
      "class" : "ReflectionImporter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ImportAssembly",
      "signature" : "void Mono.CSharp.ReflectionImporter:ImportAssembly (System.Reflection.Assembly,Mono.CSharp.RootNamespace)",
      "code_size" : "160",
      "class" : "ReflectionImporter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ImportModule",
      "signature" : "Mono.CSharp.ImportedModuleDefinition Mono.CSharp.ReflectionImporter:ImportModule (System.Reflection.Module,Mono.CSharp.RootNamespace)",
      "code_size" : "215",
      "class" : "ReflectionImporter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Initialize",
      "signature" : "void Mono.CSharp.ReflectionImporter:Initialize (Mono.CSharp.BuiltinTypes)",
      "code_size" : "890",
      "class" : "ReflectionImporter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "SingleToInt32Bits",
      "signature" : "int Mono.CSharp.SingleConverter:SingleToInt32Bits (single)",
      "code_size" : "54",
      "class" : "SingleConverter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.AssemblyDefinitionDynamic:.ctor (Mono.CSharp.ModuleContainer,string)",
      "code_size" : "28",
      "class" : "AssemblyDefinitionDynamic",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.AssemblyDefinitionDynamic:.ctor (Mono.CSharp.ModuleContainer,string,string)",
      "code_size" : "33",
      "class" : "AssemblyDefinitionDynamic",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IncludeModule",
      "signature" : "System.Reflection.Module Mono.CSharp.AssemblyDefinitionDynamic:IncludeModule (string)",
      "code_size" : "42",
      "class" : "AssemblyDefinitionDynamic",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateModuleBuilder",
      "signature" : "System.Reflection.Emit.ModuleBuilder Mono.CSharp.AssemblyDefinitionDynamic:CreateModuleBuilder ()",
      "code_size" : "182",
      "class" : "AssemblyDefinitionDynamic",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Create",
      "signature" : "bool Mono.CSharp.AssemblyDefinitionDynamic:Create (System.AppDomain,System.Reflection.Emit.AssemblyBuilderAccess)",
      "code_size" : "27",
      "class" : "AssemblyDefinitionDynamic",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Dirname",
      "signature" : "string Mono.CSharp.AssemblyDefinitionDynamic:Dirname (string)",
      "code_size" : "125",
      "class" : "AssemblyDefinitionDynamic",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "SaveModule",
      "signature" : "void Mono.CSharp.AssemblyDefinitionDynamic:SaveModule (System.Reflection.PortableExecutableKinds,System.Reflection.ImageFileMachine)",
      "code_size" : "559",
      "class" : "AssemblyDefinitionDynamic",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.AssemblyBuilderMonoSpecific:.ctor (System.Reflection.Emit.AssemblyBuilder,Mono.CSharp.CompilerContext)",
      "code_size" : "74",
      "class" : "AssemblyBuilderMonoSpecific",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddModule",
      "signature" : "System.Reflection.Module Mono.CSharp.AssemblyBuilderMonoSpecific:AddModule (string)",
      "code_size" : "299",
      "class" : "AssemblyBuilderMonoSpecific",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddPermissionRequests",
      "signature" : "void Mono.CSharp.AssemblyBuilderMonoSpecific:AddPermissionRequests (System.Security.PermissionSet[])",
      "code_size" : "169",
      "class" : "AssemblyBuilderMonoSpecific",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddTypeForwarder",
      "signature" : "void Mono.CSharp.AssemblyBuilderMonoSpecific:AddTypeForwarder (Mono.CSharp.TypeSpec,Mono.CSharp.Location)",
      "code_size" : "266",
      "class" : "AssemblyBuilderMonoSpecific",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DefineWin32IconResource",
      "signature" : "void Mono.CSharp.AssemblyBuilderMonoSpecific:DefineWin32IconResource (string)",
      "code_size" : "227",
      "class" : "AssemblyBuilderMonoSpecific",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetAlgorithmId",
      "signature" : "void Mono.CSharp.AssemblyBuilderMonoSpecific:SetAlgorithmId (uint,Mono.CSharp.Location)",
      "code_size" : "234",
      "class" : "AssemblyBuilderMonoSpecific",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetCulture",
      "signature" : "void Mono.CSharp.AssemblyBuilderMonoSpecific:SetCulture (string,Mono.CSharp.Location)",
      "code_size" : "189",
      "class" : "AssemblyBuilderMonoSpecific",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetFlags",
      "signature" : "void Mono.CSharp.AssemblyBuilderMonoSpecific:SetFlags (uint,Mono.CSharp.Location)",
      "code_size" : "234",
      "class" : "AssemblyBuilderMonoSpecific",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetVersion",
      "signature" : "void Mono.CSharp.AssemblyBuilderMonoSpecific:SetVersion (System.Version,Mono.CSharp.Location)",
      "code_size" : "224",
      "class" : "AssemblyBuilderMonoSpecific",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.DynamicLoader:.ctor (Mono.CSharp.ReflectionImporter,Mono.CSharp.CompilerContext)",
      "code_size" : "94",
      "class" : "DynamicLoader",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Importer",
      "signature" : "Mono.CSharp.ReflectionImporter Mono.CSharp.DynamicLoader:get_Importer ()",
      "code_size" : "20",
      "class" : "DynamicLoader",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetDefaultReferences",
      "signature" : "string[] Mono.CSharp.DynamicLoader:GetDefaultReferences ()",
      "code_size" : "275",
      "class" : "DynamicLoader",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSystemDir",
      "signature" : "string Mono.CSharp.DynamicLoader:GetSystemDir ()",
      "code_size" : "48",
      "class" : "DynamicLoader",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "HasObjectType",
      "signature" : "System.Reflection.Assembly Mono.CSharp.DynamicLoader:HasObjectType (System.Reflection.Assembly)",
      "code_size" : "94",
      "class" : "DynamicLoader",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "LoadAssemblyFile",
      "signature" : "System.Reflection.Assembly Mono.CSharp.DynamicLoader:LoadAssemblyFile (string,bool)",
      "code_size" : "940",
      "class" : "DynamicLoader",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "LoadModuleFile",
      "signature" : "System.Reflection.Module Mono.CSharp.DynamicLoader:LoadModuleFile (Mono.CSharp.AssemblyDefinitionDynamic,string)",
      "code_size" : "792",
      "class" : "DynamicLoader",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "LoadModules",
      "signature" : "void Mono.CSharp.DynamicLoader:LoadModules (Mono.CSharp.AssemblyDefinitionDynamic,Mono.CSharp.RootNamespace)",
      "code_size" : "254",
      "class" : "DynamicLoader",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "LoadReferences",
      "signature" : "void Mono.CSharp.DynamicLoader:LoadReferences (Mono.CSharp.ModuleContainer)",
      "code_size" : "269",
      "class" : "DynamicLoader",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Report:.ctor (Mono.CSharp.CompilerContext,Mono.CSharp.ReportPrinter)",
      "code_size" : "277",
      "class" : "Report",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DisableReporting",
      "signature" : "void Mono.CSharp.Report:DisableReporting ()",
      "code_size" : "25",
      "class" : "Report",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EnableReporting",
      "signature" : "void Mono.CSharp.Report:EnableReporting ()",
      "code_size" : "25",
      "class" : "Report",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "FeatureIsNotAvailable",
      "signature" : "void Mono.CSharp.Report:FeatureIsNotAvailable (Mono.CSharp.CompilerContext,Mono.CSharp.Location,string)",
      "code_size" : "376",
      "class" : "Report",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "FeatureIsNotSupported",
      "signature" : "void Mono.CSharp.Report:FeatureIsNotSupported (Mono.CSharp.Location,string)",
      "code_size" : "56",
      "class" : "Report",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "RuntimeMissingSupport",
      "signature" : "void Mono.CSharp.Report:RuntimeMissingSupport (Mono.CSharp.Location,string)",
      "code_size" : "61",
      "class" : "Report",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "SymbolRelatedToPreviousError",
      "signature" : "void Mono.CSharp.Report:SymbolRelatedToPreviousError (Mono.CSharp.Location,string)",
      "code_size" : "40",
      "class" : "Report",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "SymbolRelatedToPreviousError",
      "signature" : "void Mono.CSharp.Report:SymbolRelatedToPreviousError (Mono.CSharp.MemberSpec)",
      "code_size" : "482",
      "class" : "Report",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "SymbolRelatedToPreviousError",
      "signature" : "void Mono.CSharp.Report:SymbolRelatedToPreviousError (Mono.CSharp.MemberCore)",
      "code_size" : "74",
      "class" : "Report",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "SymbolRelatedToPreviousError",
      "signature" : "void Mono.CSharp.Report:SymbolRelatedToPreviousError (string)",
      "code_size" : "97",
      "class" : "Report",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CheckWarningCode",
      "signature" : "bool Mono.CSharp.Report:CheckWarningCode (int,Mono.CSharp.Location)",
      "code_size" : "269",
      "class" : "Report",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ExtraInformation",
      "signature" : "void Mono.CSharp.Report:ExtraInformation (Mono.CSharp.Location,string)",
      "code_size" : "116",
      "class" : "Report",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "RegisterWarningRegion",
      "signature" : "Mono.CSharp.WarningRegions Mono.CSharp.Report:RegisterWarningRegion (Mono.CSharp.Location)",
      "code_size" : "384",
      "class" : "Report",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Warning",
      "signature" : "void Mono.CSharp.Report:Warning (int,int,Mono.CSharp.Location,string)",
      "code_size" : "485",
      "class" : "Report",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Warning",
      "signature" : "void Mono.CSharp.Report:Warning (int,int,Mono.CSharp.Location,string,string)",
      "code_size" : "80",
      "class" : "Report",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Warning",
      "signature" : "void Mono.CSharp.Report:Warning (int,int,Mono.CSharp.Location,string,string,string)",
      "code_size" : "74",
      "class" : "Report",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Warning",
      "signature" : "void Mono.CSharp.Report:Warning (int,int,Mono.CSharp.Location,string,object[])",
      "code_size" : "78",
      "class" : "Report",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Warning",
      "signature" : "void Mono.CSharp.Report:Warning (int,int,string)",
      "code_size" : "93",
      "class" : "Report",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Warning",
      "signature" : "void Mono.CSharp.Report:Warning (int,int,string,string)",
      "code_size" : "103",
      "class" : "Report",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Warning",
      "signature" : "void Mono.CSharp.Report:Warning (int,int,string,string,string)",
      "code_size" : "106",
      "class" : "Report",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Warning",
      "signature" : "void Mono.CSharp.Report:Warning (int,int,string,string[])",
      "code_size" : "111",
      "class" : "Report",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Warnings",
      "signature" : "int Mono.CSharp.Report:get_Warnings ()",
      "code_size" : "30",
      "class" : "Report",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error",
      "signature" : "void Mono.CSharp.Report:Error (int,Mono.CSharp.Location,string)",
      "code_size" : "324",
      "class" : "Report",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error",
      "signature" : "void Mono.CSharp.Report:Error (int,Mono.CSharp.Location,string,string)",
      "code_size" : "70",
      "class" : "Report",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error",
      "signature" : "void Mono.CSharp.Report:Error (int,Mono.CSharp.Location,string,string,string)",
      "code_size" : "80",
      "class" : "Report",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error",
      "signature" : "void Mono.CSharp.Report:Error (int,Mono.CSharp.Location,string,string[])",
      "code_size" : "68",
      "class" : "Report",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error",
      "signature" : "void Mono.CSharp.Report:Error (int,string)",
      "code_size" : "83",
      "class" : "Report",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error",
      "signature" : "void Mono.CSharp.Report:Error (int,string,string)",
      "code_size" : "93",
      "class" : "Report",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error",
      "signature" : "void Mono.CSharp.Report:Error (int,string,string,string)",
      "code_size" : "103",
      "class" : "Report",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error",
      "signature" : "void Mono.CSharp.Report:Error (int,string,string[])",
      "code_size" : "101",
      "class" : "Report",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Errors",
      "signature" : "int Mono.CSharp.Report:get_Errors ()",
      "code_size" : "30",
      "class" : "Report",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsDisabled",
      "signature" : "bool Mono.CSharp.Report:get_IsDisabled ()",
      "code_size" : "30",
      "class" : "Report",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Printer",
      "signature" : "Mono.CSharp.ReportPrinter Mono.CSharp.Report:get_Printer ()",
      "code_size" : "20",
      "class" : "Report",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetPrinter",
      "signature" : "Mono.CSharp.ReportPrinter Mono.CSharp.Report:SetPrinter (Mono.CSharp.ReportPrinter)",
      "code_size" : "55",
      "class" : "Report",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Debug",
      "signature" : "void Mono.CSharp.Report:Debug (string,object[])",
      "code_size" : "9",
      "class" : "Report",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Debug",
      "signature" : "void Mono.CSharp.Report:Debug (int,string,object[])",
      "code_size" : "302",
      "class" : "Report",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "FriendlyStackTrace",
      "signature" : "string Mono.CSharp.Report:FriendlyStackTrace (System.Diagnostics.StackTrace)",
      "code_size" : "674",
      "class" : "Report",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".cctor",
      "signature" : "void Mono.CSharp.Report:.cctor ()",
      "code_size" : "68",
      "class" : "Report",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.AbstractMessage:.ctor (int,Mono.CSharp.Location,string,System.Collections.Generic.List`1<string>)",
      "code_size" : "164",
      "class" : "AbstractMessage",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.AbstractMessage:.ctor (Mono.CSharp.AbstractMessage)",
      "code_size" : "117",
      "class" : "AbstractMessage",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Code",
      "signature" : "int Mono.CSharp.AbstractMessage:get_Code ()",
      "code_size" : "20",
      "class" : "AbstractMessage",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Equals",
      "signature" : "bool Mono.CSharp.AbstractMessage:Equals (object)",
      "code_size" : "195",
      "class" : "AbstractMessage",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetHashCode",
      "signature" : "int Mono.CSharp.AbstractMessage:GetHashCode ()",
      "code_size" : "20",
      "class" : "AbstractMessage",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Location",
      "signature" : "Mono.CSharp.Location Mono.CSharp.AbstractMessage:get_Location ()",
      "code_size" : "30",
      "class" : "AbstractMessage",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_RelatedSymbols",
      "signature" : "string[] Mono.CSharp.AbstractMessage:get_RelatedSymbols ()",
      "code_size" : "20",
      "class" : "AbstractMessage",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Text",
      "signature" : "string Mono.CSharp.AbstractMessage:get_Text ()",
      "code_size" : "20",
      "class" : "AbstractMessage",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.WarningMessage:.ctor (int,Mono.CSharp.Location,string,System.Collections.Generic.List`1<string>)",
      "code_size" : "43",
      "class" : "WarningMessage",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsWarning",
      "signature" : "bool Mono.CSharp.WarningMessage:get_IsWarning ()",
      "code_size" : "14",
      "class" : "WarningMessage",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_MessageType",
      "signature" : "string Mono.CSharp.WarningMessage:get_MessageType ()",
      "code_size" : "16",
      "class" : "WarningMessage",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ErrorMessage:.ctor (int,Mono.CSharp.Location,string,System.Collections.Generic.List`1<string>)",
      "code_size" : "43",
      "class" : "ErrorMessage",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ErrorMessage:.ctor (Mono.CSharp.AbstractMessage)",
      "code_size" : "23",
      "class" : "ErrorMessage",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsWarning",
      "signature" : "bool Mono.CSharp.ErrorMessage:get_IsWarning ()",
      "code_size" : "11",
      "class" : "ErrorMessage",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_MessageType",
      "signature" : "string Mono.CSharp.ErrorMessage:get_MessageType ()",
      "code_size" : "16",
      "class" : "ErrorMessage",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ReportPrinter:.ctor ()",
      "code_size" : "9",
      "class" : "ReportPrinter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ErrorsCount",
      "signature" : "int Mono.CSharp.ReportPrinter:get_ErrorsCount ()",
      "code_size" : "20",
      "class" : "ReportPrinter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_ErrorsCount",
      "signature" : "void Mono.CSharp.ReportPrinter:set_ErrorsCount (int)",
      "code_size" : "28",
      "class" : "ReportPrinter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_WarningsCount",
      "signature" : "int Mono.CSharp.ReportPrinter:get_WarningsCount ()",
      "code_size" : "20",
      "class" : "ReportPrinter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_WarningsCount",
      "signature" : "void Mono.CSharp.ReportPrinter:set_WarningsCount (int)",
      "code_size" : "28",
      "class" : "ReportPrinter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_HasRelatedSymbolSupport",
      "signature" : "bool Mono.CSharp.ReportPrinter:get_HasRelatedSymbolSupport ()",
      "code_size" : "14",
      "class" : "ReportPrinter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "FormatText",
      "signature" : "string Mono.CSharp.ReportPrinter:FormatText (string)",
      "code_size" : "17",
      "class" : "ReportPrinter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Print",
      "signature" : "void Mono.CSharp.ReportPrinter:Print (Mono.CSharp.AbstractMessage,bool)",
      "code_size" : "63",
      "class" : "ReportPrinter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Print",
      "signature" : "void Mono.CSharp.ReportPrinter:Print (Mono.CSharp.AbstractMessage,System.IO.TextWriter,bool)",
      "code_size" : "592",
      "class" : "ReportPrinter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MissingTypeReported",
      "signature" : "bool Mono.CSharp.ReportPrinter:MissingTypeReported (Mono.CSharp.ITypeDefinition)",
      "code_size" : "149",
      "class" : "ReportPrinter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Reset",
      "signature" : "void Mono.CSharp.ReportPrinter:Reset ()",
      "code_size" : "30",
      "class" : "ReportPrinter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.NullReportPrinter:.ctor ()",
      "code_size" : "9",
      "class" : "NullReportPrinter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.SessionReportPrinter:.ctor ()",
      "code_size" : "9",
      "class" : "SessionReportPrinter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ClearSession",
      "signature" : "void Mono.CSharp.SessionReportPrinter:ClearSession ()",
      "code_size" : "24",
      "class" : "SessionReportPrinter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Print",
      "signature" : "void Mono.CSharp.SessionReportPrinter:Print (Mono.CSharp.AbstractMessage,bool)",
      "code_size" : "171",
      "class" : "SessionReportPrinter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EndSession",
      "signature" : "void Mono.CSharp.SessionReportPrinter:EndSession ()",
      "code_size" : "566",
      "class" : "SessionReportPrinter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsEmpty",
      "signature" : "bool Mono.CSharp.SessionReportPrinter:get_IsEmpty ()",
      "code_size" : "52",
      "class" : "SessionReportPrinter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Merge",
      "signature" : "bool Mono.CSharp.SessionReportPrinter:Merge (Mono.CSharp.ReportPrinter)",
      "code_size" : "414",
      "class" : "SessionReportPrinter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.StreamReportPrinter:.ctor (System.IO.TextWriter)",
      "code_size" : "43",
      "class" : "StreamReportPrinter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Print",
      "signature" : "void Mono.CSharp.StreamReportPrinter:Print (Mono.CSharp.AbstractMessage,bool)",
      "code_size" : "61",
      "class" : "StreamReportPrinter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".cctor",
      "signature" : "void Mono.CSharp.ConsoleReportPrinter:.cctor ()",
      "code_size" : "493",
      "class" : "ConsoleReportPrinter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ConsoleReportPrinter:.ctor ()",
      "code_size" : "48",
      "class" : "ConsoleReportPrinter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ConsoleReportPrinter:.ctor (System.IO.TextWriter)",
      "code_size" : "43",
      "class" : "ConsoleReportPrinter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "NameToCode",
      "signature" : "int Mono.CSharp.ConsoleReportPrinter:NameToCode (string)",
      "code_size" : "534",
      "class" : "ConsoleReportPrinter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetForeground",
      "signature" : "string Mono.CSharp.ConsoleReportPrinter:GetForeground (string)",
      "code_size" : "160",
      "class" : "ConsoleReportPrinter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetBackground",
      "signature" : "string Mono.CSharp.ConsoleReportPrinter:GetBackground (string)",
      "code_size" : "77",
      "class" : "ConsoleReportPrinter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "FormatText",
      "signature" : "string Mono.CSharp.ConsoleReportPrinter:FormatText (string)",
      "code_size" : "66",
      "class" : "ConsoleReportPrinter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.TimeReporter:.ctor (bool)",
      "code_size" : "86",
      "class" : "TimeReporter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Start",
      "signature" : "void Mono.CSharp.TimeReporter:Start (Mono.CSharp.TimeReporter/TimerType)",
      "code_size" : "105",
      "class" : "TimeReporter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "StartTotal",
      "signature" : "void Mono.CSharp.TimeReporter:StartTotal ()",
      "code_size" : "76",
      "class" : "TimeReporter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Stop",
      "signature" : "void Mono.CSharp.TimeReporter:Stop (Mono.CSharp.TimeReporter/TimerType)",
      "code_size" : "89",
      "class" : "TimeReporter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "StopTotal",
      "signature" : "void Mono.CSharp.TimeReporter:StopTotal ()",
      "code_size" : "31",
      "class" : "TimeReporter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ShowStats",
      "signature" : "void Mono.CSharp.TimeReporter:ShowStats ()",
      "code_size" : "968",
      "class" : "TimeReporter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.InternalErrorException:.ctor (Mono.CSharp.MemberCore,System.Exception)",
      "code_size" : "142",
      "class" : "InternalErrorException",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.InternalErrorException:.ctor ()",
      "code_size" : "29",
      "class" : "InternalErrorException",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.InternalErrorException:.ctor (string)",
      "code_size" : "23",
      "class" : "InternalErrorException",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.InternalErrorException:.ctor (string,object[])",
      "code_size" : "48",
      "class" : "InternalErrorException",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.InternalErrorException:.ctor (System.Exception,string,object[])",
      "code_size" : "58",
      "class" : "InternalErrorException",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.InternalErrorException:.ctor (System.Exception,Mono.CSharp.Location)",
      "code_size" : "50",
      "class" : "InternalErrorException",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.FatalException:.ctor (string)",
      "code_size" : "23",
      "class" : "FatalException",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.WarningRegions:.ctor ()",
      "code_size" : "103",
      "class" : "WarningRegions",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "WarningDisable",
      "signature" : "void Mono.CSharp.WarningRegions:WarningDisable (int)",
      "code_size" : "74",
      "class" : "WarningRegions",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "WarningDisable",
      "signature" : "void Mono.CSharp.WarningRegions:WarningDisable (Mono.CSharp.Location,int,Mono.CSharp.Report)",
      "code_size" : "153",
      "class" : "WarningRegions",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "WarningEnable",
      "signature" : "void Mono.CSharp.WarningRegions:WarningEnable (int)",
      "code_size" : "74",
      "class" : "WarningRegions",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "WarningEnable",
      "signature" : "void Mono.CSharp.WarningRegions:WarningEnable (Mono.CSharp.Location,int,Mono.CSharp.CompilerContext)",
      "code_size" : "339",
      "class" : "WarningRegions",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsWarningEnabled",
      "signature" : "bool Mono.CSharp.WarningRegions:IsWarningEnabled (int,int)",
      "code_size" : "207",
      "class" : "WarningRegions",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.WarningRegions/PragmaCmd:.ctor (int)",
      "code_size" : "28",
      "class" : "PragmaCmd",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.WarningRegions/Disable:.ctor (int,int)",
      "code_size" : "41",
      "class" : "Disable",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsEnabled",
      "signature" : "bool Mono.CSharp.WarningRegions/Disable:IsEnabled (int,bool)",
      "code_size" : "45",
      "class" : "Disable",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.WarningRegions/DisableAll:.ctor (int)",
      "code_size" : "28",
      "class" : "DisableAll",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsEnabled",
      "signature" : "bool Mono.CSharp.WarningRegions/DisableAll:IsEnabled (int,bool)",
      "code_size" : "11",
      "class" : "DisableAll",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.WarningRegions/Enable:.ctor (int,int)",
      "code_size" : "41",
      "class" : "Enable",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsEnabled",
      "signature" : "bool Mono.CSharp.WarningRegions/Enable:IsEnabled (int,bool)",
      "code_size" : "48",
      "class" : "Enable",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.WarningRegions/EnableAll:.ctor (int)",
      "code_size" : "28",
      "class" : "EnableAll",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsEnabled",
      "signature" : "bool Mono.CSharp.WarningRegions/EnableAll:IsEnabled (int,bool)",
      "code_size" : "14",
      "class" : "EnableAll",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.CompilerSettings:.ctor ()",
      "code_size" : "757",
      "class" : "CompilerSettings",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_FirstSourceFile",
      "signature" : "Mono.CSharp.SourceFile Mono.CSharp.CompilerSettings:get_FirstSourceFile ()",
      "code_size" : "72",
      "class" : "CompilerSettings",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_HasKeyFileOrContainer",
      "signature" : "bool Mono.CSharp.CompilerSettings:get_HasKeyFileOrContainer ()",
      "code_size" : "65",
      "class" : "CompilerSettings",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_NeedsEntryPoint",
      "signature" : "bool Mono.CSharp.CompilerSettings:get_NeedsEntryPoint ()",
      "code_size" : "61",
      "class" : "CompilerSettings",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_SourceFiles",
      "signature" : "System.Collections.Generic.List`1<Mono.CSharp.SourceFile> Mono.CSharp.CompilerSettings:get_SourceFiles ()",
      "code_size" : "23",
      "class" : "CompilerSettings",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddConditionalSymbol",
      "signature" : "void Mono.CSharp.CompilerSettings:AddConditionalSymbol (string)",
      "code_size" : "75",
      "class" : "CompilerSettings",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddWarningAsError",
      "signature" : "void Mono.CSharp.CompilerSettings:AddWarningAsError (int)",
      "code_size" : "156",
      "class" : "CompilerSettings",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddWarningOnly",
      "signature" : "void Mono.CSharp.CompilerSettings:AddWarningOnly (int)",
      "code_size" : "156",
      "class" : "CompilerSettings",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsConditionalSymbolDefined",
      "signature" : "bool Mono.CSharp.CompilerSettings:IsConditionalSymbolDefined (string)",
      "code_size" : "44",
      "class" : "CompilerSettings",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsWarningAsError",
      "signature" : "bool Mono.CSharp.CompilerSettings:IsWarningAsError (int)",
      "code_size" : "126",
      "class" : "CompilerSettings",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsWarningEnabled",
      "signature" : "bool Mono.CSharp.CompilerSettings:IsWarningEnabled (int,int)",
      "code_size" : "67",
      "class" : "CompilerSettings",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsWarningDisabledGlobally",
      "signature" : "bool Mono.CSharp.CompilerSettings:IsWarningDisabledGlobally (int)",
      "code_size" : "77",
      "class" : "CompilerSettings",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetIgnoreWarning",
      "signature" : "void Mono.CSharp.CompilerSettings:SetIgnoreWarning (int)",
      "code_size" : "128",
      "class" : "CompilerSettings",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.CommandLineParser:.ctor (System.IO.TextWriter)",
      "code_size" : "40",
      "class" : "CommandLineParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.CommandLineParser:.ctor (System.IO.TextWriter,System.IO.TextWriter)",
      "code_size" : "297",
      "class" : "CommandLineParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "add_UnknownOptionHandler",
      "signature" : "void Mono.CSharp.CommandLineParser:add_UnknownOptionHandler (System.Func`3<string[], int, int>)",
      "code_size" : "189",
      "class" : "CommandLineParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "remove_UnknownOptionHandler",
      "signature" : "void Mono.CSharp.CommandLineParser:remove_UnknownOptionHandler (System.Func`3<string[], int, int>)",
      "code_size" : "189",
      "class" : "CommandLineParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_HasBeenStopped",
      "signature" : "bool Mono.CSharp.CommandLineParser:get_HasBeenStopped ()",
      "code_size" : "20",
      "class" : "CommandLineParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "About",
      "signature" : "void Mono.CSharp.CommandLineParser:About ()",
      "code_size" : "39",
      "class" : "CommandLineParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ParseArguments",
      "signature" : "Mono.CSharp.CompilerSettings Mono.CSharp.CommandLineParser:ParseArguments (string[])",
      "code_size" : "91",
      "class" : "CommandLineParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ParseArguments",
      "signature" : "bool Mono.CSharp.CommandLineParser:ParseArguments (Mono.CSharp.CompilerSettings,string[])",
      "code_size" : "1283",
      "class" : "CommandLineParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ProcessSourceFiles",
      "signature" : "void Mono.CSharp.CommandLineParser:ProcessSourceFiles (string,bool,System.Collections.Generic.List`1<Mono.CSharp.SourceFile>)",
      "code_size" : "762",
      "class" : "CommandLineParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddArgs",
      "signature" : "string[] Mono.CSharp.CommandLineParser:AddArgs (string[],string[])",
      "code_size" : "218",
      "class" : "CommandLineParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddAssemblyReference",
      "signature" : "void Mono.CSharp.CommandLineParser:AddAssemblyReference (string,string,Mono.CSharp.CompilerSettings)",
      "code_size" : "191",
      "class" : "CommandLineParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddResource",
      "signature" : "void Mono.CSharp.CommandLineParser:AddResource (Mono.CSharp.AssemblyResource,Mono.CSharp.CompilerSettings)",
      "code_size" : "264",
      "class" : "CommandLineParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddSourceFile",
      "signature" : "void Mono.CSharp.CommandLineParser:AddSourceFile (string,System.Collections.Generic.List`1<Mono.CSharp.SourceFile>)",
      "code_size" : "463",
      "class" : "CommandLineParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ProcessWarningsList",
      "signature" : "bool Mono.CSharp.CommandLineParser:ProcessWarningsList (string,System.Action`1<int>)",
      "code_size" : "517",
      "class" : "CommandLineParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_RequiresArgument",
      "signature" : "void Mono.CSharp.CommandLineParser:Error_RequiresArgument (string)",
      "code_size" : "54",
      "class" : "CommandLineParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_RequiresFileName",
      "signature" : "void Mono.CSharp.CommandLineParser:Error_RequiresFileName (string)",
      "code_size" : "54",
      "class" : "CommandLineParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_WrongOption",
      "signature" : "void Mono.CSharp.CommandLineParser:Error_WrongOption (string)",
      "code_size" : "54",
      "class" : "CommandLineParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsExternAliasValid",
      "signature" : "bool Mono.CSharp.CommandLineParser:IsExternAliasValid (string)",
      "code_size" : "18",
      "class" : "CommandLineParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "LoadArgs",
      "signature" : "string[] Mono.CSharp.CommandLineParser:LoadArgs (string)",
      "code_size" : "668",
      "class" : "CommandLineParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "OtherFlags",
      "signature" : "void Mono.CSharp.CommandLineParser:OtherFlags ()",
      "code_size" : "39",
      "class" : "CommandLineParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ParseOption",
      "signature" : "Mono.CSharp.CommandLineParser/ParseResult Mono.CSharp.CommandLineParser:ParseOption (string,string[]&,Mono.CSharp.CompilerSettings)",
      "code_size" : "9308",
      "class" : "CommandLineParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ParseOptionUnix",
      "signature" : "Mono.CSharp.CommandLineParser/ParseResult Mono.CSharp.CommandLineParser:ParseOptionUnix (string,string[]&,int&,Mono.CSharp.CompilerSettings)",
      "code_size" : "5241",
      "class" : "CommandLineParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetWarningLevel",
      "signature" : "void Mono.CSharp.CommandLineParser:SetWarningLevel (string,Mono.CSharp.CompilerSettings)",
      "code_size" : "149",
      "class" : "CommandLineParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "SplitPathAndPattern",
      "signature" : "void Mono.CSharp.CommandLineParser:SplitPathAndPattern (string,string&,string&)",
      "code_size" : "399",
      "class" : "CommandLineParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Usage",
      "signature" : "void Mono.CSharp.CommandLineParser:Usage ()",
      "code_size" : "39",
      "class" : "CommandLineParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Version",
      "signature" : "void Mono.CSharp.CommandLineParser:Version ()",
      "code_size" : "103",
      "class" : "CommandLineParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".cctor",
      "signature" : "void Mono.CSharp.CommandLineParser:.cctor ()",
      "code_size" : "152",
      "class" : "CommandLineParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.RootContext:.ctor ()",
      "code_size" : "9",
      "class" : "RootContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ToplevelTypes",
      "signature" : "Mono.CSharp.ModuleContainer Mono.CSharp.RootContext:get_ToplevelTypes ()",
      "code_size" : "19",
      "class" : "RootContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_ToplevelTypes",
      "signature" : "void Mono.CSharp.RootContext:set_ToplevelTypes (Mono.CSharp.ModuleContainer)",
      "code_size" : "27",
      "class" : "RootContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Statement:.ctor ()",
      "code_size" : "9",
      "class" : "Statement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsUnreachable",
      "signature" : "bool Mono.CSharp.Statement:get_IsUnreachable ()",
      "code_size" : "30",
      "class" : "Statement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Resolve",
      "signature" : "bool Mono.CSharp.Statement:Resolve (Mono.CSharp.BlockContext)",
      "code_size" : "14",
      "class" : "Statement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.Statement:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "107",
      "class" : "Statement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Clone",
      "signature" : "Mono.CSharp.Statement Mono.CSharp.Statement:Clone (Mono.CSharp.CloneContext)",
      "code_size" : "126",
      "class" : "Statement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Statement:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "77",
      "class" : "Statement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.Statement:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "Statement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "FlowAnalysis",
      "signature" : "bool Mono.CSharp.Statement:FlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "328",
      "class" : "Statement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MarkReachable",
      "signature" : "Mono.CSharp.Reachability Mono.CSharp.Statement:MarkReachable (Mono.CSharp.Reachability)",
      "code_size" : "51",
      "class" : "Statement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CheckExitBoundaries",
      "signature" : "void Mono.CSharp.Statement:CheckExitBoundaries (Mono.CSharp.BlockContext,Mono.CSharp.Block)",
      "code_size" : "232",
      "class" : "Statement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_FinallyClauseExit",
      "signature" : "void Mono.CSharp.Statement:Error_FinallyClauseExit (Mono.CSharp.BlockContext)",
      "code_size" : "75",
      "class" : "Statement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.EmptyStatement:.ctor (Mono.CSharp.Location)",
      "code_size" : "32",
      "class" : "EmptyStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Resolve",
      "signature" : "bool Mono.CSharp.EmptyStatement:Resolve (Mono.CSharp.BlockContext)",
      "code_size" : "14",
      "class" : "EmptyStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.EmptyStatement:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "9",
      "class" : "EmptyStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoEmit",
      "signature" : "void Mono.CSharp.EmptyStatement:DoEmit (Mono.CSharp.EmitContext)",
      "code_size" : "27",
      "class" : "EmptyStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoFlowAnalysis",
      "signature" : "bool Mono.CSharp.EmptyStatement:DoFlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "11",
      "class" : "EmptyStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.EmptyStatement:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Statement)",
      "code_size" : "9",
      "class" : "EmptyStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.EmptyStatement:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "EmptyStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.If:.ctor (Mono.CSharp.Expression,Mono.CSharp.Statement,Mono.CSharp.Location)",
      "code_size" : "40",
      "class" : "If",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.If:.ctor (Mono.CSharp.Expression,Mono.CSharp.Statement,Mono.CSharp.Statement,Mono.CSharp.Location)",
      "code_size" : "125",
      "class" : "If",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Expr",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.If:get_Expr ()",
      "code_size" : "20",
      "class" : "If",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Resolve",
      "signature" : "bool Mono.CSharp.If:Resolve (Mono.CSharp.BlockContext)",
      "code_size" : "142",
      "class" : "If",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoEmit",
      "signature" : "void Mono.CSharp.If:DoEmit (Mono.CSharp.EmitContext)",
      "code_size" : "647",
      "class" : "If",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoFlowAnalysis",
      "signature" : "bool Mono.CSharp.If:DoFlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "609",
      "class" : "If",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MarkReachable",
      "signature" : "Mono.CSharp.Reachability Mono.CSharp.If:MarkReachable (Mono.CSharp.Reachability)",
      "code_size" : "449",
      "class" : "If",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.If:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Statement)",
      "code_size" : "261",
      "class" : "If",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.If:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "If",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Do:.ctor (Mono.CSharp.Statement,Mono.CSharp.BooleanExpression,Mono.CSharp.Location,Mono.CSharp.Location)",
      "code_size" : "106",
      "class" : "Do",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_WhileLocation",
      "signature" : "Mono.CSharp.Location Mono.CSharp.Do:get_WhileLocation ()",
      "code_size" : "30",
      "class" : "Do",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_WhileLocation",
      "signature" : "void Mono.CSharp.Do:set_WhileLocation (Mono.CSharp.Location)",
      "code_size" : "32",
      "class" : "Do",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Resolve",
      "signature" : "bool Mono.CSharp.Do:Resolve (Mono.CSharp.BlockContext)",
      "code_size" : "83",
      "class" : "Do",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoEmit",
      "signature" : "void Mono.CSharp.Do:DoEmit (Mono.CSharp.EmitContext)",
      "code_size" : "761",
      "class" : "Do",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoFlowAnalysis",
      "signature" : "bool Mono.CSharp.Do:DoFlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "242",
      "class" : "Do",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MarkReachable",
      "signature" : "Mono.CSharp.Reachability Mono.CSharp.Do:MarkReachable (Mono.CSharp.Reachability)",
      "code_size" : "368",
      "class" : "Do",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.Do:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Statement)",
      "code_size" : "216",
      "class" : "Do",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.Do:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "Do",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetEndReachable",
      "signature" : "void Mono.CSharp.Do:SetEndReachable ()",
      "code_size" : "20",
      "class" : "Do",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetIteratorReachable",
      "signature" : "void Mono.CSharp.Do:SetIteratorReachable ()",
      "code_size" : "20",
      "class" : "Do",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.While:.ctor (Mono.CSharp.BooleanExpression,Mono.CSharp.Statement,Mono.CSharp.Location)",
      "code_size" : "90",
      "class" : "While",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Resolve",
      "signature" : "bool Mono.CSharp.While:Resolve (Mono.CSharp.BlockContext)",
      "code_size" : "219",
      "class" : "While",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoEmit",
      "signature" : "void Mono.CSharp.While:DoEmit (Mono.CSharp.EmitContext)",
      "code_size" : "1219",
      "class" : "While",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoFlowAnalysis",
      "signature" : "bool Mono.CSharp.While:DoFlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "251",
      "class" : "While",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MarkReachable",
      "signature" : "Mono.CSharp.Reachability Mono.CSharp.While:MarkReachable (Mono.CSharp.Reachability)",
      "code_size" : "247",
      "class" : "While",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.While:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Statement)",
      "code_size" : "213",
      "class" : "While",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.While:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "While",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddEndDefiniteAssignment",
      "signature" : "void Mono.CSharp.While:AddEndDefiniteAssignment (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "164",
      "class" : "While",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetEndReachable",
      "signature" : "void Mono.CSharp.While:SetEndReachable ()",
      "code_size" : "20",
      "class" : "While",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.For:.ctor (Mono.CSharp.Location)",
      "code_size" : "66",
      "class" : "For",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Initializer",
      "signature" : "Mono.CSharp.Statement Mono.CSharp.For:get_Initializer ()",
      "code_size" : "20",
      "class" : "For",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Initializer",
      "signature" : "void Mono.CSharp.For:set_Initializer (Mono.CSharp.Statement)",
      "code_size" : "43",
      "class" : "For",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Condition",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.For:get_Condition ()",
      "code_size" : "20",
      "class" : "For",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Condition",
      "signature" : "void Mono.CSharp.For:set_Condition (Mono.CSharp.Expression)",
      "code_size" : "43",
      "class" : "For",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Iterator",
      "signature" : "Mono.CSharp.Statement Mono.CSharp.For:get_Iterator ()",
      "code_size" : "20",
      "class" : "For",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Iterator",
      "signature" : "void Mono.CSharp.For:set_Iterator (Mono.CSharp.Statement)",
      "code_size" : "43",
      "class" : "For",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Resolve",
      "signature" : "bool Mono.CSharp.For:Resolve (Mono.CSharp.BlockContext)",
      "code_size" : "264",
      "class" : "For",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoFlowAnalysis",
      "signature" : "bool Mono.CSharp.For:DoFlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "320",
      "class" : "For",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MarkReachable",
      "signature" : "Mono.CSharp.Reachability Mono.CSharp.For:MarkReachable (Mono.CSharp.Reachability)",
      "code_size" : "195",
      "class" : "For",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoEmit",
      "signature" : "void Mono.CSharp.For:DoEmit (Mono.CSharp.EmitContext)",
      "code_size" : "1212",
      "class" : "For",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.For:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Statement)",
      "code_size" : "352",
      "class" : "For",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.For:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "For",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddEndDefiniteAssignment",
      "signature" : "void Mono.CSharp.For:AddEndDefiniteAssignment (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "164",
      "class" : "For",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetEndReachable",
      "signature" : "void Mono.CSharp.For:SetEndReachable ()",
      "code_size" : "20",
      "class" : "For",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetIteratorReachable",
      "signature" : "void Mono.CSharp.For:SetIteratorReachable ()",
      "code_size" : "20",
      "class" : "For",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.LoopStatement:.ctor (Mono.CSharp.Statement)",
      "code_size" : "43",
      "class" : "LoopStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Statement",
      "signature" : "Mono.CSharp.Statement Mono.CSharp.LoopStatement:get_Statement ()",
      "code_size" : "20",
      "class" : "LoopStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Statement",
      "signature" : "void Mono.CSharp.LoopStatement:set_Statement (Mono.CSharp.Statement)",
      "code_size" : "43",
      "class" : "LoopStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Resolve",
      "signature" : "bool Mono.CSharp.LoopStatement:Resolve (Mono.CSharp.BlockContext)",
      "code_size" : "189",
      "class" : "LoopStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddEndDefiniteAssignment",
      "signature" : "void Mono.CSharp.LoopStatement:AddEndDefiniteAssignment (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "9",
      "class" : "LoopStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetEndReachable",
      "signature" : "void Mono.CSharp.LoopStatement:SetEndReachable ()",
      "code_size" : "9",
      "class" : "LoopStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetIteratorReachable",
      "signature" : "void Mono.CSharp.LoopStatement:SetIteratorReachable ()",
      "code_size" : "9",
      "class" : "LoopStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.StatementExpression:.ctor (Mono.CSharp.ExpressionStatement)",
      "code_size" : "70",
      "class" : "StatementExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.StatementExpression:.ctor (Mono.CSharp.ExpressionStatement,Mono.CSharp.Location)",
      "code_size" : "63",
      "class" : "StatementExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Expr",
      "signature" : "Mono.CSharp.ExpressionStatement Mono.CSharp.StatementExpression:get_Expr ()",
      "code_size" : "20",
      "class" : "StatementExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.StatementExpression:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Statement)",
      "code_size" : "181",
      "class" : "StatementExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoEmit",
      "signature" : "void Mono.CSharp.StatementExpression:DoEmit (Mono.CSharp.EmitContext)",
      "code_size" : "42",
      "class" : "StatementExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoFlowAnalysis",
      "signature" : "bool Mono.CSharp.StatementExpression:DoFlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "44",
      "class" : "StatementExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MarkReachable",
      "signature" : "Mono.CSharp.Reachability Mono.CSharp.StatementExpression:MarkReachable (Mono.CSharp.Reachability)",
      "code_size" : "74",
      "class" : "StatementExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Resolve",
      "signature" : "bool Mono.CSharp.StatementExpression:Resolve (Mono.CSharp.BlockContext)",
      "code_size" : "94",
      "class" : "StatementExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.StatementExpression:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "StatementExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.StatementErrorExpression:.ctor (Mono.CSharp.Expression)",
      "code_size" : "70",
      "class" : "StatementErrorExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Expr",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.StatementErrorExpression:get_Expr ()",
      "code_size" : "20",
      "class" : "StatementErrorExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Resolve",
      "signature" : "bool Mono.CSharp.StatementErrorExpression:Resolve (Mono.CSharp.BlockContext)",
      "code_size" : "46",
      "class" : "StatementErrorExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoEmit",
      "signature" : "void Mono.CSharp.StatementErrorExpression:DoEmit (Mono.CSharp.EmitContext)",
      "code_size" : "27",
      "class" : "StatementErrorExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoFlowAnalysis",
      "signature" : "bool Mono.CSharp.StatementErrorExpression:DoFlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "11",
      "class" : "StatementErrorExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.StatementErrorExpression:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Statement)",
      "code_size" : "155",
      "class" : "StatementErrorExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.StatementErrorExpression:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "StatementErrorExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.StatementList:.ctor (Mono.CSharp.Statement,Mono.CSharp.Statement)",
      "code_size" : "165",
      "class" : "StatementList",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Statements",
      "signature" : "System.Collections.Generic.IList`1<Mono.CSharp.Statement> Mono.CSharp.StatementList:get_Statements ()",
      "code_size" : "20",
      "class" : "StatementList",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Add",
      "signature" : "void Mono.CSharp.StatementList:Add (Mono.CSharp.Statement)",
      "code_size" : "41",
      "class" : "StatementList",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Resolve",
      "signature" : "bool Mono.CSharp.StatementList:Resolve (Mono.CSharp.BlockContext)",
      "code_size" : "173",
      "class" : "StatementList",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoEmit",
      "signature" : "void Mono.CSharp.StatementList:DoEmit (Mono.CSharp.EmitContext)",
      "code_size" : "168",
      "class" : "StatementList",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoFlowAnalysis",
      "signature" : "bool Mono.CSharp.StatementList:DoFlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "169",
      "class" : "StatementList",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MarkReachable",
      "signature" : "Mono.CSharp.Reachability Mono.CSharp.StatementList:MarkReachable (Mono.CSharp.Reachability)",
      "code_size" : "203",
      "class" : "StatementList",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.StatementList:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Statement)",
      "code_size" : "347",
      "class" : "StatementList",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.StatementList:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "StatementList",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ExitStatement:.ctor ()",
      "code_size" : "9",
      "class" : "ExitStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Resolve",
      "signature" : "bool Mono.CSharp.ExitStatement:Resolve (Mono.CSharp.BlockContext)",
      "code_size" : "277",
      "class" : "ExitStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoFlowAnalysis",
      "signature" : "bool Mono.CSharp.ExitStatement:DoFlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "182",
      "class" : "ExitStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Return:.ctor (Mono.CSharp.Expression,Mono.CSharp.Location)",
      "code_size" : "63",
      "class" : "Return",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Expr",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Return:get_Expr ()",
      "code_size" : "20",
      "class" : "Return",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Expr",
      "signature" : "void Mono.CSharp.Return:set_Expr (Mono.CSharp.Expression)",
      "code_size" : "43",
      "class" : "Return",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsLocalExit",
      "signature" : "bool Mono.CSharp.Return:get_IsLocalExit ()",
      "code_size" : "11",
      "class" : "Return",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "bool Mono.CSharp.Return:DoResolve (Mono.CSharp.BlockContext)",
      "code_size" : "2608",
      "class" : "Return",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoEmit",
      "signature" : "void Mono.CSharp.Return:DoEmit (Mono.CSharp.EmitContext)",
      "code_size" : "1394",
      "class" : "Return",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoFlowAnalysis",
      "signature" : "bool Mono.CSharp.Return:DoFlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "74",
      "class" : "Return",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_ReturnFromIterator",
      "signature" : "void Mono.CSharp.Return:Error_ReturnFromIterator (Mono.CSharp.ResolveContext)",
      "code_size" : "75",
      "class" : "Return",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MarkReachable",
      "signature" : "Mono.CSharp.Reachability Mono.CSharp.Return:MarkReachable (Mono.CSharp.Reachability)",
      "code_size" : "58",
      "class" : "Return",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.Return:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Statement)",
      "code_size" : "161",
      "class" : "Return",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.Return:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "Return",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Goto:.ctor (string,Mono.CSharp.Location)",
      "code_size" : "60",
      "class" : "Goto",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Target",
      "signature" : "string Mono.CSharp.Goto:get_Target ()",
      "code_size" : "20",
      "class" : "Goto",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsLocalExit",
      "signature" : "bool Mono.CSharp.Goto:get_IsLocalExit ()",
      "code_size" : "14",
      "class" : "Goto",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "bool Mono.CSharp.Goto:DoResolve (Mono.CSharp.BlockContext)",
      "code_size" : "232",
      "class" : "Goto",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_UnknownLabel",
      "signature" : "void Mono.CSharp.Goto:Error_UnknownLabel (Mono.CSharp.BlockContext,string,Mono.CSharp.Location)",
      "code_size" : "68",
      "class" : "Goto",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoFlowAnalysis",
      "signature" : "bool Mono.CSharp.Goto:DoFlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "116",
      "class" : "Goto",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MarkReachable",
      "signature" : "Mono.CSharp.Reachability Mono.CSharp.Goto:MarkReachable (Mono.CSharp.Reachability)",
      "code_size" : "246",
      "class" : "Goto",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.Goto:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Statement)",
      "code_size" : "9",
      "class" : "Goto",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoEmit",
      "signature" : "void Mono.CSharp.Goto:DoEmit (Mono.CSharp.EmitContext)",
      "code_size" : "492",
      "class" : "Goto",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsLeavingFinally",
      "signature" : "bool Mono.CSharp.Goto:IsLeavingFinally (Mono.CSharp.Block)",
      "code_size" : "122",
      "class" : "Goto",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.Goto:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "Goto",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.LabeledStatement:.ctor (string,Mono.CSharp.Block,Mono.CSharp.Location)",
      "code_size" : "90",
      "class" : "LabeledStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "LabelTarget",
      "signature" : "System.Reflection.Emit.Label Mono.CSharp.LabeledStatement:LabelTarget (Mono.CSharp.EmitContext)",
      "code_size" : "122",
      "class" : "LabeledStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Block",
      "signature" : "Mono.CSharp.Block Mono.CSharp.LabeledStatement:get_Block ()",
      "code_size" : "20",
      "class" : "LabeledStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Name",
      "signature" : "string Mono.CSharp.LabeledStatement:get_Name ()",
      "code_size" : "20",
      "class" : "LabeledStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.LabeledStatement:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Statement)",
      "code_size" : "157",
      "class" : "LabeledStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Resolve",
      "signature" : "bool Mono.CSharp.LabeledStatement:Resolve (Mono.CSharp.BlockContext)",
      "code_size" : "14",
      "class" : "LabeledStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoEmit",
      "signature" : "void Mono.CSharp.LabeledStatement:DoEmit (Mono.CSharp.EmitContext)",
      "code_size" : "79",
      "class" : "LabeledStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoFlowAnalysis",
      "signature" : "bool Mono.CSharp.LabeledStatement:DoFlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "105",
      "class" : "LabeledStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MarkReachable",
      "signature" : "Mono.CSharp.Reachability Mono.CSharp.LabeledStatement:MarkReachable (Mono.CSharp.Reachability)",
      "code_size" : "82",
      "class" : "LabeledStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddGotoReference",
      "signature" : "void Mono.CSharp.LabeledStatement:AddGotoReference (Mono.CSharp.Reachability)",
      "code_size" : "80",
      "class" : "LabeledStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.LabeledStatement:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "LabeledStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.GotoDefault:.ctor (Mono.CSharp.Location)",
      "code_size" : "32",
      "class" : "GotoDefault",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Resolve",
      "signature" : "bool Mono.CSharp.GotoDefault:Resolve (Mono.CSharp.BlockContext)",
      "code_size" : "99",
      "class" : "GotoDefault",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoEmit",
      "signature" : "void Mono.CSharp.GotoDefault:DoEmit (Mono.CSharp.EmitContext)",
      "code_size" : "324",
      "class" : "GotoDefault",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MarkReachable",
      "signature" : "Mono.CSharp.Reachability Mono.CSharp.GotoDefault:MarkReachable (Mono.CSharp.Reachability)",
      "code_size" : "192",
      "class" : "GotoDefault",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.GotoDefault:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "GotoDefault",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.GotoCase:.ctor (Mono.CSharp.Expression,Mono.CSharp.Location)",
      "code_size" : "60",
      "class" : "GotoCase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Expr",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.GotoCase:get_Expr ()",
      "code_size" : "20",
      "class" : "GotoCase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Label",
      "signature" : "Mono.CSharp.SwitchLabel Mono.CSharp.GotoCase:get_Label ()",
      "code_size" : "20",
      "class" : "GotoCase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Label",
      "signature" : "void Mono.CSharp.GotoCase:set_Label (Mono.CSharp.SwitchLabel)",
      "code_size" : "43",
      "class" : "GotoCase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Resolve",
      "signature" : "bool Mono.CSharp.GotoCase:Resolve (Mono.CSharp.BlockContext)",
      "code_size" : "460",
      "class" : "GotoCase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoEmit",
      "signature" : "void Mono.CSharp.GotoCase:DoEmit (Mono.CSharp.EmitContext)",
      "code_size" : "324",
      "class" : "GotoCase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.GotoCase:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Statement)",
      "code_size" : "155",
      "class" : "GotoCase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MarkReachable",
      "signature" : "Mono.CSharp.Reachability Mono.CSharp.GotoCase:MarkReachable (Mono.CSharp.Reachability)",
      "code_size" : "258",
      "class" : "GotoCase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.GotoCase:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "GotoCase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.SwitchGoto:.ctor (Mono.CSharp.Location)",
      "code_size" : "32",
      "class" : "SwitchGoto",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.SwitchGoto:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Statement)",
      "code_size" : "9",
      "class" : "SwitchGoto",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Resolve",
      "signature" : "bool Mono.CSharp.SwitchGoto:Resolve (Mono.CSharp.BlockContext)",
      "code_size" : "138",
      "class" : "SwitchGoto",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoFlowAnalysis",
      "signature" : "bool Mono.CSharp.SwitchGoto:DoFlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "14",
      "class" : "SwitchGoto",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MarkReachable",
      "signature" : "Mono.CSharp.Reachability Mono.CSharp.SwitchGoto:MarkReachable (Mono.CSharp.Reachability)",
      "code_size" : "58",
      "class" : "SwitchGoto",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_GotoCaseRequiresSwitchBlock",
      "signature" : "void Mono.CSharp.SwitchGoto:Error_GotoCaseRequiresSwitchBlock (Mono.CSharp.BlockContext)",
      "code_size" : "75",
      "class" : "SwitchGoto",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Throw:.ctor (Mono.CSharp.Expression,Mono.CSharp.Location)",
      "code_size" : "63",
      "class" : "Throw",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Expr",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Throw:get_Expr ()",
      "code_size" : "20",
      "class" : "Throw",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Resolve",
      "signature" : "bool Mono.CSharp.Throw:Resolve (Mono.CSharp.BlockContext)",
      "code_size" : "575",
      "class" : "Throw",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoEmit",
      "signature" : "void Mono.CSharp.Throw:DoEmit (Mono.CSharp.EmitContext)",
      "code_size" : "492",
      "class" : "Throw",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoFlowAnalysis",
      "signature" : "bool Mono.CSharp.Throw:DoFlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "60",
      "class" : "Throw",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MarkReachable",
      "signature" : "Mono.CSharp.Reachability Mono.CSharp.Throw:MarkReachable (Mono.CSharp.Reachability)",
      "code_size" : "58",
      "class" : "Throw",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.Throw:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Statement)",
      "code_size" : "161",
      "class" : "Throw",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.Throw:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "Throw",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Break:.ctor (Mono.CSharp.Location)",
      "code_size" : "32",
      "class" : "Break",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.Break:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "Break",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoEmit",
      "signature" : "void Mono.CSharp.Break:DoEmit (Mono.CSharp.EmitContext)",
      "code_size" : "483",
      "class" : "Break",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoFlowAnalysis",
      "signature" : "bool Mono.CSharp.Break:DoFlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "47",
      "class" : "Break",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "bool Mono.CSharp.Break:DoResolve (Mono.CSharp.BlockContext)",
      "code_size" : "74",
      "class" : "Break",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MarkReachable",
      "signature" : "Mono.CSharp.Reachability Mono.CSharp.Break:MarkReachable (Mono.CSharp.Reachability)",
      "code_size" : "104",
      "class" : "Break",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Continue:.ctor (Mono.CSharp.Location)",
      "code_size" : "32",
      "class" : "Continue",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.Continue:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "Continue",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoEmit",
      "signature" : "void Mono.CSharp.Continue:DoEmit (Mono.CSharp.EmitContext)",
      "code_size" : "483",
      "class" : "Continue",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "bool Mono.CSharp.Continue:DoResolve (Mono.CSharp.BlockContext)",
      "code_size" : "74",
      "class" : "Continue",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MarkReachable",
      "signature" : "Mono.CSharp.Reachability Mono.CSharp.Continue:MarkReachable (Mono.CSharp.Reachability)",
      "code_size" : "104",
      "class" : "Continue",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.LocalExitStatement:.ctor (Mono.CSharp.Location)",
      "code_size" : "32",
      "class" : "LocalExitStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsLocalExit",
      "signature" : "bool Mono.CSharp.LocalExitStatement:get_IsLocalExit ()",
      "code_size" : "14",
      "class" : "LocalExitStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.LocalExitStatement:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Statement)",
      "code_size" : "9",
      "class" : "LocalExitStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "bool Mono.CSharp.LocalExitStatement:DoResolve (Mono.CSharp.BlockContext)",
      "code_size" : "203",
      "class" : "LocalExitStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.BlockVariableDeclarator:.ctor (Mono.CSharp.LocalVariable,Mono.CSharp.Expression)",
      "code_size" : "129",
      "class" : "BlockVariableDeclarator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Variable",
      "signature" : "Mono.CSharp.LocalVariable Mono.CSharp.BlockVariableDeclarator:get_Variable ()",
      "code_size" : "20",
      "class" : "BlockVariableDeclarator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Initializer",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.BlockVariableDeclarator:get_Initializer ()",
      "code_size" : "20",
      "class" : "BlockVariableDeclarator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Initializer",
      "signature" : "void Mono.CSharp.BlockVariableDeclarator:set_Initializer (Mono.CSharp.Expression)",
      "code_size" : "43",
      "class" : "BlockVariableDeclarator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Clone",
      "signature" : "Mono.CSharp.BlockVariableDeclarator Mono.CSharp.BlockVariableDeclarator:Clone (Mono.CSharp.CloneContext)",
      "code_size" : "168",
      "class" : "BlockVariableDeclarator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.BlockVariable:.ctor (Mono.CSharp.FullNamedExpression,Mono.CSharp.LocalVariable)",
      "code_size" : "106",
      "class" : "BlockVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.BlockVariable:.ctor (Mono.CSharp.LocalVariable)",
      "code_size" : "43",
      "class" : "BlockVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Declarators",
      "signature" : "System.Collections.Generic.List`1<Mono.CSharp.BlockVariableDeclarator> Mono.CSharp.BlockVariable:get_Declarators ()",
      "code_size" : "20",
      "class" : "BlockVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Initializer",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.BlockVariable:get_Initializer ()",
      "code_size" : "20",
      "class" : "BlockVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Initializer",
      "signature" : "void Mono.CSharp.BlockVariable:set_Initializer (Mono.CSharp.Expression)",
      "code_size" : "43",
      "class" : "BlockVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_TypeExpression",
      "signature" : "Mono.CSharp.FullNamedExpression Mono.CSharp.BlockVariable:get_TypeExpression ()",
      "code_size" : "20",
      "class" : "BlockVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Variable",
      "signature" : "Mono.CSharp.LocalVariable Mono.CSharp.BlockVariable:get_Variable ()",
      "code_size" : "20",
      "class" : "BlockVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddDeclarator",
      "signature" : "void Mono.CSharp.BlockVariable:AddDeclarator (Mono.CSharp.BlockVariableDeclarator)",
      "code_size" : "144",
      "class" : "BlockVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateEvaluatorVariable",
      "signature" : "void Mono.CSharp.BlockVariable:CreateEvaluatorVariable (Mono.CSharp.BlockContext,Mono.CSharp.LocalVariable)",
      "code_size" : "419",
      "class" : "BlockVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Resolve",
      "signature" : "bool Mono.CSharp.BlockVariable:Resolve (Mono.CSharp.BlockContext)",
      "code_size" : "28",
      "class" : "BlockVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Resolve",
      "signature" : "bool Mono.CSharp.BlockVariable:Resolve (Mono.CSharp.BlockContext,bool)",
      "code_size" : "1867",
      "class" : "BlockVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveInitializer",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.BlockVariable:ResolveInitializer (Mono.CSharp.BlockContext,Mono.CSharp.LocalVariable,Mono.CSharp.Expression)",
      "code_size" : "154",
      "class" : "BlockVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoEmit",
      "signature" : "void Mono.CSharp.BlockVariable:DoEmit (Mono.CSharp.EmitContext)",
      "code_size" : "490",
      "class" : "BlockVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoFlowAnalysis",
      "signature" : "bool Mono.CSharp.BlockVariable:DoFlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "233",
      "class" : "BlockVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MarkReachable",
      "signature" : "Mono.CSharp.Reachability Mono.CSharp.BlockVariable:MarkReachable (Mono.CSharp.Reachability)",
      "code_size" : "131",
      "class" : "BlockVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.BlockVariable:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Statement)",
      "code_size" : "416",
      "class" : "BlockVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.BlockVariable:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "BlockVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.BlockConstant:.ctor (Mono.CSharp.FullNamedExpression,Mono.CSharp.LocalVariable)",
      "code_size" : "28",
      "class" : "BlockConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.BlockConstant:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "9",
      "class" : "BlockConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveInitializer",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.BlockConstant:ResolveInitializer (Mono.CSharp.BlockContext,Mono.CSharp.LocalVariable,Mono.CSharp.Expression)",
      "code_size" : "349",
      "class" : "BlockConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.BlockConstant:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "BlockConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.LocalVariable:.ctor (Mono.CSharp.Block,string,Mono.CSharp.Location)",
      "code_size" : "90",
      "class" : "LocalVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.LocalVariable:.ctor (Mono.CSharp.Block,string,Mono.CSharp.LocalVariable/Flags,Mono.CSharp.Location)",
      "code_size" : "55",
      "class" : "LocalVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.LocalVariable:.ctor (Mono.CSharp.LocalVariable,string,Mono.CSharp.Location)",
      "code_size" : "58",
      "class" : "LocalVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_AddressTaken",
      "signature" : "bool Mono.CSharp.LocalVariable:get_AddressTaken ()",
      "code_size" : "43",
      "class" : "LocalVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Block",
      "signature" : "Mono.CSharp.Block Mono.CSharp.LocalVariable:get_Block ()",
      "code_size" : "20",
      "class" : "LocalVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ConstantValue",
      "signature" : "Mono.CSharp.Constant Mono.CSharp.LocalVariable:get_ConstantValue ()",
      "code_size" : "20",
      "class" : "LocalVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_ConstantValue",
      "signature" : "void Mono.CSharp.LocalVariable:set_ConstantValue (Mono.CSharp.Constant)",
      "code_size" : "43",
      "class" : "LocalVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_HoistedVariant",
      "signature" : "Mono.CSharp.HoistedVariable Mono.CSharp.LocalVariable:get_HoistedVariant ()",
      "code_size" : "20",
      "class" : "LocalVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_HoistedVariant",
      "signature" : "void Mono.CSharp.LocalVariable:set_HoistedVariant (Mono.CSharp.HoistedVariable)",
      "code_size" : "43",
      "class" : "LocalVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsDeclared",
      "signature" : "bool Mono.CSharp.LocalVariable:get_IsDeclared ()",
      "code_size" : "41",
      "class" : "LocalVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsCompilerGenerated",
      "signature" : "bool Mono.CSharp.LocalVariable:get_IsCompilerGenerated ()",
      "code_size" : "43",
      "class" : "LocalVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsConstant",
      "signature" : "bool Mono.CSharp.LocalVariable:get_IsConstant ()",
      "code_size" : "43",
      "class" : "LocalVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsLocked",
      "signature" : "bool Mono.CSharp.LocalVariable:get_IsLocked ()",
      "code_size" : "45",
      "class" : "LocalVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_IsLocked",
      "signature" : "void Mono.CSharp.LocalVariable:set_IsLocked (bool)",
      "code_size" : "87",
      "class" : "LocalVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsThis",
      "signature" : "bool Mono.CSharp.LocalVariable:get_IsThis ()",
      "code_size" : "43",
      "class" : "LocalVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsFixed",
      "signature" : "bool Mono.CSharp.LocalVariable:get_IsFixed ()",
      "code_size" : "43",
      "class" : "LocalVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_IsFixed",
      "signature" : "void Mono.CSharp.LocalVariable:set_IsFixed (bool)",
      "code_size" : "81",
      "class" : "LocalVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mono.CSharp.INamedBlockVariable.get_IsParameter",
      "signature" : "bool Mono.CSharp.LocalVariable:Mono.CSharp.INamedBlockVariable.get_IsParameter ()",
      "code_size" : "11",
      "class" : "LocalVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsReadonly",
      "signature" : "bool Mono.CSharp.LocalVariable:get_IsReadonly ()",
      "code_size" : "45",
      "class" : "LocalVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Location",
      "signature" : "Mono.CSharp.Location Mono.CSharp.LocalVariable:get_Location ()",
      "code_size" : "30",
      "class" : "LocalVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Name",
      "signature" : "string Mono.CSharp.LocalVariable:get_Name ()",
      "code_size" : "20",
      "class" : "LocalVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Type",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.LocalVariable:get_Type ()",
      "code_size" : "20",
      "class" : "LocalVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Type",
      "signature" : "void Mono.CSharp.LocalVariable:set_Type (Mono.CSharp.TypeSpec)",
      "code_size" : "43",
      "class" : "LocalVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateBuilder",
      "signature" : "void Mono.CSharp.LocalVariable:CreateBuilder (Mono.CSharp.EmitContext)",
      "code_size" : "588",
      "class" : "LocalVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateCompilerGenerated",
      "signature" : "Mono.CSharp.LocalVariable Mono.CSharp.LocalVariable:CreateCompilerGenerated (Mono.CSharp.TypeSpec,Mono.CSharp.Block,Mono.CSharp.Location,bool)",
      "code_size" : "160",
      "class" : "LocalVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateReferenceExpression",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.LocalVariable:CreateReferenceExpression (Mono.CSharp.ResolveContext,Mono.CSharp.Location)",
      "code_size" : "164",
      "class" : "LocalVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.LocalVariable:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "176",
      "class" : "LocalVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitAssign",
      "signature" : "void Mono.CSharp.LocalVariable:EmitAssign (Mono.CSharp.EmitContext)",
      "code_size" : "176",
      "class" : "LocalVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitAddressOf",
      "signature" : "void Mono.CSharp.LocalVariable:EmitAddressOf (Mono.CSharp.EmitContext)",
      "code_size" : "176",
      "class" : "LocalVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetCompilerGeneratedName",
      "signature" : "string Mono.CSharp.LocalVariable:GetCompilerGeneratedName (Mono.CSharp.Block)",
      "code_size" : "100",
      "class" : "LocalVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetReadOnlyContext",
      "signature" : "string Mono.CSharp.LocalVariable:GetReadOnlyContext ()",
      "code_size" : "154",
      "class" : "LocalVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsThisAssigned",
      "signature" : "bool Mono.CSharp.LocalVariable:IsThisAssigned (Mono.CSharp.FlowAnalysisContext,Mono.CSharp.Block)",
      "code_size" : "128",
      "class" : "LocalVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsAssigned",
      "signature" : "bool Mono.CSharp.LocalVariable:IsAssigned (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "41",
      "class" : "LocalVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "PrepareAssignmentAnalysis",
      "signature" : "void Mono.CSharp.LocalVariable:PrepareAssignmentAnalysis (Mono.CSharp.BlockContext)",
      "code_size" : "78",
      "class" : "LocalVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetIsUsed",
      "signature" : "void Mono.CSharp.LocalVariable:SetIsUsed ()",
      "code_size" : "26",
      "class" : "LocalVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetHasAddressTaken",
      "signature" : "void Mono.CSharp.LocalVariable:SetHasAddressTaken ()",
      "code_size" : "26",
      "class" : "LocalVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ToString",
      "signature" : "string Mono.CSharp.LocalVariable:ToString ()",
      "code_size" : "240",
      "class" : "LocalVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Block:.ctor (Mono.CSharp.Block,Mono.CSharp.Location,Mono.CSharp.Location)",
      "code_size" : "45",
      "class" : "Block",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Block:.ctor (Mono.CSharp.Block,Mono.CSharp.Block/Flags,Mono.CSharp.Location,Mono.CSharp.Location)",
      "code_size" : "242",
      "class" : "Block",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Original",
      "signature" : "Mono.CSharp.Block Mono.CSharp.Block:get_Original ()",
      "code_size" : "20",
      "class" : "Block",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Original",
      "signature" : "void Mono.CSharp.Block:set_Original (Mono.CSharp.Block)",
      "code_size" : "43",
      "class" : "Block",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsCompilerGenerated",
      "signature" : "bool Mono.CSharp.Block:get_IsCompilerGenerated ()",
      "code_size" : "45",
      "class" : "Block",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_IsCompilerGenerated",
      "signature" : "void Mono.CSharp.Block:set_IsCompilerGenerated (bool)",
      "code_size" : "87",
      "class" : "Block",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsCatchBlock",
      "signature" : "bool Mono.CSharp.Block:get_IsCatchBlock ()",
      "code_size" : "45",
      "class" : "Block",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsFinallyBlock",
      "signature" : "bool Mono.CSharp.Block:get_IsFinallyBlock ()",
      "code_size" : "45",
      "class" : "Block",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Unchecked",
      "signature" : "bool Mono.CSharp.Block:get_Unchecked ()",
      "code_size" : "43",
      "class" : "Block",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Unchecked",
      "signature" : "void Mono.CSharp.Block:set_Unchecked (bool)",
      "code_size" : "81",
      "class" : "Block",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Unsafe",
      "signature" : "bool Mono.CSharp.Block:get_Unsafe ()",
      "code_size" : "43",
      "class" : "Block",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Unsafe",
      "signature" : "void Mono.CSharp.Block:set_Unsafe (bool)",
      "code_size" : "26",
      "class" : "Block",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Statements",
      "signature" : "System.Collections.Generic.List`1<Mono.CSharp.Statement> Mono.CSharp.Block:get_Statements ()",
      "code_size" : "20",
      "class" : "Block",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetEndLocation",
      "signature" : "void Mono.CSharp.Block:SetEndLocation (Mono.CSharp.Location)",
      "code_size" : "32",
      "class" : "Block",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddLabel",
      "signature" : "void Mono.CSharp.Block:AddLabel (Mono.CSharp.LabeledStatement)",
      "code_size" : "67",
      "class" : "Block",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddLocalName",
      "signature" : "void Mono.CSharp.Block:AddLocalName (Mono.CSharp.LocalVariable)",
      "code_size" : "46",
      "class" : "Block",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddLocalName",
      "signature" : "void Mono.CSharp.Block:AddLocalName (string,Mono.CSharp.INamedBlockVariable)",
      "code_size" : "66",
      "class" : "Block",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_AlreadyDeclared",
      "signature" : "void Mono.CSharp.Block:Error_AlreadyDeclared (string,Mono.CSharp.INamedBlockVariable,string)",
      "code_size" : "190",
      "class" : "Block",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_AlreadyDeclared",
      "signature" : "void Mono.CSharp.Block:Error_AlreadyDeclared (string,Mono.CSharp.INamedBlockVariable)",
      "code_size" : "282",
      "class" : "Block",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_AlreadyDeclaredTypeParameter",
      "signature" : "void Mono.CSharp.Block:Error_AlreadyDeclaredTypeParameter (string,Mono.CSharp.Location)",
      "code_size" : "100",
      "class" : "Block",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddScopeStatement",
      "signature" : "void Mono.CSharp.Block:AddScopeStatement (Mono.CSharp.Statement)",
      "code_size" : "383",
      "class" : "Block",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "InsertStatement",
      "signature" : "void Mono.CSharp.Block:InsertStatement (int,Mono.CSharp.Statement)",
      "code_size" : "51",
      "class" : "Block",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddStatement",
      "signature" : "void Mono.CSharp.Block:AddStatement (Mono.CSharp.Statement)",
      "code_size" : "41",
      "class" : "Block",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "LookupLabel",
      "signature" : "Mono.CSharp.LabeledStatement Mono.CSharp.Block:LookupLabel (string)",
      "code_size" : "41",
      "class" : "Block",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MarkReachable",
      "signature" : "Mono.CSharp.Reachability Mono.CSharp.Block:MarkReachable (Mono.CSharp.Reachability)",
      "code_size" : "355",
      "class" : "Block",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MarkReachableScope",
      "signature" : "void Mono.CSharp.Block:MarkReachableScope (Mono.CSharp.Reachability)",
      "code_size" : "190",
      "class" : "Block",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Resolve",
      "signature" : "bool Mono.CSharp.Block:Resolve (Mono.CSharp.BlockContext)",
      "code_size" : "698",
      "class" : "Block",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoEmit",
      "signature" : "void Mono.CSharp.Block:DoEmit (Mono.CSharp.EmitContext)",
      "code_size" : "106",
      "class" : "Block",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.Block:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "64",
      "class" : "Block",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitScopeInitializers",
      "signature" : "void Mono.CSharp.Block:EmitScopeInitializers (Mono.CSharp.EmitContext)",
      "code_size" : "168",
      "class" : "Block",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoFlowAnalysis",
      "signature" : "bool Mono.CSharp.Block:DoFlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "205",
      "class" : "Block",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoFlowAnalysis",
      "signature" : "bool Mono.CSharp.Block:DoFlowAnalysis (Mono.CSharp.FlowAnalysisContext,int)",
      "code_size" : "857",
      "class" : "Block",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "RewriteUnreachableStatement",
      "signature" : "Mono.CSharp.Statement Mono.CSharp.Block:RewriteUnreachableStatement (Mono.CSharp.Statement)",
      "code_size" : "207",
      "class" : "Block",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ScanGotoJump",
      "signature" : "void Mono.CSharp.Block:ScanGotoJump (Mono.CSharp.Statement)",
      "code_size" : "219",
      "class" : "Block",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ScanGotoJump",
      "signature" : "void Mono.CSharp.Block:ScanGotoJump (Mono.CSharp.Statement,Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "128",
      "class" : "Block",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.Block:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Statement)",
      "code_size" : "633",
      "class" : "Block",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.Block:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "Block",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ExplicitBlock:.ctor (Mono.CSharp.Block,Mono.CSharp.Location,Mono.CSharp.Location)",
      "code_size" : "45",
      "class" : "ExplicitBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ExplicitBlock:.ctor (Mono.CSharp.Block,Mono.CSharp.Block/Flags,Mono.CSharp.Location,Mono.CSharp.Location)",
      "code_size" : "68",
      "class" : "ExplicitBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_AnonymousMethodStorey",
      "signature" : "Mono.CSharp.AnonymousMethodStorey Mono.CSharp.ExplicitBlock:get_AnonymousMethodStorey ()",
      "code_size" : "20",
      "class" : "ExplicitBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_HasAwait",
      "signature" : "bool Mono.CSharp.ExplicitBlock:get_HasAwait ()",
      "code_size" : "45",
      "class" : "ExplicitBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_HasCapturedThis",
      "signature" : "void Mono.CSharp.ExplicitBlock:set_HasCapturedThis (bool)",
      "code_size" : "87",
      "class" : "ExplicitBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_HasCapturedThis",
      "signature" : "bool Mono.CSharp.ExplicitBlock:get_HasCapturedThis ()",
      "code_size" : "45",
      "class" : "ExplicitBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_HasCapturedVariable",
      "signature" : "void Mono.CSharp.ExplicitBlock:set_HasCapturedVariable (bool)",
      "code_size" : "81",
      "class" : "ExplicitBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_HasCapturedVariable",
      "signature" : "bool Mono.CSharp.ExplicitBlock:get_HasCapturedVariable ()",
      "code_size" : "43",
      "class" : "ExplicitBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_HasReachableClosingBrace",
      "signature" : "bool Mono.CSharp.ExplicitBlock:get_HasReachableClosingBrace ()",
      "code_size" : "43",
      "class" : "ExplicitBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_HasReachableClosingBrace",
      "signature" : "void Mono.CSharp.ExplicitBlock:set_HasReachableClosingBrace (bool)",
      "code_size" : "81",
      "class" : "ExplicitBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_HasYield",
      "signature" : "bool Mono.CSharp.ExplicitBlock:get_HasYield ()",
      "code_size" : "45",
      "class" : "ExplicitBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateAnonymousMethodStorey",
      "signature" : "Mono.CSharp.AnonymousMethodStorey Mono.CSharp.ExplicitBlock:CreateAnonymousMethodStorey (Mono.CSharp.ResolveContext)",
      "code_size" : "362",
      "class" : "ExplicitBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitScopeInitialization",
      "signature" : "void Mono.CSharp.ExplicitBlock:EmitScopeInitialization (Mono.CSharp.EmitContext)",
      "code_size" : "126",
      "class" : "ExplicitBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.ExplicitBlock:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "657",
      "class" : "ExplicitBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DefineStoreyContainer",
      "signature" : "void Mono.CSharp.ExplicitBlock:DefineStoreyContainer (Mono.CSharp.EmitContext,Mono.CSharp.AnonymousMethodStorey)",
      "code_size" : "2416",
      "class" : "ExplicitBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetDebugSymbolScopeIndex",
      "signature" : "int Mono.CSharp.ExplicitBlock:GetDebugSymbolScopeIndex ()",
      "code_size" : "56",
      "class" : "ExplicitBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "RegisterAsyncAwait",
      "signature" : "void Mono.CSharp.ExplicitBlock:RegisterAsyncAwait ()",
      "code_size" : "114",
      "class" : "ExplicitBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "RegisterIteratorYield",
      "signature" : "void Mono.CSharp.ExplicitBlock:RegisterIteratorYield ()",
      "code_size" : "108",
      "class" : "ExplicitBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetCatchBlock",
      "signature" : "void Mono.CSharp.ExplicitBlock:SetCatchBlock ()",
      "code_size" : "29",
      "class" : "ExplicitBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetFinallyBlock",
      "signature" : "void Mono.CSharp.ExplicitBlock:SetFinallyBlock ()",
      "code_size" : "29",
      "class" : "ExplicitBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "WrapIntoDestructor",
      "signature" : "void Mono.CSharp.ExplicitBlock:WrapIntoDestructor (Mono.CSharp.TryFinally,Mono.CSharp.ExplicitBlock)",
      "code_size" : "145",
      "class" : "ExplicitBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ParametersBlock:.ctor (Mono.CSharp.Block,Mono.CSharp.ParametersCompiled,Mono.CSharp.Location,Mono.CSharp.Block/Flags)",
      "code_size" : "235",
      "class" : "ParametersBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ParametersBlock:.ctor (Mono.CSharp.ParametersCompiled,Mono.CSharp.Location)",
      "code_size" : "135",
      "class" : "ParametersBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ParametersBlock:.ctor (Mono.CSharp.ParametersBlock,Mono.CSharp.ParametersCompiled)",
      "code_size" : "297",
      "class" : "ParametersBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsAsync",
      "signature" : "bool Mono.CSharp.ParametersBlock:get_IsAsync ()",
      "code_size" : "45",
      "class" : "ParametersBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_IsAsync",
      "signature" : "void Mono.CSharp.ParametersBlock:set_IsAsync (bool)",
      "code_size" : "87",
      "class" : "ParametersBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsExpressionTree",
      "signature" : "bool Mono.CSharp.ParametersBlock:get_IsExpressionTree ()",
      "code_size" : "45",
      "class" : "ParametersBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Parameters",
      "signature" : "Mono.CSharp.ParametersCompiled Mono.CSharp.ParametersBlock:get_Parameters ()",
      "code_size" : "20",
      "class" : "ParametersBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_StateMachine",
      "signature" : "Mono.CSharp.StateMachine Mono.CSharp.ParametersBlock:get_StateMachine ()",
      "code_size" : "23",
      "class" : "ParametersBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_TopBlock",
      "signature" : "Mono.CSharp.ToplevelBlock Mono.CSharp.ParametersBlock:get_TopBlock ()",
      "code_size" : "23",
      "class" : "ParametersBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_TopBlock",
      "signature" : "void Mono.CSharp.ParametersBlock:set_TopBlock (Mono.CSharp.ToplevelBlock)",
      "code_size" : "49",
      "class" : "ParametersBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Resolved",
      "signature" : "bool Mono.CSharp.ParametersBlock:get_Resolved ()",
      "code_size" : "45",
      "class" : "ParametersBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_TemporaryLocalsCount",
      "signature" : "int Mono.CSharp.ParametersBlock:get_TemporaryLocalsCount ()",
      "code_size" : "23",
      "class" : "ParametersBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_TemporaryLocalsCount",
      "signature" : "void Mono.CSharp.ParametersBlock:set_TemporaryLocalsCount (int)",
      "code_size" : "31",
      "class" : "ParametersBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CheckControlExit",
      "signature" : "void Mono.CSharp.ParametersBlock:CheckControlExit (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "55",
      "class" : "ParametersBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CheckControlExit",
      "signature" : "void Mono.CSharp.ParametersBlock:CheckControlExit (Mono.CSharp.FlowAnalysisContext,Mono.CSharp.DefiniteAssignmentBitSet)",
      "code_size" : "294",
      "class" : "ParametersBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.ParametersBlock:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Statement)",
      "code_size" : "920",
      "class" : "ParametersBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.ParametersBlock:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "161",
      "class" : "ParametersBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.ParametersBlock:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "119",
      "class" : "ParametersBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitEmbedded",
      "signature" : "void Mono.CSharp.ParametersBlock:EmitEmbedded (Mono.CSharp.EmitContext)",
      "code_size" : "119",
      "class" : "ParametersBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoFlowAnalysis",
      "signature" : "bool Mono.CSharp.ParametersBlock:DoFlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "83",
      "class" : "ParametersBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetLabel",
      "signature" : "Mono.CSharp.LabeledStatement Mono.CSharp.ParametersBlock:GetLabel (string,Mono.CSharp.Block)",
      "code_size" : "362",
      "class" : "ParametersBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsLabelVisible",
      "signature" : "bool Mono.CSharp.ParametersBlock:IsLabelVisible (Mono.CSharp.LabeledStatement,Mono.CSharp.Block)",
      "code_size" : "72",
      "class" : "ParametersBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetParameterInfo",
      "signature" : "Mono.CSharp.ParametersBlock/ParameterInfo Mono.CSharp.ParametersBlock:GetParameterInfo (Mono.CSharp.Parameter)",
      "code_size" : "265",
      "class" : "ParametersBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetParameterReference",
      "signature" : "Mono.CSharp.ParameterReference Mono.CSharp.ParametersBlock:GetParameterReference (int,Mono.CSharp.Location)",
      "code_size" : "120",
      "class" : "ParametersBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "PerformClone",
      "signature" : "Mono.CSharp.Statement Mono.CSharp.ParametersBlock:PerformClone (System.Collections.Generic.HashSet`1<Mono.CSharp.LocalVariable>&)",
      "code_size" : "106",
      "class" : "ParametersBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ProcessParameters",
      "signature" : "void Mono.CSharp.ParametersBlock:ProcessParameters ()",
      "code_size" : "367",
      "class" : "ParametersBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "RemapLabeledStatement",
      "signature" : "Mono.CSharp.LabeledStatement Mono.CSharp.ParametersBlock:RemapLabeledStatement (Mono.CSharp.LabeledStatement,Mono.CSharp.Block)",
      "code_size" : "298",
      "class" : "ParametersBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Resolve",
      "signature" : "bool Mono.CSharp.ParametersBlock:Resolve (Mono.CSharp.BlockContext)",
      "code_size" : "1432",
      "class" : "ParametersBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "PrepareAssignmentAnalysis",
      "signature" : "void Mono.CSharp.ParametersBlock:PrepareAssignmentAnalysis (Mono.CSharp.BlockContext)",
      "code_size" : "306",
      "class" : "ParametersBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ConvertToIterator",
      "signature" : "Mono.CSharp.ToplevelBlock Mono.CSharp.ParametersBlock:ConvertToIterator (Mono.CSharp.IMethodData,Mono.CSharp.TypeDefinition,Mono.CSharp.TypeSpec,bool)",
      "code_size" : "591",
      "class" : "ParametersBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ConvertToAsyncTask",
      "signature" : "Mono.CSharp.ParametersBlock Mono.CSharp.ParametersBlock:ConvertToAsyncTask (Mono.CSharp.IMemberContext,Mono.CSharp.TypeDefinition,Mono.CSharp.ParametersCompiled,Mono.CSharp.TypeSpec,Mono.CSharp.TypeSpec,Mono.CSharp.Location)",
      "code_size" : "1363",
      "class" : "ParametersBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ParametersBlock/ParameterInfo:.ctor (Mono.CSharp.ParametersBlock,int)",
      "code_size" : "60",
      "class" : "ParameterInfo",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Block",
      "signature" : "Mono.CSharp.ParametersBlock Mono.CSharp.ParametersBlock/ParameterInfo:get_Block ()",
      "code_size" : "20",
      "class" : "ParameterInfo",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mono.CSharp.INamedBlockVariable.get_Block",
      "signature" : "Mono.CSharp.Block Mono.CSharp.ParametersBlock/ParameterInfo:Mono.CSharp.INamedBlockVariable.get_Block ()",
      "code_size" : "20",
      "class" : "ParameterInfo",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsDeclared",
      "signature" : "bool Mono.CSharp.ParametersBlock/ParameterInfo:get_IsDeclared ()",
      "code_size" : "14",
      "class" : "ParameterInfo",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsParameter",
      "signature" : "bool Mono.CSharp.ParametersBlock/ParameterInfo:get_IsParameter ()",
      "code_size" : "14",
      "class" : "ParameterInfo",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsLocked",
      "signature" : "bool Mono.CSharp.ParametersBlock/ParameterInfo:get_IsLocked ()",
      "code_size" : "20",
      "class" : "ParameterInfo",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_IsLocked",
      "signature" : "void Mono.CSharp.ParametersBlock/ParameterInfo:set_IsLocked (bool)",
      "code_size" : "31",
      "class" : "ParameterInfo",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Location",
      "signature" : "Mono.CSharp.Location Mono.CSharp.ParametersBlock/ParameterInfo:get_Location ()",
      "code_size" : "38",
      "class" : "ParameterInfo",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Parameter",
      "signature" : "Mono.CSharp.Parameter Mono.CSharp.ParametersBlock/ParameterInfo:get_Parameter ()",
      "code_size" : "133",
      "class" : "ParameterInfo",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ParameterType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.ParametersBlock/ParameterInfo:get_ParameterType ()",
      "code_size" : "28",
      "class" : "ParameterInfo",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateReferenceExpression",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.ParametersBlock/ParameterInfo:CreateReferenceExpression (Mono.CSharp.ResolveContext,Mono.CSharp.Location)",
      "code_size" : "62",
      "class" : "ParameterInfo",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ParametersBlock/BlockScopeExpression:.ctor (Mono.CSharp.Expression,Mono.CSharp.ParametersBlock)",
      "code_size" : "74",
      "class" : "BlockScopeExpression",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "ContainsEmitWithAwait",
      "signature" : "bool Mono.CSharp.ParametersBlock/BlockScopeExpression:ContainsEmitWithAwait ()",
      "code_size" : "32",
      "class" : "BlockScopeExpression",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.ParametersBlock/BlockScopeExpression:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "27",
      "class" : "BlockScopeExpression",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.ParametersBlock/BlockScopeExpression:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "152",
      "class" : "BlockScopeExpression",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.ParametersBlock/BlockScopeExpression:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "66",
      "class" : "BlockScopeExpression",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ToplevelBlock:.ctor (Mono.CSharp.CompilerContext,Mono.CSharp.Location)",
      "code_size" : "55",
      "class" : "ToplevelBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ToplevelBlock:.ctor (Mono.CSharp.CompilerContext,Mono.CSharp.ParametersCompiled,Mono.CSharp.Location,Mono.CSharp.Block/Flags)",
      "code_size" : "123",
      "class" : "ToplevelBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ToplevelBlock:.ctor (Mono.CSharp.ParametersBlock,Mono.CSharp.ParametersCompiled)",
      "code_size" : "109",
      "class" : "ToplevelBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsIterator",
      "signature" : "bool Mono.CSharp.ToplevelBlock:get_IsIterator ()",
      "code_size" : "45",
      "class" : "ToplevelBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_IsIterator",
      "signature" : "void Mono.CSharp.ToplevelBlock:set_IsIterator (bool)",
      "code_size" : "87",
      "class" : "ToplevelBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Report",
      "signature" : "Mono.CSharp.Report Mono.CSharp.ToplevelBlock:get_Report ()",
      "code_size" : "33",
      "class" : "ToplevelBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ThisReferencesFromChildrenBlock",
      "signature" : "System.Collections.Generic.List`1<Mono.CSharp.ExplicitBlock> Mono.CSharp.ToplevelBlock:get_ThisReferencesFromChildrenBlock ()",
      "code_size" : "23",
      "class" : "ToplevelBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ThisVariable",
      "signature" : "Mono.CSharp.LocalVariable Mono.CSharp.ToplevelBlock:get_ThisVariable ()",
      "code_size" : "23",
      "class" : "ToplevelBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddLocalName",
      "signature" : "void Mono.CSharp.ToplevelBlock:AddLocalName (string,Mono.CSharp.INamedBlockVariable,bool)",
      "code_size" : "883",
      "class" : "ToplevelBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddLabel",
      "signature" : "void Mono.CSharp.ToplevelBlock:AddLabel (string,Mono.CSharp.LabeledStatement)",
      "code_size" : "999",
      "class" : "ToplevelBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddThisReferenceFromChildrenBlock",
      "signature" : "void Mono.CSharp.ToplevelBlock:AddThisReferenceFromChildrenBlock (Mono.CSharp.ExplicitBlock)",
      "code_size" : "183",
      "class" : "ToplevelBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "RemoveThisReferenceFromChildrenBlock",
      "signature" : "void Mono.CSharp.ToplevelBlock:RemoveThisReferenceFromChildrenBlock (Mono.CSharp.ExplicitBlock)",
      "code_size" : "44",
      "class" : "ToplevelBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetAllParametersArguments",
      "signature" : "Mono.CSharp.Arguments Mono.CSharp.ToplevelBlock:GetAllParametersArguments ()",
      "code_size" : "374",
      "class" : "ToplevelBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetLocalName",
      "signature" : "bool Mono.CSharp.ToplevelBlock:GetLocalName (string,Mono.CSharp.Block,Mono.CSharp.INamedBlockVariable&)",
      "code_size" : "632",
      "class" : "ToplevelBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IncludeBlock",
      "signature" : "void Mono.CSharp.ToplevelBlock:IncludeBlock (Mono.CSharp.ParametersBlock,Mono.CSharp.ToplevelBlock)",
      "code_size" : "657",
      "class" : "ToplevelBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddThisVariable",
      "signature" : "void Mono.CSharp.ToplevelBlock:AddThisVariable (Mono.CSharp.BlockContext)",
      "code_size" : "325",
      "class" : "ToplevelBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CheckControlExit",
      "signature" : "void Mono.CSharp.ToplevelBlock:CheckControlExit (Mono.CSharp.FlowAnalysisContext,Mono.CSharp.DefiniteAssignmentBitSet)",
      "code_size" : "86",
      "class" : "ToplevelBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetUndeclaredVariables",
      "signature" : "System.Collections.Generic.HashSet`1<Mono.CSharp.LocalVariable> Mono.CSharp.ToplevelBlock:GetUndeclaredVariables ()",
      "code_size" : "801",
      "class" : "ToplevelBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsUndeclaredVariable",
      "signature" : "bool Mono.CSharp.ToplevelBlock:IsUndeclaredVariable (Mono.CSharp.INamedBlockVariable)",
      "code_size" : "122",
      "class" : "ToplevelBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetUndeclaredVariables",
      "signature" : "void Mono.CSharp.ToplevelBlock:SetUndeclaredVariables (System.Collections.Generic.HashSet`1<Mono.CSharp.LocalVariable>)",
      "code_size" : "647",
      "class" : "ToplevelBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.ToplevelBlock:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "849",
      "class" : "ToplevelBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Resolve",
      "signature" : "bool Mono.CSharp.ToplevelBlock:Resolve (Mono.CSharp.BlockContext,Mono.CSharp.IMethodData)",
      "code_size" : "657",
      "class" : "ToplevelBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.SwitchLabel:.ctor (Mono.CSharp.Expression,Mono.CSharp.Location)",
      "code_size" : "63",
      "class" : "SwitchLabel",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsDefault",
      "signature" : "bool Mono.CSharp.SwitchLabel:get_IsDefault ()",
      "code_size" : "31",
      "class" : "SwitchLabel",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Label",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.SwitchLabel:get_Label ()",
      "code_size" : "20",
      "class" : "SwitchLabel",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Location",
      "signature" : "Mono.CSharp.Location Mono.CSharp.SwitchLabel:get_Location ()",
      "code_size" : "30",
      "class" : "SwitchLabel",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Converted",
      "signature" : "Mono.CSharp.Constant Mono.CSharp.SwitchLabel:get_Converted ()",
      "code_size" : "20",
      "class" : "SwitchLabel",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Converted",
      "signature" : "void Mono.CSharp.SwitchLabel:set_Converted (Mono.CSharp.Constant)",
      "code_size" : "43",
      "class" : "SwitchLabel",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_PatternMatching",
      "signature" : "bool Mono.CSharp.SwitchLabel:get_PatternMatching ()",
      "code_size" : "20",
      "class" : "SwitchLabel",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_PatternMatching",
      "signature" : "void Mono.CSharp.SwitchLabel:set_PatternMatching (bool)",
      "code_size" : "31",
      "class" : "SwitchLabel",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_SectionStart",
      "signature" : "bool Mono.CSharp.SwitchLabel:get_SectionStart ()",
      "code_size" : "20",
      "class" : "SwitchLabel",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_SectionStart",
      "signature" : "void Mono.CSharp.SwitchLabel:set_SectionStart (bool)",
      "code_size" : "31",
      "class" : "SwitchLabel",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetILLabel",
      "signature" : "System.Reflection.Emit.Label Mono.CSharp.SwitchLabel:GetILLabel (Mono.CSharp.EmitContext)",
      "code_size" : "214",
      "class" : "SwitchLabel",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoEmit",
      "signature" : "void Mono.CSharp.SwitchLabel:DoEmit (Mono.CSharp.EmitContext)",
      "code_size" : "63",
      "class" : "SwitchLabel",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoFlowAnalysis",
      "signature" : "bool Mono.CSharp.SwitchLabel:DoFlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "62",
      "class" : "SwitchLabel",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Resolve",
      "signature" : "bool Mono.CSharp.SwitchLabel:Resolve (Mono.CSharp.BlockContext)",
      "code_size" : "66",
      "class" : "SwitchLabel",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveAndReduce",
      "signature" : "bool Mono.CSharp.SwitchLabel:ResolveAndReduce (Mono.CSharp.BlockContext)",
      "code_size" : "611",
      "class" : "SwitchLabel",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_AlreadyOccurs",
      "signature" : "void Mono.CSharp.SwitchLabel:Error_AlreadyOccurs (Mono.CSharp.ResolveContext,Mono.CSharp.SwitchLabel)",
      "code_size" : "163",
      "class" : "SwitchLabel",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.SwitchLabel:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Statement)",
      "code_size" : "161",
      "class" : "SwitchLabel",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.SwitchLabel:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "SwitchLabel",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSignatureForError",
      "signature" : "string Mono.CSharp.SwitchLabel:GetSignatureForError ()",
      "code_size" : "72",
      "class" : "SwitchLabel",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Switch:.ctor (Mono.CSharp.Expression,Mono.CSharp.ExplicitBlock,Mono.CSharp.Location)",
      "code_size" : "109",
      "class" : "Switch",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ActiveLabel",
      "signature" : "Mono.CSharp.SwitchLabel Mono.CSharp.Switch:get_ActiveLabel ()",
      "code_size" : "23",
      "class" : "Switch",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_ActiveLabel",
      "signature" : "void Mono.CSharp.Switch:set_ActiveLabel (Mono.CSharp.SwitchLabel)",
      "code_size" : "49",
      "class" : "Switch",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Block",
      "signature" : "Mono.CSharp.ExplicitBlock Mono.CSharp.Switch:get_Block ()",
      "code_size" : "23",
      "class" : "Switch",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_DefaultLabel",
      "signature" : "Mono.CSharp.SwitchLabel Mono.CSharp.Switch:get_DefaultLabel ()",
      "code_size" : "20",
      "class" : "Switch",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsNullable",
      "signature" : "bool Mono.CSharp.Switch:get_IsNullable ()",
      "code_size" : "44",
      "class" : "Switch",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsPatternMatching",
      "signature" : "bool Mono.CSharp.Switch:get_IsPatternMatching ()",
      "code_size" : "62",
      "class" : "Switch",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_RegisteredLabels",
      "signature" : "System.Collections.Generic.List`1<Mono.CSharp.SwitchLabel> Mono.CSharp.Switch:get_RegisteredLabels ()",
      "code_size" : "20",
      "class" : "Switch",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ExpressionValue",
      "signature" : "Mono.CSharp.VariableReference Mono.CSharp.Switch:get_ExpressionValue ()",
      "code_size" : "20",
      "class" : "Switch",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "SwitchGoverningType",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Switch:SwitchGoverningType (Mono.CSharp.ResolveContext,Mono.CSharp.Expression,bool)",
      "code_size" : "500",
      "class" : "Switch",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateSwitchUserTypes",
      "signature" : "Mono.CSharp.TypeSpec[] Mono.CSharp.Switch:CreateSwitchUserTypes (Mono.CSharp.ModuleContainer,Mono.CSharp.TypeSpec)",
      "code_size" : "807",
      "class" : "Switch",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "RegisterLabel",
      "signature" : "void Mono.CSharp.Switch:RegisterLabel (Mono.CSharp.BlockContext,Mono.CSharp.SwitchLabel)",
      "code_size" : "923",
      "class" : "Switch",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitTableSwitch",
      "signature" : "void Mono.CSharp.Switch:EmitTableSwitch (Mono.CSharp.EmitContext,Mono.CSharp.Expression)",
      "code_size" : "3234",
      "class" : "Switch",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "FindLabel",
      "signature" : "Mono.CSharp.SwitchLabel Mono.CSharp.Switch:FindLabel (Mono.CSharp.Constant)",
      "code_size" : "424",
      "class" : "Switch",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoFlowAnalysis",
      "signature" : "bool Mono.CSharp.Switch:DoFlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "259",
      "class" : "Switch",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Resolve",
      "signature" : "bool Mono.CSharp.Switch:Resolve (Mono.CSharp.BlockContext)",
      "code_size" : "2118",
      "class" : "Switch",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "HasOnlyDefaultSection",
      "signature" : "bool Mono.CSharp.Switch:HasOnlyDefaultSection ()",
      "code_size" : "216",
      "class" : "Switch",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MarkReachable",
      "signature" : "Mono.CSharp.Reachability Mono.CSharp.Switch:MarkReachable (Mono.CSharp.Reachability)",
      "code_size" : "1185",
      "class" : "Switch",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "RegisterGotoCase",
      "signature" : "void Mono.CSharp.Switch:RegisterGotoCase (Mono.CSharp.GotoCase,Mono.CSharp.Constant)",
      "code_size" : "179",
      "class" : "Switch",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveStringSwitchMap",
      "signature" : "void Mono.CSharp.Switch:ResolveStringSwitchMap (Mono.CSharp.ResolveContext)",
      "code_size" : "2437",
      "class" : "Switch",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoEmitStringSwitch",
      "signature" : "void Mono.CSharp.Switch:DoEmitStringSwitch (Mono.CSharp.EmitContext)",
      "code_size" : "1733",
      "class" : "Switch",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitShortSwitch",
      "signature" : "void Mono.CSharp.Switch:EmitShortSwitch (Mono.CSharp.EmitContext)",
      "code_size" : "1337",
      "class" : "Switch",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitDispatch",
      "signature" : "void Mono.CSharp.Switch:EmitDispatch (Mono.CSharp.EmitContext)",
      "code_size" : "601",
      "class" : "Switch",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoEmit",
      "signature" : "void Mono.CSharp.Switch:DoEmit (Mono.CSharp.EmitContext)",
      "code_size" : "806",
      "class" : "Switch",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.Switch:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Statement)",
      "code_size" : "257",
      "class" : "Switch",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.Switch:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "Switch",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddEndDefiniteAssignment",
      "signature" : "void Mono.CSharp.Switch:AddEndDefiniteAssignment (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "231",
      "class" : "Switch",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetEndReachable",
      "signature" : "void Mono.CSharp.Switch:SetEndReachable ()",
      "code_size" : "23",
      "class" : "Switch",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Switch/LabelsRange:.ctor (long)",
      "code_size" : "144",
      "class" : "LabelsRange",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Switch/LabelsRange:.ctor (long,long,System.Collections.Generic.ICollection`1<long>)",
      "code_size" : "120",
      "class" : "LabelsRange",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Range",
      "signature" : "long Mono.CSharp.Switch/LabelsRange:get_Range ()",
      "code_size" : "31",
      "class" : "LabelsRange",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddValue",
      "signature" : "bool Mono.CSharp.Switch/LabelsRange:AddValue (long)",
      "code_size" : "121",
      "class" : "LabelsRange",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "CompareTo",
      "signature" : "int Mono.CSharp.Switch/LabelsRange:CompareTo (Mono.CSharp.Switch/LabelsRange)",
      "code_size" : "113",
      "class" : "LabelsRange",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Switch/DispatchStatement:.ctor (Mono.CSharp.Switch)",
      "code_size" : "43",
      "class" : "DispatchStatement",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.Switch/DispatchStatement:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Statement)",
      "code_size" : "27",
      "class" : "DispatchStatement",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoFlowAnalysis",
      "signature" : "bool Mono.CSharp.Switch/DispatchStatement:DoFlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "11",
      "class" : "DispatchStatement",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoEmit",
      "signature" : "void Mono.CSharp.Switch/DispatchStatement:DoEmit (Mono.CSharp.EmitContext)",
      "code_size" : "41",
      "class" : "DispatchStatement",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Switch/MissingBreak:.ctor (Mono.CSharp.SwitchLabel)",
      "code_size" : "70",
      "class" : "MissingBreak",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_FallOut",
      "signature" : "bool Mono.CSharp.Switch/MissingBreak:get_FallOut ()",
      "code_size" : "20",
      "class" : "MissingBreak",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_FallOut",
      "signature" : "void Mono.CSharp.Switch/MissingBreak:set_FallOut (bool)",
      "code_size" : "31",
      "class" : "MissingBreak",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoEmit",
      "signature" : "void Mono.CSharp.Switch/MissingBreak:DoEmit (Mono.CSharp.EmitContext)",
      "code_size" : "9",
      "class" : "MissingBreak",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.Switch/MissingBreak:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Statement)",
      "code_size" : "9",
      "class" : "MissingBreak",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoFlowAnalysis",
      "signature" : "bool Mono.CSharp.Switch/MissingBreak:DoFlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "246",
      "class" : "MissingBreak",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ResumableStatement:.ctor ()",
      "code_size" : "9",
      "class" : "ResumableStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "PrepareForEmit",
      "signature" : "System.Reflection.Emit.Label Mono.CSharp.ResumableStatement:PrepareForEmit (Mono.CSharp.EmitContext)",
      "code_size" : "110",
      "class" : "ResumableStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "PrepareForDispose",
      "signature" : "System.Reflection.Emit.Label Mono.CSharp.ResumableStatement:PrepareForDispose (Mono.CSharp.EmitContext,System.Reflection.Emit.Label)",
      "code_size" : "25",
      "class" : "ResumableStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitForDispose",
      "signature" : "void Mono.CSharp.ResumableStatement:EmitForDispose (Mono.CSharp.EmitContext,System.Reflection.Emit.LocalBuilder,System.Reflection.Emit.Label,bool)",
      "code_size" : "9",
      "class" : "ResumableStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.TryFinallyBlock:.ctor (Mono.CSharp.Statement,Mono.CSharp.Location)",
      "code_size" : "60",
      "class" : "TryFinallyBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Statement",
      "signature" : "Mono.CSharp.Statement Mono.CSharp.TryFinallyBlock:get_Statement ()",
      "code_size" : "20",
      "class" : "TryFinallyBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "PrepareForDispose",
      "signature" : "System.Reflection.Emit.Label Mono.CSharp.TryFinallyBlock:PrepareForDispose (Mono.CSharp.EmitContext,System.Reflection.Emit.Label)",
      "code_size" : "110",
      "class" : "TryFinallyBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoEmit",
      "signature" : "void Mono.CSharp.TryFinallyBlock:DoEmit (Mono.CSharp.EmitContext)",
      "code_size" : "1128",
      "class" : "TryFinallyBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitForDispose",
      "signature" : "void Mono.CSharp.TryFinallyBlock:EmitForDispose (Mono.CSharp.EmitContext,System.Reflection.Emit.LocalBuilder,System.Reflection.Emit.Label,bool)",
      "code_size" : "1791",
      "class" : "TryFinallyBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoFlowAnalysis",
      "signature" : "bool Mono.CSharp.TryFinallyBlock:DoFlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "53",
      "class" : "TryFinallyBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitBeginFinallyBlock",
      "signature" : "bool Mono.CSharp.TryFinallyBlock:EmitBeginFinallyBlock (Mono.CSharp.EmitContext)",
      "code_size" : "50",
      "class" : "TryFinallyBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MarkReachable",
      "signature" : "Mono.CSharp.Reachability Mono.CSharp.TryFinallyBlock:MarkReachable (Mono.CSharp.Reachability)",
      "code_size" : "65",
      "class" : "TryFinallyBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Resolve",
      "signature" : "bool Mono.CSharp.TryFinallyBlock:Resolve (Mono.CSharp.BlockContext)",
      "code_size" : "585",
      "class" : "TryFinallyBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ExceptionStatement:.ctor (Mono.CSharp.Location)",
      "code_size" : "39",
      "class" : "ExceptionStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitTryBodyPrepare",
      "signature" : "void Mono.CSharp.ExceptionStatement:EmitTryBodyPrepare (Mono.CSharp.EmitContext)",
      "code_size" : "1527",
      "class" : "ExceptionStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsRewrittenTryCatchFinally",
      "signature" : "bool Mono.CSharp.ExceptionStatement:IsRewrittenTryCatchFinally ()",
      "code_size" : "243",
      "class" : "ExceptionStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddResumePoint",
      "signature" : "int Mono.CSharp.ExceptionStatement:AddResumePoint (Mono.CSharp.ResumableStatement,int,Mono.CSharp.StateMachineInitializer,Mono.CSharp.TryCatch)",
      "code_size" : "437",
      "class" : "ExceptionStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Lock:.ctor (Mono.CSharp.Expression,Mono.CSharp.Statement,Mono.CSharp.Location)",
      "code_size" : "68",
      "class" : "Lock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Expr",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Lock:get_Expr ()",
      "code_size" : "20",
      "class" : "Lock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoFlowAnalysis",
      "signature" : "bool Mono.CSharp.Lock:DoFlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "56",
      "class" : "Lock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Resolve",
      "signature" : "bool Mono.CSharp.Lock:Resolve (Mono.CSharp.BlockContext)",
      "code_size" : "827",
      "class" : "Lock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitTryBodyPrepare",
      "signature" : "void Mono.CSharp.Lock:EmitTryBodyPrepare (Mono.CSharp.EmitContext)",
      "code_size" : "355",
      "class" : "Lock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitTryBody",
      "signature" : "void Mono.CSharp.Lock:EmitTryBody (Mono.CSharp.EmitContext)",
      "code_size" : "285",
      "class" : "Lock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitFinallyBody",
      "signature" : "void Mono.CSharp.Lock:EmitFinallyBody (Mono.CSharp.EmitContext)",
      "code_size" : "483",
      "class" : "Lock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolvePredefinedMethods",
      "signature" : "int Mono.CSharp.Lock:ResolvePredefinedMethods (Mono.CSharp.ResolveContext)",
      "code_size" : "223",
      "class" : "Lock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.Lock:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Statement)",
      "code_size" : "205",
      "class" : "Lock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.Lock:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "Lock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Unchecked:.ctor (Mono.CSharp.Block,Mono.CSharp.Location)",
      "code_size" : "76",
      "class" : "Unchecked",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Resolve",
      "signature" : "bool Mono.CSharp.Unchecked:Resolve (Mono.CSharp.BlockContext)",
      "code_size" : "126",
      "class" : "Unchecked",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoEmit",
      "signature" : "void Mono.CSharp.Unchecked:DoEmit (Mono.CSharp.EmitContext)",
      "code_size" : "120",
      "class" : "Unchecked",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoFlowAnalysis",
      "signature" : "bool Mono.CSharp.Unchecked:DoFlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "41",
      "class" : "Unchecked",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MarkReachable",
      "signature" : "Mono.CSharp.Reachability Mono.CSharp.Unchecked:MarkReachable (Mono.CSharp.Reachability)",
      "code_size" : "65",
      "class" : "Unchecked",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.Unchecked:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Statement)",
      "code_size" : "157",
      "class" : "Unchecked",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.Unchecked:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "Unchecked",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Checked:.ctor (Mono.CSharp.Block,Mono.CSharp.Location)",
      "code_size" : "73",
      "class" : "Checked",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Resolve",
      "signature" : "bool Mono.CSharp.Checked:Resolve (Mono.CSharp.BlockContext)",
      "code_size" : "129",
      "class" : "Checked",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoEmit",
      "signature" : "void Mono.CSharp.Checked:DoEmit (Mono.CSharp.EmitContext)",
      "code_size" : "123",
      "class" : "Checked",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoFlowAnalysis",
      "signature" : "bool Mono.CSharp.Checked:DoFlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "41",
      "class" : "Checked",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MarkReachable",
      "signature" : "Mono.CSharp.Reachability Mono.CSharp.Checked:MarkReachable (Mono.CSharp.Reachability)",
      "code_size" : "65",
      "class" : "Checked",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.Checked:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Statement)",
      "code_size" : "157",
      "class" : "Checked",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.Checked:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "Checked",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Unsafe:.ctor (Mono.CSharp.Block,Mono.CSharp.Location)",
      "code_size" : "79",
      "class" : "Unsafe",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Resolve",
      "signature" : "bool Mono.CSharp.Unsafe:Resolve (Mono.CSharp.BlockContext)",
      "code_size" : "248",
      "class" : "Unsafe",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoEmit",
      "signature" : "void Mono.CSharp.Unsafe:DoEmit (Mono.CSharp.EmitContext)",
      "code_size" : "42",
      "class" : "Unsafe",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoFlowAnalysis",
      "signature" : "bool Mono.CSharp.Unsafe:DoFlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "41",
      "class" : "Unsafe",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MarkReachable",
      "signature" : "Mono.CSharp.Reachability Mono.CSharp.Unsafe:MarkReachable (Mono.CSharp.Reachability)",
      "code_size" : "65",
      "class" : "Unsafe",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.Unsafe:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Statement)",
      "code_size" : "157",
      "class" : "Unsafe",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.Unsafe:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "Unsafe",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Fixed:.ctor (Mono.CSharp.Fixed/VariableDeclaration,Mono.CSharp.Statement,Mono.CSharp.Location)",
      "code_size" : "90",
      "class" : "Fixed",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Statement",
      "signature" : "Mono.CSharp.Statement Mono.CSharp.Fixed:get_Statement ()",
      "code_size" : "20",
      "class" : "Fixed",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Variables",
      "signature" : "Mono.CSharp.BlockVariable Mono.CSharp.Fixed:get_Variables ()",
      "code_size" : "20",
      "class" : "Fixed",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Resolve",
      "signature" : "bool Mono.CSharp.Fixed:Resolve (Mono.CSharp.BlockContext)",
      "code_size" : "171",
      "class" : "Fixed",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoFlowAnalysis",
      "signature" : "bool Mono.CSharp.Fixed:DoFlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "65",
      "class" : "Fixed",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoEmit",
      "signature" : "void Mono.CSharp.Fixed:DoEmit (Mono.CSharp.EmitContext)",
      "code_size" : "639",
      "class" : "Fixed",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MarkReachable",
      "signature" : "Mono.CSharp.Reachability Mono.CSharp.Fixed:MarkReachable (Mono.CSharp.Reachability)",
      "code_size" : "146",
      "class" : "Fixed",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.Fixed:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Statement)",
      "code_size" : "237",
      "class" : "Fixed",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.Fixed:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "Fixed",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Fixed/Emitter:.ctor (Mono.CSharp.Expression,Mono.CSharp.LocalVariable)",
      "code_size" : "74",
      "class" : "Emitter",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "FlowAnalysis",
      "signature" : "void Mono.CSharp.Fixed/Emitter:FlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "42",
      "class" : "Emitter",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Fixed/ExpressionEmitter:.ctor (Mono.CSharp.Expression,Mono.CSharp.LocalVariable)",
      "code_size" : "74",
      "class" : "ExpressionEmitter",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Fixed/ExpressionEmitter:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "27",
      "class" : "ExpressionEmitter",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.Fixed/ExpressionEmitter:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "66",
      "class" : "ExpressionEmitter",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitExit",
      "signature" : "void Mono.CSharp.Fixed/ExpressionEmitter:EmitExit (Mono.CSharp.EmitContext)",
      "code_size" : "177",
      "class" : "ExpressionEmitter",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Fixed/StringEmitter:.ctor (Mono.CSharp.Expression,Mono.CSharp.LocalVariable)",
      "code_size" : "74",
      "class" : "StringEmitter",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Fixed/StringEmitter:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "295",
      "class" : "StringEmitter",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.Fixed/StringEmitter:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "591",
      "class" : "StringEmitter",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitExit",
      "signature" : "void Mono.CSharp.Fixed/StringEmitter:EmitExit (Mono.CSharp.EmitContext)",
      "code_size" : "195",
      "class" : "StringEmitter",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Fixed/VariableDeclaration:.ctor (Mono.CSharp.FullNamedExpression,Mono.CSharp.LocalVariable)",
      "code_size" : "28",
      "class" : "VariableDeclaration",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveInitializer",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Fixed/VariableDeclaration:ResolveInitializer (Mono.CSharp.BlockContext,Mono.CSharp.LocalVariable,Mono.CSharp.Expression)",
      "code_size" : "2391",
      "class" : "VariableDeclaration",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Catch:.ctor (Mono.CSharp.ExplicitBlock,Mono.CSharp.Location)",
      "code_size" : "63",
      "class" : "Catch",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Block",
      "signature" : "Mono.CSharp.ExplicitBlock Mono.CSharp.Catch:get_Block ()",
      "code_size" : "20",
      "class" : "Catch",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_CatchType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.Catch:get_CatchType ()",
      "code_size" : "20",
      "class" : "Catch",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Filter",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Catch:get_Filter ()",
      "code_size" : "20",
      "class" : "Catch",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Filter",
      "signature" : "void Mono.CSharp.Catch:set_Filter (Mono.CSharp.Expression)",
      "code_size" : "43",
      "class" : "Catch",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsGeneral",
      "signature" : "bool Mono.CSharp.Catch:get_IsGeneral ()",
      "code_size" : "31",
      "class" : "Catch",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_TypeExpression",
      "signature" : "Mono.CSharp.FullNamedExpression Mono.CSharp.Catch:get_TypeExpression ()",
      "code_size" : "20",
      "class" : "Catch",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_TypeExpression",
      "signature" : "void Mono.CSharp.Catch:set_TypeExpression (Mono.CSharp.FullNamedExpression)",
      "code_size" : "43",
      "class" : "Catch",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Variable",
      "signature" : "Mono.CSharp.LocalVariable Mono.CSharp.Catch:get_Variable ()",
      "code_size" : "20",
      "class" : "Catch",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Variable",
      "signature" : "void Mono.CSharp.Catch:set_Variable (Mono.CSharp.LocalVariable)",
      "code_size" : "43",
      "class" : "Catch",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoEmit",
      "signature" : "void Mono.CSharp.Catch:DoEmit (Mono.CSharp.EmitContext)",
      "code_size" : "894",
      "class" : "Catch",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitCatchVariableStore",
      "signature" : "void Mono.CSharp.Catch:EmitCatchVariableStore (Mono.CSharp.EmitContext)",
      "code_size" : "207",
      "class" : "Catch",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Resolve",
      "signature" : "bool Mono.CSharp.Catch:Resolve (Mono.CSharp.BlockContext)",
      "code_size" : "1713",
      "class" : "Catch",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExceptionVariable",
      "signature" : "bool Mono.CSharp.Catch:CreateExceptionVariable (Mono.CSharp.TypeSpec)",
      "code_size" : "170",
      "class" : "Catch",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoFlowAnalysis",
      "signature" : "bool Mono.CSharp.Catch:DoFlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "130",
      "class" : "Catch",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MarkReachable",
      "signature" : "Mono.CSharp.Reachability Mono.CSharp.Catch:MarkReachable (Mono.CSharp.Reachability)",
      "code_size" : "178",
      "class" : "Catch",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.Catch:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Statement)",
      "code_size" : "336",
      "class" : "Catch",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Catch/CatchVariableStore:.ctor (Mono.CSharp.Catch)",
      "code_size" : "43",
      "class" : "CatchVariableStore",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.Catch/CatchVariableStore:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Statement)",
      "code_size" : "9",
      "class" : "CatchVariableStore",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoEmit",
      "signature" : "void Mono.CSharp.Catch/CatchVariableStore:DoEmit (Mono.CSharp.EmitContext)",
      "code_size" : "41",
      "class" : "CatchVariableStore",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoFlowAnalysis",
      "signature" : "bool Mono.CSharp.Catch/CatchVariableStore:DoFlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "14",
      "class" : "CatchVariableStore",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Catch/FilterStatement:.ctor (Mono.CSharp.Catch)",
      "code_size" : "43",
      "class" : "FilterStatement",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.Catch/FilterStatement:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Statement)",
      "code_size" : "9",
      "class" : "FilterStatement",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoEmit",
      "signature" : "void Mono.CSharp.Catch/FilterStatement:DoEmit (Mono.CSharp.EmitContext)",
      "code_size" : "1039",
      "class" : "FilterStatement",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoFlowAnalysis",
      "signature" : "bool Mono.CSharp.Catch/FilterStatement:DoFlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "57",
      "class" : "FilterStatement",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Resolve",
      "signature" : "bool Mono.CSharp.Catch/FilterStatement:Resolve (Mono.CSharp.BlockContext)",
      "code_size" : "420",
      "class" : "FilterStatement",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.TryFinally:.ctor (Mono.CSharp.Statement,Mono.CSharp.ExplicitBlock,Mono.CSharp.Location)",
      "code_size" : "65",
      "class" : "TryFinally",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_FinallyBlock",
      "signature" : "Mono.CSharp.ExplicitBlock Mono.CSharp.TryFinally:get_FinallyBlock ()",
      "code_size" : "20",
      "class" : "TryFinally",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "RegisterForControlExitCheck",
      "signature" : "void Mono.CSharp.TryFinally:RegisterForControlExitCheck (Mono.CSharp.DefiniteAssignmentBitSet)",
      "code_size" : "144",
      "class" : "TryFinally",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Resolve",
      "signature" : "bool Mono.CSharp.TryFinally:Resolve (Mono.CSharp.BlockContext)",
      "code_size" : "174",
      "class" : "TryFinally",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitTryBody",
      "signature" : "void Mono.CSharp.TryFinally:EmitTryBody (Mono.CSharp.EmitContext)",
      "code_size" : "494",
      "class" : "TryFinally",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitBeginFinallyBlock",
      "signature" : "bool Mono.CSharp.TryFinally:EmitBeginFinallyBlock (Mono.CSharp.EmitContext)",
      "code_size" : "106",
      "class" : "TryFinally",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitFinallyBody",
      "signature" : "void Mono.CSharp.TryFinally:EmitFinallyBody (Mono.CSharp.EmitContext)",
      "code_size" : "1052",
      "class" : "TryFinally",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsParentBlock",
      "signature" : "bool Mono.CSharp.TryFinally:IsParentBlock (Mono.CSharp.Block)",
      "code_size" : "69",
      "class" : "TryFinally",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitRedirectedJump",
      "signature" : "System.Reflection.Emit.Label Mono.CSharp.TryFinally:EmitRedirectedJump (Mono.CSharp.EmitContext,Mono.CSharp.AsyncInitializer,System.Reflection.Emit.Label,Mono.CSharp.Block)",
      "code_size" : "495",
      "class" : "TryFinally",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitRedirectedReturn",
      "signature" : "System.Reflection.Emit.Label Mono.CSharp.TryFinally:EmitRedirectedReturn (Mono.CSharp.EmitContext,Mono.CSharp.AsyncInitializer)",
      "code_size" : "68",
      "class" : "TryFinally",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitRedirectedExit",
      "signature" : "void Mono.CSharp.TryFinally:EmitRedirectedExit (Mono.CSharp.EmitContext,System.Reflection.Emit.Label,Mono.CSharp.AsyncInitializer,bool)",
      "code_size" : "566",
      "class" : "TryFinally",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitUnwindFinallyTable",
      "signature" : "void Mono.CSharp.TryFinally:EmitUnwindFinallyTable (Mono.CSharp.EmitContext)",
      "code_size" : "328",
      "class" : "TryFinally",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoFlowAnalysis",
      "signature" : "bool Mono.CSharp.TryFinally:DoFlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "448",
      "class" : "TryFinally",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MarkReachable",
      "signature" : "Mono.CSharp.Reachability Mono.CSharp.TryFinally:MarkReachable (Mono.CSharp.Reachability)",
      "code_size" : "88",
      "class" : "TryFinally",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.TryFinally:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Statement)",
      "code_size" : "246",
      "class" : "TryFinally",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.TryFinally:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "TryFinally",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.TryCatch:.ctor (Mono.CSharp.Block,System.Collections.Generic.List`1<Mono.CSharp.Catch>,Mono.CSharp.Location,bool)",
      "code_size" : "110",
      "class" : "TryCatch",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Clauses",
      "signature" : "System.Collections.Generic.List`1<Mono.CSharp.Catch> Mono.CSharp.TryCatch:get_Clauses ()",
      "code_size" : "20",
      "class" : "TryCatch",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_HasClauseWithAwait",
      "signature" : "bool Mono.CSharp.TryCatch:get_HasClauseWithAwait ()",
      "code_size" : "41",
      "class" : "TryCatch",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsTryCatchFinally",
      "signature" : "bool Mono.CSharp.TryCatch:get_IsTryCatchFinally ()",
      "code_size" : "20",
      "class" : "TryCatch",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Resolve",
      "signature" : "bool Mono.CSharp.TryCatch:Resolve (Mono.CSharp.BlockContext)",
      "code_size" : "1244",
      "class" : "TryCatch",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoEmit",
      "signature" : "void Mono.CSharp.TryCatch:DoEmit (Mono.CSharp.EmitContext)",
      "code_size" : "1664",
      "class" : "TryCatch",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoFlowAnalysis",
      "signature" : "bool Mono.CSharp.TryCatch:DoFlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "363",
      "class" : "TryCatch",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MarkReachable",
      "signature" : "Mono.CSharp.Reachability Mono.CSharp.TryCatch:MarkReachable (Mono.CSharp.Reachability)",
      "code_size" : "282",
      "class" : "TryCatch",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.TryCatch:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Statement)",
      "code_size" : "438",
      "class" : "TryCatch",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.TryCatch:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "TryCatch",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Using:.ctor (Mono.CSharp.Using/VariableDeclaration,Mono.CSharp.Statement,Mono.CSharp.Location)",
      "code_size" : "68",
      "class" : "Using",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Using:.ctor (Mono.CSharp.Expression,Mono.CSharp.Statement,Mono.CSharp.Location)",
      "code_size" : "108",
      "class" : "Using",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Expr",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Using:get_Expr ()",
      "code_size" : "61",
      "class" : "Using",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Variables",
      "signature" : "Mono.CSharp.BlockVariable Mono.CSharp.Using:get_Variables ()",
      "code_size" : "20",
      "class" : "Using",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.Using:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "31",
      "class" : "Using",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitTryBodyPrepare",
      "signature" : "void Mono.CSharp.Using:EmitTryBodyPrepare (Mono.CSharp.EmitContext)",
      "code_size" : "56",
      "class" : "Using",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitTryBody",
      "signature" : "void Mono.CSharp.Using:EmitTryBody (Mono.CSharp.EmitContext)",
      "code_size" : "42",
      "class" : "Using",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitFinallyBody",
      "signature" : "void Mono.CSharp.Using:EmitFinallyBody (Mono.CSharp.EmitContext)",
      "code_size" : "41",
      "class" : "Using",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoFlowAnalysis",
      "signature" : "bool Mono.CSharp.Using:DoFlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "65",
      "class" : "Using",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MarkReachable",
      "signature" : "Mono.CSharp.Reachability Mono.CSharp.Using:MarkReachable (Mono.CSharp.Reachability)",
      "code_size" : "68",
      "class" : "Using",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Resolve",
      "signature" : "bool Mono.CSharp.Using:Resolve (Mono.CSharp.BlockContext)",
      "code_size" : "456",
      "class" : "Using",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.Using:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Statement)",
      "code_size" : "237",
      "class" : "Using",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.Using:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "Using",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Using/VariableDeclaration:.ctor (Mono.CSharp.FullNamedExpression,Mono.CSharp.LocalVariable)",
      "code_size" : "28",
      "class" : "VariableDeclaration",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Using/VariableDeclaration:.ctor (Mono.CSharp.LocalVariable,Mono.CSharp.Location)",
      "code_size" : "67",
      "class" : "VariableDeclaration",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Using/VariableDeclaration:.ctor (Mono.CSharp.Expression)",
      "code_size" : "97",
      "class" : "VariableDeclaration",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsNested",
      "signature" : "bool Mono.CSharp.Using/VariableDeclaration:get_IsNested ()",
      "code_size" : "20",
      "class" : "VariableDeclaration",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_IsNested",
      "signature" : "void Mono.CSharp.Using/VariableDeclaration:set_IsNested (bool)",
      "code_size" : "31",
      "class" : "VariableDeclaration",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitDispose",
      "signature" : "void Mono.CSharp.Using/VariableDeclaration:EmitDispose (Mono.CSharp.EmitContext)",
      "code_size" : "42",
      "class" : "VariableDeclaration",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Resolve",
      "signature" : "bool Mono.CSharp.Using/VariableDeclaration:Resolve (Mono.CSharp.BlockContext)",
      "code_size" : "52",
      "class" : "VariableDeclaration",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveExpression",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Using/VariableDeclaration:ResolveExpression (Mono.CSharp.BlockContext)",
      "code_size" : "187",
      "class" : "VariableDeclaration",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveInitializer",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Using/VariableDeclaration:ResolveInitializer (Mono.CSharp.BlockContext,Mono.CSharp.LocalVariable,Mono.CSharp.Expression)",
      "code_size" : "687",
      "class" : "VariableDeclaration",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "CheckIDiposableConversion",
      "signature" : "void Mono.CSharp.Using/VariableDeclaration:CheckIDiposableConversion (Mono.CSharp.BlockContext,Mono.CSharp.LocalVariable,Mono.CSharp.Expression)",
      "code_size" : "317",
      "class" : "VariableDeclaration",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "CanConvertToIDisposable",
      "signature" : "bool Mono.CSharp.Using/VariableDeclaration:CanConvertToIDisposable (Mono.CSharp.BlockContext,Mono.CSharp.TypeSpec)",
      "code_size" : "174",
      "class" : "VariableDeclaration",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateDisposeCall",
      "signature" : "Mono.CSharp.Statement Mono.CSharp.Using/VariableDeclaration:CreateDisposeCall (Mono.CSharp.BlockContext,Mono.CSharp.LocalVariable)",
      "code_size" : "671",
      "class" : "VariableDeclaration",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveDeclaratorInitializer",
      "signature" : "void Mono.CSharp.Using/VariableDeclaration:ResolveDeclaratorInitializer (Mono.CSharp.BlockContext)",
      "code_size" : "72",
      "class" : "VariableDeclaration",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "RewriteUsingDeclarators",
      "signature" : "Mono.CSharp.Statement Mono.CSharp.Using/VariableDeclaration:RewriteUsingDeclarators (Mono.CSharp.BlockContext,Mono.CSharp.Statement)",
      "code_size" : "445",
      "class" : "VariableDeclaration",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.Using/VariableDeclaration:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "VariableDeclaration",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Foreach:.ctor (Mono.CSharp.Expression,Mono.CSharp.LocalVariable,Mono.CSharp.Expression,Mono.CSharp.Statement,Mono.CSharp.Block,Mono.CSharp.Location)",
      "code_size" : "172",
      "class" : "Foreach",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Expr",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Foreach:get_Expr ()",
      "code_size" : "20",
      "class" : "Foreach",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_TypeExpression",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Foreach:get_TypeExpression ()",
      "code_size" : "20",
      "class" : "Foreach",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Variable",
      "signature" : "Mono.CSharp.LocalVariable Mono.CSharp.Foreach:get_Variable ()",
      "code_size" : "20",
      "class" : "Foreach",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MarkReachable",
      "signature" : "Mono.CSharp.Reachability Mono.CSharp.Foreach:MarkReachable (Mono.CSharp.Reachability)",
      "code_size" : "76",
      "class" : "Foreach",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Resolve",
      "signature" : "bool Mono.CSharp.Foreach:Resolve (Mono.CSharp.BlockContext)",
      "code_size" : "799",
      "class" : "Foreach",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoEmit",
      "signature" : "void Mono.CSharp.Foreach:DoEmit (Mono.CSharp.EmitContext)",
      "code_size" : "406",
      "class" : "Foreach",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoFlowAnalysis",
      "signature" : "bool Mono.CSharp.Foreach:DoFlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "124",
      "class" : "Foreach",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.Foreach:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Statement)",
      "code_size" : "320",
      "class" : "Foreach",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Accept",
      "signature" : "object Mono.CSharp.Foreach:Accept (Mono.CSharp.StructuralVisitor)",
      "code_size" : "39",
      "class" : "Foreach",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Foreach/IteratorStatement:.ctor (Mono.CSharp.Foreach)",
      "code_size" : "80",
      "class" : "IteratorStatement",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.Foreach/IteratorStatement:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Statement)",
      "code_size" : "27",
      "class" : "IteratorStatement",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.Foreach/IteratorStatement:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "192",
      "class" : "IteratorStatement",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoFlowAnalysis",
      "signature" : "bool Mono.CSharp.Foreach/IteratorStatement:DoFlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "27",
      "class" : "IteratorStatement",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Foreach/ArrayForeach:.ctor (Mono.CSharp.Foreach,int)",
      "code_size" : "205",
      "class" : "ArrayForeach",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Resolve",
      "signature" : "bool Mono.CSharp.Foreach/ArrayForeach:Resolve (Mono.CSharp.BlockContext)",
      "code_size" : "1976",
      "class" : "ArrayForeach",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoEmit",
      "signature" : "void Mono.CSharp.Foreach/ArrayForeach:DoEmit (Mono.CSharp.EmitContext)",
      "code_size" : "1540",
      "class" : "ArrayForeach",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Foreach/CollectionForeach:.ctor (Mono.CSharp.Foreach,Mono.CSharp.LocalVariable,Mono.CSharp.Expression)",
      "code_size" : "90",
      "class" : "CollectionForeach",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_WrongEnumerator",
      "signature" : "void Mono.CSharp.Foreach/CollectionForeach:Error_WrongEnumerator (Mono.CSharp.ResolveContext,Mono.CSharp.MethodSpec)",
      "code_size" : "179",
      "class" : "CollectionForeach",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveGetEnumerator",
      "signature" : "Mono.CSharp.MethodGroupExpr Mono.CSharp.Foreach/CollectionForeach:ResolveGetEnumerator (Mono.CSharp.ResolveContext)",
      "code_size" : "1485",
      "class" : "CollectionForeach",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveMoveNext",
      "signature" : "Mono.CSharp.MethodGroupExpr Mono.CSharp.Foreach/CollectionForeach:ResolveMoveNext (Mono.CSharp.ResolveContext,Mono.CSharp.MethodSpec)",
      "code_size" : "361",
      "class" : "CollectionForeach",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveCurrent",
      "signature" : "Mono.CSharp.PropertySpec Mono.CSharp.Foreach/CollectionForeach:ResolveCurrent (Mono.CSharp.ResolveContext,Mono.CSharp.MethodSpec)",
      "code_size" : "251",
      "class" : "CollectionForeach",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Resolve",
      "signature" : "bool Mono.CSharp.Foreach/CollectionForeach:Resolve (Mono.CSharp.BlockContext)",
      "code_size" : "2590",
      "class" : "CollectionForeach",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoEmit",
      "signature" : "void Mono.CSharp.Foreach/CollectionForeach:DoEmit (Mono.CSharp.EmitContext)",
      "code_size" : "106",
      "class" : "CollectionForeach",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mono.CSharp.OverloadResolver.IErrorHandler.AmbiguousCandidates",
      "signature" : "bool Mono.CSharp.Foreach/CollectionForeach:Mono.CSharp.OverloadResolver.IErrorHandler.AmbiguousCandidates (Mono.CSharp.ResolveContext,Mono.CSharp.MemberSpec,Mono.CSharp.MemberSpec)",
      "code_size" : "397",
      "class" : "CollectionForeach",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mono.CSharp.OverloadResolver.IErrorHandler.ArgumentMismatch",
      "signature" : "bool Mono.CSharp.Foreach/CollectionForeach:Mono.CSharp.OverloadResolver.IErrorHandler.ArgumentMismatch (Mono.CSharp.ResolveContext,Mono.CSharp.MemberSpec,Mono.CSharp.Argument,int)",
      "code_size" : "11",
      "class" : "CollectionForeach",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mono.CSharp.OverloadResolver.IErrorHandler.NoArgumentMatch",
      "signature" : "bool Mono.CSharp.Foreach/CollectionForeach:Mono.CSharp.OverloadResolver.IErrorHandler.NoArgumentMatch (Mono.CSharp.ResolveContext,Mono.CSharp.MemberSpec)",
      "code_size" : "11",
      "class" : "CollectionForeach",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mono.CSharp.OverloadResolver.IErrorHandler.TypeInferenceFailed",
      "signature" : "bool Mono.CSharp.Foreach/CollectionForeach:Mono.CSharp.OverloadResolver.IErrorHandler.TypeInferenceFailed (Mono.CSharp.ResolveContext,Mono.CSharp.MemberSpec)",
      "code_size" : "11",
      "class" : "CollectionForeach",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Foreach/CollectionForeach/RuntimeDispose:.ctor (Mono.CSharp.LocalVariable,Mono.CSharp.Location)",
      "code_size" : "41",
      "class" : "RuntimeDispose",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "CheckIDiposableConversion",
      "signature" : "void Mono.CSharp.Foreach/CollectionForeach/RuntimeDispose:CheckIDiposableConversion (Mono.CSharp.BlockContext,Mono.CSharp.LocalVariable,Mono.CSharp.Expression)",
      "code_size" : "9",
      "class" : "RuntimeDispose",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateDisposeCall",
      "signature" : "Mono.CSharp.Statement Mono.CSharp.Foreach/CollectionForeach/RuntimeDispose:CreateDisposeCall (Mono.CSharp.BlockContext,Mono.CSharp.LocalVariable)",
      "code_size" : "897",
      "class" : "RuntimeDispose",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.SentinelStatement:.ctor ()",
      "code_size" : "9",
      "class" : "SentinelStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.SentinelStatement:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Statement)",
      "code_size" : "9",
      "class" : "SentinelStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoEmit",
      "signature" : "void Mono.CSharp.SentinelStatement:DoEmit (Mono.CSharp.EmitContext)",
      "code_size" : "242",
      "class" : "SentinelStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoFlowAnalysis",
      "signature" : "bool Mono.CSharp.SentinelStatement:DoFlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "27",
      "class" : "SentinelStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ReferenceEquality`1<T_REF>:.ctor ()",
      "code_size" : "13",
      "class" : "ReferenceEquality`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Equals",
      "signature" : "bool Mono.CSharp.ReferenceEquality`1<T_REF>:Equals (T_REF,T_REF)",
      "code_size" : "36",
      "class" : "ReferenceEquality`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetHashCode",
      "signature" : "int Mono.CSharp.ReferenceEquality`1<T_REF>:GetHashCode (T_REF)",
      "code_size" : "26",
      "class" : "ReferenceEquality`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".cctor",
      "signature" : "void Mono.CSharp.ReferenceEquality`1<T_REF>:.cctor ()",
      "code_size" : "65",
      "class" : "ReferenceEquality`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsEqual",
      "signature" : "bool Mono.CSharp.ArrayComparer:IsEqual<T_REF> (T_REF[],T_REF[])",
      "code_size" : "222",
      "class" : "ArrayComparer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.SeekableStreamReader:.ctor (System.IO.Stream,System.Text.Encoding,char[])",
      "code_size" : "171",
      "class" : "SeekableStreamReader",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Dispose",
      "signature" : "void Mono.CSharp.SeekableStreamReader:Dispose ()",
      "code_size" : "31",
      "class" : "SeekableStreamReader",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "InitializeStream",
      "signature" : "void Mono.CSharp.SeekableStreamReader:InitializeStream (int)",
      "code_size" : "156",
      "class" : "SeekableStreamReader",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Position",
      "signature" : "int Mono.CSharp.SeekableStreamReader:get_Position ()",
      "code_size" : "26",
      "class" : "SeekableStreamReader",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Position",
      "signature" : "void Mono.CSharp.SeekableStreamReader:set_Position (int)",
      "code_size" : "342",
      "class" : "SeekableStreamReader",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ReadBuffer",
      "signature" : "bool Mono.CSharp.SeekableStreamReader:ReadBuffer ()",
      "code_size" : "211",
      "class" : "SeekableStreamReader",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ReadChars",
      "signature" : "char[] Mono.CSharp.SeekableStreamReader:ReadChars (int,int)",
      "code_size" : "149",
      "class" : "SeekableStreamReader",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Peek",
      "signature" : "int Mono.CSharp.SeekableStreamReader:Peek ()",
      "code_size" : "99",
      "class" : "SeekableStreamReader",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Read",
      "signature" : "int Mono.CSharp.SeekableStreamReader:Read ()",
      "code_size" : "112",
      "class" : "SeekableStreamReader",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.UnixUtils:.ctor ()",
      "code_size" : "9",
      "class" : "UnixUtils",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "isatty",
      "signature" : "bool Mono.CSharp.UnixUtils:isatty (int)",
      "code_size" : "81",
      "class" : "UnixUtils",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.CompletionResult:.ctor (string,string[])",
      "code_size" : "164",
      "class" : "CompletionResult",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Result",
      "signature" : "string[] Mono.CSharp.CompletionResult:get_Result ()",
      "code_size" : "23",
      "class" : "CompletionResult",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_BaseText",
      "signature" : "string Mono.CSharp.CompletionResult:get_BaseText ()",
      "code_size" : "23",
      "class" : "CompletionResult",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Escape",
      "signature" : "string Mono.CSharp.TypeNameParser:Escape (string)",
      "code_size" : "373",
      "class" : "TypeNameParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.BuiltinTypes:.ctor ()",
      "code_size" : "5677",
      "class" : "BuiltinTypes",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_AllTypes",
      "signature" : "Mono.CSharp.BuiltinTypeSpec[] Mono.CSharp.BuiltinTypes:get_AllTypes ()",
      "code_size" : "23",
      "class" : "BuiltinTypes",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CheckDefinitions",
      "signature" : "bool Mono.CSharp.BuiltinTypes:CheckDefinitions (Mono.CSharp.ModuleContainer)",
      "code_size" : "499",
      "class" : "BuiltinTypes",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.PredefinedTypes:.ctor (Mono.CSharp.ModuleContainer)",
      "code_size" : "7081",
      "class" : "PredefinedTypes",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.PredefinedMembers:.ctor (Mono.CSharp.ModuleContainer)",
      "code_size" : "21024",
      "class" : "PredefinedMembers",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.PredefinedType:.ctor (Mono.CSharp.ModuleContainer,Mono.CSharp.MemberKind,string,string,int)",
      "code_size" : "55",
      "class" : "PredefinedType",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.PredefinedType:.ctor (Mono.CSharp.ModuleContainer,Mono.CSharp.MemberKind,string,string)",
      "code_size" : "115",
      "class" : "PredefinedType",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.PredefinedType:.ctor (Mono.CSharp.BuiltinTypeSpec)",
      "code_size" : "120",
      "class" : "PredefinedType",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Arity",
      "signature" : "int Mono.CSharp.PredefinedType:get_Arity ()",
      "code_size" : "20",
      "class" : "PredefinedType",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsDefined",
      "signature" : "bool Mono.CSharp.PredefinedType:get_IsDefined ()",
      "code_size" : "41",
      "class" : "PredefinedType",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Name",
      "signature" : "string Mono.CSharp.PredefinedType:get_Name ()",
      "code_size" : "20",
      "class" : "PredefinedType",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Namespace",
      "signature" : "string Mono.CSharp.PredefinedType:get_Namespace ()",
      "code_size" : "20",
      "class" : "PredefinedType",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_TypeSpec",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.PredefinedType:get_TypeSpec ()",
      "code_size" : "20",
      "class" : "PredefinedType",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Define",
      "signature" : "bool Mono.CSharp.PredefinedType:Define ()",
      "code_size" : "140",
      "class" : "PredefinedType",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSignatureForError",
      "signature" : "string Mono.CSharp.PredefinedType:GetSignatureForError ()",
      "code_size" : "36",
      "class" : "PredefinedType",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Resolve",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.PredefinedType:Resolve (Mono.CSharp.ModuleContainer,Mono.CSharp.MemberKind,string,string,int,bool,bool)",
      "code_size" : "1808",
      "class" : "PredefinedType",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Resolve",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.PredefinedType:Resolve ()",
      "code_size" : "95",
      "class" : "PredefinedType",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.PredefinedMember`1<T_REF>:.ctor (Mono.CSharp.ModuleContainer,Mono.CSharp.PredefinedType,Mono.CSharp.MemberFilter)",
      "code_size" : "201",
      "class" : "PredefinedMember`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.PredefinedMember`1<T_REF>:.ctor (Mono.CSharp.ModuleContainer,Mono.CSharp.TypeSpec,Mono.CSharp.MemberFilter)",
      "code_size" : "201",
      "class" : "PredefinedMember`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.PredefinedMember`1<T_REF>:.ctor (Mono.CSharp.ModuleContainer,Mono.CSharp.PredefinedType,string,Mono.CSharp.TypeSpec[])",
      "code_size" : "134",
      "class" : "PredefinedMember`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.PredefinedMember`1<T_REF>:.ctor (Mono.CSharp.ModuleContainer,Mono.CSharp.PredefinedType,string,Mono.CSharp.MemberKind,Mono.CSharp.PredefinedType[])",
      "code_size" : "512",
      "class" : "PredefinedMember`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.PredefinedMember`1<T_REF>:.ctor (Mono.CSharp.ModuleContainer,Mono.CSharp.PredefinedType,string,Mono.CSharp.MemberKind,System.Func`1<Mono.CSharp.TypeSpec[]>,Mono.CSharp.TypeSpec)",
      "code_size" : "227",
      "class" : "PredefinedMember`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.PredefinedMember`1<T_REF>:.ctor (Mono.CSharp.ModuleContainer,Mono.CSharp.BuiltinTypeSpec,string,Mono.CSharp.TypeSpec[])",
      "code_size" : "134",
      "class" : "PredefinedMember`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Get",
      "signature" : "T_REF Mono.CSharp.PredefinedMember`1<T_REF>:Get ()",
      "code_size" : "1549",
      "class" : "PredefinedMember`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Resolve",
      "signature" : "T_REF Mono.CSharp.PredefinedMember`1<T_REF>:Resolve (Mono.CSharp.Location)",
      "code_size" : "1008",
      "class" : "PredefinedMember`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.AwaiterDefinition:.ctor ()",
      "code_size" : "9",
      "class" : "AwaiterDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsCompleted",
      "signature" : "Mono.CSharp.PropertySpec Mono.CSharp.AwaiterDefinition:get_IsCompleted ()",
      "code_size" : "20",
      "class" : "AwaiterDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_IsCompleted",
      "signature" : "void Mono.CSharp.AwaiterDefinition:set_IsCompleted (Mono.CSharp.PropertySpec)",
      "code_size" : "43",
      "class" : "AwaiterDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_GetResult",
      "signature" : "Mono.CSharp.MethodSpec Mono.CSharp.AwaiterDefinition:get_GetResult ()",
      "code_size" : "20",
      "class" : "AwaiterDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_GetResult",
      "signature" : "void Mono.CSharp.AwaiterDefinition:set_GetResult (Mono.CSharp.MethodSpec)",
      "code_size" : "43",
      "class" : "AwaiterDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_INotifyCompletion",
      "signature" : "bool Mono.CSharp.AwaiterDefinition:get_INotifyCompletion ()",
      "code_size" : "20",
      "class" : "AwaiterDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_INotifyCompletion",
      "signature" : "void Mono.CSharp.AwaiterDefinition:set_INotifyCompletion (bool)",
      "code_size" : "31",
      "class" : "AwaiterDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsValidPattern",
      "signature" : "bool Mono.CSharp.AwaiterDefinition:get_IsValidPattern ()",
      "code_size" : "85",
      "class" : "AwaiterDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.TypeManager:.ctor ()",
      "code_size" : "9",
      "class" : "TypeManager",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CSharpName",
      "signature" : "string Mono.CSharp.TypeManager:CSharpName (System.Collections.Generic.IList`1<Mono.CSharp.TypeSpec>)",
      "code_size" : "226",
      "class" : "TypeManager",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetFullNameSignature",
      "signature" : "string Mono.CSharp.TypeManager:GetFullNameSignature (Mono.CSharp.MemberSpec)",
      "code_size" : "22",
      "class" : "TypeManager",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CSharpSignature",
      "signature" : "string Mono.CSharp.TypeManager:CSharpSignature (Mono.CSharp.MemberSpec)",
      "code_size" : "22",
      "class" : "TypeManager",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsFamilyAccessible",
      "signature" : "bool Mono.CSharp.TypeManager:IsFamilyAccessible (Mono.CSharp.TypeSpec,Mono.CSharp.TypeSpec)",
      "code_size" : "162",
      "class" : "TypeManager",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsNestedChildOf",
      "signature" : "bool Mono.CSharp.TypeManager:IsNestedChildOf (Mono.CSharp.TypeSpec,Mono.CSharp.ITypeDefinition)",
      "code_size" : "125",
      "class" : "TypeManager",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetElementType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.TypeManager:GetElementType (Mono.CSharp.TypeSpec)",
      "code_size" : "84",
      "class" : "TypeManager",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "HasElementType",
      "signature" : "bool Mono.CSharp.TypeManager:HasElementType (Mono.CSharp.TypeSpec)",
      "code_size" : "78",
      "class" : "TypeManager",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "VerifyUnmanaged",
      "signature" : "bool Mono.CSharp.TypeManager:VerifyUnmanaged (Mono.CSharp.ModuleContainer,Mono.CSharp.TypeSpec,Mono.CSharp.Location)",
      "code_size" : "264",
      "class" : "TypeManager",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsGenericParameter",
      "signature" : "bool Mono.CSharp.TypeManager:IsGenericParameter (Mono.CSharp.TypeSpec)",
      "code_size" : "24",
      "class" : "TypeManager",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsGenericType",
      "signature" : "bool Mono.CSharp.TypeManager:IsGenericType (Mono.CSharp.TypeSpec)",
      "code_size" : "48",
      "class" : "TypeManager",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetTypeArguments",
      "signature" : "Mono.CSharp.TypeSpec[] Mono.CSharp.TypeManager:GetTypeArguments (Mono.CSharp.TypeSpec)",
      "code_size" : "25",
      "class" : "TypeManager",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsInstantiationOfSameGenericType",
      "signature" : "bool Mono.CSharp.TypeManager:IsInstantiationOfSameGenericType (Mono.CSharp.TypeSpec,Mono.CSharp.TypeSpec)",
      "code_size" : "104",
      "class" : "TypeManager",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".cctor",
      "signature" : "void Mono.CSharp.TypeSpec:.cctor ()",
      "code_size" : "213",
      "class" : "TypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.TypeSpec:.ctor (Mono.CSharp.MemberKind,Mono.CSharp.TypeSpec,Mono.CSharp.ITypeDefinition,System.Type,Mono.CSharp.Modifiers)",
      "code_size" : "149",
      "class" : "TypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Arity",
      "signature" : "int Mono.CSharp.TypeSpec:get_Arity ()",
      "code_size" : "34",
      "class" : "TypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_BaseType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.TypeSpec:get_BaseType ()",
      "code_size" : "20",
      "class" : "TypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_BaseType",
      "signature" : "void Mono.CSharp.TypeSpec:set_BaseType (Mono.CSharp.TypeSpec)",
      "code_size" : "43",
      "class" : "TypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_BuiltinType",
      "signature" : "Mono.CSharp.BuiltinTypeSpec/Type Mono.CSharp.TypeSpec:get_BuiltinType ()",
      "code_size" : "11",
      "class" : "TypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_HasDynamicElement",
      "signature" : "bool Mono.CSharp.TypeSpec:get_HasDynamicElement ()",
      "code_size" : "43",
      "class" : "TypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Interfaces",
      "signature" : "System.Collections.Generic.IList`1<Mono.CSharp.TypeSpec> Mono.CSharp.TypeSpec:get_Interfaces ()",
      "code_size" : "156",
      "class" : "TypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Interfaces",
      "signature" : "void Mono.CSharp.TypeSpec:set_Interfaces (System.Collections.Generic.IList`1<Mono.CSharp.TypeSpec>)",
      "code_size" : "43",
      "class" : "TypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsArray",
      "signature" : "bool Mono.CSharp.TypeSpec:get_IsArray ()",
      "code_size" : "33",
      "class" : "TypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsAttribute",
      "signature" : "bool Mono.CSharp.TypeSpec:get_IsAttribute ()",
      "code_size" : "128",
      "class" : "TypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsInterface",
      "signature" : "bool Mono.CSharp.TypeSpec:get_IsInterface ()",
      "code_size" : "33",
      "class" : "TypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsClass",
      "signature" : "bool Mono.CSharp.TypeSpec:get_IsClass ()",
      "code_size" : "33",
      "class" : "TypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsConstantCompatible",
      "signature" : "bool Mono.CSharp.TypeSpec:get_IsConstantCompatible ()",
      "code_size" : "103",
      "class" : "TypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsDelegate",
      "signature" : "bool Mono.CSharp.TypeSpec:get_IsDelegate ()",
      "code_size" : "33",
      "class" : "TypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsExpressionTreeType",
      "signature" : "bool Mono.CSharp.TypeSpec:get_IsExpressionTreeType ()",
      "code_size" : "11",
      "class" : "TypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_IsExpressionTreeType",
      "signature" : "void Mono.CSharp.TypeSpec:set_IsExpressionTreeType (bool)",
      "code_size" : "87",
      "class" : "TypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsEnum",
      "signature" : "bool Mono.CSharp.TypeSpec:get_IsEnum ()",
      "code_size" : "33",
      "class" : "TypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsArrayGenericInterface",
      "signature" : "bool Mono.CSharp.TypeSpec:get_IsArrayGenericInterface ()",
      "code_size" : "11",
      "class" : "TypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_IsArrayGenericInterface",
      "signature" : "void Mono.CSharp.TypeSpec:set_IsArrayGenericInterface (bool)",
      "code_size" : "87",
      "class" : "TypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsGenericTask",
      "signature" : "bool Mono.CSharp.TypeSpec:get_IsGenericTask ()",
      "code_size" : "11",
      "class" : "TypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_IsGenericTask",
      "signature" : "void Mono.CSharp.TypeSpec:set_IsGenericTask (bool)",
      "code_size" : "87",
      "class" : "TypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsGenericOrParentIsGeneric",
      "signature" : "bool Mono.CSharp.TypeSpec:get_IsGenericOrParentIsGeneric ()",
      "code_size" : "83",
      "class" : "TypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsGenericParameter",
      "signature" : "bool Mono.CSharp.TypeSpec:get_IsGenericParameter ()",
      "code_size" : "33",
      "class" : "TypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsNullableType",
      "signature" : "bool Mono.CSharp.TypeSpec:get_IsNullableType ()",
      "code_size" : "11",
      "class" : "TypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_IsNullableType",
      "signature" : "void Mono.CSharp.TypeSpec:set_IsNullableType (bool)",
      "code_size" : "87",
      "class" : "TypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsNested",
      "signature" : "bool Mono.CSharp.TypeSpec:get_IsNested ()",
      "code_size" : "64",
      "class" : "TypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsPointer",
      "signature" : "bool Mono.CSharp.TypeSpec:get_IsPointer ()",
      "code_size" : "33",
      "class" : "TypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsSealed",
      "signature" : "bool Mono.CSharp.TypeSpec:get_IsSealed ()",
      "code_size" : "43",
      "class" : "TypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsSpecialRuntimeType",
      "signature" : "bool Mono.CSharp.TypeSpec:get_IsSpecialRuntimeType ()",
      "code_size" : "45",
      "class" : "TypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_IsSpecialRuntimeType",
      "signature" : "void Mono.CSharp.TypeSpec:set_IsSpecialRuntimeType (bool)",
      "code_size" : "87",
      "class" : "TypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsStruct",
      "signature" : "bool Mono.CSharp.TypeSpec:get_IsStruct ()",
      "code_size" : "33",
      "class" : "TypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsStructOrEnum",
      "signature" : "bool Mono.CSharp.TypeSpec:get_IsStructOrEnum ()",
      "code_size" : "45",
      "class" : "TypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsTypeBuilder",
      "signature" : "bool Mono.CSharp.TypeSpec:get_IsTypeBuilder ()",
      "code_size" : "106",
      "class" : "TypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsUnmanaged",
      "signature" : "bool Mono.CSharp.TypeSpec:get_IsUnmanaged ()",
      "code_size" : "278",
      "class" : "TypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_MemberCache",
      "signature" : "Mono.CSharp.MemberCache Mono.CSharp.TypeSpec:get_MemberCache ()",
      "code_size" : "60",
      "class" : "TypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_MemberCache",
      "signature" : "void Mono.CSharp.TypeSpec:set_MemberCache (Mono.CSharp.MemberCache)",
      "code_size" : "131",
      "class" : "TypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_MemberCacheTypes",
      "signature" : "Mono.CSharp.MemberCache Mono.CSharp.TypeSpec:get_MemberCacheTypes ()",
      "code_size" : "50",
      "class" : "TypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_MemberDefinition",
      "signature" : "Mono.CSharp.ITypeDefinition Mono.CSharp.TypeSpec:get_MemberDefinition ()",
      "code_size" : "142",
      "class" : "TypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_TypeArguments",
      "signature" : "Mono.CSharp.TypeSpec[] Mono.CSharp.TypeSpec:get_TypeArguments ()",
      "code_size" : "19",
      "class" : "TypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddInterface",
      "signature" : "bool Mono.CSharp.TypeSpec:AddInterface (Mono.CSharp.TypeSpec)",
      "code_size" : "310",
      "class" : "TypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddInterfaceDefined",
      "signature" : "bool Mono.CSharp.TypeSpec:AddInterfaceDefined (Mono.CSharp.TypeSpec)",
      "code_size" : "207",
      "class" : "TypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetAllTypeArguments",
      "signature" : "Mono.CSharp.TypeSpec[] Mono.CSharp.TypeSpec:GetAllTypeArguments (Mono.CSharp.TypeSpec)",
      "code_size" : "409",
      "class" : "TypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetAttributeUsage",
      "signature" : "System.AttributeUsageAttribute Mono.CSharp.TypeSpec:GetAttributeUsage (Mono.CSharp.PredefinedAttribute)",
      "code_size" : "242",
      "class" : "TypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetMetaInfo",
      "signature" : "System.Type Mono.CSharp.TypeSpec:GetMetaInfo ()",
      "code_size" : "20",
      "class" : "TypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetDefinition",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.TypeSpec:GetDefinition ()",
      "code_size" : "16",
      "class" : "TypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSignatureForDocumentation",
      "signature" : "string Mono.CSharp.TypeSpec:GetSignatureForDocumentation ()",
      "code_size" : "28",
      "class" : "TypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSignatureForDocumentation",
      "signature" : "string Mono.CSharp.TypeSpec:GetSignatureForDocumentation (bool)",
      "code_size" : "713",
      "class" : "TypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSignatureForError",
      "signature" : "string Mono.CSharp.TypeSpec:GetSignatureForError ()",
      "code_size" : "362",
      "class" : "TypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSignatureForErrorIncludingAssemblyName",
      "signature" : "string Mono.CSharp.TypeSpec:GetSignatureForErrorIncludingAssemblyName ()",
      "code_size" : "335",
      "class" : "TypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetTypeNameSignature",
      "signature" : "string Mono.CSharp.TypeSpec:GetTypeNameSignature ()",
      "code_size" : "121",
      "class" : "TypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ImplementsInterface",
      "signature" : "bool Mono.CSharp.TypeSpec:ImplementsInterface (Mono.CSharp.TypeSpec,bool)",
      "code_size" : "214",
      "class" : "TypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "InitializeMemberCache",
      "signature" : "void Mono.CSharp.TypeSpec:InitializeMemberCache (bool)",
      "code_size" : "294",
      "class" : "TypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsBaseClass",
      "signature" : "bool Mono.CSharp.TypeSpec:IsBaseClass (Mono.CSharp.TypeSpec,Mono.CSharp.TypeSpec,bool)",
      "code_size" : "209",
      "class" : "TypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsReferenceType",
      "signature" : "bool Mono.CSharp.TypeSpec:IsReferenceType (Mono.CSharp.TypeSpec)",
      "code_size" : "240",
      "class" : "TypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsNonNullableValueType",
      "signature" : "bool Mono.CSharp.TypeSpec:IsNonNullableValueType (Mono.CSharp.TypeSpec)",
      "code_size" : "171",
      "class" : "TypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsValueType",
      "signature" : "bool Mono.CSharp.TypeSpec:IsValueType (Mono.CSharp.TypeSpec)",
      "code_size" : "147",
      "class" : "TypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "InflateMember",
      "signature" : "Mono.CSharp.MemberSpec Mono.CSharp.TypeSpec:InflateMember (Mono.CSharp.TypeParameterInflator)",
      "code_size" : "208",
      "class" : "TypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MakeGenericType",
      "signature" : "Mono.CSharp.InflatedTypeSpec Mono.CSharp.TypeSpec:MakeGenericType (Mono.CSharp.IModuleContext,Mono.CSharp.TypeSpec[])",
      "code_size" : "647",
      "class" : "TypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mutate",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.TypeSpec:Mutate (Mono.CSharp.TypeParameterMutator)",
      "code_size" : "16",
      "class" : "TypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveMissingDependencies",
      "signature" : "System.Collections.Generic.List`1<Mono.CSharp.MissingTypeSpecReference> Mono.CSharp.TypeSpec:ResolveMissingDependencies (Mono.CSharp.MemberSpec)",
      "code_size" : "1024",
      "class" : "TypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetMetaInfo",
      "signature" : "void Mono.CSharp.TypeSpec:SetMetaInfo (System.Type)",
      "code_size" : "151",
      "class" : "TypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetExtensionMethodContainer",
      "signature" : "void Mono.CSharp.TypeSpec:SetExtensionMethodContainer ()",
      "code_size" : "29",
      "class" : "TypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "UpdateInflatedInstancesBaseType",
      "signature" : "void Mono.CSharp.TypeSpec:UpdateInflatedInstancesBaseType ()",
      "code_size" : "219",
      "class" : "TypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.BuiltinTypeSpec:.ctor (Mono.CSharp.MemberKind,string,string,Mono.CSharp.BuiltinTypeSpec/Type)",
      "code_size" : "112",
      "class" : "BuiltinTypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.BuiltinTypeSpec:.ctor (string,Mono.CSharp.BuiltinTypeSpec/Type)",
      "code_size" : "74",
      "class" : "BuiltinTypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Arity",
      "signature" : "int Mono.CSharp.BuiltinTypeSpec:get_Arity ()",
      "code_size" : "11",
      "class" : "BuiltinTypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_BuiltinType",
      "signature" : "Mono.CSharp.BuiltinTypeSpec/Type Mono.CSharp.BuiltinTypeSpec:get_BuiltinType ()",
      "code_size" : "20",
      "class" : "BuiltinTypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_FullName",
      "signature" : "string Mono.CSharp.BuiltinTypeSpec:get_FullName ()",
      "code_size" : "69",
      "class" : "BuiltinTypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Name",
      "signature" : "string Mono.CSharp.BuiltinTypeSpec:get_Name ()",
      "code_size" : "20",
      "class" : "BuiltinTypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Namespace",
      "signature" : "string Mono.CSharp.BuiltinTypeSpec:get_Namespace ()",
      "code_size" : "20",
      "class" : "BuiltinTypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsPrimitiveType",
      "signature" : "bool Mono.CSharp.BuiltinTypeSpec:IsPrimitiveType (Mono.CSharp.TypeSpec)",
      "code_size" : "75",
      "class" : "BuiltinTypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsPrimitiveTypeOrDecimal",
      "signature" : "bool Mono.CSharp.BuiltinTypeSpec:IsPrimitiveTypeOrDecimal (Mono.CSharp.TypeSpec)",
      "code_size" : "75",
      "class" : "BuiltinTypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSignatureForError",
      "signature" : "string Mono.CSharp.BuiltinTypeSpec:GetSignatureForError ()",
      "code_size" : "824",
      "class" : "BuiltinTypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSize",
      "signature" : "int Mono.CSharp.BuiltinTypeSpec:GetSize (Mono.CSharp.TypeSpec)",
      "code_size" : "106",
      "class" : "BuiltinTypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetDefinition",
      "signature" : "void Mono.CSharp.BuiltinTypeSpec:SetDefinition (Mono.CSharp.ITypeDefinition,System.Type,Mono.CSharp.Modifiers)",
      "code_size" : "103",
      "class" : "BuiltinTypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetDefinition",
      "signature" : "void Mono.CSharp.BuiltinTypeSpec:SetDefinition (Mono.CSharp.TypeSpec)",
      "code_size" : "169",
      "class" : "BuiltinTypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Equals",
      "signature" : "bool Mono.CSharp.TypeSpecComparer:Equals (Mono.CSharp.TypeSpec[],Mono.CSharp.TypeSpec[])",
      "code_size" : "185",
      "class" : "TypeSpecComparer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsEqual",
      "signature" : "bool Mono.CSharp.TypeSpecComparer:IsEqual (Mono.CSharp.TypeSpec,Mono.CSharp.TypeSpec)",
      "code_size" : "606",
      "class" : "TypeSpecComparer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".cctor",
      "signature" : "void Mono.CSharp.TypeSpecComparer:.cctor ()",
      "code_size" : "39",
      "class" : "TypeSpecComparer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.TypeSpecComparer/DefaultImpl:.ctor ()",
      "code_size" : "9",
      "class" : "DefaultImpl",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.IEqualityComparer<Mono.CSharp.TypeSpec[]>.Equals",
      "signature" : "bool Mono.CSharp.TypeSpecComparer/DefaultImpl:System.Collections.Generic.IEqualityComparer<Mono.CSharp.TypeSpec[]>.Equals (Mono.CSharp.TypeSpec[],Mono.CSharp.TypeSpec[])",
      "code_size" : "173",
      "class" : "DefaultImpl",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.IEqualityComparer<Mono.CSharp.TypeSpec[]>.GetHashCode",
      "signature" : "int Mono.CSharp.TypeSpecComparer/DefaultImpl:System.Collections.Generic.IEqualityComparer<Mono.CSharp.TypeSpec[]>.GetHashCode (Mono.CSharp.TypeSpec[])",
      "code_size" : "139",
      "class" : "DefaultImpl",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsEqual",
      "signature" : "bool Mono.CSharp.TypeSpecComparer/Override:IsEqual (Mono.CSharp.TypeSpec,Mono.CSharp.TypeSpec)",
      "code_size" : "735",
      "class" : "Override",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsEqual",
      "signature" : "bool Mono.CSharp.TypeSpecComparer/Override:IsEqual (Mono.CSharp.TypeSpec[],Mono.CSharp.TypeSpec[])",
      "code_size" : "185",
      "class" : "Override",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsSame",
      "signature" : "bool Mono.CSharp.TypeSpecComparer/Override:IsSame (Mono.CSharp.TypeSpec[],Mono.CSharp.TypeSpec[])",
      "code_size" : "250",
      "class" : "Override",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsEqual",
      "signature" : "bool Mono.CSharp.TypeSpecComparer/Override:IsEqual (Mono.CSharp.AParametersCollection,Mono.CSharp.AParametersCollection)",
      "code_size" : "371",
      "class" : "Override",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsEqual",
      "signature" : "bool Mono.CSharp.TypeSpecComparer/Variant:IsEqual (Mono.CSharp.TypeSpec,Mono.CSharp.TypeSpec)",
      "code_size" : "592",
      "class" : "Variant",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsEqual",
      "signature" : "bool Mono.CSharp.TypeSpecComparer/Unify:IsEqual (Mono.CSharp.TypeSpec,Mono.CSharp.TypeSpec)",
      "code_size" : "526",
      "class" : "Unify",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "ContainsTypeParameter",
      "signature" : "bool Mono.CSharp.TypeSpecComparer/Unify:ContainsTypeParameter (Mono.CSharp.TypeSpec,Mono.CSharp.TypeSpec)",
      "code_size" : "179",
      "class" : "Unify",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "MayBecomeEqualGenericTypes",
      "signature" : "bool Mono.CSharp.TypeSpecComparer/Unify:MayBecomeEqualGenericTypes (Mono.CSharp.TypeSpec,Mono.CSharp.TypeSpec)",
      "code_size" : "439",
      "class" : "Unify",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.InternalType:.ctor (string)",
      "code_size" : "131",
      "class" : "InternalType",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Arity",
      "signature" : "int Mono.CSharp.InternalType:get_Arity ()",
      "code_size" : "11",
      "class" : "InternalType",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mono.CSharp.ITypeDefinition.get_DeclaringAssembly",
      "signature" : "Mono.CSharp.IAssemblyDefinition Mono.CSharp.InternalType:Mono.CSharp.ITypeDefinition.get_DeclaringAssembly ()",
      "code_size" : "27",
      "class" : "InternalType",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mono.CSharp.ITypeDefinition.get_IsComImport",
      "signature" : "bool Mono.CSharp.InternalType:Mono.CSharp.ITypeDefinition.get_IsComImport ()",
      "code_size" : "11",
      "class" : "InternalType",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mono.CSharp.IMemberDefinition.get_IsImported",
      "signature" : "bool Mono.CSharp.InternalType:Mono.CSharp.IMemberDefinition.get_IsImported ()",
      "code_size" : "11",
      "class" : "InternalType",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mono.CSharp.ITypeDefinition.get_IsPartial",
      "signature" : "bool Mono.CSharp.InternalType:Mono.CSharp.ITypeDefinition.get_IsPartial ()",
      "code_size" : "11",
      "class" : "InternalType",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mono.CSharp.ITypeDefinition.get_IsTypeForwarder",
      "signature" : "bool Mono.CSharp.InternalType:Mono.CSharp.ITypeDefinition.get_IsTypeForwarder ()",
      "code_size" : "11",
      "class" : "InternalType",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mono.CSharp.ITypeDefinition.get_IsCyclicTypeForwarder",
      "signature" : "bool Mono.CSharp.InternalType:Mono.CSharp.ITypeDefinition.get_IsCyclicTypeForwarder ()",
      "code_size" : "11",
      "class" : "InternalType",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Name",
      "signature" : "string Mono.CSharp.InternalType:get_Name ()",
      "code_size" : "20",
      "class" : "InternalType",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mono.CSharp.ITypeDefinition.get_Namespace",
      "signature" : "string Mono.CSharp.InternalType:Mono.CSharp.ITypeDefinition.get_Namespace ()",
      "code_size" : "11",
      "class" : "InternalType",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mono.CSharp.ITypeDefinition.get_TypeParametersCount",
      "signature" : "int Mono.CSharp.InternalType:Mono.CSharp.ITypeDefinition.get_TypeParametersCount ()",
      "code_size" : "11",
      "class" : "InternalType",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mono.CSharp.ITypeDefinition.get_TypeParameters",
      "signature" : "Mono.CSharp.TypeParameterSpec[] Mono.CSharp.InternalType:Mono.CSharp.ITypeDefinition.get_TypeParameters ()",
      "code_size" : "11",
      "class" : "InternalType",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSignatureForError",
      "signature" : "string Mono.CSharp.InternalType:GetSignatureForError ()",
      "code_size" : "20",
      "class" : "InternalType",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mono.CSharp.ITypeDefinition.GetAttributeCoClass",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.InternalType:Mono.CSharp.ITypeDefinition.GetAttributeCoClass ()",
      "code_size" : "11",
      "class" : "InternalType",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mono.CSharp.ITypeDefinition.GetAttributeDefaultMember",
      "signature" : "string Mono.CSharp.InternalType:Mono.CSharp.ITypeDefinition.GetAttributeDefaultMember ()",
      "code_size" : "11",
      "class" : "InternalType",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mono.CSharp.ITypeDefinition.GetAttributeUsage",
      "signature" : "System.AttributeUsageAttribute Mono.CSharp.InternalType:Mono.CSharp.ITypeDefinition.GetAttributeUsage (Mono.CSharp.PredefinedAttribute)",
      "code_size" : "11",
      "class" : "InternalType",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mono.CSharp.ITypeDefinition.IsInternalAsPublic",
      "signature" : "bool Mono.CSharp.InternalType:Mono.CSharp.ITypeDefinition.IsInternalAsPublic (Mono.CSharp.IAssemblyDefinition)",
      "code_size" : "27",
      "class" : "InternalType",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mono.CSharp.ITypeDefinition.LoadMembers",
      "signature" : "void Mono.CSharp.InternalType:Mono.CSharp.ITypeDefinition.LoadMembers (Mono.CSharp.TypeSpec,bool,Mono.CSharp.MemberCache&)",
      "code_size" : "27",
      "class" : "InternalType",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mono.CSharp.IMemberDefinition.ConditionalConditions",
      "signature" : "string[] Mono.CSharp.InternalType:Mono.CSharp.IMemberDefinition.ConditionalConditions ()",
      "code_size" : "11",
      "class" : "InternalType",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mono.CSharp.IMemberDefinition.GetAttributeObsolete",
      "signature" : "System.ObsoleteAttribute Mono.CSharp.InternalType:Mono.CSharp.IMemberDefinition.GetAttributeObsolete ()",
      "code_size" : "11",
      "class" : "InternalType",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mono.CSharp.IMemberDefinition.get_CLSAttributeValue",
      "signature" : "System.Nullable`1<bool> Mono.CSharp.InternalType:Mono.CSharp.IMemberDefinition.get_CLSAttributeValue ()",
      "code_size" : "22",
      "class" : "InternalType",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mono.CSharp.IMemberDefinition.SetIsAssigned",
      "signature" : "void Mono.CSharp.InternalType:Mono.CSharp.IMemberDefinition.SetIsAssigned ()",
      "code_size" : "9",
      "class" : "InternalType",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mono.CSharp.IMemberDefinition.SetIsUsed",
      "signature" : "void Mono.CSharp.InternalType:Mono.CSharp.IMemberDefinition.SetIsUsed ()",
      "code_size" : "9",
      "class" : "InternalType",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".cctor",
      "signature" : "void Mono.CSharp.InternalType:.cctor ()",
      "code_size" : "509",
      "class" : "InternalType",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ElementTypeSpec:.ctor (Mono.CSharp.MemberKind,Mono.CSharp.TypeSpec,System.Type)",
      "code_size" : "205",
      "class" : "ElementTypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Element",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.ElementTypeSpec:get_Element ()",
      "code_size" : "20",
      "class" : "ElementTypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Element",
      "signature" : "void Mono.CSharp.ElementTypeSpec:set_Element (Mono.CSharp.TypeSpec)",
      "code_size" : "43",
      "class" : "ElementTypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mono.CSharp.ITypeDefinition.get_IsComImport",
      "signature" : "bool Mono.CSharp.ElementTypeSpec:Mono.CSharp.ITypeDefinition.get_IsComImport ()",
      "code_size" : "11",
      "class" : "ElementTypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mono.CSharp.ITypeDefinition.get_IsPartial",
      "signature" : "bool Mono.CSharp.ElementTypeSpec:Mono.CSharp.ITypeDefinition.get_IsPartial ()",
      "code_size" : "11",
      "class" : "ElementTypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mono.CSharp.ITypeDefinition.get_IsTypeForwarder",
      "signature" : "bool Mono.CSharp.ElementTypeSpec:Mono.CSharp.ITypeDefinition.get_IsTypeForwarder ()",
      "code_size" : "11",
      "class" : "ElementTypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mono.CSharp.ITypeDefinition.get_IsCyclicTypeForwarder",
      "signature" : "bool Mono.CSharp.ElementTypeSpec:Mono.CSharp.ITypeDefinition.get_IsCyclicTypeForwarder ()",
      "code_size" : "11",
      "class" : "ElementTypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Name",
      "signature" : "string Mono.CSharp.ElementTypeSpec:get_Name ()",
      "code_size" : "27",
      "class" : "ElementTypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CheckObsoleteness",
      "signature" : "void Mono.CSharp.ElementTypeSpec:CheckObsoleteness (Mono.CSharp.IMemberContext,Mono.CSharp.Location)",
      "code_size" : "52",
      "class" : "ElementTypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetAttributeObsolete",
      "signature" : "System.ObsoleteAttribute Mono.CSharp.ElementTypeSpec:GetAttributeObsolete ()",
      "code_size" : "32",
      "class" : "ElementTypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetPostfixSignature",
      "signature" : "string Mono.CSharp.ElementTypeSpec:GetPostfixSignature ()",
      "code_size" : "11",
      "class" : "ElementTypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSignatureForDocumentation",
      "signature" : "string Mono.CSharp.ElementTypeSpec:GetSignatureForDocumentation (bool)",
      "code_size" : "76",
      "class" : "ElementTypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSignatureForError",
      "signature" : "string Mono.CSharp.ElementTypeSpec:GetSignatureForError ()",
      "code_size" : "63",
      "class" : "ElementTypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mutate",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.ElementTypeSpec:Mutate (Mono.CSharp.TypeParameterMutator)",
      "code_size" : "174",
      "class" : "ElementTypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mono.CSharp.ITypeDefinition.get_DeclaringAssembly",
      "signature" : "Mono.CSharp.IAssemblyDefinition Mono.CSharp.ElementTypeSpec:Mono.CSharp.ITypeDefinition.get_DeclaringAssembly ()",
      "code_size" : "47",
      "class" : "ElementTypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mono.CSharp.ITypeDefinition.IsInternalAsPublic",
      "signature" : "bool Mono.CSharp.ElementTypeSpec:Mono.CSharp.ITypeDefinition.IsInternalAsPublic (Mono.CSharp.IAssemblyDefinition)",
      "code_size" : "57",
      "class" : "ElementTypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Namespace",
      "signature" : "string Mono.CSharp.ElementTypeSpec:get_Namespace ()",
      "code_size" : "27",
      "class" : "ElementTypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_TypeParametersCount",
      "signature" : "int Mono.CSharp.ElementTypeSpec:get_TypeParametersCount ()",
      "code_size" : "11",
      "class" : "ElementTypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_TypeParameters",
      "signature" : "Mono.CSharp.TypeParameterSpec[] Mono.CSharp.ElementTypeSpec:get_TypeParameters ()",
      "code_size" : "27",
      "class" : "ElementTypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetAttributeCoClass",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.ElementTypeSpec:GetAttributeCoClass ()",
      "code_size" : "47",
      "class" : "ElementTypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetAttributeDefaultMember",
      "signature" : "string Mono.CSharp.ElementTypeSpec:GetAttributeDefaultMember ()",
      "code_size" : "50",
      "class" : "ElementTypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "LoadMembers",
      "signature" : "void Mono.CSharp.ElementTypeSpec:LoadMembers (Mono.CSharp.TypeSpec,bool,Mono.CSharp.MemberCache&)",
      "code_size" : "77",
      "class" : "ElementTypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsImported",
      "signature" : "bool Mono.CSharp.ElementTypeSpec:get_IsImported ()",
      "code_size" : "47",
      "class" : "ElementTypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ConditionalConditions",
      "signature" : "string[] Mono.CSharp.ElementTypeSpec:ConditionalConditions ()",
      "code_size" : "47",
      "class" : "ElementTypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Mono.CSharp.IMemberDefinition.get_CLSAttributeValue",
      "signature" : "System.Nullable`1<bool> Mono.CSharp.ElementTypeSpec:Mono.CSharp.IMemberDefinition.get_CLSAttributeValue ()",
      "code_size" : "56",
      "class" : "ElementTypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetIsAssigned",
      "signature" : "void Mono.CSharp.ElementTypeSpec:SetIsAssigned ()",
      "code_size" : "47",
      "class" : "ElementTypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetIsUsed",
      "signature" : "void Mono.CSharp.ElementTypeSpec:SetIsUsed ()",
      "code_size" : "47",
      "class" : "ElementTypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ArrayContainer:.ctor (Mono.CSharp.ModuleContainer,Mono.CSharp.TypeSpec,int)",
      "code_size" : "87",
      "class" : "ArrayContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Rank",
      "signature" : "int Mono.CSharp.ArrayContainer:get_Rank ()",
      "code_size" : "20",
      "class" : "ArrayContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetConstructor",
      "signature" : "System.Reflection.MethodInfo Mono.CSharp.ArrayContainer:GetConstructor ()",
      "code_size" : "383",
      "class" : "ArrayContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetAddressMethod",
      "signature" : "System.Reflection.MethodInfo Mono.CSharp.ArrayContainer:GetAddressMethod ()",
      "code_size" : "445",
      "class" : "ArrayContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetGetMethod",
      "signature" : "System.Reflection.MethodInfo Mono.CSharp.ArrayContainer:GetGetMethod ()",
      "code_size" : "436",
      "class" : "ArrayContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSetMethod",
      "signature" : "System.Reflection.MethodInfo Mono.CSharp.ArrayContainer:GetSetMethod ()",
      "code_size" : "511",
      "class" : "ArrayContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetMetaInfo",
      "signature" : "System.Type Mono.CSharp.ArrayContainer:GetMetaInfo ()",
      "code_size" : "171",
      "class" : "ArrayContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetPostfixSignature",
      "signature" : "string Mono.CSharp.ArrayContainer:GetPostfixSignature ()",
      "code_size" : "25",
      "class" : "ArrayContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetPostfixSignature",
      "signature" : "string Mono.CSharp.ArrayContainer:GetPostfixSignature (int)",
      "code_size" : "162",
      "class" : "ArrayContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSignatureForDocumentation",
      "signature" : "string Mono.CSharp.ArrayContainer:GetSignatureForDocumentation (bool)",
      "code_size" : "89",
      "class" : "ArrayContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetElementSignatureForDocumentation",
      "signature" : "void Mono.CSharp.ArrayContainer:GetElementSignatureForDocumentation (System.Text.StringBuilder,bool)",
      "code_size" : "312",
      "class" : "ArrayContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MakeType",
      "signature" : "Mono.CSharp.ArrayContainer Mono.CSharp.ArrayContainer:MakeType (Mono.CSharp.ModuleContainer,Mono.CSharp.TypeSpec)",
      "code_size" : "28",
      "class" : "ArrayContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MakeType",
      "signature" : "Mono.CSharp.ArrayContainer Mono.CSharp.ArrayContainer:MakeType (Mono.CSharp.ModuleContainer,Mono.CSharp.TypeSpec,int)",
      "code_size" : "376",
      "class" : "ArrayContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveMissingDependencies",
      "signature" : "System.Collections.Generic.List`1<Mono.CSharp.MissingTypeSpecReference> Mono.CSharp.ArrayContainer:ResolveMissingDependencies (Mono.CSharp.MemberSpec)",
      "code_size" : "39",
      "class" : "ArrayContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ArrayContainer/TypeRankPair:.ctor (Mono.CSharp.TypeSpec,int)",
      "code_size" : "55",
      "class" : "TypeRankPair",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetHashCode",
      "signature" : "int Mono.CSharp.ArrayContainer/TypeRankPair:GetHashCode ()",
      "code_size" : "47",
      "class" : "TypeRankPair",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Equals",
      "signature" : "bool Mono.CSharp.ArrayContainer/TypeRankPair:Equals (Mono.CSharp.ArrayContainer/TypeRankPair)",
      "code_size" : "70",
      "class" : "TypeRankPair",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ReferenceContainer:.ctor (Mono.CSharp.TypeSpec)",
      "code_size" : "35",
      "class" : "ReferenceContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetMetaInfo",
      "signature" : "System.Type Mono.CSharp.ReferenceContainer:GetMetaInfo ()",
      "code_size" : "98",
      "class" : "ReferenceContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MakeType",
      "signature" : "Mono.CSharp.ReferenceContainer Mono.CSharp.ReferenceContainer:MakeType (Mono.CSharp.ModuleContainer,Mono.CSharp.TypeSpec)",
      "code_size" : "156",
      "class" : "ReferenceContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.PointerContainer:.ctor (Mono.CSharp.TypeSpec)",
      "code_size" : "49",
      "class" : "PointerContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetMetaInfo",
      "signature" : "System.Type Mono.CSharp.PointerContainer:GetMetaInfo ()",
      "code_size" : "98",
      "class" : "PointerContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetPostfixSignature",
      "signature" : "string Mono.CSharp.PointerContainer:GetPostfixSignature ()",
      "code_size" : "16",
      "class" : "PointerContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MakeType",
      "signature" : "Mono.CSharp.PointerContainer Mono.CSharp.PointerContainer:MakeType (Mono.CSharp.ModuleContainer,Mono.CSharp.TypeSpec)",
      "code_size" : "156",
      "class" : "PointerContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.MissingTypeSpecReference:.ctor (Mono.CSharp.TypeSpec,Mono.CSharp.MemberSpec)",
      "code_size" : "74",
      "class" : "MissingTypeSpecReference",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Type",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.MissingTypeSpecReference:get_Type ()",
      "code_size" : "20",
      "class" : "MissingTypeSpecReference",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Type",
      "signature" : "void Mono.CSharp.MissingTypeSpecReference:set_Type (Mono.CSharp.TypeSpec)",
      "code_size" : "43",
      "class" : "MissingTypeSpecReference",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Caller",
      "signature" : "Mono.CSharp.MemberSpec Mono.CSharp.MissingTypeSpecReference:get_Caller ()",
      "code_size" : "20",
      "class" : "MissingTypeSpecReference",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Caller",
      "signature" : "void Mono.CSharp.MissingTypeSpecReference:set_Caller (Mono.CSharp.MemberSpec)",
      "code_size" : "43",
      "class" : "MissingTypeSpecReference",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.StructuralVisitor:.ctor ()",
      "code_size" : "9",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "void Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.MemberCore)",
      "code_size" : "9",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "VisitTypeContainer",
      "signature" : "void Mono.CSharp.StructuralVisitor:VisitTypeContainer (Mono.CSharp.TypeContainer)",
      "code_size" : "192",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "VisitTypeContainer",
      "signature" : "void Mono.CSharp.StructuralVisitor:VisitTypeContainer (Mono.CSharp.TypeDefinition)",
      "code_size" : "168",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "void Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.ModuleContainer)",
      "code_size" : "23",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "void Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.UsingNamespace)",
      "code_size" : "9",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "void Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.UsingAliasNamespace)",
      "code_size" : "9",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "void Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.UsingExternAlias)",
      "code_size" : "9",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "void Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.NamespaceContainer)",
      "code_size" : "23",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "void Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.CompilationSourceFile)",
      "code_size" : "23",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "void Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.Class)",
      "code_size" : "23",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "void Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.Struct)",
      "code_size" : "23",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "void Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.Interface)",
      "code_size" : "23",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "void Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.Delegate)",
      "code_size" : "9",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "void Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.Enum)",
      "code_size" : "23",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "void Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.FixedField)",
      "code_size" : "9",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "void Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.Const)",
      "code_size" : "9",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "void Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.Field)",
      "code_size" : "9",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "void Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.Operator)",
      "code_size" : "9",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "void Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.Indexer)",
      "code_size" : "9",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "void Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.Method)",
      "code_size" : "9",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "void Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.Property)",
      "code_size" : "9",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "void Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.Constructor)",
      "code_size" : "9",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "void Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.Destructor)",
      "code_size" : "9",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "void Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.EventField)",
      "code_size" : "9",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "void Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.EventProperty)",
      "code_size" : "9",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "void Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.EnumMember)",
      "code_size" : "9",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.Statement)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.BlockVariable)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.BlockConstant)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.EmptyStatement)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.EmptyExpressionStatement)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.EmptyExpression)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.ErrorExpression)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.If)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.Do)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.While)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.For)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.StatementExpression)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.StatementErrorExpression)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.Return)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.Goto)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.LabeledStatement)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.SwitchLabel)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.GotoDefault)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.GotoCase)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.Throw)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.Break)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.Continue)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.Block)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.Switch)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.StatementList)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.Lock)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.Unchecked)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.Checked)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.Unsafe)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.Fixed)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.TryFinally)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.TryCatch)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.Using)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.Foreach)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.Yield)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.YieldBreak)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.Expression)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.MemberAccess)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.QualifiedAliasMember)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.LocalVariableReference)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.Constant)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.BooleanExpression)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.SimpleName)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.ParenthesizedExpression)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.Unary)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.UnaryMutator)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.Indirection)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.Is)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.As)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.Cast)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.ComposedCast)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.DefaultValueExpression)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.DefaultParameterValueExpression)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.Binary)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.Nullable.NullCoalescingOperator)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.Conditional)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.Invocation)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.New)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.NewAnonymousType)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.NewInitialize)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.ArrayCreation)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.This)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.ArglistAccess)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.Arglist)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.TypeOf)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.SizeOf)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.CheckedExpr)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.UnCheckedExpr)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.ElementAccess)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.BaseThis)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.StackAlloc)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.SimpleAssign)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.CompoundAssign)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.TypeExpression)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.AnonymousMethodExpression)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.LambdaExpression)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.ConstInitializer)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.ArrayInitializer)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.Linq.QueryExpression)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.Linq.QueryStartClause)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.Linq.SelectMany)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.Linq.Select)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.Linq.GroupBy)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.Linq.Let)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.Linq.Where)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.Linq.Join)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.Linq.GroupJoin)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.Linq.OrderByAscending)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.Linq.OrderByDescending)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.Linq.ThenByAscending)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.Linq.ThenByDescending)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.RefValueExpr)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.RefTypeExpr)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.MakeRefExpr)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Visit",
      "signature" : "object Mono.CSharp.StructuralVisitor:Visit (Mono.CSharp.Await)",
      "code_size" : "11",
      "class" : "StructuralVisitor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Reflection.Emit.ILGenerator:.ctor ()",
      "code_size" : "9",
      "class" : "ILGenerator",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "BeginCatchBlock",
      "signature" : "void System.Reflection.Emit.ILGenerator:BeginCatchBlock (System.Type)",
      "code_size" : "27",
      "class" : "ILGenerator",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "BeginExceptionBlock",
      "signature" : "System.Reflection.Emit.Label System.Reflection.Emit.ILGenerator:BeginExceptionBlock ()",
      "code_size" : "30",
      "class" : "ILGenerator",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "BeginExceptFilterBlock",
      "signature" : "void System.Reflection.Emit.ILGenerator:BeginExceptFilterBlock ()",
      "code_size" : "27",
      "class" : "ILGenerator",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "BeginFinallyBlock",
      "signature" : "void System.Reflection.Emit.ILGenerator:BeginFinallyBlock ()",
      "code_size" : "27",
      "class" : "ILGenerator",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "DeclareLocal",
      "signature" : "System.Reflection.Emit.LocalBuilder System.Reflection.Emit.ILGenerator:DeclareLocal (object[])",
      "code_size" : "27",
      "class" : "ILGenerator",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "DefineLabel",
      "signature" : "System.Reflection.Emit.Label System.Reflection.Emit.ILGenerator:DefineLabel ()",
      "code_size" : "30",
      "class" : "ILGenerator",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void System.Reflection.Emit.ILGenerator:Emit (System.Reflection.Emit.OpCode)",
      "code_size" : "27",
      "class" : "ILGenerator",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void System.Reflection.Emit.ILGenerator:Emit (System.Reflection.Emit.OpCode,object)",
      "code_size" : "27",
      "class" : "ILGenerator",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitCall",
      "signature" : "void System.Reflection.Emit.ILGenerator:EmitCall (System.Reflection.Emit.OpCode,object[])",
      "code_size" : "27",
      "class" : "ILGenerator",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "EndExceptionBlock",
      "signature" : "void System.Reflection.Emit.ILGenerator:EndExceptionBlock ()",
      "code_size" : "27",
      "class" : "ILGenerator",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "MarkLabel",
      "signature" : "void System.Reflection.Emit.ILGenerator:MarkLabel (System.Reflection.Emit.Label)",
      "code_size" : "27",
      "class" : "ILGenerator",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ILOffset",
      "signature" : "int System.Reflection.Emit.ILGenerator:get_ILOffset ()",
      "code_size" : "20",
      "class" : "ILGenerator",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_ILOffset",
      "signature" : "void System.Reflection.Emit.ILGenerator:set_ILOffset (int)",
      "code_size" : "28",
      "class" : "ILGenerator",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Reflection.Emit.TypeBuilder:.ctor ()",
      "code_size" : "9",
      "class" : "TypeBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsDefined",
      "signature" : "bool System.Reflection.Emit.TypeBuilder:IsDefined (System.Type,bool)",
      "code_size" : "27",
      "class" : "TypeBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetCustomAttributes",
      "signature" : "object[] System.Reflection.Emit.TypeBuilder:GetCustomAttributes (bool)",
      "code_size" : "27",
      "class" : "TypeBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetCustomAttributes",
      "signature" : "object[] System.Reflection.Emit.TypeBuilder:GetCustomAttributes (System.Type,bool)",
      "code_size" : "27",
      "class" : "TypeBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Name",
      "signature" : "string System.Reflection.Emit.TypeBuilder:get_Name ()",
      "code_size" : "27",
      "class" : "TypeBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetInterface",
      "signature" : "System.Type System.Reflection.Emit.TypeBuilder:GetInterface (string,bool)",
      "code_size" : "27",
      "class" : "TypeBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetInterfaces",
      "signature" : "System.Type[] System.Reflection.Emit.TypeBuilder:GetInterfaces ()",
      "code_size" : "27",
      "class" : "TypeBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetElementType",
      "signature" : "System.Type System.Reflection.Emit.TypeBuilder:GetElementType ()",
      "code_size" : "27",
      "class" : "TypeBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetEvent",
      "signature" : "System.Reflection.EventInfo System.Reflection.Emit.TypeBuilder:GetEvent (string,System.Reflection.BindingFlags)",
      "code_size" : "27",
      "class" : "TypeBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetEvents",
      "signature" : "System.Reflection.EventInfo[] System.Reflection.Emit.TypeBuilder:GetEvents (System.Reflection.BindingFlags)",
      "code_size" : "27",
      "class" : "TypeBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetField",
      "signature" : "System.Reflection.FieldInfo System.Reflection.Emit.TypeBuilder:GetField (string,System.Reflection.BindingFlags)",
      "code_size" : "27",
      "class" : "TypeBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetFields",
      "signature" : "System.Reflection.FieldInfo[] System.Reflection.Emit.TypeBuilder:GetFields (System.Reflection.BindingFlags)",
      "code_size" : "27",
      "class" : "TypeBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetMembers",
      "signature" : "System.Reflection.MemberInfo[] System.Reflection.Emit.TypeBuilder:GetMembers (System.Reflection.BindingFlags)",
      "code_size" : "27",
      "class" : "TypeBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetMethodImpl",
      "signature" : "System.Reflection.MethodInfo System.Reflection.Emit.TypeBuilder:GetMethodImpl (string,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])",
      "code_size" : "28",
      "class" : "TypeBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetMethods",
      "signature" : "System.Reflection.MethodInfo[] System.Reflection.Emit.TypeBuilder:GetMethods (System.Reflection.BindingFlags)",
      "code_size" : "27",
      "class" : "TypeBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetNestedType",
      "signature" : "System.Type System.Reflection.Emit.TypeBuilder:GetNestedType (string,System.Reflection.BindingFlags)",
      "code_size" : "27",
      "class" : "TypeBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetNestedTypes",
      "signature" : "System.Type[] System.Reflection.Emit.TypeBuilder:GetNestedTypes (System.Reflection.BindingFlags)",
      "code_size" : "27",
      "class" : "TypeBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetProperties",
      "signature" : "System.Reflection.PropertyInfo[] System.Reflection.Emit.TypeBuilder:GetProperties (System.Reflection.BindingFlags)",
      "code_size" : "27",
      "class" : "TypeBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetPropertyImpl",
      "signature" : "System.Reflection.PropertyInfo System.Reflection.Emit.TypeBuilder:GetPropertyImpl (string,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])",
      "code_size" : "28",
      "class" : "TypeBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetConstructorImpl",
      "signature" : "System.Reflection.ConstructorInfo System.Reflection.Emit.TypeBuilder:GetConstructorImpl (System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])",
      "code_size" : "27",
      "class" : "TypeBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetAttributeFlagsImpl",
      "signature" : "System.Reflection.TypeAttributes System.Reflection.Emit.TypeBuilder:GetAttributeFlagsImpl ()",
      "code_size" : "27",
      "class" : "TypeBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "HasElementTypeImpl",
      "signature" : "bool System.Reflection.Emit.TypeBuilder:HasElementTypeImpl ()",
      "code_size" : "27",
      "class" : "TypeBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsArrayImpl",
      "signature" : "bool System.Reflection.Emit.TypeBuilder:IsArrayImpl ()",
      "code_size" : "27",
      "class" : "TypeBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsByRefImpl",
      "signature" : "bool System.Reflection.Emit.TypeBuilder:IsByRefImpl ()",
      "code_size" : "27",
      "class" : "TypeBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsCOMObjectImpl",
      "signature" : "bool System.Reflection.Emit.TypeBuilder:IsCOMObjectImpl ()",
      "code_size" : "27",
      "class" : "TypeBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsPointerImpl",
      "signature" : "bool System.Reflection.Emit.TypeBuilder:IsPointerImpl ()",
      "code_size" : "27",
      "class" : "TypeBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsPrimitiveImpl",
      "signature" : "bool System.Reflection.Emit.TypeBuilder:IsPrimitiveImpl ()",
      "code_size" : "27",
      "class" : "TypeBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetConstructors",
      "signature" : "System.Reflection.ConstructorInfo[] System.Reflection.Emit.TypeBuilder:GetConstructors (System.Reflection.BindingFlags)",
      "code_size" : "27",
      "class" : "TypeBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "InvokeMember",
      "signature" : "object System.Reflection.Emit.TypeBuilder:InvokeMember (string,System.Reflection.BindingFlags,System.Reflection.Binder,object,object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,string[])",
      "code_size" : "28",
      "class" : "TypeBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Assembly",
      "signature" : "System.Reflection.Assembly System.Reflection.Emit.TypeBuilder:get_Assembly ()",
      "code_size" : "27",
      "class" : "TypeBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_AssemblyQualifiedName",
      "signature" : "string System.Reflection.Emit.TypeBuilder:get_AssemblyQualifiedName ()",
      "code_size" : "27",
      "class" : "TypeBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_BaseType",
      "signature" : "System.Type System.Reflection.Emit.TypeBuilder:get_BaseType ()",
      "code_size" : "27",
      "class" : "TypeBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_FullName",
      "signature" : "string System.Reflection.Emit.TypeBuilder:get_FullName ()",
      "code_size" : "27",
      "class" : "TypeBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_GUID",
      "signature" : "System.Guid System.Reflection.Emit.TypeBuilder:get_GUID ()",
      "code_size" : "31",
      "class" : "TypeBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Module",
      "signature" : "System.Reflection.Module System.Reflection.Emit.TypeBuilder:get_Module ()",
      "code_size" : "27",
      "class" : "TypeBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Namespace",
      "signature" : "string System.Reflection.Emit.TypeBuilder:get_Namespace ()",
      "code_size" : "27",
      "class" : "TypeBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_UnderlyingSystemType",
      "signature" : "System.Type System.Reflection.Emit.TypeBuilder:get_UnderlyingSystemType ()",
      "code_size" : "27",
      "class" : "TypeBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddInterfaceImplementation",
      "signature" : "void System.Reflection.Emit.TypeBuilder:AddInterfaceImplementation (System.Type)",
      "code_size" : "27",
      "class" : "TypeBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddDeclarativeSecurity",
      "signature" : "void System.Reflection.Emit.TypeBuilder:AddDeclarativeSecurity (object[])",
      "code_size" : "27",
      "class" : "TypeBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetParent",
      "signature" : "void System.Reflection.Emit.TypeBuilder:SetParent (object)",
      "code_size" : "27",
      "class" : "TypeBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateType",
      "signature" : "System.Type System.Reflection.Emit.TypeBuilder:CreateType ()",
      "code_size" : "27",
      "class" : "TypeBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "DefineConstructor",
      "signature" : "System.Reflection.Emit.ConstructorBuilder System.Reflection.Emit.TypeBuilder:DefineConstructor (object[])",
      "code_size" : "27",
      "class" : "TypeBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "DefineMethod",
      "signature" : "System.Reflection.Emit.MethodBuilder System.Reflection.Emit.TypeBuilder:DefineMethod (object[])",
      "code_size" : "27",
      "class" : "TypeBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "DefineNestedType",
      "signature" : "System.Reflection.Emit.TypeBuilder System.Reflection.Emit.TypeBuilder:DefineNestedType (object[])",
      "code_size" : "27",
      "class" : "TypeBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "DefineProperty",
      "signature" : "System.Reflection.Emit.PropertyBuilder System.Reflection.Emit.TypeBuilder:DefineProperty (object[])",
      "code_size" : "27",
      "class" : "TypeBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "DefineEvent",
      "signature" : "System.Reflection.Emit.EventBuilder System.Reflection.Emit.TypeBuilder:DefineEvent (object[])",
      "code_size" : "27",
      "class" : "TypeBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "DefineField",
      "signature" : "System.Reflection.Emit.FieldBuilder System.Reflection.Emit.TypeBuilder:DefineField (object[])",
      "code_size" : "27",
      "class" : "TypeBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "DefineGenericParameters",
      "signature" : "System.Reflection.Emit.GenericTypeParameterBuilder[] System.Reflection.Emit.TypeBuilder:DefineGenericParameters (string[])",
      "code_size" : "27",
      "class" : "TypeBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "DefineMethodOverride",
      "signature" : "System.Reflection.Emit.MethodBuilder System.Reflection.Emit.TypeBuilder:DefineMethodOverride (object[])",
      "code_size" : "27",
      "class" : "TypeBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetConstructor",
      "signature" : "System.Reflection.ConstructorInfo System.Reflection.Emit.TypeBuilder:GetConstructor (System.Type,System.Reflection.ConstructorInfo)",
      "code_size" : "27",
      "class" : "TypeBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetField",
      "signature" : "System.Reflection.FieldInfo System.Reflection.Emit.TypeBuilder:GetField (System.Type,System.Reflection.FieldInfo)",
      "code_size" : "27",
      "class" : "TypeBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetMethod",
      "signature" : "System.Reflection.MethodInfo System.Reflection.Emit.TypeBuilder:GetMethod (System.Type,System.Reflection.MethodInfo)",
      "code_size" : "27",
      "class" : "TypeBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetCustomAttribute",
      "signature" : "void System.Reflection.Emit.TypeBuilder:SetCustomAttribute (object[])",
      "code_size" : "27",
      "class" : "TypeBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Reflection.Emit.MethodBuilder:.ctor ()",
      "code_size" : "9",
      "class" : "MethodBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsDefined",
      "signature" : "bool System.Reflection.Emit.MethodBuilder:IsDefined (System.Type,bool)",
      "code_size" : "27",
      "class" : "MethodBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetCustomAttributes",
      "signature" : "object[] System.Reflection.Emit.MethodBuilder:GetCustomAttributes (bool)",
      "code_size" : "27",
      "class" : "MethodBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetCustomAttributes",
      "signature" : "object[] System.Reflection.Emit.MethodBuilder:GetCustomAttributes (System.Type,bool)",
      "code_size" : "27",
      "class" : "MethodBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_DeclaringType",
      "signature" : "System.Type System.Reflection.Emit.MethodBuilder:get_DeclaringType ()",
      "code_size" : "27",
      "class" : "MethodBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_MemberType",
      "signature" : "System.Reflection.MemberTypes System.Reflection.Emit.MethodBuilder:get_MemberType ()",
      "code_size" : "27",
      "class" : "MethodBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Name",
      "signature" : "string System.Reflection.Emit.MethodBuilder:get_Name ()",
      "code_size" : "27",
      "class" : "MethodBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ReflectedType",
      "signature" : "System.Type System.Reflection.Emit.MethodBuilder:get_ReflectedType ()",
      "code_size" : "27",
      "class" : "MethodBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetMethodImplementationFlags",
      "signature" : "System.Reflection.MethodImplAttributes System.Reflection.Emit.MethodBuilder:GetMethodImplementationFlags ()",
      "code_size" : "27",
      "class" : "MethodBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetParameters",
      "signature" : "System.Reflection.ParameterInfo[] System.Reflection.Emit.MethodBuilder:GetParameters ()",
      "code_size" : "27",
      "class" : "MethodBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "Invoke",
      "signature" : "object System.Reflection.Emit.MethodBuilder:Invoke (object,System.Reflection.BindingFlags,System.Reflection.Binder,object[],System.Globalization.CultureInfo)",
      "code_size" : "27",
      "class" : "MethodBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_MethodHandle",
      "signature" : "System.RuntimeMethodHandle System.Reflection.Emit.MethodBuilder:get_MethodHandle ()",
      "code_size" : "31",
      "class" : "MethodBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Attributes",
      "signature" : "System.Reflection.MethodAttributes System.Reflection.Emit.MethodBuilder:get_Attributes ()",
      "code_size" : "27",
      "class" : "MethodBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddDeclarativeSecurity",
      "signature" : "void System.Reflection.Emit.MethodBuilder:AddDeclarativeSecurity (object[])",
      "code_size" : "27",
      "class" : "MethodBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "DefineParameter",
      "signature" : "System.Reflection.Emit.ParameterBuilder System.Reflection.Emit.MethodBuilder:DefineParameter (object[])",
      "code_size" : "27",
      "class" : "MethodBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "DefineGenericParameters",
      "signature" : "System.Reflection.Emit.GenericTypeParameterBuilder[] System.Reflection.Emit.MethodBuilder:DefineGenericParameters (string[])",
      "code_size" : "27",
      "class" : "MethodBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetToken",
      "signature" : "System.Reflection.Emit.MethodToken System.Reflection.Emit.MethodBuilder:GetToken ()",
      "code_size" : "30",
      "class" : "MethodBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetILGenerator",
      "signature" : "System.Reflection.Emit.ILGenerator System.Reflection.Emit.MethodBuilder:GetILGenerator ()",
      "code_size" : "27",
      "class" : "MethodBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetCustomAttribute",
      "signature" : "void System.Reflection.Emit.MethodBuilder:SetCustomAttribute (object[])",
      "code_size" : "27",
      "class" : "MethodBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetImplementationFlags",
      "signature" : "void System.Reflection.Emit.MethodBuilder:SetImplementationFlags (System.Reflection.MethodImplAttributes)",
      "code_size" : "27",
      "class" : "MethodBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetParameters",
      "signature" : "void System.Reflection.Emit.MethodBuilder:SetParameters (System.Type[])",
      "code_size" : "27",
      "class" : "MethodBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetReturnType",
      "signature" : "void System.Reflection.Emit.MethodBuilder:SetReturnType (object)",
      "code_size" : "27",
      "class" : "MethodBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Reflection.Emit.AssemblyBuilder:.ctor ()",
      "code_size" : "57",
      "class" : "AssemblyBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddResourceFile",
      "signature" : "void System.Reflection.Emit.AssemblyBuilder:AddResourceFile (object[])",
      "code_size" : "27",
      "class" : "AssemblyBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "DefineVersionInfoResource",
      "signature" : "void System.Reflection.Emit.AssemblyBuilder:DefineVersionInfoResource (object[])",
      "code_size" : "27",
      "class" : "AssemblyBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "DefineDynamicModule",
      "signature" : "System.Reflection.Emit.ModuleBuilder System.Reflection.Emit.AssemblyBuilder:DefineDynamicModule (object[])",
      "code_size" : "27",
      "class" : "AssemblyBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "DefineUnmanagedResource",
      "signature" : "void System.Reflection.Emit.AssemblyBuilder:DefineUnmanagedResource (object[])",
      "code_size" : "27",
      "class" : "AssemblyBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "Save",
      "signature" : "void System.Reflection.Emit.AssemblyBuilder:Save (object[])",
      "code_size" : "27",
      "class" : "AssemblyBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetEntryPoint",
      "signature" : "void System.Reflection.Emit.AssemblyBuilder:SetEntryPoint (object[])",
      "code_size" : "27",
      "class" : "AssemblyBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetCustomAttribute",
      "signature" : "void System.Reflection.Emit.AssemblyBuilder:SetCustomAttribute (object[])",
      "code_size" : "27",
      "class" : "AssemblyBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Reflection.Emit.LocalBuilder:.ctor ()",
      "code_size" : "9",
      "class" : "LocalBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Reflection.Emit.GenericTypeParameterBuilder:.ctor ()",
      "code_size" : "9",
      "class" : "GenericTypeParameterBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsDefined",
      "signature" : "bool System.Reflection.Emit.GenericTypeParameterBuilder:IsDefined (System.Type,bool)",
      "code_size" : "27",
      "class" : "GenericTypeParameterBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetCustomAttributes",
      "signature" : "object[] System.Reflection.Emit.GenericTypeParameterBuilder:GetCustomAttributes (bool)",
      "code_size" : "27",
      "class" : "GenericTypeParameterBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetCustomAttributes",
      "signature" : "object[] System.Reflection.Emit.GenericTypeParameterBuilder:GetCustomAttributes (System.Type,bool)",
      "code_size" : "27",
      "class" : "GenericTypeParameterBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Name",
      "signature" : "string System.Reflection.Emit.GenericTypeParameterBuilder:get_Name ()",
      "code_size" : "27",
      "class" : "GenericTypeParameterBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetInterface",
      "signature" : "System.Type System.Reflection.Emit.GenericTypeParameterBuilder:GetInterface (string,bool)",
      "code_size" : "27",
      "class" : "GenericTypeParameterBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetInterfaces",
      "signature" : "System.Type[] System.Reflection.Emit.GenericTypeParameterBuilder:GetInterfaces ()",
      "code_size" : "27",
      "class" : "GenericTypeParameterBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetElementType",
      "signature" : "System.Type System.Reflection.Emit.GenericTypeParameterBuilder:GetElementType ()",
      "code_size" : "27",
      "class" : "GenericTypeParameterBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetEvent",
      "signature" : "System.Reflection.EventInfo System.Reflection.Emit.GenericTypeParameterBuilder:GetEvent (string,System.Reflection.BindingFlags)",
      "code_size" : "27",
      "class" : "GenericTypeParameterBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetEvents",
      "signature" : "System.Reflection.EventInfo[] System.Reflection.Emit.GenericTypeParameterBuilder:GetEvents (System.Reflection.BindingFlags)",
      "code_size" : "27",
      "class" : "GenericTypeParameterBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetField",
      "signature" : "System.Reflection.FieldInfo System.Reflection.Emit.GenericTypeParameterBuilder:GetField (string,System.Reflection.BindingFlags)",
      "code_size" : "27",
      "class" : "GenericTypeParameterBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetFields",
      "signature" : "System.Reflection.FieldInfo[] System.Reflection.Emit.GenericTypeParameterBuilder:GetFields (System.Reflection.BindingFlags)",
      "code_size" : "27",
      "class" : "GenericTypeParameterBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetMembers",
      "signature" : "System.Reflection.MemberInfo[] System.Reflection.Emit.GenericTypeParameterBuilder:GetMembers (System.Reflection.BindingFlags)",
      "code_size" : "27",
      "class" : "GenericTypeParameterBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetMethodImpl",
      "signature" : "System.Reflection.MethodInfo System.Reflection.Emit.GenericTypeParameterBuilder:GetMethodImpl (string,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])",
      "code_size" : "28",
      "class" : "GenericTypeParameterBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetMethods",
      "signature" : "System.Reflection.MethodInfo[] System.Reflection.Emit.GenericTypeParameterBuilder:GetMethods (System.Reflection.BindingFlags)",
      "code_size" : "27",
      "class" : "GenericTypeParameterBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetNestedType",
      "signature" : "System.Type System.Reflection.Emit.GenericTypeParameterBuilder:GetNestedType (string,System.Reflection.BindingFlags)",
      "code_size" : "27",
      "class" : "GenericTypeParameterBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetNestedTypes",
      "signature" : "System.Type[] System.Reflection.Emit.GenericTypeParameterBuilder:GetNestedTypes (System.Reflection.BindingFlags)",
      "code_size" : "27",
      "class" : "GenericTypeParameterBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetProperties",
      "signature" : "System.Reflection.PropertyInfo[] System.Reflection.Emit.GenericTypeParameterBuilder:GetProperties (System.Reflection.BindingFlags)",
      "code_size" : "27",
      "class" : "GenericTypeParameterBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetPropertyImpl",
      "signature" : "System.Reflection.PropertyInfo System.Reflection.Emit.GenericTypeParameterBuilder:GetPropertyImpl (string,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])",
      "code_size" : "28",
      "class" : "GenericTypeParameterBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetConstructorImpl",
      "signature" : "System.Reflection.ConstructorInfo System.Reflection.Emit.GenericTypeParameterBuilder:GetConstructorImpl (System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])",
      "code_size" : "27",
      "class" : "GenericTypeParameterBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetAttributeFlagsImpl",
      "signature" : "System.Reflection.TypeAttributes System.Reflection.Emit.GenericTypeParameterBuilder:GetAttributeFlagsImpl ()",
      "code_size" : "27",
      "class" : "GenericTypeParameterBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "HasElementTypeImpl",
      "signature" : "bool System.Reflection.Emit.GenericTypeParameterBuilder:HasElementTypeImpl ()",
      "code_size" : "27",
      "class" : "GenericTypeParameterBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsArrayImpl",
      "signature" : "bool System.Reflection.Emit.GenericTypeParameterBuilder:IsArrayImpl ()",
      "code_size" : "27",
      "class" : "GenericTypeParameterBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsByRefImpl",
      "signature" : "bool System.Reflection.Emit.GenericTypeParameterBuilder:IsByRefImpl ()",
      "code_size" : "27",
      "class" : "GenericTypeParameterBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsCOMObjectImpl",
      "signature" : "bool System.Reflection.Emit.GenericTypeParameterBuilder:IsCOMObjectImpl ()",
      "code_size" : "27",
      "class" : "GenericTypeParameterBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsPointerImpl",
      "signature" : "bool System.Reflection.Emit.GenericTypeParameterBuilder:IsPointerImpl ()",
      "code_size" : "27",
      "class" : "GenericTypeParameterBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsPrimitiveImpl",
      "signature" : "bool System.Reflection.Emit.GenericTypeParameterBuilder:IsPrimitiveImpl ()",
      "code_size" : "27",
      "class" : "GenericTypeParameterBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetConstructors",
      "signature" : "System.Reflection.ConstructorInfo[] System.Reflection.Emit.GenericTypeParameterBuilder:GetConstructors (System.Reflection.BindingFlags)",
      "code_size" : "27",
      "class" : "GenericTypeParameterBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "InvokeMember",
      "signature" : "object System.Reflection.Emit.GenericTypeParameterBuilder:InvokeMember (string,System.Reflection.BindingFlags,System.Reflection.Binder,object,object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,string[])",
      "code_size" : "28",
      "class" : "GenericTypeParameterBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Assembly",
      "signature" : "System.Reflection.Assembly System.Reflection.Emit.GenericTypeParameterBuilder:get_Assembly ()",
      "code_size" : "27",
      "class" : "GenericTypeParameterBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_AssemblyQualifiedName",
      "signature" : "string System.Reflection.Emit.GenericTypeParameterBuilder:get_AssemblyQualifiedName ()",
      "code_size" : "27",
      "class" : "GenericTypeParameterBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_BaseType",
      "signature" : "System.Type System.Reflection.Emit.GenericTypeParameterBuilder:get_BaseType ()",
      "code_size" : "27",
      "class" : "GenericTypeParameterBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_FullName",
      "signature" : "string System.Reflection.Emit.GenericTypeParameterBuilder:get_FullName ()",
      "code_size" : "27",
      "class" : "GenericTypeParameterBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_GUID",
      "signature" : "System.Guid System.Reflection.Emit.GenericTypeParameterBuilder:get_GUID ()",
      "code_size" : "31",
      "class" : "GenericTypeParameterBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Module",
      "signature" : "System.Reflection.Module System.Reflection.Emit.GenericTypeParameterBuilder:get_Module ()",
      "code_size" : "27",
      "class" : "GenericTypeParameterBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Namespace",
      "signature" : "string System.Reflection.Emit.GenericTypeParameterBuilder:get_Namespace ()",
      "code_size" : "27",
      "class" : "GenericTypeParameterBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_UnderlyingSystemType",
      "signature" : "System.Type System.Reflection.Emit.GenericTypeParameterBuilder:get_UnderlyingSystemType ()",
      "code_size" : "27",
      "class" : "GenericTypeParameterBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetCustomAttribute",
      "signature" : "void System.Reflection.Emit.GenericTypeParameterBuilder:SetCustomAttribute (object[])",
      "code_size" : "27",
      "class" : "GenericTypeParameterBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetGenericParameterAttributes",
      "signature" : "void System.Reflection.Emit.GenericTypeParameterBuilder:SetGenericParameterAttributes (System.Reflection.GenericParameterAttributes)",
      "code_size" : "27",
      "class" : "GenericTypeParameterBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetInterfaceConstraints",
      "signature" : "void System.Reflection.Emit.GenericTypeParameterBuilder:SetInterfaceConstraints (System.Type[])",
      "code_size" : "27",
      "class" : "GenericTypeParameterBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetBaseTypeConstraint",
      "signature" : "void System.Reflection.Emit.GenericTypeParameterBuilder:SetBaseTypeConstraint (System.Type)",
      "code_size" : "27",
      "class" : "GenericTypeParameterBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Reflection.Emit.ConstructorBuilder:.ctor ()",
      "code_size" : "9",
      "class" : "ConstructorBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsDefined",
      "signature" : "bool System.Reflection.Emit.ConstructorBuilder:IsDefined (System.Type,bool)",
      "code_size" : "27",
      "class" : "ConstructorBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetCustomAttributes",
      "signature" : "object[] System.Reflection.Emit.ConstructorBuilder:GetCustomAttributes (bool)",
      "code_size" : "27",
      "class" : "ConstructorBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetCustomAttributes",
      "signature" : "object[] System.Reflection.Emit.ConstructorBuilder:GetCustomAttributes (System.Type,bool)",
      "code_size" : "27",
      "class" : "ConstructorBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_DeclaringType",
      "signature" : "System.Type System.Reflection.Emit.ConstructorBuilder:get_DeclaringType ()",
      "code_size" : "27",
      "class" : "ConstructorBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_MemberType",
      "signature" : "System.Reflection.MemberTypes System.Reflection.Emit.ConstructorBuilder:get_MemberType ()",
      "code_size" : "27",
      "class" : "ConstructorBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Name",
      "signature" : "string System.Reflection.Emit.ConstructorBuilder:get_Name ()",
      "code_size" : "27",
      "class" : "ConstructorBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ReflectedType",
      "signature" : "System.Type System.Reflection.Emit.ConstructorBuilder:get_ReflectedType ()",
      "code_size" : "27",
      "class" : "ConstructorBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetMethodImplementationFlags",
      "signature" : "System.Reflection.MethodImplAttributes System.Reflection.Emit.ConstructorBuilder:GetMethodImplementationFlags ()",
      "code_size" : "27",
      "class" : "ConstructorBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetParameters",
      "signature" : "System.Reflection.ParameterInfo[] System.Reflection.Emit.ConstructorBuilder:GetParameters ()",
      "code_size" : "27",
      "class" : "ConstructorBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "Invoke",
      "signature" : "object System.Reflection.Emit.ConstructorBuilder:Invoke (object,System.Reflection.BindingFlags,System.Reflection.Binder,object[],System.Globalization.CultureInfo)",
      "code_size" : "27",
      "class" : "ConstructorBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_MethodHandle",
      "signature" : "System.RuntimeMethodHandle System.Reflection.Emit.ConstructorBuilder:get_MethodHandle ()",
      "code_size" : "31",
      "class" : "ConstructorBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Attributes",
      "signature" : "System.Reflection.MethodAttributes System.Reflection.Emit.ConstructorBuilder:get_Attributes ()",
      "code_size" : "27",
      "class" : "ConstructorBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddDeclarativeSecurity",
      "signature" : "void System.Reflection.Emit.ConstructorBuilder:AddDeclarativeSecurity (object[])",
      "code_size" : "27",
      "class" : "ConstructorBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "DefineParameter",
      "signature" : "System.Reflection.Emit.ParameterBuilder System.Reflection.Emit.ConstructorBuilder:DefineParameter (object[])",
      "code_size" : "27",
      "class" : "ConstructorBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetToken",
      "signature" : "System.Reflection.Emit.MethodToken System.Reflection.Emit.ConstructorBuilder:GetToken ()",
      "code_size" : "30",
      "class" : "ConstructorBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetILGenerator",
      "signature" : "System.Reflection.Emit.ILGenerator System.Reflection.Emit.ConstructorBuilder:GetILGenerator ()",
      "code_size" : "27",
      "class" : "ConstructorBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetCustomAttribute",
      "signature" : "void System.Reflection.Emit.ConstructorBuilder:SetCustomAttribute (object[])",
      "code_size" : "27",
      "class" : "ConstructorBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetImplementationFlags",
      "signature" : "void System.Reflection.Emit.ConstructorBuilder:SetImplementationFlags (System.Reflection.MethodImplAttributes)",
      "code_size" : "27",
      "class" : "ConstructorBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Reflection.Emit.ModuleBuilder:.ctor ()",
      "code_size" : "9",
      "class" : "ModuleBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "DefineManifestResource",
      "signature" : "void System.Reflection.Emit.ModuleBuilder:DefineManifestResource (object[])",
      "code_size" : "27",
      "class" : "ModuleBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "DefineType",
      "signature" : "System.Reflection.Emit.TypeBuilder System.Reflection.Emit.ModuleBuilder:DefineType (object[])",
      "code_size" : "27",
      "class" : "ModuleBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetToken",
      "signature" : "System.Reflection.Emit.MethodToken System.Reflection.Emit.ModuleBuilder:GetToken ()",
      "code_size" : "30",
      "class" : "ModuleBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetArrayMethod",
      "signature" : "System.Reflection.MethodInfo System.Reflection.Emit.ModuleBuilder:GetArrayMethod (object[])",
      "code_size" : "27",
      "class" : "ModuleBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetCustomAttribute",
      "signature" : "void System.Reflection.Emit.ModuleBuilder:SetCustomAttribute (object[])",
      "code_size" : "27",
      "class" : "ModuleBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Reflection.Emit.PropertyBuilder:.ctor ()",
      "code_size" : "9",
      "class" : "PropertyBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsDefined",
      "signature" : "bool System.Reflection.Emit.PropertyBuilder:IsDefined (System.Type,bool)",
      "code_size" : "27",
      "class" : "PropertyBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetCustomAttributes",
      "signature" : "object[] System.Reflection.Emit.PropertyBuilder:GetCustomAttributes (bool)",
      "code_size" : "27",
      "class" : "PropertyBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetCustomAttributes",
      "signature" : "object[] System.Reflection.Emit.PropertyBuilder:GetCustomAttributes (System.Type,bool)",
      "code_size" : "27",
      "class" : "PropertyBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_DeclaringType",
      "signature" : "System.Type System.Reflection.Emit.PropertyBuilder:get_DeclaringType ()",
      "code_size" : "27",
      "class" : "PropertyBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Name",
      "signature" : "string System.Reflection.Emit.PropertyBuilder:get_Name ()",
      "code_size" : "27",
      "class" : "PropertyBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ReflectedType",
      "signature" : "System.Type System.Reflection.Emit.PropertyBuilder:get_ReflectedType ()",
      "code_size" : "27",
      "class" : "PropertyBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetAccessors",
      "signature" : "System.Reflection.MethodInfo[] System.Reflection.Emit.PropertyBuilder:GetAccessors (bool)",
      "code_size" : "27",
      "class" : "PropertyBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetGetMethod",
      "signature" : "System.Reflection.MethodInfo System.Reflection.Emit.PropertyBuilder:GetGetMethod (bool)",
      "code_size" : "27",
      "class" : "PropertyBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetIndexParameters",
      "signature" : "System.Reflection.ParameterInfo[] System.Reflection.Emit.PropertyBuilder:GetIndexParameters ()",
      "code_size" : "27",
      "class" : "PropertyBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetSetMethod",
      "signature" : "System.Reflection.MethodInfo System.Reflection.Emit.PropertyBuilder:GetSetMethod (bool)",
      "code_size" : "27",
      "class" : "PropertyBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetValue",
      "signature" : "object System.Reflection.Emit.PropertyBuilder:GetValue (object,System.Reflection.BindingFlags,System.Reflection.Binder,object[],System.Globalization.CultureInfo)",
      "code_size" : "27",
      "class" : "PropertyBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetValue",
      "signature" : "void System.Reflection.Emit.PropertyBuilder:SetValue (object,object,System.Reflection.BindingFlags,System.Reflection.Binder,object[],System.Globalization.CultureInfo)",
      "code_size" : "28",
      "class" : "PropertyBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Attributes",
      "signature" : "System.Reflection.PropertyAttributes System.Reflection.Emit.PropertyBuilder:get_Attributes ()",
      "code_size" : "27",
      "class" : "PropertyBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_CanRead",
      "signature" : "bool System.Reflection.Emit.PropertyBuilder:get_CanRead ()",
      "code_size" : "27",
      "class" : "PropertyBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_CanWrite",
      "signature" : "bool System.Reflection.Emit.PropertyBuilder:get_CanWrite ()",
      "code_size" : "27",
      "class" : "PropertyBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_PropertyType",
      "signature" : "System.Type System.Reflection.Emit.PropertyBuilder:get_PropertyType ()",
      "code_size" : "27",
      "class" : "PropertyBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetToken",
      "signature" : "System.Reflection.Emit.MethodToken System.Reflection.Emit.PropertyBuilder:GetToken ()",
      "code_size" : "30",
      "class" : "PropertyBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetGetMethod",
      "signature" : "void System.Reflection.Emit.PropertyBuilder:SetGetMethod (object)",
      "code_size" : "27",
      "class" : "PropertyBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetSetMethod",
      "signature" : "void System.Reflection.Emit.PropertyBuilder:SetSetMethod (object)",
      "code_size" : "27",
      "class" : "PropertyBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetCustomAttribute",
      "signature" : "void System.Reflection.Emit.PropertyBuilder:SetCustomAttribute (object[])",
      "code_size" : "27",
      "class" : "PropertyBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Reflection.Emit.FieldBuilder:.ctor ()",
      "code_size" : "9",
      "class" : "FieldBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsDefined",
      "signature" : "bool System.Reflection.Emit.FieldBuilder:IsDefined (System.Type,bool)",
      "code_size" : "27",
      "class" : "FieldBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetCustomAttributes",
      "signature" : "object[] System.Reflection.Emit.FieldBuilder:GetCustomAttributes (bool)",
      "code_size" : "27",
      "class" : "FieldBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetCustomAttributes",
      "signature" : "object[] System.Reflection.Emit.FieldBuilder:GetCustomAttributes (System.Type,bool)",
      "code_size" : "27",
      "class" : "FieldBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_DeclaringType",
      "signature" : "System.Type System.Reflection.Emit.FieldBuilder:get_DeclaringType ()",
      "code_size" : "27",
      "class" : "FieldBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Name",
      "signature" : "string System.Reflection.Emit.FieldBuilder:get_Name ()",
      "code_size" : "27",
      "class" : "FieldBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_ReflectedType",
      "signature" : "System.Type System.Reflection.Emit.FieldBuilder:get_ReflectedType ()",
      "code_size" : "27",
      "class" : "FieldBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetValue",
      "signature" : "object System.Reflection.Emit.FieldBuilder:GetValue (object)",
      "code_size" : "27",
      "class" : "FieldBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetValue",
      "signature" : "void System.Reflection.Emit.FieldBuilder:SetValue (object,object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Globalization.CultureInfo)",
      "code_size" : "27",
      "class" : "FieldBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Attributes",
      "signature" : "System.Reflection.FieldAttributes System.Reflection.Emit.FieldBuilder:get_Attributes ()",
      "code_size" : "27",
      "class" : "FieldBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_FieldHandle",
      "signature" : "System.RuntimeFieldHandle System.Reflection.Emit.FieldBuilder:get_FieldHandle ()",
      "code_size" : "31",
      "class" : "FieldBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_FieldType",
      "signature" : "System.Type System.Reflection.Emit.FieldBuilder:get_FieldType ()",
      "code_size" : "27",
      "class" : "FieldBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetConstant",
      "signature" : "void System.Reflection.Emit.FieldBuilder:SetConstant (object)",
      "code_size" : "27",
      "class" : "FieldBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetCustomAttribute",
      "signature" : "void System.Reflection.Emit.FieldBuilder:SetCustomAttribute (object[])",
      "code_size" : "27",
      "class" : "FieldBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Reflection.Emit.ParameterBuilder:.ctor ()",
      "code_size" : "9",
      "class" : "ParameterBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetConstant",
      "signature" : "void System.Reflection.Emit.ParameterBuilder:SetConstant (object)",
      "code_size" : "27",
      "class" : "ParameterBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetCustomAttribute",
      "signature" : "void System.Reflection.Emit.ParameterBuilder:SetCustomAttribute (object[])",
      "code_size" : "27",
      "class" : "ParameterBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Reflection.Emit.EventBuilder:.ctor ()",
      "code_size" : "9",
      "class" : "EventBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetAddOnMethod",
      "signature" : "void System.Reflection.Emit.EventBuilder:SetAddOnMethod (System.Reflection.Emit.MethodBuilder)",
      "code_size" : "27",
      "class" : "EventBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetRemoveOnMethod",
      "signature" : "void System.Reflection.Emit.EventBuilder:SetRemoveOnMethod (System.Reflection.Emit.MethodBuilder)",
      "code_size" : "27",
      "class" : "EventBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetCustomAttribute",
      "signature" : "void System.Reflection.Emit.EventBuilder:SetCustomAttribute (object[])",
      "code_size" : "27",
      "class" : "EventBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Reflection.Emit.CustomAttributeBuilder:.ctor (object[])",
      "code_size" : "27",
      "class" : "CustomAttributeBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetNamespace",
      "signature" : "string Mono.CSharp.TypeExtensions:GetNamespace (System.Type)",
      "code_size" : "93",
      "class" : "TypeExtensions",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Outline:.ctor (System.Type,System.IO.TextWriter,bool,bool,bool)",
      "code_size" : "389",
      "class" : "Outline",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "OutlineType",
      "signature" : "void Mono.CSharp.Outline:OutlineType ()",
      "code_size" : "3483",
      "class" : "Outline",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_DefaultFlags",
      "signature" : "System.Reflection.BindingFlags Mono.CSharp.Outline:get_DefaultFlags ()",
      "code_size" : "48",
      "class" : "Outline",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "OutlineAttributes",
      "signature" : "void Mono.CSharp.Outline:OutlineAttributes ()",
      "code_size" : "167",
      "class" : "Outline",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "OutlineMemberAttribute",
      "signature" : "void Mono.CSharp.Outline:OutlineMemberAttribute (System.Reflection.MemberInfo)",
      "code_size" : "260",
      "class" : "Outline",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "OutlineEvent",
      "signature" : "void Mono.CSharp.Outline:OutlineEvent (System.Reflection.EventInfo)",
      "code_size" : "249",
      "class" : "Outline",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "OutlineConstructor",
      "signature" : "void Mono.CSharp.Outline:OutlineConstructor (System.Reflection.ConstructorInfo)",
      "code_size" : "191",
      "class" : "Outline",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "OutlineProperty",
      "signature" : "void Mono.CSharp.Outline:OutlineProperty (System.Reflection.PropertyInfo)",
      "code_size" : "1088",
      "class" : "Outline",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "OutlineMethod",
      "signature" : "void Mono.CSharp.Outline:OutlineMethod (System.Reflection.MethodInfo)",
      "code_size" : "483",
      "class" : "Outline",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "OutlineOperator",
      "signature" : "void Mono.CSharp.Outline:OutlineOperator (System.Reflection.MethodInfo)",
      "code_size" : "521",
      "class" : "Outline",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "OutlineParams",
      "signature" : "void Mono.CSharp.Outline:OutlineParams (System.Reflection.ParameterInfo[])",
      "code_size" : "592",
      "class" : "Outline",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "OutlineField",
      "signature" : "void Mono.CSharp.Outline:OutlineField (System.Reflection.FieldInfo)",
      "code_size" : "721",
      "class" : "Outline",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetMethodVisibility",
      "signature" : "string Mono.CSharp.Outline:GetMethodVisibility (System.Reflection.MethodBase)",
      "code_size" : "167",
      "class" : "Outline",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetMethodModifiers",
      "signature" : "string Mono.CSharp.Outline:GetMethodModifiers (System.Reflection.MethodBase)",
      "code_size" : "216",
      "class" : "Outline",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetTypeKind",
      "signature" : "string Mono.CSharp.Outline:GetTypeKind (System.Type)",
      "code_size" : "179",
      "class" : "Outline",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetTypeVisibility",
      "signature" : "string Mono.CSharp.Outline:GetTypeVisibility (System.Type)",
      "code_size" : "93",
      "class" : "Outline",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "FormatGenericParams",
      "signature" : "string Mono.CSharp.Outline:FormatGenericParams (System.Type[])",
      "code_size" : "271",
      "class" : "Outline",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "FormatType",
      "signature" : "string Mono.CSharp.Outline:FormatType (System.Type)",
      "code_size" : "1433",
      "class" : "Outline",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "RemoveGenericArity",
      "signature" : "string Mono.CSharp.Outline:RemoveGenericArity (string)",
      "code_size" : "291",
      "class" : "Outline",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetTypeName",
      "signature" : "string Mono.CSharp.Outline:GetTypeName (System.Type)",
      "code_size" : "89",
      "class" : "Outline",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetTypeName",
      "signature" : "void Mono.CSharp.Outline:GetTypeName (System.Text.StringBuilder,System.Type)",
      "code_size" : "113",
      "class" : "Outline",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetFullName",
      "signature" : "string Mono.CSharp.Outline:GetFullName (System.Type)",
      "code_size" : "91",
      "class" : "Outline",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetFullName_recursed",
      "signature" : "void Mono.CSharp.Outline:GetFullName_recursed (System.Text.StringBuilder,System.Type,bool)",
      "code_size" : "305",
      "class" : "Outline",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "WriteGenericConstraints",
      "signature" : "void Mono.CSharp.Outline:WriteGenericConstraints (System.Type[])",
      "code_size" : "838",
      "class" : "Outline",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "OperatorFromName",
      "signature" : "string Mono.CSharp.Outline:OperatorFromName (string)",
      "code_size" : "1038",
      "class" : "Outline",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "MethodIsExplicitIfaceImpl",
      "signature" : "bool Mono.CSharp.Outline:MethodIsExplicitIfaceImpl (System.Reflection.MethodBase)",
      "code_size" : "81",
      "class" : "Outline",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ShowMember",
      "signature" : "bool Mono.CSharp.Outline:ShowMember (System.Reflection.MemberInfo)",
      "code_size" : "644",
      "class" : "Outline",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "TypeGetInterfaces",
      "signature" : "System.Type[] Mono.CSharp.Outline:TypeGetInterfaces (System.Type,bool)",
      "code_size" : "506",
      "class" : "Outline",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Comparer:.ctor (Mono.CSharp.Comparer/ComparerFunc)",
      "code_size" : "43",
      "class" : "Comparer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Compare",
      "signature" : "int Mono.CSharp.Comparer:Compare (object,object)",
      "code_size" : "56",
      "class" : "Comparer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CompareType",
      "signature" : "int Mono.CSharp.Comparer:CompareType (object,object)",
      "code_size" : "188",
      "class" : "Comparer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CompareMemberInfo",
      "signature" : "int Mono.CSharp.Comparer:CompareMemberInfo (object,object)",
      "code_size" : "170",
      "class" : "Comparer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Sort",
      "signature" : "System.Reflection.MemberInfo[] Mono.CSharp.Comparer:Sort (System.Reflection.MemberInfo[])",
      "code_size" : "36",
      "class" : "Comparer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CompareMethodBase",
      "signature" : "int Mono.CSharp.Comparer:CompareMethodBase (object,object)",
      "code_size" : "498",
      "class" : "Comparer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Sort",
      "signature" : "System.Reflection.MethodBase[] Mono.CSharp.Comparer:Sort (System.Reflection.MethodBase[])",
      "code_size" : "36",
      "class" : "Comparer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ComparePropertyInfo",
      "signature" : "int Mono.CSharp.Comparer:ComparePropertyInfo (object,object)",
      "code_size" : "358",
      "class" : "Comparer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Sort",
      "signature" : "System.Reflection.PropertyInfo[] Mono.CSharp.Comparer:Sort (System.Reflection.PropertyInfo[])",
      "code_size" : "36",
      "class" : "Comparer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CompareEventInfo",
      "signature" : "int Mono.CSharp.Comparer:CompareEventInfo (object,object)",
      "code_size" : "258",
      "class" : "Comparer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Sort",
      "signature" : "System.Reflection.EventInfo[] Mono.CSharp.Comparer:Sort (System.Reflection.EventInfo[])",
      "code_size" : "36",
      "class" : "Comparer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".cctor",
      "signature" : "void Mono.CSharp.Comparer:.cctor ()",
      "code_size" : "563",
      "class" : "Comparer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.AnonymousMethodStorey/<AddParentStoreyReference>c__AnonStorey0:.ctor ()",
      "code_size" : "9",
      "class" : "<AddParentStoreyReference>c__AnonStorey0",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "<>m__0",
      "signature" : "bool Mono.CSharp.AnonymousMethodStorey/<AddParentStoreyReference>c__AnonStorey0:<>m__0 (Mono.CSharp.AnonymousMethodStorey/StoreyFieldPair)",
      "code_size" : "47",
      "class" : "<AddParentStoreyReference>c__AnonStorey0",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.AnonymousMethodStorey/<EmitHoistedParameters>c__AnonStorey1:.ctor ()",
      "code_size" : "9",
      "class" : "<EmitHoistedParameters>c__AnonStorey1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "<>m__0",
      "signature" : "bool Mono.CSharp.AnonymousMethodStorey/<EmitHoistedParameters>c__AnonStorey1:<>m__0 (Mono.CSharp.HoistedParameter)",
      "code_size" : "92",
      "class" : "<EmitHoistedParameters>c__AnonStorey1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.AssemblyReferencesLoader`1/<LoadReferencesCore>c__AnonStorey0<T_REF>:.ctor ()",
      "code_size" : "13",
      "class" : "<LoadReferencesCore>c__AnonStorey0",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "<>m__0",
      "signature" : "bool Mono.CSharp.AssemblyReferencesLoader`1/<LoadReferencesCore>c__AnonStorey0<T_REF>:<>m__0 (System.Tuple`2<Mono.CSharp.RootNamespace, T_REF>)",
      "code_size" : "51",
      "class" : "<LoadReferencesCore>c__AnonStorey0",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Undo/<AddTypeContainer>c__AnonStorey0:.ctor ()",
      "code_size" : "9",
      "class" : "<AddTypeContainer>c__AnonStorey0",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "<>m__0",
      "signature" : "void Mono.CSharp.Undo/<AddTypeContainer>c__AnonStorey0:<>m__0 ()",
      "code_size" : "36",
      "class" : "<AddTypeContainer>c__AnonStorey0",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Undo/<AddTypeContainer>c__AnonStorey1:.ctor ()",
      "code_size" : "9",
      "class" : "<AddTypeContainer>c__AnonStorey1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "<>m__0",
      "signature" : "bool Mono.CSharp.Undo/<AddTypeContainer>c__AnonStorey1:<>m__0 (Mono.CSharp.TypeContainer)",
      "code_size" : "90",
      "class" : "<AddTypeContainer>c__AnonStorey1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "<>m__1",
      "signature" : "void Mono.CSharp.Undo/<AddTypeContainer>c__AnonStorey1:<>m__1 ()",
      "code_size" : "40",
      "class" : "<AddTypeContainer>c__AnonStorey1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ModuleContainer/<GetCompletionStartingWith>c__AnonStorey0:.ctor ()",
      "code_size" : "9",
      "class" : "<GetCompletionStartingWith>c__AnonStorey0",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "<>m__0",
      "signature" : "bool Mono.CSharp.ModuleContainer/<GetCompletionStartingWith>c__AnonStorey0:<>m__0 (string)",
      "code_size" : "41",
      "class" : "<GetCompletionStartingWith>c__AnonStorey0",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Namespace/<CompletionGetTypesStartingWith>c__AnonStorey0:.ctor ()",
      "code_size" : "9",
      "class" : "<CompletionGetTypesStartingWith>c__AnonStorey0",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "<>m__0",
      "signature" : "bool Mono.CSharp.Namespace/<CompletionGetTypesStartingWith>c__AnonStorey0:<>m__0 (System.Collections.Generic.KeyValuePair`2<string, System.Collections.Generic.IList`1<Mono.CSharp.TypeSpec>>)",
      "code_size" : "214",
      "class" : "<CompletionGetTypesStartingWith>c__AnonStorey0",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "<>m__1",
      "signature" : "bool Mono.CSharp.Namespace/<CompletionGetTypesStartingWith>c__AnonStorey0:<>m__1 (System.Collections.Generic.KeyValuePair`2<string, Mono.CSharp.Namespace>)",
      "code_size" : "54",
      "class" : "<CompletionGetTypesStartingWith>c__AnonStorey0",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "<>m__2",
      "signature" : "bool Mono.CSharp.Namespace/<CompletionGetTypesStartingWith>c__AnonStorey0:<>m__2 (Mono.CSharp.TypeSpec)",
      "code_size" : "46",
      "class" : "<CompletionGetTypesStartingWith>c__AnonStorey0",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.PredefinedMembers/<PredefinedMembers>c__AnonStorey0:.ctor ()",
      "code_size" : "9",
      "class" : "<PredefinedMembers>c__AnonStorey0",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "<>m__0",
      "signature" : "Mono.CSharp.TypeSpec[] Mono.CSharp.PredefinedMembers/<PredefinedMembers>c__AnonStorey0:<>m__0 ()",
      "code_size" : "82",
      "class" : "<PredefinedMembers>c__AnonStorey0",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "<>m__1",
      "signature" : "Mono.CSharp.TypeSpec[] Mono.CSharp.PredefinedMembers/<PredefinedMembers>c__AnonStorey0:<>m__1 ()",
      "code_size" : "148",
      "class" : "<PredefinedMembers>c__AnonStorey0",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "<>m__2",
      "signature" : "Mono.CSharp.TypeSpec[] Mono.CSharp.PredefinedMembers/<PredefinedMembers>c__AnonStorey0:<>m__2 ()",
      "code_size" : "82",
      "class" : "<PredefinedMembers>c__AnonStorey0",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "<>m__3",
      "signature" : "Mono.CSharp.TypeSpec[] Mono.CSharp.PredefinedMembers/<PredefinedMembers>c__AnonStorey0:<>m__3 ()",
      "code_size" : "82",
      "class" : "<PredefinedMembers>c__AnonStorey0",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.PredefinedMember`1/<PredefinedMember>c__AnonStorey0<T_REF>:.ctor ()",
      "code_size" : "13",
      "class" : "<PredefinedMember>c__AnonStorey0",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "<>m__0",
      "signature" : "Mono.CSharp.TypeSpec[] Mono.CSharp.PredefinedMember`1/<PredefinedMember>c__AnonStorey0<T_REF>:<>m__0 ()",
      "code_size" : "195",
      "class" : "<PredefinedMember>c__AnonStorey0",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.AssemblyReferencesLoader`1<T_GSHAREDVT>:.ctor (Mono.CSharp.CompilerContext)",
      "code_size" : "336",
      "class" : "AssemblyReferencesLoader`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_FileNotFound",
      "signature" : "void Mono.CSharp.AssemblyReferencesLoader`1<T_GSHAREDVT>:Error_FileNotFound (string)",
      "code_size" : "107",
      "class" : "AssemblyReferencesLoader`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_FileCorrupted",
      "signature" : "void Mono.CSharp.AssemblyReferencesLoader`1<T_GSHAREDVT>:Error_FileCorrupted (string)",
      "code_size" : "107",
      "class" : "AssemblyReferencesLoader`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_AssemblyIsModule",
      "signature" : "void Mono.CSharp.AssemblyReferencesLoader`1<T_GSHAREDVT>:Error_AssemblyIsModule (string)",
      "code_size" : "107",
      "class" : "AssemblyReferencesLoader`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Error_ModuleIsAssembly",
      "signature" : "void Mono.CSharp.AssemblyReferencesLoader`1<T_GSHAREDVT>:Error_ModuleIsAssembly (string)",
      "code_size" : "107",
      "class" : "AssemblyReferencesLoader`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "LoadReferencesCore",
      "signature" : "void Mono.CSharp.AssemblyReferencesLoader`1<T_GSHAREDVT>:LoadReferencesCore (Mono.CSharp.ModuleContainer,T_GSHAREDVT&,System.Collections.Generic.List`1<System.Tuple`2<Mono.CSharp.RootNamespace, T_GSHAREDVT>>&)",
      "code_size" : "5424",
      "class" : "AssemblyReferencesLoader`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EncodeNamedArguments",
      "signature" : "void Mono.CSharp.AttributeEncoder:EncodeNamedArguments<T_GSHAREDVT> (T_GSHAREDVT[],Mono.CSharp.Constant[])",
      "code_size" : "1285",
      "class" : "AttributeEncoder",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddKeyword",
      "signature" : "void Mono.CSharp.Tokenizer:AddKeyword<T_GSHAREDVT> (Mono.CSharp.Tokenizer/KeywordEntry`1<T_GSHAREDVT>[][],string,T_GSHAREDVT)",
      "code_size" : "520",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Tokenizer/KeywordEntry`1<T_GSHAREDVT>:.ctor (string,T_GSHAREDVT)",
      "code_size" : "176",
      "class" : "KeywordEntry`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "CheckProtectedMemberAccess",
      "signature" : "bool Mono.CSharp.MemberExpr:CheckProtectedMemberAccess<T_GSHAREDVT> (Mono.CSharp.ResolveContext,T_GSHAREDVT,Mono.CSharp.TypeSpec)",
      "code_size" : "280",
      "class" : "MemberExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoBestMemberChecks",
      "signature" : "void Mono.CSharp.MemberExpr:DoBestMemberChecks<T_GSHAREDVT> (Mono.CSharp.ResolveContext,T_GSHAREDVT)",
      "code_size" : "838",
      "class" : "MemberExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveMember",
      "signature" : "T_GSHAREDVT Mono.CSharp.OverloadResolver:ResolveMember<T_GSHAREDVT> (Mono.CSharp.ResolveContext,Mono.CSharp.Arguments&)",
      "code_size" : "8223",
      "class" : "OverloadResolver",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.PropertyOrIndexerExpr`1<T_GSHAREDVT>:.ctor (Mono.CSharp.Location)",
      "code_size" : "67",
      "class" : "PropertyOrIndexerExpr`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Getter",
      "signature" : "Mono.CSharp.MethodSpec Mono.CSharp.PropertyOrIndexerExpr`1<T_GSHAREDVT>:get_Getter ()",
      "code_size" : "65",
      "class" : "PropertyOrIndexerExpr`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Getter",
      "signature" : "void Mono.CSharp.PropertyOrIndexerExpr`1<T_GSHAREDVT>:set_Getter (Mono.CSharp.MethodSpec)",
      "code_size" : "82",
      "class" : "PropertyOrIndexerExpr`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Setter",
      "signature" : "Mono.CSharp.MethodSpec Mono.CSharp.PropertyOrIndexerExpr`1<T_GSHAREDVT>:get_Setter ()",
      "code_size" : "65",
      "class" : "PropertyOrIndexerExpr`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Setter",
      "signature" : "void Mono.CSharp.PropertyOrIndexerExpr`1<T_GSHAREDVT>:set_Setter (Mono.CSharp.MethodSpec)",
      "code_size" : "82",
      "class" : "PropertyOrIndexerExpr`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.PropertyOrIndexerExpr`1<T_GSHAREDVT>:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "357",
      "class" : "PropertyOrIndexerExpr`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolveLValue",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.PropertyOrIndexerExpr`1<T_GSHAREDVT>:DoResolveLValue (Mono.CSharp.ResolveContext,Mono.CSharp.Expression)",
      "code_size" : "1756",
      "class" : "PropertyOrIndexerExpr`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitConditionalAccess",
      "signature" : "void Mono.CSharp.PropertyOrIndexerExpr`1<T_GSHAREDVT>:EmitConditionalAccess (Mono.CSharp.EmitContext,Mono.CSharp.CallEmitter&,Mono.CSharp.MethodSpec,Mono.CSharp.Arguments)",
      "code_size" : "318",
      "class" : "PropertyOrIndexerExpr`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.PropertyOrIndexerExpr`1<T_GSHAREDVT>:Emit (Mono.CSharp.EmitContext,bool)",
      "code_size" : "735",
      "class" : "PropertyOrIndexerExpr`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.PropertyOrIndexerExpr`1<T_GSHAREDVT>:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "72",
      "class" : "PropertyOrIndexerExpr`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "EmitToFieldSource",
      "signature" : "Mono.CSharp.FieldExpr Mono.CSharp.PropertyOrIndexerExpr`1<T_GSHAREDVT>:EmitToFieldSource (Mono.CSharp.EmitContext)",
      "code_size" : "99",
      "class" : "PropertyOrIndexerExpr`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveGetter",
      "signature" : "bool Mono.CSharp.PropertyOrIndexerExpr`1<T_GSHAREDVT>:ResolveGetter (Mono.CSharp.ResolveContext)",
      "code_size" : "1503",
      "class" : "PropertyOrIndexerExpr`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ResolveAutopropertyAssignment",
      "signature" : "bool Mono.CSharp.PropertyOrIndexerExpr`1<T_GSHAREDVT>:ResolveAutopropertyAssignment (Mono.CSharp.ResolveContext,Mono.CSharp.Expression)",
      "code_size" : "42",
      "class" : "PropertyOrIndexerExpr`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.TypeOfMember`1<T_GSHAREDVT>:.ctor (T_GSHAREDVT,Mono.CSharp.Location)",
      "code_size" : "145",
      "class" : "TypeOfMember`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_IsSideEffectFree",
      "signature" : "bool Mono.CSharp.TypeOfMember`1<T_GSHAREDVT>:get_IsSideEffectFree ()",
      "code_size" : "45",
      "class" : "TypeOfMember`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "ContainsEmitWithAwait",
      "signature" : "bool Mono.CSharp.TypeOfMember`1<T_GSHAREDVT>:ContainsEmitWithAwait ()",
      "code_size" : "42",
      "class" : "TypeOfMember`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.TypeOfMember`1<T_GSHAREDVT>:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "code_size" : "293",
      "class" : "TypeOfMember`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.TypeOfMember`1<T_GSHAREDVT>:DoResolve (Mono.CSharp.ResolveContext)",
      "code_size" : "52",
      "class" : "TypeOfMember`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.TypeOfMember`1<T_GSHAREDVT>:Emit (Mono.CSharp.EmitContext)",
      "code_size" : "602",
      "class" : "TypeOfMember`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "InflateConstraints",
      "signature" : "Mono.CSharp.TypeParameterSpec[] Mono.CSharp.TypeParameterSpec:InflateConstraints<T_GSHAREDVT> (Mono.CSharp.TypeParameterSpec[],System.Func`2<T_GSHAREDVT, Mono.CSharp.TypeParameterInflator>,T_GSHAREDVT)",
      "code_size" : "872",
      "class" : "TypeParameterSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.YieldStatement`1<T_GSHAREDVT>:.ctor (Mono.CSharp.Expression,Mono.CSharp.Location)",
      "code_size" : "109",
      "class" : "YieldStatement`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Expr",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.YieldStatement`1<T_GSHAREDVT>:get_Expr ()",
      "code_size" : "65",
      "class" : "YieldStatement`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "CloneTo",
      "signature" : "void Mono.CSharp.YieldStatement`1<T_GSHAREDVT>:CloneTo (Mono.CSharp.CloneContext,Mono.CSharp.Statement)",
      "code_size" : "207",
      "class" : "YieldStatement`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoEmit",
      "signature" : "void Mono.CSharp.YieldStatement`1<T_GSHAREDVT>:DoEmit (Mono.CSharp.EmitContext)",
      "code_size" : "182",
      "class" : "YieldStatement`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "DoFlowAnalysis",
      "signature" : "bool Mono.CSharp.YieldStatement`1<T_GSHAREDVT>:DoFlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "code_size" : "109",
      "class" : "YieldStatement`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Resolve",
      "signature" : "bool Mono.CSharp.YieldStatement`1<T_GSHAREDVT>:Resolve (Mono.CSharp.BlockContext)",
      "code_size" : "579",
      "class" : "YieldStatement`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "RegisterResumePoint",
      "signature" : "void Mono.CSharp.YieldStatement`1<T_GSHAREDVT>:RegisterResumePoint ()",
      "code_size" : "604",
      "class" : "YieldStatement`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetMember",
      "signature" : "T_GSHAREDVT Mono.CSharp.MemberCache:GetMember<T_GSHAREDVT> (Mono.CSharp.TypeSpec,T_GSHAREDVT)",
      "code_size" : "910",
      "class" : "MemberCache",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ReferenceEquality`1<T_GSHAREDVT>:.ctor ()",
      "code_size" : "40",
      "class" : "ReferenceEquality`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Equals",
      "signature" : "bool Mono.CSharp.ReferenceEquality`1<T_GSHAREDVT>:Equals (T_GSHAREDVT,T_GSHAREDVT)",
      "code_size" : "491",
      "class" : "ReferenceEquality`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetHashCode",
      "signature" : "int Mono.CSharp.ReferenceEquality`1<T_GSHAREDVT>:GetHashCode (T_GSHAREDVT)",
      "code_size" : "300",
      "class" : "ReferenceEquality`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".cctor",
      "signature" : "void Mono.CSharp.ReferenceEquality`1<T_GSHAREDVT>:.cctor ()",
      "code_size" : "124",
      "class" : "ReferenceEquality`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsEqual",
      "signature" : "bool Mono.CSharp.ArrayComparer:IsEqual<T_GSHAREDVT> (T_GSHAREDVT[],T_GSHAREDVT[])",
      "code_size" : "400",
      "class" : "ArrayComparer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.PredefinedMember`1<T_GSHAREDVT>:.ctor (Mono.CSharp.ModuleContainer,Mono.CSharp.PredefinedType,Mono.CSharp.MemberFilter)",
      "code_size" : "256",
      "class" : "PredefinedMember`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.PredefinedMember`1<T_GSHAREDVT>:.ctor (Mono.CSharp.ModuleContainer,Mono.CSharp.TypeSpec,Mono.CSharp.MemberFilter)",
      "code_size" : "256",
      "class" : "PredefinedMember`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.PredefinedMember`1<T_GSHAREDVT>:.ctor (Mono.CSharp.ModuleContainer,Mono.CSharp.PredefinedType,string,Mono.CSharp.TypeSpec[])",
      "code_size" : "170",
      "class" : "PredefinedMember`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.PredefinedMember`1<T_GSHAREDVT>:.ctor (Mono.CSharp.ModuleContainer,Mono.CSharp.PredefinedType,string,Mono.CSharp.MemberKind,Mono.CSharp.PredefinedType[])",
      "code_size" : "598",
      "class" : "PredefinedMember`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.PredefinedMember`1<T_GSHAREDVT>:.ctor (Mono.CSharp.ModuleContainer,Mono.CSharp.PredefinedType,string,Mono.CSharp.MemberKind,System.Func`1<Mono.CSharp.TypeSpec[]>,Mono.CSharp.TypeSpec)",
      "code_size" : "288",
      "class" : "PredefinedMember`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.PredefinedMember`1<T_GSHAREDVT>:.ctor (Mono.CSharp.ModuleContainer,Mono.CSharp.BuiltinTypeSpec,string,Mono.CSharp.TypeSpec[])",
      "code_size" : "170",
      "class" : "PredefinedMember`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Get",
      "signature" : "T_GSHAREDVT Mono.CSharp.PredefinedMember`1<T_GSHAREDVT>:Get ()",
      "code_size" : "3215",
      "class" : "PredefinedMember`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "Resolve",
      "signature" : "T_GSHAREDVT Mono.CSharp.PredefinedMember`1<T_GSHAREDVT>:Resolve (Mono.CSharp.Location)",
      "code_size" : "2278",
      "class" : "PredefinedMember`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.AssemblyReferencesLoader`1/<LoadReferencesCore>c__AnonStorey0<T_GSHAREDVT>:.ctor ()",
      "code_size" : "40",
      "class" : "<LoadReferencesCore>c__AnonStorey0",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "<>m__0",
      "signature" : "bool Mono.CSharp.AssemblyReferencesLoader`1/<LoadReferencesCore>c__AnonStorey0<T_GSHAREDVT>:<>m__0 (System.Tuple`2<Mono.CSharp.RootNamespace, T_GSHAREDVT>)",
      "code_size" : "500",
      "class" : "<LoadReferencesCore>c__AnonStorey0",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.PredefinedMember`1/<PredefinedMember>c__AnonStorey0<T_GSHAREDVT>:.ctor ()",
      "code_size" : "40",
      "class" : "<PredefinedMember>c__AnonStorey0",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "<>m__0",
      "signature" : "Mono.CSharp.TypeSpec[] Mono.CSharp.PredefinedMember`1/<PredefinedMember>c__AnonStorey0<T_GSHAREDVT>:<>m__0 ()",
      "code_size" : "243",
      "class" : "<PredefinedMember>c__AnonStorey0",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsEqual",
      "signature" : "bool Mono.CSharp.ArrayComparer:IsEqual<T_BYTE> (T_BYTE[],T_BYTE[])",
      "code_size" : "230",
      "class" : "ArrayComparer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddKeyword",
      "signature" : "void Mono.CSharp.Tokenizer:AddKeyword<T_INT> (Mono.CSharp.Tokenizer/KeywordEntry`1<T_INT>[][],string,T_INT)",
      "code_size" : "494",
      "class" : "Tokenizer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "InflateConstraints",
      "signature" : "Mono.CSharp.TypeParameterSpec[] Mono.CSharp.TypeParameterSpec:InflateConstraints<Mono.CSharp.TypeParameterInflator> (Mono.CSharp.TypeParameterSpec[],System.Func`2<Mono.CSharp.TypeParameterInflator, Mono.CSharp.TypeParameterInflator>,Mono.CSharp.TypeParameterInflator)",
      "code_size" : "724",
      "class" : "TypeParameterSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
    },
    {
      "name" : "invoke_TResult_T1_T2",
      "signature" : "(wrapper delegate-invoke) int System.Func`3<string[], int, int>:invoke_TResult_T1_T2 (string[],int)",
      "code_size" : "282",
      "class" : "Func`3",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "InternalArray__IEnumerable_GetEnumerator",
      "signature" : "System.Collections.Generic.IEnumerator`1<T_REF> System.Array:InternalArray__IEnumerable_GetEnumerator<T_REF> ()",
      "code_size" : "178",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__ICollection_get_Count",
      "signature" : "int System.Array:InternalArray__ICollection_get_Count ()",
      "code_size" : "20",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__ICollection_get_IsReadOnly",
      "signature" : "bool System.Array:InternalArray__ICollection_get_IsReadOnly ()",
      "code_size" : "14",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__ICollection_Clear",
      "signature" : "void System.Array:InternalArray__ICollection_Clear ()",
      "code_size" : "40",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__ICollection_Add",
      "signature" : "void System.Array:InternalArray__ICollection_Add<T_REF> (T_REF)",
      "code_size" : "49",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__ICollection_Remove",
      "signature" : "bool System.Array:InternalArray__ICollection_Remove<T_REF> (T_REF)",
      "code_size" : "49",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__ICollection_Contains",
      "signature" : "bool System.Array:InternalArray__ICollection_Contains<T_REF> (T_REF)",
      "code_size" : "211",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__ICollection_CopyTo",
      "signature" : "void System.Array:InternalArray__ICollection_CopyTo<T_REF> (T_REF[],int)",
      "code_size" : "516",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "invoke_bool_T",
      "signature" : "(wrapper delegate-invoke) bool System.Predicate`1<Mono.CompilerServices.SymbolWriter.MethodEntry>:invoke_bool_T (Mono.CompilerServices.SymbolWriter.MethodEntry)",
      "code_size" : "258",
      "class" : "Predicate`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_void_T",
      "signature" : "(wrapper delegate-invoke) void System.Action`1<Mono.CompilerServices.SymbolWriter.MethodEntry>:invoke_void_T (Mono.CompilerServices.SymbolWriter.MethodEntry)",
      "code_size" : "252",
      "class" : "Action`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_int_T_T",
      "signature" : "(wrapper delegate-invoke) int System.Comparison`1<Mono.CompilerServices.SymbolWriter.MethodEntry>:invoke_int_T_T (Mono.CompilerServices.SymbolWriter.MethodEntry,Mono.CompilerServices.SymbolWriter.MethodEntry)",
      "code_size" : "282",
      "class" : "Comparison`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_bool_T",
      "signature" : "(wrapper delegate-invoke) bool System.Predicate`1<Mono.CompilerServices.SymbolWriter.SourceFileEntry>:invoke_bool_T (Mono.CompilerServices.SymbolWriter.SourceFileEntry)",
      "code_size" : "258",
      "class" : "Predicate`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_void_T",
      "signature" : "(wrapper delegate-invoke) void System.Action`1<Mono.CompilerServices.SymbolWriter.SourceFileEntry>:invoke_void_T (Mono.CompilerServices.SymbolWriter.SourceFileEntry)",
      "code_size" : "252",
      "class" : "Action`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_int_T_T",
      "signature" : "(wrapper delegate-invoke) int System.Comparison`1<Mono.CompilerServices.SymbolWriter.SourceFileEntry>:invoke_int_T_T (Mono.CompilerServices.SymbolWriter.SourceFileEntry,Mono.CompilerServices.SymbolWriter.SourceFileEntry)",
      "code_size" : "282",
      "class" : "Comparison`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_bool_T",
      "signature" : "(wrapper delegate-invoke) bool System.Predicate`1<Mono.CompilerServices.SymbolWriter.CompileUnitEntry>:invoke_bool_T (Mono.CompilerServices.SymbolWriter.CompileUnitEntry)",
      "code_size" : "258",
      "class" : "Predicate`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_void_T",
      "signature" : "(wrapper delegate-invoke) void System.Action`1<Mono.CompilerServices.SymbolWriter.CompileUnitEntry>:invoke_void_T (Mono.CompilerServices.SymbolWriter.CompileUnitEntry)",
      "code_size" : "252",
      "class" : "Action`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_int_T_T",
      "signature" : "(wrapper delegate-invoke) int System.Comparison`1<Mono.CompilerServices.SymbolWriter.CompileUnitEntry>:invoke_int_T_T (Mono.CompilerServices.SymbolWriter.CompileUnitEntry,Mono.CompilerServices.SymbolWriter.CompileUnitEntry)",
      "code_size" : "282",
      "class" : "Comparison`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_INT, TValue_REF>:.ctor ()",
      "code_size" : "47",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_INT, TValue_REF>:.ctor (int)",
      "code_size" : "55",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_INT, TValue_REF>:.ctor (System.Collections.Generic.IEqualityComparer`1<TKey_INT>)",
      "code_size" : "55",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_INT, TValue_REF>:.ctor (int,System.Collections.Generic.IEqualityComparer`1<TKey_INT>)",
      "code_size" : "172",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_INT, TValue_REF>:.ctor (System.Collections.Generic.IDictionary`2<TKey_INT, TValue_REF>)",
      "code_size" : "55",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_INT, TValue_REF>:.ctor (System.Collections.Generic.IDictionary`2<TKey_INT, TValue_REF>,System.Collections.Generic.IEqualityComparer`1<TKey_INT>)",
      "code_size" : "495",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_INT, TValue_REF>:.ctor (System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)",
      "code_size" : "43",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Comparer",
      "signature" : "System.Collections.Generic.IEqualityComparer`1<TKey_INT> System.Collections.Generic.Dictionary`2<TKey_INT, TValue_REF>:get_Comparer ()",
      "code_size" : "20",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Count",
      "signature" : "int System.Collections.Generic.Dictionary`2<TKey_INT, TValue_REF>:get_Count ()",
      "code_size" : "30",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Keys",
      "signature" : "System.Collections.Generic.Dictionary`2/KeyCollection<TKey_INT, TValue_REF> System.Collections.Generic.Dictionary`2<TKey_INT, TValue_REF>:get_Keys ()",
      "code_size" : "146",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.IDictionary<TKey,TValue>.get_Keys",
      "signature" : "System.Collections.Generic.ICollection`1<TKey_INT> System.Collections.Generic.Dictionary`2<TKey_INT, TValue_REF>:System.Collections.Generic.IDictionary<TKey,TValue>.get_Keys ()",
      "code_size" : "146",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.get_Keys",
      "signature" : "System.Collections.Generic.IEnumerable`1<TKey_INT> System.Collections.Generic.Dictionary`2<TKey_INT, TValue_REF>:System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.get_Keys ()",
      "code_size" : "146",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Values",
      "signature" : "System.Collections.Generic.Dictionary`2/ValueCollection<TKey_INT, TValue_REF> System.Collections.Generic.Dictionary`2<TKey_INT, TValue_REF>:get_Values ()",
      "code_size" : "146",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.IDictionary<TKey,TValue>.get_Values",
      "signature" : "System.Collections.Generic.ICollection`1<TValue_REF> System.Collections.Generic.Dictionary`2<TKey_INT, TValue_REF>:System.Collections.Generic.IDictionary<TKey,TValue>.get_Values ()",
      "code_size" : "146",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.get_Values",
      "signature" : "System.Collections.Generic.IEnumerable`1<TValue_REF> System.Collections.Generic.Dictionary`2<TKey_INT, TValue_REF>:System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.get_Values ()",
      "code_size" : "146",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Item",
      "signature" : "TValue_REF System.Collections.Generic.Dictionary`2<TKey_INT, TValue_REF>:get_Item (TKey_INT)",
      "code_size" : "130",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Item",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_INT, TValue_REF>:set_Item (TKey_INT,TValue_REF)",
      "code_size" : "65",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Add",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_INT, TValue_REF>:Add (TKey_INT,TValue_REF)",
      "code_size" : "68",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_INT, TValue_REF>:System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add (System.Collections.Generic.KeyValuePair`2<TKey_INT, TValue_REF>)",
      "code_size" : "188",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains",
      "signature" : "bool System.Collections.Generic.Dictionary`2<TKey_INT, TValue_REF>:System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains (System.Collections.Generic.KeyValuePair`2<TKey_INT, TValue_REF>)",
      "code_size" : "327",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove",
      "signature" : "bool System.Collections.Generic.Dictionary`2<TKey_INT, TValue_REF>:System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove (System.Collections.Generic.KeyValuePair`2<TKey_INT, TValue_REF>)",
      "code_size" : "439",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Clear",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_INT, TValue_REF>:Clear ()",
      "code_size" : "192",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "ContainsKey",
      "signature" : "bool System.Collections.Generic.Dictionary`2<TKey_INT, TValue_REF>:ContainsKey (TKey_INT)",
      "code_size" : "73",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "ContainsValue",
      "signature" : "bool System.Collections.Generic.Dictionary`2<TKey_INT, TValue_REF>:ContainsValue (TValue_REF)",
      "code_size" : "379",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "CopyTo",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_INT, TValue_REF>:CopyTo (System.Collections.Generic.KeyValuePair`2<TKey_INT, TValue_REF>[],int)",
      "code_size" : "552",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetEnumerator",
      "signature" : "System.Collections.Generic.Dictionary`2/Enumerator<TKey_INT, TValue_REF> System.Collections.Generic.Dictionary`2<TKey_INT, TValue_REF>:GetEnumerator ()",
      "code_size" : "309",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator",
      "signature" : "System.Collections.Generic.IEnumerator`1<System.Collections.Generic.KeyValuePair`2<TKey_INT, TValue_REF>> System.Collections.Generic.Dictionary`2<TKey_INT, TValue_REF>:System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator ()",
      "code_size" : "342",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetObjectData",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_INT, TValue_REF>:GetObjectData (System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)",
      "code_size" : "394",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "FindEntry",
      "signature" : "int System.Collections.Generic.Dictionary`2<TKey_INT, TValue_REF>:FindEntry (TKey_INT)",
      "code_size" : "436",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Initialize",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_INT, TValue_REF>:Initialize (int)",
      "code_size" : "247",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Insert",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_INT, TValue_REF>:Insert (TKey_INT,TValue_REF,bool)",
      "code_size" : "1044",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "OnDeserialization",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_INT, TValue_REF>:OnDeserialization (object)",
      "code_size" : "1053",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Resize",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_INT, TValue_REF>:Resize ()",
      "code_size" : "77",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Resize",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_INT, TValue_REF>:Resize (int,bool)",
      "code_size" : "691",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Remove",
      "signature" : "bool System.Collections.Generic.Dictionary`2<TKey_INT, TValue_REF>:Remove (TKey_INT)",
      "code_size" : "880",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "TryGetValue",
      "signature" : "bool System.Collections.Generic.Dictionary`2<TKey_INT, TValue_REF>:TryGetValue (TKey_INT,TValue_REF&)",
      "code_size" : "190",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetValueOrDefault",
      "signature" : "TValue_REF System.Collections.Generic.Dictionary`2<TKey_INT, TValue_REF>:GetValueOrDefault (TKey_INT)",
      "code_size" : "125",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.get_IsReadOnly",
      "signature" : "bool System.Collections.Generic.Dictionary`2<TKey_INT, TValue_REF>:System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.get_IsReadOnly ()",
      "code_size" : "15",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_INT, TValue_REF>:System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo (System.Collections.Generic.KeyValuePair`2<TKey_INT, TValue_REF>[],int)",
      "code_size" : "63",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.ICollection.CopyTo",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_INT, TValue_REF>:System.Collections.ICollection.CopyTo (System.Array,int)",
      "code_size" : "1413",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerable.GetEnumerator",
      "signature" : "System.Collections.IEnumerator System.Collections.Generic.Dictionary`2<TKey_INT, TValue_REF>:System.Collections.IEnumerable.GetEnumerator ()",
      "code_size" : "342",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.ICollection.get_IsSynchronized",
      "signature" : "bool System.Collections.Generic.Dictionary`2<TKey_INT, TValue_REF>:System.Collections.ICollection.get_IsSynchronized ()",
      "code_size" : "15",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.ICollection.get_SyncRoot",
      "signature" : "object System.Collections.Generic.Dictionary`2<TKey_INT, TValue_REF>:System.Collections.ICollection.get_SyncRoot ()",
      "code_size" : "143",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IDictionary.get_IsFixedSize",
      "signature" : "bool System.Collections.Generic.Dictionary`2<TKey_INT, TValue_REF>:System.Collections.IDictionary.get_IsFixedSize ()",
      "code_size" : "15",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IDictionary.get_IsReadOnly",
      "signature" : "bool System.Collections.Generic.Dictionary`2<TKey_INT, TValue_REF>:System.Collections.IDictionary.get_IsReadOnly ()",
      "code_size" : "15",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IDictionary.get_Keys",
      "signature" : "System.Collections.ICollection System.Collections.Generic.Dictionary`2<TKey_INT, TValue_REF>:System.Collections.IDictionary.get_Keys ()",
      "code_size" : "43",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IDictionary.get_Values",
      "signature" : "System.Collections.ICollection System.Collections.Generic.Dictionary`2<TKey_INT, TValue_REF>:System.Collections.IDictionary.get_Values ()",
      "code_size" : "43",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IDictionary.get_Item",
      "signature" : "object System.Collections.Generic.Dictionary`2<TKey_INT, TValue_REF>:System.Collections.IDictionary.get_Item (object)",
      "code_size" : "274",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IDictionary.set_Item",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_INT, TValue_REF>:System.Collections.IDictionary.set_Item (object,object)",
      "code_size" : "393",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsCompatibleKey",
      "signature" : "bool System.Collections.Generic.Dictionary`2<TKey_INT, TValue_REF>:IsCompatibleKey (object)",
      "code_size" : "73",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IDictionary.Add",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_INT, TValue_REF>:System.Collections.IDictionary.Add (object,object)",
      "code_size" : "393",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IDictionary.Contains",
      "signature" : "bool System.Collections.Generic.Dictionary`2<TKey_INT, TValue_REF>:System.Collections.IDictionary.Contains (object)",
      "code_size" : "216",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IDictionary.GetEnumerator",
      "signature" : "System.Collections.IDictionaryEnumerator System.Collections.Generic.Dictionary`2<TKey_INT, TValue_REF>:System.Collections.IDictionary.GetEnumerator ()",
      "code_size" : "342",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IDictionary.Remove",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_INT, TValue_REF>:System.Collections.IDictionary.Remove (object)",
      "code_size" : "209",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.Dictionary`2/KeyCollection<TKey_INT, TValue_REF>:.ctor (System.Collections.Generic.Dictionary`2<TKey_INT, TValue_REF>)",
      "code_size" : "63",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetEnumerator",
      "signature" : "System.Collections.Generic.Dictionary`2/KeyCollection/Enumerator<TKey_INT, TValue_REF> System.Collections.Generic.Dictionary`2/KeyCollection<TKey_INT, TValue_REF>:GetEnumerator ()",
      "code_size" : "202",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "CopyTo",
      "signature" : "void System.Collections.Generic.Dictionary`2/KeyCollection<TKey_INT, TValue_REF>:CopyTo (TKey_INT[],int)",
      "code_size" : "354",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Count",
      "signature" : "int System.Collections.Generic.Dictionary`2/KeyCollection<TKey_INT, TValue_REF>:get_Count ()",
      "code_size" : "47",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<TKey>.get_IsReadOnly",
      "signature" : "bool System.Collections.Generic.Dictionary`2/KeyCollection<TKey_INT, TValue_REF>:System.Collections.Generic.ICollection<TKey>.get_IsReadOnly ()",
      "code_size" : "18",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<TKey>.Add",
      "signature" : "void System.Collections.Generic.Dictionary`2/KeyCollection<TKey_INT, TValue_REF>:System.Collections.Generic.ICollection<TKey>.Add (TKey_INT)",
      "code_size" : "23",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<TKey>.Clear",
      "signature" : "void System.Collections.Generic.Dictionary`2/KeyCollection<TKey_INT, TValue_REF>:System.Collections.Generic.ICollection<TKey>.Clear ()",
      "code_size" : "23",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<TKey>.Contains",
      "signature" : "bool System.Collections.Generic.Dictionary`2/KeyCollection<TKey_INT, TValue_REF>:System.Collections.Generic.ICollection<TKey>.Contains (TKey_INT)",
      "code_size" : "57",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<TKey>.Remove",
      "signature" : "bool System.Collections.Generic.Dictionary`2/KeyCollection<TKey_INT, TValue_REF>:System.Collections.Generic.ICollection<TKey>.Remove (TKey_INT)",
      "code_size" : "25",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.IEnumerable<TKey>.GetEnumerator",
      "signature" : "System.Collections.Generic.IEnumerator`1<TKey_INT> System.Collections.Generic.Dictionary`2/KeyCollection<TKey_INT, TValue_REF>:System.Collections.Generic.IEnumerable<TKey>.GetEnumerator ()",
      "code_size" : "235",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerable.GetEnumerator",
      "signature" : "System.Collections.IEnumerator System.Collections.Generic.Dictionary`2/KeyCollection<TKey_INT, TValue_REF>:System.Collections.IEnumerable.GetEnumerator ()",
      "code_size" : "235",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.ICollection.CopyTo",
      "signature" : "void System.Collections.Generic.Dictionary`2/KeyCollection<TKey_INT, TValue_REF>:System.Collections.ICollection.CopyTo (System.Array,int)",
      "code_size" : "638",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.ICollection.get_IsSynchronized",
      "signature" : "bool System.Collections.Generic.Dictionary`2/KeyCollection<TKey_INT, TValue_REF>:System.Collections.ICollection.get_IsSynchronized ()",
      "code_size" : "15",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.ICollection.get_SyncRoot",
      "signature" : "object System.Collections.Generic.Dictionary`2/KeyCollection<TKey_INT, TValue_REF>:System.Collections.ICollection.get_SyncRoot ()",
      "code_size" : "36",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.Dictionary`2/ValueCollection<TKey_INT, TValue_REF>:.ctor (System.Collections.Generic.Dictionary`2<TKey_INT, TValue_REF>)",
      "code_size" : "63",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetEnumerator",
      "signature" : "System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator<TKey_INT, TValue_REF> System.Collections.Generic.Dictionary`2/ValueCollection<TKey_INT, TValue_REF>:GetEnumerator ()",
      "code_size" : "217",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "CopyTo",
      "signature" : "void System.Collections.Generic.Dictionary`2/ValueCollection<TKey_INT, TValue_REF>:CopyTo (TValue_REF[],int)",
      "code_size" : "339",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Count",
      "signature" : "int System.Collections.Generic.Dictionary`2/ValueCollection<TKey_INT, TValue_REF>:get_Count ()",
      "code_size" : "47",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<TValue>.get_IsReadOnly",
      "signature" : "bool System.Collections.Generic.Dictionary`2/ValueCollection<TKey_INT, TValue_REF>:System.Collections.Generic.ICollection<TValue>.get_IsReadOnly ()",
      "code_size" : "18",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<TValue>.Add",
      "signature" : "void System.Collections.Generic.Dictionary`2/ValueCollection<TKey_INT, TValue_REF>:System.Collections.Generic.ICollection<TValue>.Add (TValue_REF)",
      "code_size" : "23",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<TValue>.Remove",
      "signature" : "bool System.Collections.Generic.Dictionary`2/ValueCollection<TKey_INT, TValue_REF>:System.Collections.Generic.ICollection<TValue>.Remove (TValue_REF)",
      "code_size" : "25",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<TValue>.Clear",
      "signature" : "void System.Collections.Generic.Dictionary`2/ValueCollection<TKey_INT, TValue_REF>:System.Collections.Generic.ICollection<TValue>.Clear ()",
      "code_size" : "23",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<TValue>.Contains",
      "signature" : "bool System.Collections.Generic.Dictionary`2/ValueCollection<TKey_INT, TValue_REF>:System.Collections.Generic.ICollection<TValue>.Contains (TValue_REF)",
      "code_size" : "57",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.IEnumerable<TValue>.GetEnumerator",
      "signature" : "System.Collections.Generic.IEnumerator`1<TValue_REF> System.Collections.Generic.Dictionary`2/ValueCollection<TKey_INT, TValue_REF>:System.Collections.Generic.IEnumerable<TValue>.GetEnumerator ()",
      "code_size" : "250",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerable.GetEnumerator",
      "signature" : "System.Collections.IEnumerator System.Collections.Generic.Dictionary`2/ValueCollection<TKey_INT, TValue_REF>:System.Collections.IEnumerable.GetEnumerator ()",
      "code_size" : "250",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.ICollection.CopyTo",
      "signature" : "void System.Collections.Generic.Dictionary`2/ValueCollection<TKey_INT, TValue_REF>:System.Collections.ICollection.CopyTo (System.Array,int)",
      "code_size" : "587",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.ICollection.get_IsSynchronized",
      "signature" : "bool System.Collections.Generic.Dictionary`2/ValueCollection<TKey_INT, TValue_REF>:System.Collections.ICollection.get_IsSynchronized ()",
      "code_size" : "15",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.ICollection.get_SyncRoot",
      "signature" : "object System.Collections.Generic.Dictionary`2/ValueCollection<TKey_INT, TValue_REF>:System.Collections.ICollection.get_SyncRoot ()",
      "code_size" : "36",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator<TKey_INT, TValue_REF>:.ctor (System.Collections.Generic.Dictionary`2<TKey_INT, TValue_REF>)",
      "code_size" : "90",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator<TKey_INT, TValue_REF>:Dispose ()",
      "code_size" : "18",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "MoveNext",
      "signature" : "bool System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator<TKey_INT, TValue_REF>:MoveNext ()",
      "code_size" : "282",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Current",
      "signature" : "TValue_REF System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator<TKey_INT, TValue_REF>:get_Current ()",
      "code_size" : "25",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerator.get_Current",
      "signature" : "object System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator<TKey_INT, TValue_REF>:System.Collections.IEnumerator.get_Current ()",
      "code_size" : "64",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerator.Reset",
      "signature" : "void System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator<TKey_INT, TValue_REF>:System.Collections.IEnumerator.Reset ()",
      "code_size" : "83",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_REF, TValue_INT>:.ctor ()",
      "code_size" : "47",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_REF, TValue_INT>:.ctor (int)",
      "code_size" : "55",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_REF, TValue_INT>:.ctor (System.Collections.Generic.IEqualityComparer`1<TKey_REF>)",
      "code_size" : "55",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_REF, TValue_INT>:.ctor (int,System.Collections.Generic.IEqualityComparer`1<TKey_REF>)",
      "code_size" : "151",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_REF, TValue_INT>:.ctor (System.Collections.Generic.IDictionary`2<TKey_REF, TValue_INT>)",
      "code_size" : "55",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_REF, TValue_INT>:.ctor (System.Collections.Generic.IDictionary`2<TKey_REF, TValue_INT>,System.Collections.Generic.IEqualityComparer`1<TKey_REF>)",
      "code_size" : "495",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_REF, TValue_INT>:.ctor (System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)",
      "code_size" : "43",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Comparer",
      "signature" : "System.Collections.Generic.IEqualityComparer`1<TKey_REF> System.Collections.Generic.Dictionary`2<TKey_REF, TValue_INT>:get_Comparer ()",
      "code_size" : "20",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Count",
      "signature" : "int System.Collections.Generic.Dictionary`2<TKey_REF, TValue_INT>:get_Count ()",
      "code_size" : "30",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Keys",
      "signature" : "System.Collections.Generic.Dictionary`2/KeyCollection<TKey_REF, TValue_INT> System.Collections.Generic.Dictionary`2<TKey_REF, TValue_INT>:get_Keys ()",
      "code_size" : "146",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.IDictionary<TKey,TValue>.get_Keys",
      "signature" : "System.Collections.Generic.ICollection`1<TKey_REF> System.Collections.Generic.Dictionary`2<TKey_REF, TValue_INT>:System.Collections.Generic.IDictionary<TKey,TValue>.get_Keys ()",
      "code_size" : "146",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.get_Keys",
      "signature" : "System.Collections.Generic.IEnumerable`1<TKey_REF> System.Collections.Generic.Dictionary`2<TKey_REF, TValue_INT>:System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.get_Keys ()",
      "code_size" : "146",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Values",
      "signature" : "System.Collections.Generic.Dictionary`2/ValueCollection<TKey_REF, TValue_INT> System.Collections.Generic.Dictionary`2<TKey_REF, TValue_INT>:get_Values ()",
      "code_size" : "146",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.IDictionary<TKey,TValue>.get_Values",
      "signature" : "System.Collections.Generic.ICollection`1<TValue_INT> System.Collections.Generic.Dictionary`2<TKey_REF, TValue_INT>:System.Collections.Generic.IDictionary<TKey,TValue>.get_Values ()",
      "code_size" : "146",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.get_Values",
      "signature" : "System.Collections.Generic.IEnumerable`1<TValue_INT> System.Collections.Generic.Dictionary`2<TKey_REF, TValue_INT>:System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.get_Values ()",
      "code_size" : "146",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Item",
      "signature" : "TValue_INT System.Collections.Generic.Dictionary`2<TKey_REF, TValue_INT>:get_Item (TKey_REF)",
      "code_size" : "130",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Item",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_REF, TValue_INT>:set_Item (TKey_REF,TValue_INT)",
      "code_size" : "65",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Add",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_REF, TValue_INT>:Add (TKey_REF,TValue_INT)",
      "code_size" : "68",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_REF, TValue_INT>:System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add (System.Collections.Generic.KeyValuePair`2<TKey_REF, TValue_INT>)",
      "code_size" : "188",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains",
      "signature" : "bool System.Collections.Generic.Dictionary`2<TKey_REF, TValue_INT>:System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains (System.Collections.Generic.KeyValuePair`2<TKey_REF, TValue_INT>)",
      "code_size" : "344",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove",
      "signature" : "bool System.Collections.Generic.Dictionary`2<TKey_REF, TValue_INT>:System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove (System.Collections.Generic.KeyValuePair`2<TKey_REF, TValue_INT>)",
      "code_size" : "456",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Clear",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_REF, TValue_INT>:Clear ()",
      "code_size" : "192",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "ContainsKey",
      "signature" : "bool System.Collections.Generic.Dictionary`2<TKey_REF, TValue_INT>:ContainsKey (TKey_REF)",
      "code_size" : "73",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "ContainsValue",
      "signature" : "bool System.Collections.Generic.Dictionary`2<TKey_REF, TValue_INT>:ContainsValue (TValue_INT)",
      "code_size" : "387",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "CopyTo",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_REF, TValue_INT>:CopyTo (System.Collections.Generic.KeyValuePair`2<TKey_REF, TValue_INT>[],int)",
      "code_size" : "571",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetEnumerator",
      "signature" : "System.Collections.Generic.Dictionary`2/Enumerator<TKey_REF, TValue_INT> System.Collections.Generic.Dictionary`2<TKey_REF, TValue_INT>:GetEnumerator ()",
      "code_size" : "309",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator",
      "signature" : "System.Collections.Generic.IEnumerator`1<System.Collections.Generic.KeyValuePair`2<TKey_REF, TValue_INT>> System.Collections.Generic.Dictionary`2<TKey_REF, TValue_INT>:System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator ()",
      "code_size" : "342",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetObjectData",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_REF, TValue_INT>:GetObjectData (System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)",
      "code_size" : "394",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "FindEntry",
      "signature" : "int System.Collections.Generic.Dictionary`2<TKey_REF, TValue_INT>:FindEntry (TKey_REF)",
      "code_size" : "444",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Initialize",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_REF, TValue_INT>:Initialize (int)",
      "code_size" : "247",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Insert",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_REF, TValue_INT>:Insert (TKey_REF,TValue_INT,bool)",
      "code_size" : "1038",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "OnDeserialization",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_REF, TValue_INT>:OnDeserialization (object)",
      "code_size" : "1057",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Resize",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_REF, TValue_INT>:Resize ()",
      "code_size" : "77",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Resize",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_REF, TValue_INT>:Resize (int,bool)",
      "code_size" : "691",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Remove",
      "signature" : "bool System.Collections.Generic.Dictionary`2<TKey_REF, TValue_INT>:Remove (TKey_REF)",
      "code_size" : "880",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "TryGetValue",
      "signature" : "bool System.Collections.Generic.Dictionary`2<TKey_REF, TValue_INT>:TryGetValue (TKey_REF,TValue_INT&)",
      "code_size" : "153",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetValueOrDefault",
      "signature" : "TValue_INT System.Collections.Generic.Dictionary`2<TKey_REF, TValue_INT>:GetValueOrDefault (TKey_REF)",
      "code_size" : "125",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.get_IsReadOnly",
      "signature" : "bool System.Collections.Generic.Dictionary`2<TKey_REF, TValue_INT>:System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.get_IsReadOnly ()",
      "code_size" : "15",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_REF, TValue_INT>:System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo (System.Collections.Generic.KeyValuePair`2<TKey_REF, TValue_INT>[],int)",
      "code_size" : "63",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.ICollection.CopyTo",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_REF, TValue_INT>:System.Collections.ICollection.CopyTo (System.Array,int)",
      "code_size" : "1449",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerable.GetEnumerator",
      "signature" : "System.Collections.IEnumerator System.Collections.Generic.Dictionary`2<TKey_REF, TValue_INT>:System.Collections.IEnumerable.GetEnumerator ()",
      "code_size" : "342",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.ICollection.get_IsSynchronized",
      "signature" : "bool System.Collections.Generic.Dictionary`2<TKey_REF, TValue_INT>:System.Collections.ICollection.get_IsSynchronized ()",
      "code_size" : "15",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.ICollection.get_SyncRoot",
      "signature" : "object System.Collections.Generic.Dictionary`2<TKey_REF, TValue_INT>:System.Collections.ICollection.get_SyncRoot ()",
      "code_size" : "143",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IDictionary.get_IsFixedSize",
      "signature" : "bool System.Collections.Generic.Dictionary`2<TKey_REF, TValue_INT>:System.Collections.IDictionary.get_IsFixedSize ()",
      "code_size" : "15",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IDictionary.get_IsReadOnly",
      "signature" : "bool System.Collections.Generic.Dictionary`2<TKey_REF, TValue_INT>:System.Collections.IDictionary.get_IsReadOnly ()",
      "code_size" : "15",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IDictionary.get_Keys",
      "signature" : "System.Collections.ICollection System.Collections.Generic.Dictionary`2<TKey_REF, TValue_INT>:System.Collections.IDictionary.get_Keys ()",
      "code_size" : "43",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IDictionary.get_Values",
      "signature" : "System.Collections.ICollection System.Collections.Generic.Dictionary`2<TKey_REF, TValue_INT>:System.Collections.IDictionary.get_Values ()",
      "code_size" : "43",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IDictionary.get_Item",
      "signature" : "object System.Collections.Generic.Dictionary`2<TKey_REF, TValue_INT>:System.Collections.IDictionary.get_Item (object)",
      "code_size" : "259",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IDictionary.set_Item",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_REF, TValue_INT>:System.Collections.IDictionary.set_Item (object,object)",
      "code_size" : "411",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsCompatibleKey",
      "signature" : "bool System.Collections.Generic.Dictionary`2<TKey_REF, TValue_INT>:IsCompatibleKey (object)",
      "code_size" : "73",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IDictionary.Add",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_REF, TValue_INT>:System.Collections.IDictionary.Add (object,object)",
      "code_size" : "411",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IDictionary.Contains",
      "signature" : "bool System.Collections.Generic.Dictionary`2<TKey_REF, TValue_INT>:System.Collections.IDictionary.Contains (object)",
      "code_size" : "152",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IDictionary.GetEnumerator",
      "signature" : "System.Collections.IDictionaryEnumerator System.Collections.Generic.Dictionary`2<TKey_REF, TValue_INT>:System.Collections.IDictionary.GetEnumerator ()",
      "code_size" : "342",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IDictionary.Remove",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_REF, TValue_INT>:System.Collections.IDictionary.Remove (object)",
      "code_size" : "145",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.Dictionary`2/KeyCollection<TKey_REF, TValue_INT>:.ctor (System.Collections.Generic.Dictionary`2<TKey_REF, TValue_INT>)",
      "code_size" : "63",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetEnumerator",
      "signature" : "System.Collections.Generic.Dictionary`2/KeyCollection/Enumerator<TKey_REF, TValue_INT> System.Collections.Generic.Dictionary`2/KeyCollection<TKey_REF, TValue_INT>:GetEnumerator ()",
      "code_size" : "217",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "CopyTo",
      "signature" : "void System.Collections.Generic.Dictionary`2/KeyCollection<TKey_REF, TValue_INT>:CopyTo (TKey_REF[],int)",
      "code_size" : "339",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Count",
      "signature" : "int System.Collections.Generic.Dictionary`2/KeyCollection<TKey_REF, TValue_INT>:get_Count ()",
      "code_size" : "47",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<TKey>.get_IsReadOnly",
      "signature" : "bool System.Collections.Generic.Dictionary`2/KeyCollection<TKey_REF, TValue_INT>:System.Collections.Generic.ICollection<TKey>.get_IsReadOnly ()",
      "code_size" : "18",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<TKey>.Add",
      "signature" : "void System.Collections.Generic.Dictionary`2/KeyCollection<TKey_REF, TValue_INT>:System.Collections.Generic.ICollection<TKey>.Add (TKey_REF)",
      "code_size" : "23",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<TKey>.Clear",
      "signature" : "void System.Collections.Generic.Dictionary`2/KeyCollection<TKey_REF, TValue_INT>:System.Collections.Generic.ICollection<TKey>.Clear ()",
      "code_size" : "23",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<TKey>.Contains",
      "signature" : "bool System.Collections.Generic.Dictionary`2/KeyCollection<TKey_REF, TValue_INT>:System.Collections.Generic.ICollection<TKey>.Contains (TKey_REF)",
      "code_size" : "57",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<TKey>.Remove",
      "signature" : "bool System.Collections.Generic.Dictionary`2/KeyCollection<TKey_REF, TValue_INT>:System.Collections.Generic.ICollection<TKey>.Remove (TKey_REF)",
      "code_size" : "25",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.IEnumerable<TKey>.GetEnumerator",
      "signature" : "System.Collections.Generic.IEnumerator`1<TKey_REF> System.Collections.Generic.Dictionary`2/KeyCollection<TKey_REF, TValue_INT>:System.Collections.Generic.IEnumerable<TKey>.GetEnumerator ()",
      "code_size" : "250",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerable.GetEnumerator",
      "signature" : "System.Collections.IEnumerator System.Collections.Generic.Dictionary`2/KeyCollection<TKey_REF, TValue_INT>:System.Collections.IEnumerable.GetEnumerator ()",
      "code_size" : "250",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.ICollection.CopyTo",
      "signature" : "void System.Collections.Generic.Dictionary`2/KeyCollection<TKey_REF, TValue_INT>:System.Collections.ICollection.CopyTo (System.Array,int)",
      "code_size" : "587",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.ICollection.get_IsSynchronized",
      "signature" : "bool System.Collections.Generic.Dictionary`2/KeyCollection<TKey_REF, TValue_INT>:System.Collections.ICollection.get_IsSynchronized ()",
      "code_size" : "15",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.ICollection.get_SyncRoot",
      "signature" : "object System.Collections.Generic.Dictionary`2/KeyCollection<TKey_REF, TValue_INT>:System.Collections.ICollection.get_SyncRoot ()",
      "code_size" : "36",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.Dictionary`2/ValueCollection<TKey_REF, TValue_INT>:.ctor (System.Collections.Generic.Dictionary`2<TKey_REF, TValue_INT>)",
      "code_size" : "63",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetEnumerator",
      "signature" : "System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator<TKey_REF, TValue_INT> System.Collections.Generic.Dictionary`2/ValueCollection<TKey_REF, TValue_INT>:GetEnumerator ()",
      "code_size" : "202",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "CopyTo",
      "signature" : "void System.Collections.Generic.Dictionary`2/ValueCollection<TKey_REF, TValue_INT>:CopyTo (TValue_INT[],int)",
      "code_size" : "354",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Count",
      "signature" : "int System.Collections.Generic.Dictionary`2/ValueCollection<TKey_REF, TValue_INT>:get_Count ()",
      "code_size" : "47",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<TValue>.get_IsReadOnly",
      "signature" : "bool System.Collections.Generic.Dictionary`2/ValueCollection<TKey_REF, TValue_INT>:System.Collections.Generic.ICollection<TValue>.get_IsReadOnly ()",
      "code_size" : "18",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<TValue>.Add",
      "signature" : "void System.Collections.Generic.Dictionary`2/ValueCollection<TKey_REF, TValue_INT>:System.Collections.Generic.ICollection<TValue>.Add (TValue_INT)",
      "code_size" : "23",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<TValue>.Remove",
      "signature" : "bool System.Collections.Generic.Dictionary`2/ValueCollection<TKey_REF, TValue_INT>:System.Collections.Generic.ICollection<TValue>.Remove (TValue_INT)",
      "code_size" : "25",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<TValue>.Clear",
      "signature" : "void System.Collections.Generic.Dictionary`2/ValueCollection<TKey_REF, TValue_INT>:System.Collections.Generic.ICollection<TValue>.Clear ()",
      "code_size" : "23",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<TValue>.Contains",
      "signature" : "bool System.Collections.Generic.Dictionary`2/ValueCollection<TKey_REF, TValue_INT>:System.Collections.Generic.ICollection<TValue>.Contains (TValue_INT)",
      "code_size" : "57",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.IEnumerable<TValue>.GetEnumerator",
      "signature" : "System.Collections.Generic.IEnumerator`1<TValue_INT> System.Collections.Generic.Dictionary`2/ValueCollection<TKey_REF, TValue_INT>:System.Collections.Generic.IEnumerable<TValue>.GetEnumerator ()",
      "code_size" : "235",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerable.GetEnumerator",
      "signature" : "System.Collections.IEnumerator System.Collections.Generic.Dictionary`2/ValueCollection<TKey_REF, TValue_INT>:System.Collections.IEnumerable.GetEnumerator ()",
      "code_size" : "235",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.ICollection.CopyTo",
      "signature" : "void System.Collections.Generic.Dictionary`2/ValueCollection<TKey_REF, TValue_INT>:System.Collections.ICollection.CopyTo (System.Array,int)",
      "code_size" : "638",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.ICollection.get_IsSynchronized",
      "signature" : "bool System.Collections.Generic.Dictionary`2/ValueCollection<TKey_REF, TValue_INT>:System.Collections.ICollection.get_IsSynchronized ()",
      "code_size" : "15",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.ICollection.get_SyncRoot",
      "signature" : "object System.Collections.Generic.Dictionary`2/ValueCollection<TKey_REF, TValue_INT>:System.Collections.ICollection.get_SyncRoot ()",
      "code_size" : "36",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Array/InternalEnumerator`1<Mono.CompilerServices.SymbolWriter.CapturedVariable>:.ctor (System.Array)",
      "code_size" : "49",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Array/InternalEnumerator`1<Mono.CompilerServices.SymbolWriter.CapturedVariable>:Dispose ()",
      "code_size" : "23",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "MoveNext",
      "signature" : "bool System.Array/InternalEnumerator`1<Mono.CompilerServices.SymbolWriter.CapturedVariable>:MoveNext ()",
      "code_size" : "95",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Current",
      "signature" : "Mono.CompilerServices.SymbolWriter.CapturedVariable System.Array/InternalEnumerator`1<Mono.CompilerServices.SymbolWriter.CapturedVariable>:get_Current ()",
      "code_size" : "247",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerator.Reset",
      "signature" : "void System.Array/InternalEnumerator`1<Mono.CompilerServices.SymbolWriter.CapturedVariable>:System.Collections.IEnumerator.Reset ()",
      "code_size" : "23",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerator.get_Current",
      "signature" : "object System.Array/InternalEnumerator`1<Mono.CompilerServices.SymbolWriter.CapturedVariable>:System.Collections.IEnumerator.get_Current ()",
      "code_size" : "158",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__IEnumerable_GetEnumerator",
      "signature" : "System.Collections.Generic.IEnumerator`1<Mono.CompilerServices.SymbolWriter.CapturedVariable> System.Array:InternalArray__IEnumerable_GetEnumerator<Mono.CompilerServices.SymbolWriter.CapturedVariable> ()",
      "code_size" : "151",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__ICollection_Add",
      "signature" : "void System.Array:InternalArray__ICollection_Add<Mono.CompilerServices.SymbolWriter.CapturedVariable> (Mono.CompilerServices.SymbolWriter.CapturedVariable)",
      "code_size" : "41",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__ICollection_Remove",
      "signature" : "bool System.Array:InternalArray__ICollection_Remove<Mono.CompilerServices.SymbolWriter.CapturedVariable> (Mono.CompilerServices.SymbolWriter.CapturedVariable)",
      "code_size" : "41",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__ICollection_Contains",
      "signature" : "bool System.Array:InternalArray__ICollection_Contains<Mono.CompilerServices.SymbolWriter.CapturedVariable> (Mono.CompilerServices.SymbolWriter.CapturedVariable)",
      "code_size" : "527",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__ICollection_CopyTo",
      "signature" : "void System.Array:InternalArray__ICollection_CopyTo<Mono.CompilerServices.SymbolWriter.CapturedVariable> (Mono.CompilerServices.SymbolWriter.CapturedVariable[],int)",
      "code_size" : "487",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.EqualityComparer`1<Mono.CompilerServices.SymbolWriter.CapturedVariable>:.ctor ()",
      "code_size" : "9",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Default",
      "signature" : "System.Collections.Generic.EqualityComparer`1<Mono.CompilerServices.SymbolWriter.CapturedVariable> System.Collections.Generic.EqualityComparer`1<Mono.CompilerServices.SymbolWriter.CapturedVariable>:get_Default ()",
      "code_size" : "66",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateComparer",
      "signature" : "System.Collections.Generic.EqualityComparer`1<Mono.CompilerServices.SymbolWriter.CapturedVariable> System.Collections.Generic.EqualityComparer`1<Mono.CompilerServices.SymbolWriter.CapturedVariable>:CreateComparer ()",
      "code_size" : "1064",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "IndexOf",
      "signature" : "int System.Collections.Generic.EqualityComparer`1<Mono.CompilerServices.SymbolWriter.CapturedVariable>:IndexOf (Mono.CompilerServices.SymbolWriter.CapturedVariable[],Mono.CompilerServices.SymbolWriter.CapturedVariable,int,int)",
      "code_size" : "240",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "LastIndexOf",
      "signature" : "int System.Collections.Generic.EqualityComparer`1<Mono.CompilerServices.SymbolWriter.CapturedVariable>:LastIndexOf (Mono.CompilerServices.SymbolWriter.CapturedVariable[],Mono.CompilerServices.SymbolWriter.CapturedVariable,int,int)",
      "code_size" : "247",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEqualityComparer.GetHashCode",
      "signature" : "int System.Collections.Generic.EqualityComparer`1<Mono.CompilerServices.SymbolWriter.CapturedVariable>:System.Collections.IEqualityComparer.GetHashCode (object)",
      "code_size" : "238",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEqualityComparer.Equals",
      "signature" : "bool System.Collections.Generic.EqualityComparer`1<Mono.CompilerServices.SymbolWriter.CapturedVariable>:System.Collections.IEqualityComparer.Equals (object,object)",
      "code_size" : "424",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "invoke_bool_T",
      "signature" : "(wrapper delegate-invoke) bool System.Predicate`1<Mono.CompilerServices.SymbolWriter.CapturedVariable>:invoke_bool_T (Mono.CompilerServices.SymbolWriter.CapturedVariable)",
      "code_size" : "316",
      "class" : "Predicate`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_void_T",
      "signature" : "(wrapper delegate-invoke) void System.Action`1<Mono.CompilerServices.SymbolWriter.CapturedVariable>:invoke_void_T (Mono.CompilerServices.SymbolWriter.CapturedVariable)",
      "code_size" : "310",
      "class" : "Action`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_int_T_T",
      "signature" : "(wrapper delegate-invoke) int System.Comparison`1<Mono.CompilerServices.SymbolWriter.CapturedVariable>:invoke_int_T_T (Mono.CompilerServices.SymbolWriter.CapturedVariable,Mono.CompilerServices.SymbolWriter.CapturedVariable)",
      "code_size" : "391",
      "class" : "Comparison`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Array/InternalEnumerator`1<Mono.CompilerServices.SymbolWriter.CapturedScope>:.ctor (System.Array)",
      "code_size" : "49",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Array/InternalEnumerator`1<Mono.CompilerServices.SymbolWriter.CapturedScope>:Dispose ()",
      "code_size" : "23",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "MoveNext",
      "signature" : "bool System.Array/InternalEnumerator`1<Mono.CompilerServices.SymbolWriter.CapturedScope>:MoveNext ()",
      "code_size" : "95",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Current",
      "signature" : "Mono.CompilerServices.SymbolWriter.CapturedScope System.Array/InternalEnumerator`1<Mono.CompilerServices.SymbolWriter.CapturedScope>:get_Current ()",
      "code_size" : "194",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerator.Reset",
      "signature" : "void System.Array/InternalEnumerator`1<Mono.CompilerServices.SymbolWriter.CapturedScope>:System.Collections.IEnumerator.Reset ()",
      "code_size" : "23",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerator.get_Current",
      "signature" : "object System.Array/InternalEnumerator`1<Mono.CompilerServices.SymbolWriter.CapturedScope>:System.Collections.IEnumerator.get_Current ()",
      "code_size" : "102",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__IEnumerable_GetEnumerator",
      "signature" : "System.Collections.Generic.IEnumerator`1<Mono.CompilerServices.SymbolWriter.CapturedScope> System.Array:InternalArray__IEnumerable_GetEnumerator<Mono.CompilerServices.SymbolWriter.CapturedScope> ()",
      "code_size" : "151",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__ICollection_Add",
      "signature" : "void System.Array:InternalArray__ICollection_Add<Mono.CompilerServices.SymbolWriter.CapturedScope> (Mono.CompilerServices.SymbolWriter.CapturedScope)",
      "code_size" : "40",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__ICollection_Remove",
      "signature" : "bool System.Array:InternalArray__ICollection_Remove<Mono.CompilerServices.SymbolWriter.CapturedScope> (Mono.CompilerServices.SymbolWriter.CapturedScope)",
      "code_size" : "40",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__ICollection_Contains",
      "signature" : "bool System.Array:InternalArray__ICollection_Contains<Mono.CompilerServices.SymbolWriter.CapturedScope> (Mono.CompilerServices.SymbolWriter.CapturedScope)",
      "code_size" : "396",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__ICollection_CopyTo",
      "signature" : "void System.Array:InternalArray__ICollection_CopyTo<Mono.CompilerServices.SymbolWriter.CapturedScope> (Mono.CompilerServices.SymbolWriter.CapturedScope[],int)",
      "code_size" : "487",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.EqualityComparer`1<Mono.CompilerServices.SymbolWriter.CapturedScope>:.ctor ()",
      "code_size" : "9",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Default",
      "signature" : "System.Collections.Generic.EqualityComparer`1<Mono.CompilerServices.SymbolWriter.CapturedScope> System.Collections.Generic.EqualityComparer`1<Mono.CompilerServices.SymbolWriter.CapturedScope>:get_Default ()",
      "code_size" : "66",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateComparer",
      "signature" : "System.Collections.Generic.EqualityComparer`1<Mono.CompilerServices.SymbolWriter.CapturedScope> System.Collections.Generic.EqualityComparer`1<Mono.CompilerServices.SymbolWriter.CapturedScope>:CreateComparer ()",
      "code_size" : "1064",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "IndexOf",
      "signature" : "int System.Collections.Generic.EqualityComparer`1<Mono.CompilerServices.SymbolWriter.CapturedScope>:IndexOf (Mono.CompilerServices.SymbolWriter.CapturedScope[],Mono.CompilerServices.SymbolWriter.CapturedScope,int,int)",
      "code_size" : "211",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "LastIndexOf",
      "signature" : "int System.Collections.Generic.EqualityComparer`1<Mono.CompilerServices.SymbolWriter.CapturedScope>:LastIndexOf (Mono.CompilerServices.SymbolWriter.CapturedScope[],Mono.CompilerServices.SymbolWriter.CapturedScope,int,int)",
      "code_size" : "218",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEqualityComparer.GetHashCode",
      "signature" : "int System.Collections.Generic.EqualityComparer`1<Mono.CompilerServices.SymbolWriter.CapturedScope>:System.Collections.IEqualityComparer.GetHashCode (object)",
      "code_size" : "220",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEqualityComparer.Equals",
      "signature" : "bool System.Collections.Generic.EqualityComparer`1<Mono.CompilerServices.SymbolWriter.CapturedScope>:System.Collections.IEqualityComparer.Equals (object,object)",
      "code_size" : "382",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "invoke_bool_T",
      "signature" : "(wrapper delegate-invoke) bool System.Predicate`1<Mono.CompilerServices.SymbolWriter.CapturedScope>:invoke_bool_T (Mono.CompilerServices.SymbolWriter.CapturedScope)",
      "code_size" : "276",
      "class" : "Predicate`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_void_T",
      "signature" : "(wrapper delegate-invoke) void System.Action`1<Mono.CompilerServices.SymbolWriter.CapturedScope>:invoke_void_T (Mono.CompilerServices.SymbolWriter.CapturedScope)",
      "code_size" : "270",
      "class" : "Action`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_int_T_T",
      "signature" : "(wrapper delegate-invoke) int System.Comparison`1<Mono.CompilerServices.SymbolWriter.CapturedScope>:invoke_int_T_T (Mono.CompilerServices.SymbolWriter.CapturedScope,Mono.CompilerServices.SymbolWriter.CapturedScope)",
      "code_size" : "318",
      "class" : "Comparison`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1/Enumerator<Mono.CompilerServices.SymbolWriter.CapturedVariable>:.ctor (System.Collections.Generic.List`1<Mono.CompilerServices.SymbolWriter.CapturedVariable>)",
      "code_size" : "172",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Collections.Generic.List`1/Enumerator<Mono.CompilerServices.SymbolWriter.CapturedVariable>:Dispose ()",
      "code_size" : "9",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "MoveNext",
      "signature" : "bool System.Collections.Generic.List`1/Enumerator<Mono.CompilerServices.SymbolWriter.CapturedVariable>:MoveNext ()",
      "code_size" : "267",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "MoveNextRare",
      "signature" : "bool System.Collections.Generic.List`1/Enumerator<Mono.CompilerServices.SymbolWriter.CapturedVariable>:MoveNextRare ()",
      "code_size" : "219",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Current",
      "signature" : "Mono.CompilerServices.SymbolWriter.CapturedVariable System.Collections.Generic.List`1/Enumerator<Mono.CompilerServices.SymbolWriter.CapturedVariable>:get_Current ()",
      "code_size" : "146",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerator.get_Current",
      "signature" : "object System.Collections.Generic.List`1/Enumerator<Mono.CompilerServices.SymbolWriter.CapturedVariable>:System.Collections.IEnumerator.get_Current ()",
      "code_size" : "217",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerator.Reset",
      "signature" : "void System.Collections.Generic.List`1/Enumerator<Mono.CompilerServices.SymbolWriter.CapturedVariable>:System.Collections.IEnumerator.Reset ()",
      "code_size" : "212",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1/Enumerator<Mono.CompilerServices.SymbolWriter.CapturedScope>:.ctor (System.Collections.Generic.List`1<Mono.CompilerServices.SymbolWriter.CapturedScope>)",
      "code_size" : "114",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Collections.Generic.List`1/Enumerator<Mono.CompilerServices.SymbolWriter.CapturedScope>:Dispose ()",
      "code_size" : "9",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "MoveNext",
      "signature" : "bool System.Collections.Generic.List`1/Enumerator<Mono.CompilerServices.SymbolWriter.CapturedScope>:MoveNext ()",
      "code_size" : "205",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "MoveNextRare",
      "signature" : "bool System.Collections.Generic.List`1/Enumerator<Mono.CompilerServices.SymbolWriter.CapturedScope>:MoveNextRare ()",
      "code_size" : "146",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Current",
      "signature" : "Mono.CompilerServices.SymbolWriter.CapturedScope System.Collections.Generic.List`1/Enumerator<Mono.CompilerServices.SymbolWriter.CapturedScope>:get_Current ()",
      "code_size" : "84",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerator.get_Current",
      "signature" : "object System.Collections.Generic.List`1/Enumerator<Mono.CompilerServices.SymbolWriter.CapturedScope>:System.Collections.IEnumerator.get_Current ()",
      "code_size" : "152",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerator.Reset",
      "signature" : "void System.Collections.Generic.List`1/Enumerator<Mono.CompilerServices.SymbolWriter.CapturedScope>:System.Collections.IEnumerator.Reset ()",
      "code_size" : "139",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Array/InternalEnumerator`1<Mono.CompilerServices.SymbolWriter.NamespaceEntry>:.ctor (System.Array)",
      "code_size" : "49",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Array/InternalEnumerator`1<Mono.CompilerServices.SymbolWriter.NamespaceEntry>:Dispose ()",
      "code_size" : "23",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "MoveNext",
      "signature" : "bool System.Array/InternalEnumerator`1<Mono.CompilerServices.SymbolWriter.NamespaceEntry>:MoveNext ()",
      "code_size" : "95",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Current",
      "signature" : "Mono.CompilerServices.SymbolWriter.NamespaceEntry System.Array/InternalEnumerator`1<Mono.CompilerServices.SymbolWriter.NamespaceEntry>:get_Current ()",
      "code_size" : "234",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerator.Reset",
      "signature" : "void System.Array/InternalEnumerator`1<Mono.CompilerServices.SymbolWriter.NamespaceEntry>:System.Collections.IEnumerator.Reset ()",
      "code_size" : "23",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerator.get_Current",
      "signature" : "object System.Array/InternalEnumerator`1<Mono.CompilerServices.SymbolWriter.NamespaceEntry>:System.Collections.IEnumerator.get_Current ()",
      "code_size" : "145",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__IEnumerable_GetEnumerator",
      "signature" : "System.Collections.Generic.IEnumerator`1<Mono.CompilerServices.SymbolWriter.NamespaceEntry> System.Array:InternalArray__IEnumerable_GetEnumerator<Mono.CompilerServices.SymbolWriter.NamespaceEntry> ()",
      "code_size" : "151",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__ICollection_Add",
      "signature" : "void System.Array:InternalArray__ICollection_Add<Mono.CompilerServices.SymbolWriter.NamespaceEntry> (Mono.CompilerServices.SymbolWriter.NamespaceEntry)",
      "code_size" : "41",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__ICollection_Remove",
      "signature" : "bool System.Array:InternalArray__ICollection_Remove<Mono.CompilerServices.SymbolWriter.NamespaceEntry> (Mono.CompilerServices.SymbolWriter.NamespaceEntry)",
      "code_size" : "41",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__ICollection_Contains",
      "signature" : "bool System.Array:InternalArray__ICollection_Contains<Mono.CompilerServices.SymbolWriter.NamespaceEntry> (Mono.CompilerServices.SymbolWriter.NamespaceEntry)",
      "code_size" : "493",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__ICollection_CopyTo",
      "signature" : "void System.Array:InternalArray__ICollection_CopyTo<Mono.CompilerServices.SymbolWriter.NamespaceEntry> (Mono.CompilerServices.SymbolWriter.NamespaceEntry[],int)",
      "code_size" : "487",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.EqualityComparer`1<Mono.CompilerServices.SymbolWriter.NamespaceEntry>:.ctor ()",
      "code_size" : "9",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Default",
      "signature" : "System.Collections.Generic.EqualityComparer`1<Mono.CompilerServices.SymbolWriter.NamespaceEntry> System.Collections.Generic.EqualityComparer`1<Mono.CompilerServices.SymbolWriter.NamespaceEntry>:get_Default ()",
      "code_size" : "66",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateComparer",
      "signature" : "System.Collections.Generic.EqualityComparer`1<Mono.CompilerServices.SymbolWriter.NamespaceEntry> System.Collections.Generic.EqualityComparer`1<Mono.CompilerServices.SymbolWriter.NamespaceEntry>:CreateComparer ()",
      "code_size" : "1064",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "IndexOf",
      "signature" : "int System.Collections.Generic.EqualityComparer`1<Mono.CompilerServices.SymbolWriter.NamespaceEntry>:IndexOf (Mono.CompilerServices.SymbolWriter.NamespaceEntry[],Mono.CompilerServices.SymbolWriter.NamespaceEntry,int,int)",
      "code_size" : "240",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "LastIndexOf",
      "signature" : "int System.Collections.Generic.EqualityComparer`1<Mono.CompilerServices.SymbolWriter.NamespaceEntry>:LastIndexOf (Mono.CompilerServices.SymbolWriter.NamespaceEntry[],Mono.CompilerServices.SymbolWriter.NamespaceEntry,int,int)",
      "code_size" : "247",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEqualityComparer.GetHashCode",
      "signature" : "int System.Collections.Generic.EqualityComparer`1<Mono.CompilerServices.SymbolWriter.NamespaceEntry>:System.Collections.IEqualityComparer.GetHashCode (object)",
      "code_size" : "238",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEqualityComparer.Equals",
      "signature" : "bool System.Collections.Generic.EqualityComparer`1<Mono.CompilerServices.SymbolWriter.NamespaceEntry>:System.Collections.IEqualityComparer.Equals (object,object)",
      "code_size" : "424",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "invoke_bool_T",
      "signature" : "(wrapper delegate-invoke) bool System.Predicate`1<Mono.CompilerServices.SymbolWriter.NamespaceEntry>:invoke_bool_T (Mono.CompilerServices.SymbolWriter.NamespaceEntry)",
      "code_size" : "316",
      "class" : "Predicate`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_void_T",
      "signature" : "(wrapper delegate-invoke) void System.Action`1<Mono.CompilerServices.SymbolWriter.NamespaceEntry>:invoke_void_T (Mono.CompilerServices.SymbolWriter.NamespaceEntry)",
      "code_size" : "310",
      "class" : "Action`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_int_T_T",
      "signature" : "(wrapper delegate-invoke) int System.Comparison`1<Mono.CompilerServices.SymbolWriter.NamespaceEntry>:invoke_int_T_T (Mono.CompilerServices.SymbolWriter.NamespaceEntry,Mono.CompilerServices.SymbolWriter.NamespaceEntry)",
      "code_size" : "391",
      "class" : "Comparison`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1/Enumerator<Mono.CompilerServices.SymbolWriter.NamespaceEntry>:.ctor (System.Collections.Generic.List`1<Mono.CompilerServices.SymbolWriter.NamespaceEntry>)",
      "code_size" : "159",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Collections.Generic.List`1/Enumerator<Mono.CompilerServices.SymbolWriter.NamespaceEntry>:Dispose ()",
      "code_size" : "9",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "MoveNext",
      "signature" : "bool System.Collections.Generic.List`1/Enumerator<Mono.CompilerServices.SymbolWriter.NamespaceEntry>:MoveNext ()",
      "code_size" : "254",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "MoveNextRare",
      "signature" : "bool System.Collections.Generic.List`1/Enumerator<Mono.CompilerServices.SymbolWriter.NamespaceEntry>:MoveNextRare ()",
      "code_size" : "206",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Current",
      "signature" : "Mono.CompilerServices.SymbolWriter.NamespaceEntry System.Collections.Generic.List`1/Enumerator<Mono.CompilerServices.SymbolWriter.NamespaceEntry>:get_Current ()",
      "code_size" : "133",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerator.get_Current",
      "signature" : "object System.Collections.Generic.List`1/Enumerator<Mono.CompilerServices.SymbolWriter.NamespaceEntry>:System.Collections.IEnumerator.get_Current ()",
      "code_size" : "204",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerator.Reset",
      "signature" : "void System.Collections.Generic.List`1/Enumerator<Mono.CompilerServices.SymbolWriter.NamespaceEntry>:System.Collections.IEnumerator.Reset ()",
      "code_size" : "199",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "invoke_bool_T",
      "signature" : "(wrapper delegate-invoke) bool System.Predicate`1<Mono.CompilerServices.SymbolWriter.LineNumberEntry>:invoke_bool_T (Mono.CompilerServices.SymbolWriter.LineNumberEntry)",
      "code_size" : "258",
      "class" : "Predicate`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_void_T",
      "signature" : "(wrapper delegate-invoke) void System.Action`1<Mono.CompilerServices.SymbolWriter.LineNumberEntry>:invoke_void_T (Mono.CompilerServices.SymbolWriter.LineNumberEntry)",
      "code_size" : "252",
      "class" : "Action`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_int_T_T",
      "signature" : "(wrapper delegate-invoke) int System.Comparison`1<Mono.CompilerServices.SymbolWriter.LineNumberEntry>:invoke_int_T_T (Mono.CompilerServices.SymbolWriter.LineNumberEntry,Mono.CompilerServices.SymbolWriter.LineNumberEntry)",
      "code_size" : "282",
      "class" : "Comparison`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.KeyValuePair`2<string, Mono.CompilerServices.SymbolWriter.LocalVariableEntry>:.ctor (string,Mono.CompilerServices.SymbolWriter.LocalVariableEntry)",
      "code_size" : "101",
      "class" : "KeyValuePair`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Key",
      "signature" : "string System.Collections.Generic.KeyValuePair`2<string, Mono.CompilerServices.SymbolWriter.LocalVariableEntry>:get_Key ()",
      "code_size" : "19",
      "class" : "KeyValuePair`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Value",
      "signature" : "Mono.CompilerServices.SymbolWriter.LocalVariableEntry System.Collections.Generic.KeyValuePair`2<string, Mono.CompilerServices.SymbolWriter.LocalVariableEntry>:get_Value ()",
      "code_size" : "118",
      "class" : "KeyValuePair`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "ToString",
      "signature" : "string System.Collections.Generic.KeyValuePair`2<string, Mono.CompilerServices.SymbolWriter.LocalVariableEntry>:ToString ()",
      "code_size" : "270",
      "class" : "KeyValuePair`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Array/InternalEnumerator`1<System.Collections.Generic.KeyValuePair`2<string, Mono.CompilerServices.SymbolWriter.LocalVariableEntry>>:.ctor (System.Array)",
      "code_size" : "49",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Array/InternalEnumerator`1<System.Collections.Generic.KeyValuePair`2<string, Mono.CompilerServices.SymbolWriter.LocalVariableEntry>>:Dispose ()",
      "code_size" : "23",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "MoveNext",
      "signature" : "bool System.Array/InternalEnumerator`1<System.Collections.Generic.KeyValuePair`2<string, Mono.CompilerServices.SymbolWriter.LocalVariableEntry>>:MoveNext ()",
      "code_size" : "95",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Current",
      "signature" : "System.Collections.Generic.KeyValuePair`2<string, Mono.CompilerServices.SymbolWriter.LocalVariableEntry> System.Array/InternalEnumerator`1<System.Collections.Generic.KeyValuePair`2<string, Mono.CompilerServices.SymbolWriter.LocalVariableEntry>>:get_Current ()",
      "code_size" : "259",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerator.Reset",
      "signature" : "void System.Array/InternalEnumerator`1<System.Collections.Generic.KeyValuePair`2<string, Mono.CompilerServices.SymbolWriter.LocalVariableEntry>>:System.Collections.IEnumerator.Reset ()",
      "code_size" : "23",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerator.get_Current",
      "signature" : "object System.Array/InternalEnumerator`1<System.Collections.Generic.KeyValuePair`2<string, Mono.CompilerServices.SymbolWriter.LocalVariableEntry>>:System.Collections.IEnumerator.get_Current ()",
      "code_size" : "170",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__IEnumerable_GetEnumerator",
      "signature" : "System.Collections.Generic.IEnumerator`1<System.Collections.Generic.KeyValuePair`2<string, Mono.CompilerServices.SymbolWriter.LocalVariableEntry>> System.Array:InternalArray__IEnumerable_GetEnumerator<System.Collections.Generic.KeyValuePair`2<string, Mono.CompilerServices.SymbolWriter.LocalVariableEntry>> ()",
      "code_size" : "151",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.EqualityComparer`1<Mono.CompilerServices.SymbolWriter.LocalVariableEntry>:.ctor ()",
      "code_size" : "9",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Default",
      "signature" : "System.Collections.Generic.EqualityComparer`1<Mono.CompilerServices.SymbolWriter.LocalVariableEntry> System.Collections.Generic.EqualityComparer`1<Mono.CompilerServices.SymbolWriter.LocalVariableEntry>:get_Default ()",
      "code_size" : "66",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateComparer",
      "signature" : "System.Collections.Generic.EqualityComparer`1<Mono.CompilerServices.SymbolWriter.LocalVariableEntry> System.Collections.Generic.EqualityComparer`1<Mono.CompilerServices.SymbolWriter.LocalVariableEntry>:CreateComparer ()",
      "code_size" : "1064",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "IndexOf",
      "signature" : "int System.Collections.Generic.EqualityComparer`1<Mono.CompilerServices.SymbolWriter.LocalVariableEntry>:IndexOf (Mono.CompilerServices.SymbolWriter.LocalVariableEntry[],Mono.CompilerServices.SymbolWriter.LocalVariableEntry,int,int)",
      "code_size" : "240",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "LastIndexOf",
      "signature" : "int System.Collections.Generic.EqualityComparer`1<Mono.CompilerServices.SymbolWriter.LocalVariableEntry>:LastIndexOf (Mono.CompilerServices.SymbolWriter.LocalVariableEntry[],Mono.CompilerServices.SymbolWriter.LocalVariableEntry,int,int)",
      "code_size" : "247",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEqualityComparer.GetHashCode",
      "signature" : "int System.Collections.Generic.EqualityComparer`1<Mono.CompilerServices.SymbolWriter.LocalVariableEntry>:System.Collections.IEqualityComparer.GetHashCode (object)",
      "code_size" : "238",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEqualityComparer.Equals",
      "signature" : "bool System.Collections.Generic.EqualityComparer`1<Mono.CompilerServices.SymbolWriter.LocalVariableEntry>:System.Collections.IEqualityComparer.Equals (object,object)",
      "code_size" : "424",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.Dictionary`2/KeyCollection<string, Mono.CompilerServices.SymbolWriter.LocalVariableEntry>:.ctor (System.Collections.Generic.Dictionary`2<string, Mono.CompilerServices.SymbolWriter.LocalVariableEntry>)",
      "code_size" : "63",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetEnumerator",
      "signature" : "System.Collections.Generic.Dictionary`2/KeyCollection/Enumerator<string, Mono.CompilerServices.SymbolWriter.LocalVariableEntry> System.Collections.Generic.Dictionary`2/KeyCollection<string, Mono.CompilerServices.SymbolWriter.LocalVariableEntry>:GetEnumerator ()",
      "code_size" : "171",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "CopyTo",
      "signature" : "void System.Collections.Generic.Dictionary`2/KeyCollection<string, Mono.CompilerServices.SymbolWriter.LocalVariableEntry>:CopyTo (string[],int)",
      "code_size" : "289",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Count",
      "signature" : "int System.Collections.Generic.Dictionary`2/KeyCollection<string, Mono.CompilerServices.SymbolWriter.LocalVariableEntry>:get_Count ()",
      "code_size" : "36",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<TKey>.get_IsReadOnly",
      "signature" : "bool System.Collections.Generic.Dictionary`2/KeyCollection<string, Mono.CompilerServices.SymbolWriter.LocalVariableEntry>:System.Collections.Generic.ICollection<TKey>.get_IsReadOnly ()",
      "code_size" : "14",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<TKey>.Add",
      "signature" : "void System.Collections.Generic.Dictionary`2/KeyCollection<string, Mono.CompilerServices.SymbolWriter.LocalVariableEntry>:System.Collections.Generic.ICollection<TKey>.Add (string)",
      "code_size" : "19",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<TKey>.Clear",
      "signature" : "void System.Collections.Generic.Dictionary`2/KeyCollection<string, Mono.CompilerServices.SymbolWriter.LocalVariableEntry>:System.Collections.Generic.ICollection<TKey>.Clear ()",
      "code_size" : "19",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<TKey>.Contains",
      "signature" : "bool System.Collections.Generic.Dictionary`2/KeyCollection<string, Mono.CompilerServices.SymbolWriter.LocalVariableEntry>:System.Collections.Generic.ICollection<TKey>.Contains (string)",
      "code_size" : "41",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<TKey>.Remove",
      "signature" : "bool System.Collections.Generic.Dictionary`2/KeyCollection<string, Mono.CompilerServices.SymbolWriter.LocalVariableEntry>:System.Collections.Generic.ICollection<TKey>.Remove (string)",
      "code_size" : "21",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.IEnumerable<TKey>.GetEnumerator",
      "signature" : "System.Collections.Generic.IEnumerator`1<string> System.Collections.Generic.Dictionary`2/KeyCollection<string, Mono.CompilerServices.SymbolWriter.LocalVariableEntry>:System.Collections.Generic.IEnumerable<TKey>.GetEnumerator ()",
      "code_size" : "195",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerable.GetEnumerator",
      "signature" : "System.Collections.IEnumerator System.Collections.Generic.Dictionary`2/KeyCollection<string, Mono.CompilerServices.SymbolWriter.LocalVariableEntry>:System.Collections.IEnumerable.GetEnumerator ()",
      "code_size" : "195",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.ICollection.CopyTo",
      "signature" : "void System.Collections.Generic.Dictionary`2/KeyCollection<string, Mono.CompilerServices.SymbolWriter.LocalVariableEntry>:System.Collections.ICollection.CopyTo (System.Array,int)",
      "code_size" : "553",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.ICollection.get_IsSynchronized",
      "signature" : "bool System.Collections.Generic.Dictionary`2/KeyCollection<string, Mono.CompilerServices.SymbolWriter.LocalVariableEntry>:System.Collections.ICollection.get_IsSynchronized ()",
      "code_size" : "11",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.ICollection.get_SyncRoot",
      "signature" : "object System.Collections.Generic.Dictionary`2/KeyCollection<string, Mono.CompilerServices.SymbolWriter.LocalVariableEntry>:System.Collections.ICollection.get_SyncRoot ()",
      "code_size" : "36",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.Dictionary`2/ValueCollection<string, Mono.CompilerServices.SymbolWriter.LocalVariableEntry>:.ctor (System.Collections.Generic.Dictionary`2<string, Mono.CompilerServices.SymbolWriter.LocalVariableEntry>)",
      "code_size" : "63",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetEnumerator",
      "signature" : "System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator<string, Mono.CompilerServices.SymbolWriter.LocalVariableEntry> System.Collections.Generic.Dictionary`2/ValueCollection<string, Mono.CompilerServices.SymbolWriter.LocalVariableEntry>:GetEnumerator ()",
      "code_size" : "244",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "CopyTo",
      "signature" : "void System.Collections.Generic.Dictionary`2/ValueCollection<string, Mono.CompilerServices.SymbolWriter.LocalVariableEntry>:CopyTo (Mono.CompilerServices.SymbolWriter.LocalVariableEntry[],int)",
      "code_size" : "401",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Count",
      "signature" : "int System.Collections.Generic.Dictionary`2/ValueCollection<string, Mono.CompilerServices.SymbolWriter.LocalVariableEntry>:get_Count ()",
      "code_size" : "36",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<TValue>.get_IsReadOnly",
      "signature" : "bool System.Collections.Generic.Dictionary`2/ValueCollection<string, Mono.CompilerServices.SymbolWriter.LocalVariableEntry>:System.Collections.Generic.ICollection<TValue>.get_IsReadOnly ()",
      "code_size" : "14",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<TValue>.Add",
      "signature" : "void System.Collections.Generic.Dictionary`2/ValueCollection<string, Mono.CompilerServices.SymbolWriter.LocalVariableEntry>:System.Collections.Generic.ICollection<TValue>.Add (Mono.CompilerServices.SymbolWriter.LocalVariableEntry)",
      "code_size" : "20",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<TValue>.Remove",
      "signature" : "bool System.Collections.Generic.Dictionary`2/ValueCollection<string, Mono.CompilerServices.SymbolWriter.LocalVariableEntry>:System.Collections.Generic.ICollection<TValue>.Remove (Mono.CompilerServices.SymbolWriter.LocalVariableEntry)",
      "code_size" : "22",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<TValue>.Clear",
      "signature" : "void System.Collections.Generic.Dictionary`2/ValueCollection<string, Mono.CompilerServices.SymbolWriter.LocalVariableEntry>:System.Collections.Generic.ICollection<TValue>.Clear ()",
      "code_size" : "19",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<TValue>.Contains",
      "signature" : "bool System.Collections.Generic.Dictionary`2/ValueCollection<string, Mono.CompilerServices.SymbolWriter.LocalVariableEntry>:System.Collections.Generic.ICollection<TValue>.Contains (Mono.CompilerServices.SymbolWriter.LocalVariableEntry)",
      "code_size" : "58",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.IEnumerable<TValue>.GetEnumerator",
      "signature" : "System.Collections.Generic.IEnumerator`1<Mono.CompilerServices.SymbolWriter.LocalVariableEntry> System.Collections.Generic.Dictionary`2/ValueCollection<string, Mono.CompilerServices.SymbolWriter.LocalVariableEntry>:System.Collections.Generic.IEnumerable<TValue>.GetEnumerator ()",
      "code_size" : "268",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerable.GetEnumerator",
      "signature" : "System.Collections.IEnumerator System.Collections.Generic.Dictionary`2/ValueCollection<string, Mono.CompilerServices.SymbolWriter.LocalVariableEntry>:System.Collections.IEnumerable.GetEnumerator ()",
      "code_size" : "268",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.ICollection.CopyTo",
      "signature" : "void System.Collections.Generic.Dictionary`2/ValueCollection<string, Mono.CompilerServices.SymbolWriter.LocalVariableEntry>:System.Collections.ICollection.CopyTo (System.Array,int)",
      "code_size" : "682",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.ICollection.get_IsSynchronized",
      "signature" : "bool System.Collections.Generic.Dictionary`2/ValueCollection<string, Mono.CompilerServices.SymbolWriter.LocalVariableEntry>:System.Collections.ICollection.get_IsSynchronized ()",
      "code_size" : "11",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.ICollection.get_SyncRoot",
      "signature" : "object System.Collections.Generic.Dictionary`2/ValueCollection<string, Mono.CompilerServices.SymbolWriter.LocalVariableEntry>:System.Collections.ICollection.get_SyncRoot ()",
      "code_size" : "36",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "invoke_bool_T",
      "signature" : "(wrapper delegate-invoke) bool System.Predicate`1<Mono.CompilerServices.SymbolWriter.CodeBlockEntry>:invoke_bool_T (Mono.CompilerServices.SymbolWriter.CodeBlockEntry)",
      "code_size" : "258",
      "class" : "Predicate`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_void_T",
      "signature" : "(wrapper delegate-invoke) void System.Action`1<Mono.CompilerServices.SymbolWriter.CodeBlockEntry>:invoke_void_T (Mono.CompilerServices.SymbolWriter.CodeBlockEntry)",
      "code_size" : "252",
      "class" : "Action`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_int_T_T",
      "signature" : "(wrapper delegate-invoke) int System.Comparison`1<Mono.CompilerServices.SymbolWriter.CodeBlockEntry>:invoke_int_T_T (Mono.CompilerServices.SymbolWriter.CodeBlockEntry,Mono.CompilerServices.SymbolWriter.CodeBlockEntry)",
      "code_size" : "282",
      "class" : "Comparison`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Array/InternalEnumerator`1<Mono.CompilerServices.SymbolWriter.LocalVariableEntry>:.ctor (System.Array)",
      "code_size" : "49",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Array/InternalEnumerator`1<Mono.CompilerServices.SymbolWriter.LocalVariableEntry>:Dispose ()",
      "code_size" : "23",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "MoveNext",
      "signature" : "bool System.Array/InternalEnumerator`1<Mono.CompilerServices.SymbolWriter.LocalVariableEntry>:MoveNext ()",
      "code_size" : "95",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Current",
      "signature" : "Mono.CompilerServices.SymbolWriter.LocalVariableEntry System.Array/InternalEnumerator`1<Mono.CompilerServices.SymbolWriter.LocalVariableEntry>:get_Current ()",
      "code_size" : "219",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerator.Reset",
      "signature" : "void System.Array/InternalEnumerator`1<Mono.CompilerServices.SymbolWriter.LocalVariableEntry>:System.Collections.IEnumerator.Reset ()",
      "code_size" : "23",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerator.get_Current",
      "signature" : "object System.Array/InternalEnumerator`1<Mono.CompilerServices.SymbolWriter.LocalVariableEntry>:System.Collections.IEnumerator.get_Current ()",
      "code_size" : "130",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__IEnumerable_GetEnumerator",
      "signature" : "System.Collections.Generic.IEnumerator`1<Mono.CompilerServices.SymbolWriter.LocalVariableEntry> System.Array:InternalArray__IEnumerable_GetEnumerator<Mono.CompilerServices.SymbolWriter.LocalVariableEntry> ()",
      "code_size" : "151",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__ICollection_Add",
      "signature" : "void System.Array:InternalArray__ICollection_Add<Mono.CompilerServices.SymbolWriter.LocalVariableEntry> (Mono.CompilerServices.SymbolWriter.LocalVariableEntry)",
      "code_size" : "41",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__ICollection_Remove",
      "signature" : "bool System.Array:InternalArray__ICollection_Remove<Mono.CompilerServices.SymbolWriter.LocalVariableEntry> (Mono.CompilerServices.SymbolWriter.LocalVariableEntry)",
      "code_size" : "41",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__ICollection_Contains",
      "signature" : "bool System.Array:InternalArray__ICollection_Contains<Mono.CompilerServices.SymbolWriter.LocalVariableEntry> (Mono.CompilerServices.SymbolWriter.LocalVariableEntry)",
      "code_size" : "455",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__ICollection_CopyTo",
      "signature" : "void System.Array:InternalArray__ICollection_CopyTo<Mono.CompilerServices.SymbolWriter.LocalVariableEntry> (Mono.CompilerServices.SymbolWriter.LocalVariableEntry[],int)",
      "code_size" : "487",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "invoke_bool_T",
      "signature" : "(wrapper delegate-invoke) bool System.Predicate`1<Mono.CompilerServices.SymbolWriter.LocalVariableEntry>:invoke_bool_T (Mono.CompilerServices.SymbolWriter.LocalVariableEntry)",
      "code_size" : "316",
      "class" : "Predicate`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_void_T",
      "signature" : "(wrapper delegate-invoke) void System.Action`1<Mono.CompilerServices.SymbolWriter.LocalVariableEntry>:invoke_void_T (Mono.CompilerServices.SymbolWriter.LocalVariableEntry)",
      "code_size" : "310",
      "class" : "Action`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_int_T_T",
      "signature" : "(wrapper delegate-invoke) int System.Comparison`1<Mono.CompilerServices.SymbolWriter.LocalVariableEntry>:invoke_int_T_T (Mono.CompilerServices.SymbolWriter.LocalVariableEntry,Mono.CompilerServices.SymbolWriter.LocalVariableEntry)",
      "code_size" : "391",
      "class" : "Comparison`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Array/InternalEnumerator`1<Mono.CompilerServices.SymbolWriter.ScopeVariable>:.ctor (System.Array)",
      "code_size" : "49",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Array/InternalEnumerator`1<Mono.CompilerServices.SymbolWriter.ScopeVariable>:Dispose ()",
      "code_size" : "23",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "MoveNext",
      "signature" : "bool System.Array/InternalEnumerator`1<Mono.CompilerServices.SymbolWriter.ScopeVariable>:MoveNext ()",
      "code_size" : "95",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Current",
      "signature" : "Mono.CompilerServices.SymbolWriter.ScopeVariable System.Array/InternalEnumerator`1<Mono.CompilerServices.SymbolWriter.ScopeVariable>:get_Current ()",
      "code_size" : "151",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerator.Reset",
      "signature" : "void System.Array/InternalEnumerator`1<Mono.CompilerServices.SymbolWriter.ScopeVariable>:System.Collections.IEnumerator.Reset ()",
      "code_size" : "23",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerator.get_Current",
      "signature" : "object System.Array/InternalEnumerator`1<Mono.CompilerServices.SymbolWriter.ScopeVariable>:System.Collections.IEnumerator.get_Current ()",
      "code_size" : "66",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__IEnumerable_GetEnumerator",
      "signature" : "System.Collections.Generic.IEnumerator`1<Mono.CompilerServices.SymbolWriter.ScopeVariable> System.Array:InternalArray__IEnumerable_GetEnumerator<Mono.CompilerServices.SymbolWriter.ScopeVariable> ()",
      "code_size" : "151",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__ICollection_Add",
      "signature" : "void System.Array:InternalArray__ICollection_Add<Mono.CompilerServices.SymbolWriter.ScopeVariable> (Mono.CompilerServices.SymbolWriter.ScopeVariable)",
      "code_size" : "40",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__ICollection_Remove",
      "signature" : "bool System.Array:InternalArray__ICollection_Remove<Mono.CompilerServices.SymbolWriter.ScopeVariable> (Mono.CompilerServices.SymbolWriter.ScopeVariable)",
      "code_size" : "40",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__ICollection_Contains",
      "signature" : "bool System.Array:InternalArray__ICollection_Contains<Mono.CompilerServices.SymbolWriter.ScopeVariable> (Mono.CompilerServices.SymbolWriter.ScopeVariable)",
      "code_size" : "283",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__ICollection_CopyTo",
      "signature" : "void System.Array:InternalArray__ICollection_CopyTo<Mono.CompilerServices.SymbolWriter.ScopeVariable> (Mono.CompilerServices.SymbolWriter.ScopeVariable[],int)",
      "code_size" : "487",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.EqualityComparer`1<Mono.CompilerServices.SymbolWriter.ScopeVariable>:.ctor ()",
      "code_size" : "9",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Default",
      "signature" : "System.Collections.Generic.EqualityComparer`1<Mono.CompilerServices.SymbolWriter.ScopeVariable> System.Collections.Generic.EqualityComparer`1<Mono.CompilerServices.SymbolWriter.ScopeVariable>:get_Default ()",
      "code_size" : "66",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateComparer",
      "signature" : "System.Collections.Generic.EqualityComparer`1<Mono.CompilerServices.SymbolWriter.ScopeVariable> System.Collections.Generic.EqualityComparer`1<Mono.CompilerServices.SymbolWriter.ScopeVariable>:CreateComparer ()",
      "code_size" : "1064",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "IndexOf",
      "signature" : "int System.Collections.Generic.EqualityComparer`1<Mono.CompilerServices.SymbolWriter.ScopeVariable>:IndexOf (Mono.CompilerServices.SymbolWriter.ScopeVariable[],Mono.CompilerServices.SymbolWriter.ScopeVariable,int,int)",
      "code_size" : "179",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "LastIndexOf",
      "signature" : "int System.Collections.Generic.EqualityComparer`1<Mono.CompilerServices.SymbolWriter.ScopeVariable>:LastIndexOf (Mono.CompilerServices.SymbolWriter.ScopeVariable[],Mono.CompilerServices.SymbolWriter.ScopeVariable,int,int)",
      "code_size" : "186",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEqualityComparer.GetHashCode",
      "signature" : "int System.Collections.Generic.EqualityComparer`1<Mono.CompilerServices.SymbolWriter.ScopeVariable>:System.Collections.IEqualityComparer.GetHashCode (object)",
      "code_size" : "206",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEqualityComparer.Equals",
      "signature" : "bool System.Collections.Generic.EqualityComparer`1<Mono.CompilerServices.SymbolWriter.ScopeVariable>:System.Collections.IEqualityComparer.Equals (object,object)",
      "code_size" : "354",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "invoke_bool_T",
      "signature" : "(wrapper delegate-invoke) bool System.Predicate`1<Mono.CompilerServices.SymbolWriter.ScopeVariable>:invoke_bool_T (Mono.CompilerServices.SymbolWriter.ScopeVariable)",
      "code_size" : "255",
      "class" : "Predicate`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_void_T",
      "signature" : "(wrapper delegate-invoke) void System.Action`1<Mono.CompilerServices.SymbolWriter.ScopeVariable>:invoke_void_T (Mono.CompilerServices.SymbolWriter.ScopeVariable)",
      "code_size" : "249",
      "class" : "Action`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_int_T_T",
      "signature" : "(wrapper delegate-invoke) int System.Comparison`1<Mono.CompilerServices.SymbolWriter.ScopeVariable>:invoke_int_T_T (Mono.CompilerServices.SymbolWriter.ScopeVariable,Mono.CompilerServices.SymbolWriter.ScopeVariable)",
      "code_size" : "276",
      "class" : "Comparison`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_bool_T",
      "signature" : "(wrapper delegate-invoke) bool System.Predicate`1<Mono.CSharp.ExplicitBlock>:invoke_bool_T (Mono.CSharp.ExplicitBlock)",
      "code_size" : "258",
      "class" : "Predicate`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_void_T",
      "signature" : "(wrapper delegate-invoke) void System.Action`1<Mono.CSharp.ExplicitBlock>:invoke_void_T (Mono.CSharp.ExplicitBlock)",
      "code_size" : "252",
      "class" : "Action`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_int_T_T",
      "signature" : "(wrapper delegate-invoke) int System.Comparison`1<Mono.CSharp.ExplicitBlock>:invoke_int_T_T (Mono.CSharp.ExplicitBlock,Mono.CSharp.ExplicitBlock)",
      "code_size" : "282",
      "class" : "Comparison`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Array/InternalEnumerator`1<Mono.CSharp.AnonymousMethodStorey/StoreyFieldPair>:.ctor (System.Array)",
      "code_size" : "49",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Array/InternalEnumerator`1<Mono.CSharp.AnonymousMethodStorey/StoreyFieldPair>:Dispose ()",
      "code_size" : "23",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "MoveNext",
      "signature" : "bool System.Array/InternalEnumerator`1<Mono.CSharp.AnonymousMethodStorey/StoreyFieldPair>:MoveNext ()",
      "code_size" : "95",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Current",
      "signature" : "Mono.CSharp.AnonymousMethodStorey/StoreyFieldPair System.Array/InternalEnumerator`1<Mono.CSharp.AnonymousMethodStorey/StoreyFieldPair>:get_Current ()",
      "code_size" : "222",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerator.Reset",
      "signature" : "void System.Array/InternalEnumerator`1<Mono.CSharp.AnonymousMethodStorey/StoreyFieldPair>:System.Collections.IEnumerator.Reset ()",
      "code_size" : "23",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerator.get_Current",
      "signature" : "object System.Array/InternalEnumerator`1<Mono.CSharp.AnonymousMethodStorey/StoreyFieldPair>:System.Collections.IEnumerator.get_Current ()",
      "code_size" : "133",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__IEnumerable_GetEnumerator",
      "signature" : "System.Collections.Generic.IEnumerator`1<Mono.CSharp.AnonymousMethodStorey/StoreyFieldPair> System.Array:InternalArray__IEnumerable_GetEnumerator<Mono.CSharp.AnonymousMethodStorey/StoreyFieldPair> ()",
      "code_size" : "151",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__ICollection_Add",
      "signature" : "void System.Array:InternalArray__ICollection_Add<Mono.CSharp.AnonymousMethodStorey/StoreyFieldPair> (Mono.CSharp.AnonymousMethodStorey/StoreyFieldPair)",
      "code_size" : "40",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__ICollection_Remove",
      "signature" : "bool System.Array:InternalArray__ICollection_Remove<Mono.CSharp.AnonymousMethodStorey/StoreyFieldPair> (Mono.CSharp.AnonymousMethodStorey/StoreyFieldPair)",
      "code_size" : "40",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__ICollection_Contains",
      "signature" : "bool System.Array:InternalArray__ICollection_Contains<Mono.CSharp.AnonymousMethodStorey/StoreyFieldPair> (Mono.CSharp.AnonymousMethodStorey/StoreyFieldPair)",
      "code_size" : "487",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__ICollection_CopyTo",
      "signature" : "void System.Array:InternalArray__ICollection_CopyTo<Mono.CSharp.AnonymousMethodStorey/StoreyFieldPair> (Mono.CSharp.AnonymousMethodStorey/StoreyFieldPair[],int)",
      "code_size" : "487",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.EqualityComparer`1<Mono.CSharp.AnonymousMethodStorey/StoreyFieldPair>:.ctor ()",
      "code_size" : "9",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Default",
      "signature" : "System.Collections.Generic.EqualityComparer`1<Mono.CSharp.AnonymousMethodStorey/StoreyFieldPair> System.Collections.Generic.EqualityComparer`1<Mono.CSharp.AnonymousMethodStorey/StoreyFieldPair>:get_Default ()",
      "code_size" : "66",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateComparer",
      "signature" : "System.Collections.Generic.EqualityComparer`1<Mono.CSharp.AnonymousMethodStorey/StoreyFieldPair> System.Collections.Generic.EqualityComparer`1<Mono.CSharp.AnonymousMethodStorey/StoreyFieldPair>:CreateComparer ()",
      "code_size" : "1064",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "IndexOf",
      "signature" : "int System.Collections.Generic.EqualityComparer`1<Mono.CSharp.AnonymousMethodStorey/StoreyFieldPair>:IndexOf (Mono.CSharp.AnonymousMethodStorey/StoreyFieldPair[],Mono.CSharp.AnonymousMethodStorey/StoreyFieldPair,int,int)",
      "code_size" : "211",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "LastIndexOf",
      "signature" : "int System.Collections.Generic.EqualityComparer`1<Mono.CSharp.AnonymousMethodStorey/StoreyFieldPair>:LastIndexOf (Mono.CSharp.AnonymousMethodStorey/StoreyFieldPair[],Mono.CSharp.AnonymousMethodStorey/StoreyFieldPair,int,int)",
      "code_size" : "218",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEqualityComparer.GetHashCode",
      "signature" : "int System.Collections.Generic.EqualityComparer`1<Mono.CSharp.AnonymousMethodStorey/StoreyFieldPair>:System.Collections.IEqualityComparer.GetHashCode (object)",
      "code_size" : "220",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEqualityComparer.Equals",
      "signature" : "bool System.Collections.Generic.EqualityComparer`1<Mono.CSharp.AnonymousMethodStorey/StoreyFieldPair>:System.Collections.IEqualityComparer.Equals (object,object)",
      "code_size" : "382",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "invoke_bool_T",
      "signature" : "(wrapper delegate-invoke) bool System.Predicate`1<Mono.CSharp.AnonymousMethodStorey/StoreyFieldPair>:invoke_bool_T (Mono.CSharp.AnonymousMethodStorey/StoreyFieldPair)",
      "code_size" : "276",
      "class" : "Predicate`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_void_T",
      "signature" : "(wrapper delegate-invoke) void System.Action`1<Mono.CSharp.AnonymousMethodStorey/StoreyFieldPair>:invoke_void_T (Mono.CSharp.AnonymousMethodStorey/StoreyFieldPair)",
      "code_size" : "270",
      "class" : "Action`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_int_T_T",
      "signature" : "(wrapper delegate-invoke) int System.Comparison`1<Mono.CSharp.AnonymousMethodStorey/StoreyFieldPair>:invoke_int_T_T (Mono.CSharp.AnonymousMethodStorey/StoreyFieldPair,Mono.CSharp.AnonymousMethodStorey/StoreyFieldPair)",
      "code_size" : "318",
      "class" : "Comparison`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_bool_T",
      "signature" : "(wrapper delegate-invoke) bool System.Predicate`1<Mono.CSharp.HoistedVariable>:invoke_bool_T (Mono.CSharp.HoistedVariable)",
      "code_size" : "258",
      "class" : "Predicate`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_void_T",
      "signature" : "(wrapper delegate-invoke) void System.Action`1<Mono.CSharp.HoistedVariable>:invoke_void_T (Mono.CSharp.HoistedVariable)",
      "code_size" : "252",
      "class" : "Action`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_int_T_T",
      "signature" : "(wrapper delegate-invoke) int System.Comparison`1<Mono.CSharp.HoistedVariable>:invoke_int_T_T (Mono.CSharp.HoistedVariable,Mono.CSharp.HoistedVariable)",
      "code_size" : "282",
      "class" : "Comparison`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_bool_T",
      "signature" : "(wrapper delegate-invoke) bool System.Predicate`1<Mono.CSharp.MemberCore>:invoke_bool_T (Mono.CSharp.MemberCore)",
      "code_size" : "258",
      "class" : "Predicate`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_void_T",
      "signature" : "(wrapper delegate-invoke) void System.Action`1<Mono.CSharp.MemberCore>:invoke_void_T (Mono.CSharp.MemberCore)",
      "code_size" : "252",
      "class" : "Action`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_int_T_T",
      "signature" : "(wrapper delegate-invoke) int System.Comparison`1<Mono.CSharp.MemberCore>:invoke_int_T_T (Mono.CSharp.MemberCore,Mono.CSharp.MemberCore)",
      "code_size" : "282",
      "class" : "Comparison`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_bool_T",
      "signature" : "(wrapper delegate-invoke) bool System.Predicate`1<Mono.CSharp.HoistedParameter>:invoke_bool_T (Mono.CSharp.HoistedParameter)",
      "code_size" : "258",
      "class" : "Predicate`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_void_T",
      "signature" : "(wrapper delegate-invoke) void System.Action`1<Mono.CSharp.HoistedParameter>:invoke_void_T (Mono.CSharp.HoistedParameter)",
      "code_size" : "252",
      "class" : "Action`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_int_T_T",
      "signature" : "(wrapper delegate-invoke) int System.Comparison`1<Mono.CSharp.HoistedParameter>:invoke_int_T_T (Mono.CSharp.HoistedParameter,Mono.CSharp.HoistedParameter)",
      "code_size" : "282",
      "class" : "Comparison`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1/Enumerator<Mono.CSharp.AnonymousMethodStorey/StoreyFieldPair>:.ctor (System.Collections.Generic.List`1<Mono.CSharp.AnonymousMethodStorey/StoreyFieldPair>)",
      "code_size" : "142",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Collections.Generic.List`1/Enumerator<Mono.CSharp.AnonymousMethodStorey/StoreyFieldPair>:Dispose ()",
      "code_size" : "9",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "MoveNext",
      "signature" : "bool System.Collections.Generic.List`1/Enumerator<Mono.CSharp.AnonymousMethodStorey/StoreyFieldPair>:MoveNext ()",
      "code_size" : "233",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "MoveNextRare",
      "signature" : "bool System.Collections.Generic.List`1/Enumerator<Mono.CSharp.AnonymousMethodStorey/StoreyFieldPair>:MoveNextRare ()",
      "code_size" : "174",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Current",
      "signature" : "Mono.CSharp.AnonymousMethodStorey/StoreyFieldPair System.Collections.Generic.List`1/Enumerator<Mono.CSharp.AnonymousMethodStorey/StoreyFieldPair>:get_Current ()",
      "code_size" : "112",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerator.get_Current",
      "signature" : "object System.Collections.Generic.List`1/Enumerator<Mono.CSharp.AnonymousMethodStorey/StoreyFieldPair>:System.Collections.IEnumerator.get_Current ()",
      "code_size" : "183",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerator.Reset",
      "signature" : "void System.Collections.Generic.List`1/Enumerator<Mono.CSharp.AnonymousMethodStorey/StoreyFieldPair>:System.Collections.IEnumerator.Reset ()",
      "code_size" : "167",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Array/InternalEnumerator`1<T_INST>:.ctor (System.Array)",
      "code_size" : "56",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Array/InternalEnumerator`1<T_INST>:Dispose ()",
      "code_size" : "28",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "MoveNext",
      "signature" : "bool System.Array/InternalEnumerator`1<T_INST>:MoveNext ()",
      "code_size" : "100",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Current",
      "signature" : "T_INST System.Array/InternalEnumerator`1<T_INST>:get_Current ()",
      "code_size" : "280",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerator.Reset",
      "signature" : "void System.Array/InternalEnumerator`1<T_INST>:System.Collections.IEnumerator.Reset ()",
      "code_size" : "28",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerator.get_Current",
      "signature" : "object System.Array/InternalEnumerator`1<T_INST>:System.Collections.IEnumerator.get_Current ()",
      "code_size" : "172",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__IEnumerable_GetEnumerator",
      "signature" : "System.Collections.Generic.IEnumerator`1<T_INST> System.Array:InternalArray__IEnumerable_GetEnumerator<T_INST> ()",
      "code_size" : "192",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__Insert",
      "signature" : "void System.Array:InternalArray__Insert<T_REF> (int,T_REF)",
      "code_size" : "49",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__RemoveAt",
      "signature" : "void System.Array:InternalArray__RemoveAt (int)",
      "code_size" : "40",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__IndexOf",
      "signature" : "int System.Array:InternalArray__IndexOf<T_REF> (T_REF)",
      "code_size" : "283",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__get_Item",
      "signature" : "T_REF System.Array:InternalArray__get_Item<T_REF> (int)",
      "code_size" : "106",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__set_Item",
      "signature" : "void System.Array:InternalArray__set_Item<T_REF> (int,T_REF)",
      "code_size" : "223",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "invoke_bool_T",
      "signature" : "(wrapper delegate-invoke) bool System.Predicate`1<Mono.CSharp.MovableArgument>:invoke_bool_T (Mono.CSharp.MovableArgument)",
      "code_size" : "258",
      "class" : "Predicate`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_void_T",
      "signature" : "(wrapper delegate-invoke) void System.Action`1<Mono.CSharp.MovableArgument>:invoke_void_T (Mono.CSharp.MovableArgument)",
      "code_size" : "252",
      "class" : "Action`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_int_T_T",
      "signature" : "(wrapper delegate-invoke) int System.Comparison`1<Mono.CSharp.MovableArgument>:invoke_int_T_T (Mono.CSharp.MovableArgument,Mono.CSharp.MovableArgument)",
      "code_size" : "282",
      "class" : "Comparison`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_bool_T",
      "signature" : "(wrapper delegate-invoke) bool System.Predicate`1<Mono.CSharp.Argument>:invoke_bool_T (Mono.CSharp.Argument)",
      "code_size" : "258",
      "class" : "Predicate`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_void_T",
      "signature" : "(wrapper delegate-invoke) void System.Action`1<Mono.CSharp.Argument>:invoke_void_T (Mono.CSharp.Argument)",
      "code_size" : "252",
      "class" : "Action`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_int_T_T",
      "signature" : "(wrapper delegate-invoke) int System.Comparison`1<Mono.CSharp.Argument>:invoke_int_T_T (Mono.CSharp.Argument,Mono.CSharp.Argument)",
      "code_size" : "282",
      "class" : "Comparison`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_bool_T",
      "signature" : "(wrapper delegate-invoke) bool System.Predicate`1<Mono.CSharp.ImportedModuleDefinition>:invoke_bool_T (Mono.CSharp.ImportedModuleDefinition)",
      "code_size" : "258",
      "class" : "Predicate`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_void_T",
      "signature" : "(wrapper delegate-invoke) void System.Action`1<Mono.CSharp.ImportedModuleDefinition>:invoke_void_T (Mono.CSharp.ImportedModuleDefinition)",
      "code_size" : "252",
      "class" : "Action`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_int_T_T",
      "signature" : "(wrapper delegate-invoke) int System.Comparison`1<Mono.CSharp.ImportedModuleDefinition>:invoke_int_T_T (Mono.CSharp.ImportedModuleDefinition,Mono.CSharp.ImportedModuleDefinition)",
      "code_size" : "282",
      "class" : "Comparison`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_bool_T",
      "signature" : "(wrapper delegate-invoke) bool System.Predicate`1<Mono.CSharp.TypeSpec>:invoke_bool_T (Mono.CSharp.TypeSpec)",
      "code_size" : "258",
      "class" : "Predicate`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_void_T",
      "signature" : "(wrapper delegate-invoke) void System.Action`1<Mono.CSharp.TypeSpec>:invoke_void_T (Mono.CSharp.TypeSpec)",
      "code_size" : "252",
      "class" : "Action`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_int_T_T",
      "signature" : "(wrapper delegate-invoke) int System.Comparison`1<Mono.CSharp.TypeSpec>:invoke_int_T_T (Mono.CSharp.TypeSpec,Mono.CSharp.TypeSpec)",
      "code_size" : "282",
      "class" : "Comparison`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_bool_T",
      "signature" : "(wrapper delegate-invoke) bool System.Predicate`1<string[]>:invoke_bool_T (string[])",
      "code_size" : "258",
      "class" : "Predicate`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_void_T",
      "signature" : "(wrapper delegate-invoke) void System.Action`1<string[]>:invoke_void_T (string[])",
      "code_size" : "252",
      "class" : "Action`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_int_T_T",
      "signature" : "(wrapper delegate-invoke) int System.Comparison`1<string[]>:invoke_int_T_T (string[],string[])",
      "code_size" : "282",
      "class" : "Comparison`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_TResult",
      "signature" : "(wrapper delegate-invoke) Mono.CSharp.TypeSpec[] System.Func`1<Mono.CSharp.TypeSpec[]>:invoke_TResult ()",
      "code_size" : "242",
      "class" : "Func`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_bool_T",
      "signature" : "(wrapper delegate-invoke) bool System.Predicate`1<Mono.CSharp.Attribute>:invoke_bool_T (Mono.CSharp.Attribute)",
      "code_size" : "258",
      "class" : "Predicate`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_void_T",
      "signature" : "(wrapper delegate-invoke) void System.Action`1<Mono.CSharp.Attribute>:invoke_void_T (Mono.CSharp.Attribute)",
      "code_size" : "252",
      "class" : "Action`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_int_T_T",
      "signature" : "(wrapper delegate-invoke) int System.Comparison`1<Mono.CSharp.Attribute>:invoke_int_T_T (Mono.CSharp.Attribute,Mono.CSharp.Attribute)",
      "code_size" : "282",
      "class" : "Comparison`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_bool_T",
      "signature" : "(wrapper delegate-invoke) bool System.Predicate`1<Mono.CSharp.AssemblyResource>:invoke_bool_T (Mono.CSharp.AssemblyResource)",
      "code_size" : "258",
      "class" : "Predicate`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_void_T",
      "signature" : "(wrapper delegate-invoke) void System.Action`1<Mono.CSharp.AssemblyResource>:invoke_void_T (Mono.CSharp.AssemblyResource)",
      "code_size" : "252",
      "class" : "Action`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_int_T_T",
      "signature" : "(wrapper delegate-invoke) int System.Comparison`1<Mono.CSharp.AssemblyResource>:invoke_int_T_T (Mono.CSharp.AssemblyResource,Mono.CSharp.AssemblyResource)",
      "code_size" : "282",
      "class" : "Comparison`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_bool_T",
      "signature" : "(wrapper delegate-invoke) bool System.Predicate`1<string>:invoke_bool_T (string)",
      "code_size" : "258",
      "class" : "Predicate`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_void_T",
      "signature" : "(wrapper delegate-invoke) void System.Action`1<string>:invoke_void_T (string)",
      "code_size" : "252",
      "class" : "Action`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_int_T_T",
      "signature" : "(wrapper delegate-invoke) int System.Comparison`1<string>:invoke_int_T_T (string,string)",
      "code_size" : "282",
      "class" : "Comparison`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_bool_T",
      "signature" : "(wrapper delegate-invoke) bool System.Predicate`1<System.Tuple`2<string, string>>:invoke_bool_T (System.Tuple`2<string, string>)",
      "code_size" : "258",
      "class" : "Predicate`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_void_T",
      "signature" : "(wrapper delegate-invoke) void System.Action`1<System.Tuple`2<string, string>>:invoke_void_T (System.Tuple`2<string, string>)",
      "code_size" : "252",
      "class" : "Action`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_int_T_T",
      "signature" : "(wrapper delegate-invoke) int System.Comparison`1<System.Tuple`2<string, string>>:invoke_int_T_T (System.Tuple`2<string, string>,System.Tuple`2<string, string>)",
      "code_size" : "282",
      "class" : "Comparison`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_bool_T",
      "signature" : "(wrapper delegate-invoke) bool System.Predicate`1<Mono.CSharp.Field>:invoke_bool_T (Mono.CSharp.Field)",
      "code_size" : "258",
      "class" : "Predicate`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_void_T",
      "signature" : "(wrapper delegate-invoke) void System.Action`1<Mono.CSharp.Field>:invoke_void_T (Mono.CSharp.Field)",
      "code_size" : "252",
      "class" : "Action`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_int_T_T",
      "signature" : "(wrapper delegate-invoke) int System.Comparison`1<Mono.CSharp.Field>:invoke_int_T_T (Mono.CSharp.Field,Mono.CSharp.Field)",
      "code_size" : "282",
      "class" : "Comparison`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Nullable`1<System.Runtime.InteropServices.CharSet>:.ctor (System.Runtime.InteropServices.CharSet)",
      "code_size" : "32",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_HasValue",
      "signature" : "bool System.Nullable`1<System.Runtime.InteropServices.CharSet>:get_HasValue ()",
      "code_size" : "20",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Value",
      "signature" : "System.Runtime.InteropServices.CharSet System.Nullable`1<System.Runtime.InteropServices.CharSet>:get_Value ()",
      "code_size" : "62",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "Equals",
      "signature" : "bool System.Nullable`1<System.Runtime.InteropServices.CharSet>:Equals (object)",
      "code_size" : "152",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "Equals",
      "signature" : "bool System.Nullable`1<System.Runtime.InteropServices.CharSet>:Equals (System.Nullable`1<System.Runtime.InteropServices.CharSet>)",
      "code_size" : "155",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetHashCode",
      "signature" : "int System.Nullable`1<System.Runtime.InteropServices.CharSet>:GetHashCode ()",
      "code_size" : "77",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetValueOrDefault",
      "signature" : "System.Runtime.InteropServices.CharSet System.Nullable`1<System.Runtime.InteropServices.CharSet>:GetValueOrDefault ()",
      "code_size" : "19",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetValueOrDefault",
      "signature" : "System.Runtime.InteropServices.CharSet System.Nullable`1<System.Runtime.InteropServices.CharSet>:GetValueOrDefault (System.Runtime.InteropServices.CharSet)",
      "code_size" : "47",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "ToString",
      "signature" : "string System.Nullable`1<System.Runtime.InteropServices.CharSet>:ToString ()",
      "code_size" : "86",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "op_Implicit",
      "signature" : "System.Nullable`1<System.Runtime.InteropServices.CharSet> System.Nullable`1<System.Runtime.InteropServices.CharSet>:op_Implicit (System.Runtime.InteropServices.CharSet)",
      "code_size" : "56",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "op_Explicit",
      "signature" : "System.Runtime.InteropServices.CharSet System.Nullable`1<System.Runtime.InteropServices.CharSet>:op_Explicit (System.Nullable`1<System.Runtime.InteropServices.CharSet>)",
      "code_size" : "28",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "Box",
      "signature" : "object System.Nullable`1<System.Runtime.InteropServices.CharSet>:Box (System.Nullable`1<System.Runtime.InteropServices.CharSet>)",
      "code_size" : "60",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "Unbox",
      "signature" : "System.Nullable`1<System.Runtime.InteropServices.CharSet> System.Nullable`1<System.Runtime.InteropServices.CharSet>:Unbox (object)",
      "code_size" : "158",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__ICollection_Add",
      "signature" : "void System.Array:InternalArray__ICollection_Add<T_INST> (T_INST)",
      "code_size" : "49",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__ICollection_Remove",
      "signature" : "bool System.Array:InternalArray__ICollection_Remove<T_INST> (T_INST)",
      "code_size" : "49",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__ICollection_Contains",
      "signature" : "bool System.Array:InternalArray__ICollection_Contains<T_INST> (T_INST)",
      "code_size" : "722",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__ICollection_CopyTo",
      "signature" : "void System.Array:InternalArray__ICollection_CopyTo<T_INST> (T_INST[],int)",
      "code_size" : "516",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.EqualityComparer`1<T_INST>:.ctor ()",
      "code_size" : "13",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Default",
      "signature" : "System.Collections.Generic.EqualityComparer`1<T_INST> System.Collections.Generic.EqualityComparer`1<T_INST>:get_Default ()",
      "code_size" : "108",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateComparer",
      "signature" : "System.Collections.Generic.EqualityComparer`1<T_INST> System.Collections.Generic.EqualityComparer`1<T_INST>:CreateComparer ()",
      "code_size" : "1185",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "IndexOf",
      "signature" : "int System.Collections.Generic.EqualityComparer`1<T_INST>:IndexOf (T_INST[],T_INST,int,int)",
      "code_size" : "210",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "LastIndexOf",
      "signature" : "int System.Collections.Generic.EqualityComparer`1<T_INST>:LastIndexOf (T_INST[],T_INST,int,int)",
      "code_size" : "218",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEqualityComparer.GetHashCode",
      "signature" : "int System.Collections.Generic.EqualityComparer`1<T_INST>:System.Collections.IEqualityComparer.GetHashCode (object)",
      "code_size" : "228",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEqualityComparer.Equals",
      "signature" : "bool System.Collections.Generic.EqualityComparer`1<T_INST>:System.Collections.IEqualityComparer.Equals (object,object)",
      "code_size" : "400",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "invoke_bool_T",
      "signature" : "(wrapper delegate-invoke) bool System.Predicate`1<System.Collections.Generic.KeyValuePair`2<Mono.CSharp.MemberExpr, Mono.CSharp.NamedArgument>>:invoke_bool_T (System.Collections.Generic.KeyValuePair`2<Mono.CSharp.MemberExpr, Mono.CSharp.NamedArgument>)",
      "code_size" : "276",
      "class" : "Predicate`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_void_T",
      "signature" : "(wrapper delegate-invoke) void System.Action`1<System.Collections.Generic.KeyValuePair`2<Mono.CSharp.MemberExpr, Mono.CSharp.NamedArgument>>:invoke_void_T (System.Collections.Generic.KeyValuePair`2<Mono.CSharp.MemberExpr, Mono.CSharp.NamedArgument>)",
      "code_size" : "270",
      "class" : "Action`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_int_T_T",
      "signature" : "(wrapper delegate-invoke) int System.Comparison`1<System.Collections.Generic.KeyValuePair`2<Mono.CSharp.MemberExpr, Mono.CSharp.NamedArgument>>:invoke_int_T_T (System.Collections.Generic.KeyValuePair`2<Mono.CSharp.MemberExpr, Mono.CSharp.NamedArgument>,System.Collections.Generic.KeyValuePair`2<Mono.CSharp.MemberExpr, Mono.CSharp.NamedArgument>)",
      "code_size" : "318",
      "class" : "Comparison`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Nullable`1<System.Security.Permissions.SecurityAction>:.ctor (System.Security.Permissions.SecurityAction)",
      "code_size" : "32",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_HasValue",
      "signature" : "bool System.Nullable`1<System.Security.Permissions.SecurityAction>:get_HasValue ()",
      "code_size" : "20",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Value",
      "signature" : "System.Security.Permissions.SecurityAction System.Nullable`1<System.Security.Permissions.SecurityAction>:get_Value ()",
      "code_size" : "62",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "Equals",
      "signature" : "bool System.Nullable`1<System.Security.Permissions.SecurityAction>:Equals (object)",
      "code_size" : "152",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "Equals",
      "signature" : "bool System.Nullable`1<System.Security.Permissions.SecurityAction>:Equals (System.Nullable`1<System.Security.Permissions.SecurityAction>)",
      "code_size" : "155",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetHashCode",
      "signature" : "int System.Nullable`1<System.Security.Permissions.SecurityAction>:GetHashCode ()",
      "code_size" : "77",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetValueOrDefault",
      "signature" : "System.Security.Permissions.SecurityAction System.Nullable`1<System.Security.Permissions.SecurityAction>:GetValueOrDefault ()",
      "code_size" : "19",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetValueOrDefault",
      "signature" : "System.Security.Permissions.SecurityAction System.Nullable`1<System.Security.Permissions.SecurityAction>:GetValueOrDefault (System.Security.Permissions.SecurityAction)",
      "code_size" : "47",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "ToString",
      "signature" : "string System.Nullable`1<System.Security.Permissions.SecurityAction>:ToString ()",
      "code_size" : "86",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "op_Implicit",
      "signature" : "System.Nullable`1<System.Security.Permissions.SecurityAction> System.Nullable`1<System.Security.Permissions.SecurityAction>:op_Implicit (System.Security.Permissions.SecurityAction)",
      "code_size" : "56",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "op_Explicit",
      "signature" : "System.Security.Permissions.SecurityAction System.Nullable`1<System.Security.Permissions.SecurityAction>:op_Explicit (System.Nullable`1<System.Security.Permissions.SecurityAction>)",
      "code_size" : "28",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "Box",
      "signature" : "object System.Nullable`1<System.Security.Permissions.SecurityAction>:Box (System.Nullable`1<System.Security.Permissions.SecurityAction>)",
      "code_size" : "60",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "Unbox",
      "signature" : "System.Nullable`1<System.Security.Permissions.SecurityAction> System.Nullable`1<System.Security.Permissions.SecurityAction>:Unbox (object)",
      "code_size" : "158",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1/Enumerator<T_INST>:.ctor (System.Collections.Generic.List`1<T_INST>)",
      "code_size" : "147",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Collections.Generic.List`1/Enumerator<T_INST>:Dispose ()",
      "code_size" : "18",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "MoveNext",
      "signature" : "bool System.Collections.Generic.List`1/Enumerator<T_INST>:MoveNext ()",
      "code_size" : "262",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "MoveNextRare",
      "signature" : "bool System.Collections.Generic.List`1/Enumerator<T_INST>:MoveNextRare ()",
      "code_size" : "179",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Current",
      "signature" : "T_INST System.Collections.Generic.List`1/Enumerator<T_INST>:get_Current ()",
      "code_size" : "117",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerator.get_Current",
      "signature" : "object System.Collections.Generic.List`1/Enumerator<T_INST>:System.Collections.IEnumerator.get_Current ()",
      "code_size" : "210",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerator.Reset",
      "signature" : "void System.Collections.Generic.List`1/Enumerator<T_INST>:System.Collections.IEnumerator.Reset ()",
      "code_size" : "172",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1<T_BOOL>:.ctor ()",
      "code_size" : "90",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1<T_BOOL>:.ctor (int)",
      "code_size" : "192",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1<T_BOOL>:.ctor (System.Collections.Generic.IEnumerable`1<T_BOOL>)",
      "code_size" : "606",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Capacity",
      "signature" : "int System.Collections.Generic.List`1<T_BOOL>:get_Capacity ()",
      "code_size" : "24",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Capacity",
      "signature" : "void System.Collections.Generic.List`1<T_BOOL>:set_Capacity (int)",
      "code_size" : "260",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Count",
      "signature" : "int System.Collections.Generic.List`1<T_BOOL>:get_Count ()",
      "code_size" : "20",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IList.get_IsFixedSize",
      "signature" : "bool System.Collections.Generic.List`1<T_BOOL>:System.Collections.IList.get_IsFixedSize ()",
      "code_size" : "15",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<T>.get_IsReadOnly",
      "signature" : "bool System.Collections.Generic.List`1<T_BOOL>:System.Collections.Generic.ICollection<T>.get_IsReadOnly ()",
      "code_size" : "15",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IList.get_IsReadOnly",
      "signature" : "bool System.Collections.Generic.List`1<T_BOOL>:System.Collections.IList.get_IsReadOnly ()",
      "code_size" : "15",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.ICollection.get_IsSynchronized",
      "signature" : "bool System.Collections.Generic.List`1<T_BOOL>:System.Collections.ICollection.get_IsSynchronized ()",
      "code_size" : "15",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.ICollection.get_SyncRoot",
      "signature" : "object System.Collections.Generic.List`1<T_BOOL>:System.Collections.ICollection.get_SyncRoot ()",
      "code_size" : "143",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Item",
      "signature" : "T_BOOL System.Collections.Generic.List`1<T_BOOL>:get_Item (int)",
      "code_size" : "60",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Item",
      "signature" : "void System.Collections.Generic.List`1<T_BOOL>:set_Item (int,T_BOOL)",
      "code_size" : "107",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsCompatibleObject",
      "signature" : "bool System.Collections.Generic.List`1<T_BOOL>:IsCompatibleObject (object)",
      "code_size" : "125",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IList.get_Item",
      "signature" : "object System.Collections.Generic.List`1<T_BOOL>:System.Collections.IList.get_Item (int)",
      "code_size" : "92",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IList.set_Item",
      "signature" : "void System.Collections.Generic.List`1<T_BOOL>:System.Collections.IList.set_Item (int,object)",
      "code_size" : "264",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Add",
      "signature" : "void System.Collections.Generic.List`1<T_BOOL>:Add (T_BOOL)",
      "code_size" : "182",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IList.Add",
      "signature" : "int System.Collections.Generic.List`1<T_BOOL>:System.Collections.IList.Add (object)",
      "code_size" : "287",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddRange",
      "signature" : "void System.Collections.Generic.List`1<T_BOOL>:AddRange (System.Collections.Generic.IEnumerable`1<T_BOOL>)",
      "code_size" : "70",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "AsReadOnly",
      "signature" : "System.Collections.ObjectModel.ReadOnlyCollection`1<T_BOOL> System.Collections.Generic.List`1<T_BOOL>:AsReadOnly ()",
      "code_size" : "84",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "BinarySearch",
      "signature" : "int System.Collections.Generic.List`1<T_BOOL>:BinarySearch (int,int,T_BOOL,System.Collections.Generic.IComparer`1<T_BOOL>)",
      "code_size" : "179",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "BinarySearch",
      "signature" : "int System.Collections.Generic.List`1<T_BOOL>:BinarySearch (T_BOOL)",
      "code_size" : "108",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "BinarySearch",
      "signature" : "int System.Collections.Generic.List`1<T_BOOL>:BinarySearch (T_BOOL,System.Collections.Generic.IComparer`1<T_BOOL>)",
      "code_size" : "115",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Clear",
      "signature" : "void System.Collections.Generic.List`1<T_BOOL>:Clear ()",
      "code_size" : "71",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Contains",
      "signature" : "bool System.Collections.Generic.List`1<T_BOOL>:Contains (T_BOOL)",
      "code_size" : "275",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IList.Contains",
      "signature" : "bool System.Collections.Generic.List`1<T_BOOL>:System.Collections.IList.Contains (object)",
      "code_size" : "216",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "CopyTo",
      "signature" : "void System.Collections.Generic.List`1<T_BOOL>:CopyTo (T_BOOL[])",
      "code_size" : "55",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.ICollection.CopyTo",
      "signature" : "void System.Collections.Generic.List`1<T_BOOL>:System.Collections.ICollection.CopyTo (System.Array,int)",
      "code_size" : "134",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "CopyTo",
      "signature" : "void System.Collections.Generic.List`1<T_BOOL>:CopyTo (int,T_BOOL[],int,int)",
      "code_size" : "93",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "CopyTo",
      "signature" : "void System.Collections.Generic.List`1<T_BOOL>:CopyTo (T_BOOL[],int)",
      "code_size" : "55",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "EnsureCapacity",
      "signature" : "void System.Collections.Generic.List`1<T_BOOL>:EnsureCapacity (int)",
      "code_size" : "168",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Exists",
      "signature" : "bool System.Collections.Generic.List`1<T_BOOL>:Exists (System.Predicate`1<T_BOOL>)",
      "code_size" : "74",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Find",
      "signature" : "T_BOOL System.Collections.Generic.List`1<T_BOOL>:Find (System.Predicate`1<T_BOOL>)",
      "code_size" : "178",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "FindAll",
      "signature" : "System.Collections.Generic.List`1<T_BOOL> System.Collections.Generic.List`1<T_BOOL>:FindAll (System.Predicate`1<T_BOOL>)",
      "code_size" : "286",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "FindIndex",
      "signature" : "int System.Collections.Generic.List`1<T_BOOL>:FindIndex (System.Predicate`1<T_BOOL>)",
      "code_size" : "72",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "FindIndex",
      "signature" : "int System.Collections.Generic.List`1<T_BOOL>:FindIndex (int,System.Predicate`1<T_BOOL>)",
      "code_size" : "84",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "FindIndex",
      "signature" : "int System.Collections.Generic.List`1<T_BOOL>:FindIndex (int,int,System.Predicate`1<T_BOOL>)",
      "code_size" : "238",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "FindLast",
      "signature" : "T_BOOL System.Collections.Generic.List`1<T_BOOL>:FindLast (System.Predicate`1<T_BOOL>)",
      "code_size" : "177",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "FindLastIndex",
      "signature" : "int System.Collections.Generic.List`1<T_BOOL>:FindLastIndex (System.Predicate`1<T_BOOL>)",
      "code_size" : "90",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "FindLastIndex",
      "signature" : "int System.Collections.Generic.List`1<T_BOOL>:FindLastIndex (int,System.Predicate`1<T_BOOL>)",
      "code_size" : "78",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "FindLastIndex",
      "signature" : "int System.Collections.Generic.List`1<T_BOOL>:FindLastIndex (int,int,System.Predicate`1<T_BOOL>)",
      "code_size" : "270",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "ForEach",
      "signature" : "void System.Collections.Generic.List`1<T_BOOL>:ForEach (System.Action`1<T_BOOL>)",
      "code_size" : "211",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetEnumerator",
      "signature" : "System.Collections.Generic.List`1/Enumerator<T_BOOL> System.Collections.Generic.List`1<T_BOOL>:GetEnumerator ()",
      "code_size" : "198",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.IEnumerable<T>.GetEnumerator",
      "signature" : "System.Collections.Generic.IEnumerator`1<T_BOOL> System.Collections.Generic.List`1<T_BOOL>:System.Collections.Generic.IEnumerable<T>.GetEnumerator ()",
      "code_size" : "231",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerable.GetEnumerator",
      "signature" : "System.Collections.IEnumerator System.Collections.Generic.List`1<T_BOOL>:System.Collections.IEnumerable.GetEnumerator ()",
      "code_size" : "231",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetRange",
      "signature" : "System.Collections.Generic.List`1<T_BOOL> System.Collections.Generic.List`1<T_BOOL>:GetRange (int,int)",
      "code_size" : "225",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "IndexOf",
      "signature" : "int System.Collections.Generic.List`1<T_BOOL>:IndexOf (T_BOOL)",
      "code_size" : "96",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IList.IndexOf",
      "signature" : "int System.Collections.Generic.List`1<T_BOOL>:System.Collections.IList.IndexOf (object)",
      "code_size" : "224",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "IndexOf",
      "signature" : "int System.Collections.Generic.List`1<T_BOOL>:IndexOf (T_BOOL,int)",
      "code_size" : "137",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "IndexOf",
      "signature" : "int System.Collections.Generic.List`1<T_BOOL>:IndexOf (T_BOOL,int,int)",
      "code_size" : "165",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Insert",
      "signature" : "void System.Collections.Generic.List`1<T_BOOL>:Insert (int,T_BOOL)",
      "code_size" : "272",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IList.Insert",
      "signature" : "void System.Collections.Generic.List`1<T_BOOL>:System.Collections.IList.Insert (int,object)",
      "code_size" : "264",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "InsertRange",
      "signature" : "void System.Collections.Generic.List`1<T_BOOL>:InsertRange (int,System.Collections.Generic.IEnumerable`1<T_BOOL>)",
      "code_size" : "705",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "LastIndexOf",
      "signature" : "int System.Collections.Generic.List`1<T_BOOL>:LastIndexOf (T_BOOL)",
      "code_size" : "117",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "LastIndexOf",
      "signature" : "int System.Collections.Generic.List`1<T_BOOL>:LastIndexOf (T_BOOL,int)",
      "code_size" : "109",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "LastIndexOf",
      "signature" : "int System.Collections.Generic.List`1<T_BOOL>:LastIndexOf (T_BOOL,int,int)",
      "code_size" : "309",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Remove",
      "signature" : "bool System.Collections.Generic.List`1<T_BOOL>:Remove (T_BOOL)",
      "code_size" : "115",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IList.Remove",
      "signature" : "void System.Collections.Generic.List`1<T_BOOL>:System.Collections.IList.Remove (object)",
      "code_size" : "209",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "RemoveAll",
      "signature" : "int System.Collections.Generic.List`1<T_BOOL>:RemoveAll (System.Predicate`1<T_BOOL>)",
      "code_size" : "432",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "RemoveAt",
      "signature" : "void System.Collections.Generic.List`1<T_BOOL>:RemoveAt (int)",
      "code_size" : "183",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "RemoveRange",
      "signature" : "void System.Collections.Generic.List`1<T_BOOL>:RemoveRange (int,int)",
      "code_size" : "244",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Reverse",
      "signature" : "void System.Collections.Generic.List`1<T_BOOL>:Reverse ()",
      "code_size" : "95",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Reverse",
      "signature" : "void System.Collections.Generic.List`1<T_BOOL>:Reverse (int,int)",
      "code_size" : "131",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Sort",
      "signature" : "void System.Collections.Generic.List`1<T_BOOL>:Sort ()",
      "code_size" : "97",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Sort",
      "signature" : "void System.Collections.Generic.List`1<T_BOOL>:Sort (System.Collections.Generic.IComparer`1<T_BOOL>)",
      "code_size" : "105",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Sort",
      "signature" : "void System.Collections.Generic.List`1<T_BOOL>:Sort (int,int,System.Collections.Generic.IComparer`1<T_BOOL>)",
      "code_size" : "182",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Sort",
      "signature" : "void System.Collections.Generic.List`1<T_BOOL>:Sort (System.Comparison`1<T_BOOL>)",
      "code_size" : "208",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "ToArray",
      "signature" : "T_BOOL[] System.Collections.Generic.List`1<T_BOOL>:ToArray ()",
      "code_size" : "88",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "TrimExcess",
      "signature" : "void System.Collections.Generic.List`1<T_BOOL>:TrimExcess ()",
      "code_size" : "120",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "TrueForAll",
      "signature" : "bool System.Collections.Generic.List`1<T_BOOL>:TrueForAll (System.Predicate`1<T_BOOL>)",
      "code_size" : "143",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Synchronized",
      "signature" : "System.Collections.Generic.IList`1<T_BOOL> System.Collections.Generic.List`1<T_BOOL>:Synchronized (System.Collections.Generic.List`1<T_BOOL>)",
      "code_size" : "79",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".cctor",
      "signature" : "void System.Collections.Generic.List`1<T_BOOL>:.cctor ()",
      "code_size" : "54",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "invoke_bool_T",
      "signature" : "(wrapper delegate-invoke) bool System.Predicate`1<Mono.CSharp.TypeContainer>:invoke_bool_T (Mono.CSharp.TypeContainer)",
      "code_size" : "258",
      "class" : "Predicate`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_void_T",
      "signature" : "(wrapper delegate-invoke) void System.Action`1<Mono.CSharp.TypeContainer>:invoke_void_T (Mono.CSharp.TypeContainer)",
      "code_size" : "252",
      "class" : "Action`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_int_T_T",
      "signature" : "(wrapper delegate-invoke) int System.Comparison`1<Mono.CSharp.TypeContainer>:invoke_int_T_T (Mono.CSharp.TypeContainer,Mono.CSharp.TypeContainer)",
      "code_size" : "282",
      "class" : "Comparison`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_bool_T",
      "signature" : "(wrapper delegate-invoke) bool System.Predicate`1<Mono.CSharp.TypeDefinition>:invoke_bool_T (Mono.CSharp.TypeDefinition)",
      "code_size" : "258",
      "class" : "Predicate`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_void_T",
      "signature" : "(wrapper delegate-invoke) void System.Action`1<Mono.CSharp.TypeDefinition>:invoke_void_T (Mono.CSharp.TypeDefinition)",
      "code_size" : "252",
      "class" : "Action`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_int_T_T",
      "signature" : "(wrapper delegate-invoke) int System.Comparison`1<Mono.CSharp.TypeDefinition>:invoke_int_T_T (Mono.CSharp.TypeDefinition,Mono.CSharp.TypeDefinition)",
      "code_size" : "282",
      "class" : "Comparison`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_bool_T",
      "signature" : "(wrapper delegate-invoke) bool System.Predicate`1<Mono.CSharp.FieldInitializer>:invoke_bool_T (Mono.CSharp.FieldInitializer)",
      "code_size" : "258",
      "class" : "Predicate`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_void_T",
      "signature" : "(wrapper delegate-invoke) void System.Action`1<Mono.CSharp.FieldInitializer>:invoke_void_T (Mono.CSharp.FieldInitializer)",
      "code_size" : "252",
      "class" : "Action`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_int_T_T",
      "signature" : "(wrapper delegate-invoke) int System.Comparison`1<Mono.CSharp.FieldInitializer>:invoke_int_T_T (Mono.CSharp.FieldInitializer,Mono.CSharp.FieldInitializer)",
      "code_size" : "282",
      "class" : "Comparison`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_bool_T",
      "signature" : "(wrapper delegate-invoke) bool System.Predicate`1<Mono.CSharp.FullNamedExpression>:invoke_bool_T (Mono.CSharp.FullNamedExpression)",
      "code_size" : "258",
      "class" : "Predicate`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_void_T",
      "signature" : "(wrapper delegate-invoke) void System.Action`1<Mono.CSharp.FullNamedExpression>:invoke_void_T (Mono.CSharp.FullNamedExpression)",
      "code_size" : "252",
      "class" : "Action`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_int_T_T",
      "signature" : "(wrapper delegate-invoke) int System.Comparison`1<Mono.CSharp.FullNamedExpression>:invoke_int_T_T (Mono.CSharp.FullNamedExpression,Mono.CSharp.FullNamedExpression)",
      "code_size" : "282",
      "class" : "Comparison`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Array/InternalEnumerator`1<T_BYTE>:.ctor (System.Array)",
      "code_size" : "56",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Array/InternalEnumerator`1<T_BYTE>:Dispose ()",
      "code_size" : "28",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "MoveNext",
      "signature" : "bool System.Array/InternalEnumerator`1<T_BYTE>:MoveNext ()",
      "code_size" : "100",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Current",
      "signature" : "T_BYTE System.Array/InternalEnumerator`1<T_BYTE>:get_Current ()",
      "code_size" : "199",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerator.Reset",
      "signature" : "void System.Array/InternalEnumerator`1<T_BYTE>:System.Collections.IEnumerator.Reset ()",
      "code_size" : "28",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerator.get_Current",
      "signature" : "object System.Array/InternalEnumerator`1<T_BYTE>:System.Collections.IEnumerator.get_Current ()",
      "code_size" : "97",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__IEnumerable_GetEnumerator",
      "signature" : "System.Collections.Generic.IEnumerator`1<T_BYTE> System.Array:InternalArray__IEnumerable_GetEnumerator<T_BYTE> ()",
      "code_size" : "192",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__ICollection_Add",
      "signature" : "void System.Array:InternalArray__ICollection_Add<T_BYTE> (T_BYTE)",
      "code_size" : "49",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__ICollection_Remove",
      "signature" : "bool System.Array:InternalArray__ICollection_Remove<T_BYTE> (T_BYTE)",
      "code_size" : "49",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__ICollection_Contains",
      "signature" : "bool System.Array:InternalArray__ICollection_Contains<T_BYTE> (T_BYTE)",
      "code_size" : "369",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__ICollection_CopyTo",
      "signature" : "void System.Array:InternalArray__ICollection_CopyTo<T_BYTE> (T_BYTE[],int)",
      "code_size" : "516",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.EqualityComparer`1<T_BYTE>:.ctor ()",
      "code_size" : "13",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Default",
      "signature" : "System.Collections.Generic.EqualityComparer`1<T_BYTE> System.Collections.Generic.EqualityComparer`1<T_BYTE>:get_Default ()",
      "code_size" : "108",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateComparer",
      "signature" : "System.Collections.Generic.EqualityComparer`1<T_BYTE> System.Collections.Generic.EqualityComparer`1<T_BYTE>:CreateComparer ()",
      "code_size" : "1185",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "IndexOf",
      "signature" : "int System.Collections.Generic.EqualityComparer`1<T_BYTE>:IndexOf (T_BYTE[],T_BYTE,int,int)",
      "code_size" : "172",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "LastIndexOf",
      "signature" : "int System.Collections.Generic.EqualityComparer`1<T_BYTE>:LastIndexOf (T_BYTE[],T_BYTE,int,int)",
      "code_size" : "179",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEqualityComparer.GetHashCode",
      "signature" : "int System.Collections.Generic.EqualityComparer`1<T_BYTE>:System.Collections.IEqualityComparer.GetHashCode (object)",
      "code_size" : "202",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEqualityComparer.Equals",
      "signature" : "bool System.Collections.Generic.EqualityComparer`1<T_BYTE>:System.Collections.IEqualityComparer.Equals (object,object)",
      "code_size" : "358",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.EnumEqualityComparer`1<T_BYTE>:.ctor ()",
      "code_size" : "43",
      "class" : "EnumEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.EnumEqualityComparer`1<T_BYTE>:.ctor (System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)",
      "code_size" : "43",
      "class" : "EnumEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Equals",
      "signature" : "bool System.Collections.Generic.EnumEqualityComparer`1<T_BYTE>:Equals (T_BYTE,T_BYTE)",
      "code_size" : "127",
      "class" : "EnumEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetHashCode",
      "signature" : "int System.Collections.Generic.EnumEqualityComparer`1<T_BYTE>:GetHashCode (T_BYTE)",
      "code_size" : "80",
      "class" : "EnumEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetObjectData",
      "signature" : "void System.Collections.Generic.EnumEqualityComparer`1<T_BYTE>:GetObjectData (System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)",
      "code_size" : "85",
      "class" : "EnumEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Equals",
      "signature" : "bool System.Collections.Generic.EnumEqualityComparer`1<T_BYTE>:Equals (object)",
      "code_size" : "107",
      "class" : "EnumEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetHashCode",
      "signature" : "int System.Collections.Generic.EnumEqualityComparer`1<T_BYTE>:GetHashCode ()",
      "code_size" : "44",
      "class" : "EnumEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "invoke_bool_T",
      "signature" : "(wrapper delegate-invoke) bool System.Predicate`1<Mono.CSharp.Operator/OpType>:invoke_bool_T (Mono.CSharp.Operator/OpType)",
      "code_size" : "258",
      "class" : "Predicate`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_void_T",
      "signature" : "(wrapper delegate-invoke) void System.Action`1<Mono.CSharp.Operator/OpType>:invoke_void_T (Mono.CSharp.Operator/OpType)",
      "code_size" : "252",
      "class" : "Action`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_int_T_T",
      "signature" : "(wrapper delegate-invoke) int System.Comparison`1<Mono.CSharp.Operator/OpType>:invoke_int_T_T (Mono.CSharp.Operator/OpType,Mono.CSharp.Operator/OpType)",
      "code_size" : "282",
      "class" : "Comparison`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.KeyValuePair`2<TKey_INT, TValue_REF>:.ctor (TKey_INT,TValue_REF)",
      "code_size" : "61",
      "class" : "KeyValuePair`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Key",
      "signature" : "TKey_INT System.Collections.Generic.KeyValuePair`2<TKey_INT, TValue_REF>:get_Key ()",
      "code_size" : "24",
      "class" : "KeyValuePair`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Value",
      "signature" : "TValue_REF System.Collections.Generic.KeyValuePair`2<TKey_INT, TValue_REF>:get_Value ()",
      "code_size" : "25",
      "class" : "KeyValuePair`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "ToString",
      "signature" : "string System.Collections.Generic.KeyValuePair`2<TKey_INT, TValue_REF>:ToString ()",
      "code_size" : "467",
      "class" : "KeyValuePair`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Array/InternalEnumerator`1<T_INST>:.ctor (System.Array)",
      "code_size" : "56",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Array/InternalEnumerator`1<T_INST>:Dispose ()",
      "code_size" : "28",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "MoveNext",
      "signature" : "bool System.Array/InternalEnumerator`1<T_INST>:MoveNext ()",
      "code_size" : "100",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Current",
      "signature" : "T_INST System.Array/InternalEnumerator`1<T_INST>:get_Current ()",
      "code_size" : "252",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerator.Reset",
      "signature" : "void System.Array/InternalEnumerator`1<T_INST>:System.Collections.IEnumerator.Reset ()",
      "code_size" : "28",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerator.get_Current",
      "signature" : "object System.Array/InternalEnumerator`1<T_INST>:System.Collections.IEnumerator.get_Current ()",
      "code_size" : "141",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__IEnumerable_GetEnumerator",
      "signature" : "System.Collections.Generic.IEnumerator`1<T_INST> System.Array:InternalArray__IEnumerable_GetEnumerator<T_INST> ()",
      "code_size" : "192",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.Dictionary`2/Enumerator<TKey_INT, TValue_REF>:.ctor (System.Collections.Generic.Dictionary`2<TKey_INT, TValue_REF>,int)",
      "code_size" : "134",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "MoveNext",
      "signature" : "bool System.Collections.Generic.Dictionary`2/Enumerator<TKey_INT, TValue_REF>:MoveNext ()",
      "code_size" : "502",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Current",
      "signature" : "System.Collections.Generic.KeyValuePair`2<TKey_INT, TValue_REF> System.Collections.Generic.Dictionary`2/Enumerator<TKey_INT, TValue_REF>:get_Current ()",
      "code_size" : "89",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Collections.Generic.Dictionary`2/Enumerator<TKey_INT, TValue_REF>:Dispose ()",
      "code_size" : "18",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerator.get_Current",
      "signature" : "object System.Collections.Generic.Dictionary`2/Enumerator<TKey_INT, TValue_REF>:System.Collections.IEnumerator.get_Current ()",
      "code_size" : "769",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerator.Reset",
      "signature" : "void System.Collections.Generic.Dictionary`2/Enumerator<TKey_INT, TValue_REF>:System.Collections.IEnumerator.Reset ()",
      "code_size" : "144",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IDictionaryEnumerator.get_Entry",
      "signature" : "System.Collections.DictionaryEntry System.Collections.Generic.Dictionary`2/Enumerator<TKey_INT, TValue_REF>:System.Collections.IDictionaryEnumerator.get_Entry ()",
      "code_size" : "369",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IDictionaryEnumerator.get_Key",
      "signature" : "object System.Collections.Generic.Dictionary`2/Enumerator<TKey_INT, TValue_REF>:System.Collections.IDictionaryEnumerator.get_Key ()",
      "code_size" : "158",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IDictionaryEnumerator.get_Value",
      "signature" : "object System.Collections.Generic.Dictionary`2/Enumerator<TKey_INT, TValue_REF>:System.Collections.IDictionaryEnumerator.get_Value ()",
      "code_size" : "122",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "invoke_TResult_T",
      "signature" : "(wrapper delegate-invoke) bool System.Func`2<Mono.CSharp.MemberSpec, bool>:invoke_TResult_T (Mono.CSharp.MemberSpec)",
      "code_size" : "258",
      "class" : "Func`2",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_TResult_T",
      "signature" : "(wrapper delegate-invoke) string System.Func`2<Mono.CSharp.MemberSpec, string>:invoke_TResult_T (Mono.CSharp.MemberSpec)",
      "code_size" : "258",
      "class" : "Func`2",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Nullable`1<System.Reflection.Emit.Label>:.ctor (System.Reflection.Emit.Label)",
      "code_size" : "32",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_HasValue",
      "signature" : "bool System.Nullable`1<System.Reflection.Emit.Label>:get_HasValue ()",
      "code_size" : "20",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Value",
      "signature" : "System.Reflection.Emit.Label System.Nullable`1<System.Reflection.Emit.Label>:get_Value ()",
      "code_size" : "70",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "Equals",
      "signature" : "bool System.Nullable`1<System.Reflection.Emit.Label>:Equals (object)",
      "code_size" : "152",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "Equals",
      "signature" : "bool System.Nullable`1<System.Reflection.Emit.Label>:Equals (System.Nullable`1<System.Reflection.Emit.Label>)",
      "code_size" : "131",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetHashCode",
      "signature" : "int System.Nullable`1<System.Reflection.Emit.Label>:GetHashCode ()",
      "code_size" : "44",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetValueOrDefault",
      "signature" : "System.Reflection.Emit.Label System.Nullable`1<System.Reflection.Emit.Label>:GetValueOrDefault ()",
      "code_size" : "26",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetValueOrDefault",
      "signature" : "System.Reflection.Emit.Label System.Nullable`1<System.Reflection.Emit.Label>:GetValueOrDefault (System.Reflection.Emit.Label)",
      "code_size" : "64",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "ToString",
      "signature" : "string System.Nullable`1<System.Reflection.Emit.Label>:ToString ()",
      "code_size" : "91",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "op_Implicit",
      "signature" : "System.Nullable`1<System.Reflection.Emit.Label> System.Nullable`1<System.Reflection.Emit.Label>:op_Implicit (System.Reflection.Emit.Label)",
      "code_size" : "56",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "op_Explicit",
      "signature" : "System.Reflection.Emit.Label System.Nullable`1<System.Reflection.Emit.Label>:op_Explicit (System.Nullable`1<System.Reflection.Emit.Label>)",
      "code_size" : "37",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "Box",
      "signature" : "object System.Nullable`1<System.Reflection.Emit.Label>:Box (System.Nullable`1<System.Reflection.Emit.Label>)",
      "code_size" : "68",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "Unbox",
      "signature" : "System.Nullable`1<System.Reflection.Emit.Label> System.Nullable`1<System.Reflection.Emit.Label>:Unbox (object)",
      "code_size" : "170",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "invoke_bool_T",
      "signature" : "(wrapper delegate-invoke) bool System.Predicate`1<Mono.CSharp.IExpressionCleanup>:invoke_bool_T (Mono.CSharp.IExpressionCleanup)",
      "code_size" : "258",
      "class" : "Predicate`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_void_T",
      "signature" : "(wrapper delegate-invoke) void System.Action`1<Mono.CSharp.IExpressionCleanup>:invoke_void_T (Mono.CSharp.IExpressionCleanup)",
      "code_size" : "252",
      "class" : "Action`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_int_T_T",
      "signature" : "(wrapper delegate-invoke) int System.Comparison`1<Mono.CSharp.IExpressionCleanup>:invoke_int_T_T (Mono.CSharp.IExpressionCleanup,Mono.CSharp.IExpressionCleanup)",
      "code_size" : "282",
      "class" : "Comparison`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Nullable`1<Mono.CSharp.Location>:.ctor (Mono.CSharp.Location)",
      "code_size" : "32",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_HasValue",
      "signature" : "bool System.Nullable`1<Mono.CSharp.Location>:get_HasValue ()",
      "code_size" : "20",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Value",
      "signature" : "Mono.CSharp.Location System.Nullable`1<Mono.CSharp.Location>:get_Value ()",
      "code_size" : "70",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "Equals",
      "signature" : "bool System.Nullable`1<Mono.CSharp.Location>:Equals (object)",
      "code_size" : "152",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "Equals",
      "signature" : "bool System.Nullable`1<Mono.CSharp.Location>:Equals (System.Nullable`1<Mono.CSharp.Location>)",
      "code_size" : "180",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetHashCode",
      "signature" : "int System.Nullable`1<Mono.CSharp.Location>:GetHashCode ()",
      "code_size" : "82",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetValueOrDefault",
      "signature" : "Mono.CSharp.Location System.Nullable`1<Mono.CSharp.Location>:GetValueOrDefault ()",
      "code_size" : "26",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetValueOrDefault",
      "signature" : "Mono.CSharp.Location System.Nullable`1<Mono.CSharp.Location>:GetValueOrDefault (Mono.CSharp.Location)",
      "code_size" : "64",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "ToString",
      "signature" : "string System.Nullable`1<Mono.CSharp.Location>:ToString ()",
      "code_size" : "45",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "op_Implicit",
      "signature" : "System.Nullable`1<Mono.CSharp.Location> System.Nullable`1<Mono.CSharp.Location>:op_Implicit (Mono.CSharp.Location)",
      "code_size" : "56",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "op_Explicit",
      "signature" : "Mono.CSharp.Location System.Nullable`1<Mono.CSharp.Location>:op_Explicit (System.Nullable`1<Mono.CSharp.Location>)",
      "code_size" : "37",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "Box",
      "signature" : "object System.Nullable`1<Mono.CSharp.Location>:Box (System.Nullable`1<Mono.CSharp.Location>)",
      "code_size" : "68",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "Unbox",
      "signature" : "System.Nullable`1<Mono.CSharp.Location> System.Nullable`1<Mono.CSharp.Location>:Unbox (object)",
      "code_size" : "170",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "invoke_TResult_T",
      "signature" : "(wrapper delegate-invoke) string System.Func`2<string, string>:invoke_TResult_T (string)",
      "code_size" : "258",
      "class" : "Func`2",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_bool_T",
      "signature" : "(wrapper delegate-invoke) bool System.Predicate`1<Mono.CSharp.FieldDeclarator>:invoke_bool_T (Mono.CSharp.FieldDeclarator)",
      "code_size" : "258",
      "class" : "Predicate`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_void_T",
      "signature" : "(wrapper delegate-invoke) void System.Action`1<Mono.CSharp.FieldDeclarator>:invoke_void_T (Mono.CSharp.FieldDeclarator)",
      "code_size" : "252",
      "class" : "Action`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_int_T_T",
      "signature" : "(wrapper delegate-invoke) int System.Comparison`1<Mono.CSharp.FieldDeclarator>:invoke_int_T_T (Mono.CSharp.FieldDeclarator,Mono.CSharp.FieldDeclarator)",
      "code_size" : "282",
      "class" : "Comparison`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_bool_T",
      "signature" : "(wrapper delegate-invoke) bool System.Predicate`1<Mono.CSharp.DefiniteAssignmentBitSet>:invoke_bool_T (Mono.CSharp.DefiniteAssignmentBitSet)",
      "code_size" : "258",
      "class" : "Predicate`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_void_T",
      "signature" : "(wrapper delegate-invoke) void System.Action`1<Mono.CSharp.DefiniteAssignmentBitSet>:invoke_void_T (Mono.CSharp.DefiniteAssignmentBitSet)",
      "code_size" : "252",
      "class" : "Action`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_int_T_T",
      "signature" : "(wrapper delegate-invoke) int System.Comparison`1<Mono.CSharp.DefiniteAssignmentBitSet>:invoke_int_T_T (Mono.CSharp.DefiniteAssignmentBitSet,Mono.CSharp.DefiniteAssignmentBitSet)",
      "code_size" : "282",
      "class" : "Comparison`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_bool_T",
      "signature" : "(wrapper delegate-invoke) bool System.Predicate`1<Mono.CSharp.SourceFile>:invoke_bool_T (Mono.CSharp.SourceFile)",
      "code_size" : "258",
      "class" : "Predicate`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_void_T",
      "signature" : "(wrapper delegate-invoke) void System.Action`1<Mono.CSharp.SourceFile>:invoke_void_T (Mono.CSharp.SourceFile)",
      "code_size" : "252",
      "class" : "Action`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_int_T_T",
      "signature" : "(wrapper delegate-invoke) int System.Comparison`1<Mono.CSharp.SourceFile>:invoke_int_T_T (Mono.CSharp.SourceFile,Mono.CSharp.SourceFile)",
      "code_size" : "282",
      "class" : "Comparison`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_bool_T",
      "signature" : "(wrapper delegate-invoke) bool System.Predicate`1<Mono.CSharp.Parameter>:invoke_bool_T (Mono.CSharp.Parameter)",
      "code_size" : "258",
      "class" : "Predicate`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_void_T",
      "signature" : "(wrapper delegate-invoke) void System.Action`1<Mono.CSharp.Parameter>:invoke_void_T (Mono.CSharp.Parameter)",
      "code_size" : "252",
      "class" : "Action`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_int_T_T",
      "signature" : "(wrapper delegate-invoke) int System.Comparison`1<Mono.CSharp.Parameter>:invoke_int_T_T (Mono.CSharp.Parameter,Mono.CSharp.Parameter)",
      "code_size" : "282",
      "class" : "Comparison`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_bool_T",
      "signature" : "(wrapper delegate-invoke) bool System.Predicate`1<Mono.CSharp.MethodSpec>:invoke_bool_T (Mono.CSharp.MethodSpec)",
      "code_size" : "258",
      "class" : "Predicate`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_void_T",
      "signature" : "(wrapper delegate-invoke) void System.Action`1<Mono.CSharp.MethodSpec>:invoke_void_T (Mono.CSharp.MethodSpec)",
      "code_size" : "252",
      "class" : "Action`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_int_T_T",
      "signature" : "(wrapper delegate-invoke) int System.Comparison`1<Mono.CSharp.MethodSpec>:invoke_int_T_T (Mono.CSharp.MethodSpec,Mono.CSharp.MethodSpec)",
      "code_size" : "282",
      "class" : "Comparison`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_bool_T",
      "signature" : "(wrapper delegate-invoke) bool System.Predicate`1<Mono.CSharp.PropertyPatternMember>:invoke_bool_T (Mono.CSharp.PropertyPatternMember)",
      "code_size" : "258",
      "class" : "Predicate`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_void_T",
      "signature" : "(wrapper delegate-invoke) void System.Action`1<Mono.CSharp.PropertyPatternMember>:invoke_void_T (Mono.CSharp.PropertyPatternMember)",
      "code_size" : "252",
      "class" : "Action`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_int_T_T",
      "signature" : "(wrapper delegate-invoke) int System.Comparison`1<Mono.CSharp.PropertyPatternMember>:invoke_int_T_T (Mono.CSharp.PropertyPatternMember,Mono.CSharp.PropertyPatternMember)",
      "code_size" : "282",
      "class" : "Comparison`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Tuple`2<Mono.CSharp.Location, Mono.CSharp.Location>:.ctor (Mono.CSharp.Location,Mono.CSharp.Location)",
      "code_size" : "51",
      "class" : "Tuple`2",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Item1",
      "signature" : "Mono.CSharp.Location System.Tuple`2<Mono.CSharp.Location, Mono.CSharp.Location>:get_Item1 ()",
      "code_size" : "30",
      "class" : "Tuple`2",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Item2",
      "signature" : "Mono.CSharp.Location System.Tuple`2<Mono.CSharp.Location, Mono.CSharp.Location>:get_Item2 ()",
      "code_size" : "30",
      "class" : "Tuple`2",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "Equals",
      "signature" : "bool System.Tuple`2<Mono.CSharp.Location, Mono.CSharp.Location>:Equals (object)",
      "code_size" : "59",
      "class" : "Tuple`2",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IStructuralEquatable.Equals",
      "signature" : "bool System.Tuple`2<Mono.CSharp.Location, Mono.CSharp.Location>:System.Collections.IStructuralEquatable.Equals (object,System.Collections.IEqualityComparer)",
      "code_size" : "364",
      "class" : "Tuple`2",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.IComparable.CompareTo",
      "signature" : "int System.Tuple`2<Mono.CSharp.Location, Mono.CSharp.Location>:System.IComparable.CompareTo (object)",
      "code_size" : "59",
      "class" : "Tuple`2",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IStructuralComparable.CompareTo",
      "signature" : "int System.Tuple`2<Mono.CSharp.Location, Mono.CSharp.Location>:System.Collections.IStructuralComparable.CompareTo (object,System.Collections.IComparer)",
      "code_size" : "508",
      "class" : "Tuple`2",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetHashCode",
      "signature" : "int System.Tuple`2<Mono.CSharp.Location, Mono.CSharp.Location>:GetHashCode ()",
      "code_size" : "48",
      "class" : "Tuple`2",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IStructuralEquatable.GetHashCode",
      "signature" : "int System.Tuple`2<Mono.CSharp.Location, Mono.CSharp.Location>:System.Collections.IStructuralEquatable.GetHashCode (System.Collections.IEqualityComparer)",
      "code_size" : "172",
      "class" : "Tuple`2",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.ITuple.GetHashCode",
      "signature" : "int System.Tuple`2<Mono.CSharp.Location, Mono.CSharp.Location>:System.ITuple.GetHashCode (System.Collections.IEqualityComparer)",
      "code_size" : "35",
      "class" : "Tuple`2",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "ToString",
      "signature" : "string System.Tuple`2<Mono.CSharp.Location, Mono.CSharp.Location>:ToString ()",
      "code_size" : "96",
      "class" : "Tuple`2",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.ITuple.ToString",
      "signature" : "string System.Tuple`2<Mono.CSharp.Location, Mono.CSharp.Location>:System.ITuple.ToString (System.Text.StringBuilder)",
      "code_size" : "188",
      "class" : "Tuple`2",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.ITuple.get_Size",
      "signature" : "int System.Tuple`2<Mono.CSharp.Location, Mono.CSharp.Location>:System.ITuple.get_Size ()",
      "code_size" : "14",
      "class" : "Tuple`2",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "invoke_bool_T",
      "signature" : "(wrapper delegate-invoke) bool System.Predicate`1<Mono.CSharp.Catch>:invoke_bool_T (Mono.CSharp.Catch)",
      "code_size" : "258",
      "class" : "Predicate`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_void_T",
      "signature" : "(wrapper delegate-invoke) void System.Action`1<Mono.CSharp.Catch>:invoke_void_T (Mono.CSharp.Catch)",
      "code_size" : "252",
      "class" : "Action`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_int_T_T",
      "signature" : "(wrapper delegate-invoke) int System.Comparison`1<Mono.CSharp.Catch>:invoke_int_T_T (Mono.CSharp.Catch,Mono.CSharp.Catch)",
      "code_size" : "282",
      "class" : "Comparison`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_bool_T",
      "signature" : "(wrapper delegate-invoke) bool System.Predicate`1<Mono.CSharp.DocumentationParameter>:invoke_bool_T (Mono.CSharp.DocumentationParameter)",
      "code_size" : "258",
      "class" : "Predicate`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_void_T",
      "signature" : "(wrapper delegate-invoke) void System.Action`1<Mono.CSharp.DocumentationParameter>:invoke_void_T (Mono.CSharp.DocumentationParameter)",
      "code_size" : "252",
      "class" : "Action`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_int_T_T",
      "signature" : "(wrapper delegate-invoke) int System.Comparison`1<Mono.CSharp.DocumentationParameter>:invoke_int_T_T (Mono.CSharp.DocumentationParameter,Mono.CSharp.DocumentationParameter)",
      "code_size" : "282",
      "class" : "Comparison`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_bool_T",
      "signature" : "(wrapper delegate-invoke) bool System.Predicate`1<Mono.CSharp.Constraints>:invoke_bool_T (Mono.CSharp.Constraints)",
      "code_size" : "258",
      "class" : "Predicate`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_void_T",
      "signature" : "(wrapper delegate-invoke) void System.Action`1<Mono.CSharp.Constraints>:invoke_void_T (Mono.CSharp.Constraints)",
      "code_size" : "252",
      "class" : "Action`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_int_T_T",
      "signature" : "(wrapper delegate-invoke) int System.Comparison`1<Mono.CSharp.Constraints>:invoke_int_T_T (Mono.CSharp.Constraints,Mono.CSharp.Constraints)",
      "code_size" : "282",
      "class" : "Comparison`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_bool_T",
      "signature" : "(wrapper delegate-invoke) bool System.Predicate`1<Mono.CSharp.Expression>:invoke_bool_T (Mono.CSharp.Expression)",
      "code_size" : "258",
      "class" : "Predicate`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_void_T",
      "signature" : "(wrapper delegate-invoke) void System.Action`1<Mono.CSharp.Expression>:invoke_void_T (Mono.CSharp.Expression)",
      "code_size" : "252",
      "class" : "Action`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_int_T_T",
      "signature" : "(wrapper delegate-invoke) int System.Comparison`1<Mono.CSharp.Expression>:invoke_int_T_T (Mono.CSharp.Expression,Mono.CSharp.Expression)",
      "code_size" : "282",
      "class" : "Comparison`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_bool_T",
      "signature" : "(wrapper delegate-invoke) bool System.Predicate`1<Mono.CSharp.AnonymousTypeParameter>:invoke_bool_T (Mono.CSharp.AnonymousTypeParameter)",
      "code_size" : "258",
      "class" : "Predicate`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_void_T",
      "signature" : "(wrapper delegate-invoke) void System.Action`1<Mono.CSharp.AnonymousTypeParameter>:invoke_void_T (Mono.CSharp.AnonymousTypeParameter)",
      "code_size" : "252",
      "class" : "Action`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_int_T_T",
      "signature" : "(wrapper delegate-invoke) int System.Comparison`1<Mono.CSharp.AnonymousTypeParameter>:invoke_int_T_T (Mono.CSharp.AnonymousTypeParameter,Mono.CSharp.AnonymousTypeParameter)",
      "code_size" : "282",
      "class" : "Comparison`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Nullable`1<bool>:.ctor (bool)",
      "code_size" : "33",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_HasValue",
      "signature" : "bool System.Nullable`1<bool>:get_HasValue ()",
      "code_size" : "20",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Value",
      "signature" : "bool System.Nullable`1<bool>:get_Value ()",
      "code_size" : "62",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "Equals",
      "signature" : "bool System.Nullable`1<bool>:Equals (object)",
      "code_size" : "152",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "Equals",
      "signature" : "bool System.Nullable`1<bool>:Equals (System.Nullable`1<bool>)",
      "code_size" : "125",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetHashCode",
      "signature" : "int System.Nullable`1<bool>:GetHashCode ()",
      "code_size" : "54",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetValueOrDefault",
      "signature" : "bool System.Nullable`1<bool>:GetValueOrDefault ()",
      "code_size" : "19",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetValueOrDefault",
      "signature" : "bool System.Nullable`1<bool>:GetValueOrDefault (bool)",
      "code_size" : "49",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "ToString",
      "signature" : "string System.Nullable`1<bool>:ToString ()",
      "code_size" : "72",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "op_Implicit",
      "signature" : "System.Nullable`1<bool> System.Nullable`1<bool>:op_Implicit (bool)",
      "code_size" : "71",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "op_Explicit",
      "signature" : "bool System.Nullable`1<bool>:op_Explicit (System.Nullable`1<bool>)",
      "code_size" : "28",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "Box",
      "signature" : "object System.Nullable`1<bool>:Box (System.Nullable`1<bool>)",
      "code_size" : "61",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "Unbox",
      "signature" : "System.Nullable`1<bool> System.Nullable`1<bool>:Unbox (object)",
      "code_size" : "191",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "invoke_bool_T",
      "signature" : "(wrapper delegate-invoke) bool System.Predicate`1<Mono.CSharp.BlockVariableDeclarator>:invoke_bool_T (Mono.CSharp.BlockVariableDeclarator)",
      "code_size" : "258",
      "class" : "Predicate`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_void_T",
      "signature" : "(wrapper delegate-invoke) void System.Action`1<Mono.CSharp.BlockVariableDeclarator>:invoke_void_T (Mono.CSharp.BlockVariableDeclarator)",
      "code_size" : "252",
      "class" : "Action`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_int_T_T",
      "signature" : "(wrapper delegate-invoke) int System.Comparison`1<Mono.CSharp.BlockVariableDeclarator>:invoke_int_T_T (Mono.CSharp.BlockVariableDeclarator,Mono.CSharp.BlockVariableDeclarator)",
      "code_size" : "282",
      "class" : "Comparison`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Nullable`1<Mono.CSharp.Operator/OpType>:.ctor (Mono.CSharp.Operator/OpType)",
      "code_size" : "33",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_HasValue",
      "signature" : "bool System.Nullable`1<Mono.CSharp.Operator/OpType>:get_HasValue ()",
      "code_size" : "20",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Value",
      "signature" : "Mono.CSharp.Operator/OpType System.Nullable`1<Mono.CSharp.Operator/OpType>:get_Value ()",
      "code_size" : "62",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "Equals",
      "signature" : "bool System.Nullable`1<Mono.CSharp.Operator/OpType>:Equals (object)",
      "code_size" : "152",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "Equals",
      "signature" : "bool System.Nullable`1<Mono.CSharp.Operator/OpType>:Equals (System.Nullable`1<Mono.CSharp.Operator/OpType>)",
      "code_size" : "157",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetHashCode",
      "signature" : "int System.Nullable`1<Mono.CSharp.Operator/OpType>:GetHashCode ()",
      "code_size" : "78",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetValueOrDefault",
      "signature" : "Mono.CSharp.Operator/OpType System.Nullable`1<Mono.CSharp.Operator/OpType>:GetValueOrDefault ()",
      "code_size" : "19",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetValueOrDefault",
      "signature" : "Mono.CSharp.Operator/OpType System.Nullable`1<Mono.CSharp.Operator/OpType>:GetValueOrDefault (Mono.CSharp.Operator/OpType)",
      "code_size" : "49",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "ToString",
      "signature" : "string System.Nullable`1<Mono.CSharp.Operator/OpType>:ToString ()",
      "code_size" : "87",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "op_Implicit",
      "signature" : "System.Nullable`1<Mono.CSharp.Operator/OpType> System.Nullable`1<Mono.CSharp.Operator/OpType>:op_Implicit (Mono.CSharp.Operator/OpType)",
      "code_size" : "71",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "op_Explicit",
      "signature" : "Mono.CSharp.Operator/OpType System.Nullable`1<Mono.CSharp.Operator/OpType>:op_Explicit (System.Nullable`1<Mono.CSharp.Operator/OpType>)",
      "code_size" : "28",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "Box",
      "signature" : "object System.Nullable`1<Mono.CSharp.Operator/OpType>:Box (System.Nullable`1<Mono.CSharp.Operator/OpType>)",
      "code_size" : "61",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "Unbox",
      "signature" : "System.Nullable`1<Mono.CSharp.Operator/OpType> System.Nullable`1<Mono.CSharp.Operator/OpType>:Unbox (object)",
      "code_size" : "191",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Tuple`2<Mono.CSharp.Modifiers, Mono.CSharp.Location>:.ctor (Mono.CSharp.Modifiers,Mono.CSharp.Location)",
      "code_size" : "44",
      "class" : "Tuple`2",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Item1",
      "signature" : "Mono.CSharp.Modifiers System.Tuple`2<Mono.CSharp.Modifiers, Mono.CSharp.Location>:get_Item1 ()",
      "code_size" : "20",
      "class" : "Tuple`2",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Item2",
      "signature" : "Mono.CSharp.Location System.Tuple`2<Mono.CSharp.Modifiers, Mono.CSharp.Location>:get_Item2 ()",
      "code_size" : "30",
      "class" : "Tuple`2",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "Equals",
      "signature" : "bool System.Tuple`2<Mono.CSharp.Modifiers, Mono.CSharp.Location>:Equals (object)",
      "code_size" : "59",
      "class" : "Tuple`2",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IStructuralEquatable.Equals",
      "signature" : "bool System.Tuple`2<Mono.CSharp.Modifiers, Mono.CSharp.Location>:System.Collections.IStructuralEquatable.Equals (object,System.Collections.IEqualityComparer)",
      "code_size" : "351",
      "class" : "Tuple`2",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.IComparable.CompareTo",
      "signature" : "int System.Tuple`2<Mono.CSharp.Modifiers, Mono.CSharp.Location>:System.IComparable.CompareTo (object)",
      "code_size" : "59",
      "class" : "Tuple`2",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IStructuralComparable.CompareTo",
      "signature" : "int System.Tuple`2<Mono.CSharp.Modifiers, Mono.CSharp.Location>:System.Collections.IStructuralComparable.CompareTo (object,System.Collections.IComparer)",
      "code_size" : "495",
      "class" : "Tuple`2",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetHashCode",
      "signature" : "int System.Tuple`2<Mono.CSharp.Modifiers, Mono.CSharp.Location>:GetHashCode ()",
      "code_size" : "48",
      "class" : "Tuple`2",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IStructuralEquatable.GetHashCode",
      "signature" : "int System.Tuple`2<Mono.CSharp.Modifiers, Mono.CSharp.Location>:System.Collections.IStructuralEquatable.GetHashCode (System.Collections.IEqualityComparer)",
      "code_size" : "167",
      "class" : "Tuple`2",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.ITuple.GetHashCode",
      "signature" : "int System.Tuple`2<Mono.CSharp.Modifiers, Mono.CSharp.Location>:System.ITuple.GetHashCode (System.Collections.IEqualityComparer)",
      "code_size" : "35",
      "class" : "Tuple`2",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "ToString",
      "signature" : "string System.Tuple`2<Mono.CSharp.Modifiers, Mono.CSharp.Location>:ToString ()",
      "code_size" : "96",
      "class" : "Tuple`2",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.ITuple.ToString",
      "signature" : "string System.Tuple`2<Mono.CSharp.Modifiers, Mono.CSharp.Location>:System.ITuple.ToString (System.Text.StringBuilder)",
      "code_size" : "183",
      "class" : "Tuple`2",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.ITuple.get_Size",
      "signature" : "int System.Tuple`2<Mono.CSharp.Modifiers, Mono.CSharp.Location>:System.ITuple.get_Size ()",
      "code_size" : "14",
      "class" : "Tuple`2",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "invoke_bool_T",
      "signature" : "(wrapper delegate-invoke) bool System.Predicate`1<System.Tuple`2<Mono.CSharp.Modifiers, Mono.CSharp.Location>>:invoke_bool_T (System.Tuple`2<Mono.CSharp.Modifiers, Mono.CSharp.Location>)",
      "code_size" : "258",
      "class" : "Predicate`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_void_T",
      "signature" : "(wrapper delegate-invoke) void System.Action`1<System.Tuple`2<Mono.CSharp.Modifiers, Mono.CSharp.Location>>:invoke_void_T (System.Tuple`2<Mono.CSharp.Modifiers, Mono.CSharp.Location>)",
      "code_size" : "252",
      "class" : "Action`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_int_T_T",
      "signature" : "(wrapper delegate-invoke) int System.Comparison`1<System.Tuple`2<Mono.CSharp.Modifiers, Mono.CSharp.Location>>:invoke_int_T_T (System.Tuple`2<Mono.CSharp.Modifiers, Mono.CSharp.Location>,System.Tuple`2<Mono.CSharp.Modifiers, Mono.CSharp.Location>)",
      "code_size" : "282",
      "class" : "Comparison`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.Stack`1<Mono.CSharp.Location>:.ctor ()",
      "code_size" : "69",
      "class" : "Stack`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.Stack`1<Mono.CSharp.Location>:.ctor (int)",
      "code_size" : "103",
      "class" : "Stack`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.Stack`1<Mono.CSharp.Location>:.ctor (System.Collections.Generic.IEnumerable`1<Mono.CSharp.Location>)",
      "code_size" : "469",
      "class" : "Stack`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Count",
      "signature" : "int System.Collections.Generic.Stack`1<Mono.CSharp.Location>:get_Count ()",
      "code_size" : "20",
      "class" : "Stack`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.ICollection.get_IsSynchronized",
      "signature" : "bool System.Collections.Generic.Stack`1<Mono.CSharp.Location>:System.Collections.ICollection.get_IsSynchronized ()",
      "code_size" : "11",
      "class" : "Stack`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.ICollection.get_SyncRoot",
      "signature" : "object System.Collections.Generic.Stack`1<Mono.CSharp.Location>:System.Collections.ICollection.get_SyncRoot ()",
      "code_size" : "124",
      "class" : "Stack`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Clear",
      "signature" : "void System.Collections.Generic.Stack`1<Mono.CSharp.Location>:Clear ()",
      "code_size" : "53",
      "class" : "Stack`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Contains",
      "signature" : "bool System.Collections.Generic.Stack`1<Mono.CSharp.Location>:Contains (Mono.CSharp.Location)",
      "code_size" : "257",
      "class" : "Stack`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "CopyTo",
      "signature" : "void System.Collections.Generic.Stack`1<Mono.CSharp.Location>:CopyTo (Mono.CSharp.Location[],int)",
      "code_size" : "146",
      "class" : "Stack`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.ICollection.CopyTo",
      "signature" : "void System.Collections.Generic.Stack`1<Mono.CSharp.Location>:System.Collections.ICollection.CopyTo (System.Array,int)",
      "code_size" : "259",
      "class" : "Stack`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetEnumerator",
      "signature" : "System.Collections.Generic.Stack`1/Enumerator<Mono.CSharp.Location> System.Collections.Generic.Stack`1<Mono.CSharp.Location>:GetEnumerator ()",
      "code_size" : "154",
      "class" : "Stack`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.IEnumerable<T>.GetEnumerator",
      "signature" : "System.Collections.Generic.IEnumerator`1<Mono.CSharp.Location> System.Collections.Generic.Stack`1<Mono.CSharp.Location>:System.Collections.Generic.IEnumerable<T>.GetEnumerator ()",
      "code_size" : "178",
      "class" : "Stack`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerable.GetEnumerator",
      "signature" : "System.Collections.IEnumerator System.Collections.Generic.Stack`1<Mono.CSharp.Location>:System.Collections.IEnumerable.GetEnumerator ()",
      "code_size" : "178",
      "class" : "Stack`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "TrimExcess",
      "signature" : "void System.Collections.Generic.Stack`1<Mono.CSharp.Location>:TrimExcess ()",
      "code_size" : "152",
      "class" : "Stack`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Peek",
      "signature" : "Mono.CSharp.Location System.Collections.Generic.Stack`1<Mono.CSharp.Location>:Peek ()",
      "code_size" : "91",
      "class" : "Stack`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Pop",
      "signature" : "Mono.CSharp.Location System.Collections.Generic.Stack`1<Mono.CSharp.Location>:Pop ()",
      "code_size" : "193",
      "class" : "Stack`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Push",
      "signature" : "void System.Collections.Generic.Stack`1<Mono.CSharp.Location>:Push (Mono.CSharp.Location)",
      "code_size" : "209",
      "class" : "Stack`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "ToArray",
      "signature" : "Mono.CSharp.Location[] System.Collections.Generic.Stack`1<Mono.CSharp.Location>:ToArray ()",
      "code_size" : "166",
      "class" : "Stack`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".cctor",
      "signature" : "void System.Collections.Generic.Stack`1<Mono.CSharp.Location>:.cctor ()",
      "code_size" : "58",
      "class" : "Stack`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Array/InternalEnumerator`1<Mono.CSharp.Location>:.ctor (System.Array)",
      "code_size" : "49",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Array/InternalEnumerator`1<Mono.CSharp.Location>:Dispose ()",
      "code_size" : "23",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "MoveNext",
      "signature" : "bool System.Array/InternalEnumerator`1<Mono.CSharp.Location>:MoveNext ()",
      "code_size" : "95",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Current",
      "signature" : "Mono.CSharp.Location System.Array/InternalEnumerator`1<Mono.CSharp.Location>:get_Current ()",
      "code_size" : "149",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerator.Reset",
      "signature" : "void System.Array/InternalEnumerator`1<Mono.CSharp.Location>:System.Collections.IEnumerator.Reset ()",
      "code_size" : "23",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerator.get_Current",
      "signature" : "object System.Array/InternalEnumerator`1<Mono.CSharp.Location>:System.Collections.IEnumerator.get_Current ()",
      "code_size" : "64",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__IEnumerable_GetEnumerator",
      "signature" : "System.Collections.Generic.IEnumerator`1<Mono.CSharp.Location> System.Array:InternalArray__IEnumerable_GetEnumerator<Mono.CSharp.Location> ()",
      "code_size" : "151",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__ICollection_Add",
      "signature" : "void System.Array:InternalArray__ICollection_Add<Mono.CSharp.Location> (Mono.CSharp.Location)",
      "code_size" : "40",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__ICollection_Remove",
      "signature" : "bool System.Array:InternalArray__ICollection_Remove<Mono.CSharp.Location> (Mono.CSharp.Location)",
      "code_size" : "40",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__ICollection_Contains",
      "signature" : "bool System.Array:InternalArray__ICollection_Contains<Mono.CSharp.Location> (Mono.CSharp.Location)",
      "code_size" : "278",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__ICollection_CopyTo",
      "signature" : "void System.Array:InternalArray__ICollection_CopyTo<Mono.CSharp.Location> (Mono.CSharp.Location[],int)",
      "code_size" : "487",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.EqualityComparer`1<Mono.CSharp.Location>:.ctor ()",
      "code_size" : "9",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Default",
      "signature" : "System.Collections.Generic.EqualityComparer`1<Mono.CSharp.Location> System.Collections.Generic.EqualityComparer`1<Mono.CSharp.Location>:get_Default ()",
      "code_size" : "66",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateComparer",
      "signature" : "System.Collections.Generic.EqualityComparer`1<Mono.CSharp.Location> System.Collections.Generic.EqualityComparer`1<Mono.CSharp.Location>:CreateComparer ()",
      "code_size" : "1064",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "IndexOf",
      "signature" : "int System.Collections.Generic.EqualityComparer`1<Mono.CSharp.Location>:IndexOf (Mono.CSharp.Location[],Mono.CSharp.Location,int,int)",
      "code_size" : "178",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "LastIndexOf",
      "signature" : "int System.Collections.Generic.EqualityComparer`1<Mono.CSharp.Location>:LastIndexOf (Mono.CSharp.Location[],Mono.CSharp.Location,int,int)",
      "code_size" : "185",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEqualityComparer.GetHashCode",
      "signature" : "int System.Collections.Generic.EqualityComparer`1<Mono.CSharp.Location>:System.Collections.IEqualityComparer.GetHashCode (object)",
      "code_size" : "205",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEqualityComparer.Equals",
      "signature" : "bool System.Collections.Generic.EqualityComparer`1<Mono.CSharp.Location>:System.Collections.IEqualityComparer.Equals (object,object)",
      "code_size" : "352",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.GenericEqualityComparer`1<Mono.CSharp.Location>:.ctor ()",
      "code_size" : "9",
      "class" : "GenericEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Equals",
      "signature" : "bool System.Collections.Generic.GenericEqualityComparer`1<Mono.CSharp.Location>:Equals (Mono.CSharp.Location,Mono.CSharp.Location)",
      "code_size" : "55",
      "class" : "GenericEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetHashCode",
      "signature" : "int System.Collections.Generic.GenericEqualityComparer`1<Mono.CSharp.Location>:GetHashCode (Mono.CSharp.Location)",
      "code_size" : "70",
      "class" : "GenericEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "IndexOf",
      "signature" : "int System.Collections.Generic.GenericEqualityComparer`1<Mono.CSharp.Location>:IndexOf (Mono.CSharp.Location[],Mono.CSharp.Location,int,int)",
      "code_size" : "250",
      "class" : "GenericEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "LastIndexOf",
      "signature" : "int System.Collections.Generic.GenericEqualityComparer`1<Mono.CSharp.Location>:LastIndexOf (Mono.CSharp.Location[],Mono.CSharp.Location,int,int)",
      "code_size" : "250",
      "class" : "GenericEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Equals",
      "signature" : "bool System.Collections.Generic.GenericEqualityComparer`1<Mono.CSharp.Location>:Equals (object)",
      "code_size" : "91",
      "class" : "GenericEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetHashCode",
      "signature" : "int System.Collections.Generic.GenericEqualityComparer`1<Mono.CSharp.Location>:GetHashCode ()",
      "code_size" : "44",
      "class" : "GenericEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "invoke_bool_T",
      "signature" : "(wrapper delegate-invoke) bool System.Predicate`1<Mono.CSharp.Location>:invoke_bool_T (Mono.CSharp.Location)",
      "code_size" : "255",
      "class" : "Predicate`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_void_T",
      "signature" : "(wrapper delegate-invoke) void System.Action`1<Mono.CSharp.Location>:invoke_void_T (Mono.CSharp.Location)",
      "code_size" : "249",
      "class" : "Action`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_int_T_T",
      "signature" : "(wrapper delegate-invoke) int System.Comparison`1<Mono.CSharp.Location>:invoke_int_T_T (Mono.CSharp.Location,Mono.CSharp.Location)",
      "code_size" : "276",
      "class" : "Comparison`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.Stack`1<T_INT>:.ctor ()",
      "code_size" : "112",
      "class" : "Stack`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.Stack`1<T_INT>:.ctor (int)",
      "code_size" : "120",
      "class" : "Stack`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.Stack`1<T_INT>:.ctor (System.Collections.Generic.IEnumerable`1<T_INT>)",
      "code_size" : "494",
      "class" : "Stack`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Count",
      "signature" : "int System.Collections.Generic.Stack`1<T_INT>:get_Count ()",
      "code_size" : "20",
      "class" : "Stack`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.ICollection.get_IsSynchronized",
      "signature" : "bool System.Collections.Generic.Stack`1<T_INT>:System.Collections.ICollection.get_IsSynchronized ()",
      "code_size" : "15",
      "class" : "Stack`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.ICollection.get_SyncRoot",
      "signature" : "object System.Collections.Generic.Stack`1<T_INT>:System.Collections.ICollection.get_SyncRoot ()",
      "code_size" : "143",
      "class" : "Stack`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Clear",
      "signature" : "void System.Collections.Generic.Stack`1<T_INT>:Clear ()",
      "code_size" : "59",
      "class" : "Stack`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Contains",
      "signature" : "bool System.Collections.Generic.Stack`1<T_INT>:Contains (T_INT)",
      "code_size" : "277",
      "class" : "Stack`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "CopyTo",
      "signature" : "void System.Collections.Generic.Stack`1<T_INT>:CopyTo (T_INT[],int)",
      "code_size" : "158",
      "class" : "Stack`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.ICollection.CopyTo",
      "signature" : "void System.Collections.Generic.Stack`1<T_INT>:System.Collections.ICollection.CopyTo (System.Array,int)",
      "code_size" : "267",
      "class" : "Stack`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetEnumerator",
      "signature" : "System.Collections.Generic.Stack`1/Enumerator<T_INT> System.Collections.Generic.Stack`1<T_INT>:GetEnumerator ()",
      "code_size" : "198",
      "class" : "Stack`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.IEnumerable<T>.GetEnumerator",
      "signature" : "System.Collections.Generic.IEnumerator`1<T_INT> System.Collections.Generic.Stack`1<T_INT>:System.Collections.Generic.IEnumerable<T>.GetEnumerator ()",
      "code_size" : "231",
      "class" : "Stack`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerable.GetEnumerator",
      "signature" : "System.Collections.IEnumerator System.Collections.Generic.Stack`1<T_INT>:System.Collections.IEnumerable.GetEnumerator ()",
      "code_size" : "231",
      "class" : "Stack`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "TrimExcess",
      "signature" : "void System.Collections.Generic.Stack`1<T_INT>:TrimExcess ()",
      "code_size" : "184",
      "class" : "Stack`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Peek",
      "signature" : "T_INT System.Collections.Generic.Stack`1<T_INT>:Peek ()",
      "code_size" : "87",
      "class" : "Stack`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Pop",
      "signature" : "T_INT System.Collections.Generic.Stack`1<T_INT>:Pop ()",
      "code_size" : "172",
      "class" : "Stack`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Push",
      "signature" : "void System.Collections.Generic.Stack`1<T_INT>:Push (T_INT)",
      "code_size" : "256",
      "class" : "Stack`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "ToArray",
      "signature" : "T_INT[] System.Collections.Generic.Stack`1<T_INT>:ToArray ()",
      "code_size" : "191",
      "class" : "Stack`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".cctor",
      "signature" : "void System.Collections.Generic.Stack`1<T_INT>:.cctor ()",
      "code_size" : "65",
      "class" : "Stack`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.Stack`1<T_BOOL>:.ctor ()",
      "code_size" : "112",
      "class" : "Stack`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.Stack`1<T_BOOL>:.ctor (int)",
      "code_size" : "120",
      "class" : "Stack`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.Stack`1<T_BOOL>:.ctor (System.Collections.Generic.IEnumerable`1<T_BOOL>)",
      "code_size" : "494",
      "class" : "Stack`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Count",
      "signature" : "int System.Collections.Generic.Stack`1<T_BOOL>:get_Count ()",
      "code_size" : "20",
      "class" : "Stack`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.ICollection.get_IsSynchronized",
      "signature" : "bool System.Collections.Generic.Stack`1<T_BOOL>:System.Collections.ICollection.get_IsSynchronized ()",
      "code_size" : "15",
      "class" : "Stack`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.ICollection.get_SyncRoot",
      "signature" : "object System.Collections.Generic.Stack`1<T_BOOL>:System.Collections.ICollection.get_SyncRoot ()",
      "code_size" : "143",
      "class" : "Stack`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Clear",
      "signature" : "void System.Collections.Generic.Stack`1<T_BOOL>:Clear ()",
      "code_size" : "59",
      "class" : "Stack`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Contains",
      "signature" : "bool System.Collections.Generic.Stack`1<T_BOOL>:Contains (T_BOOL)",
      "code_size" : "277",
      "class" : "Stack`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "CopyTo",
      "signature" : "void System.Collections.Generic.Stack`1<T_BOOL>:CopyTo (T_BOOL[],int)",
      "code_size" : "158",
      "class" : "Stack`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.ICollection.CopyTo",
      "signature" : "void System.Collections.Generic.Stack`1<T_BOOL>:System.Collections.ICollection.CopyTo (System.Array,int)",
      "code_size" : "267",
      "class" : "Stack`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetEnumerator",
      "signature" : "System.Collections.Generic.Stack`1/Enumerator<T_BOOL> System.Collections.Generic.Stack`1<T_BOOL>:GetEnumerator ()",
      "code_size" : "198",
      "class" : "Stack`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.IEnumerable<T>.GetEnumerator",
      "signature" : "System.Collections.Generic.IEnumerator`1<T_BOOL> System.Collections.Generic.Stack`1<T_BOOL>:System.Collections.Generic.IEnumerable<T>.GetEnumerator ()",
      "code_size" : "231",
      "class" : "Stack`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerable.GetEnumerator",
      "signature" : "System.Collections.IEnumerator System.Collections.Generic.Stack`1<T_BOOL>:System.Collections.IEnumerable.GetEnumerator ()",
      "code_size" : "231",
      "class" : "Stack`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "TrimExcess",
      "signature" : "void System.Collections.Generic.Stack`1<T_BOOL>:TrimExcess ()",
      "code_size" : "184",
      "class" : "Stack`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Peek",
      "signature" : "T_BOOL System.Collections.Generic.Stack`1<T_BOOL>:Peek ()",
      "code_size" : "87",
      "class" : "Stack`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Pop",
      "signature" : "T_BOOL System.Collections.Generic.Stack`1<T_BOOL>:Pop ()",
      "code_size" : "170",
      "class" : "Stack`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Push",
      "signature" : "void System.Collections.Generic.Stack`1<T_BOOL>:Push (T_BOOL)",
      "code_size" : "257",
      "class" : "Stack`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "ToArray",
      "signature" : "T_BOOL[] System.Collections.Generic.Stack`1<T_BOOL>:ToArray ()",
      "code_size" : "192",
      "class" : "Stack`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".cctor",
      "signature" : "void System.Collections.Generic.Stack`1<T_BOOL>:.cctor ()",
      "code_size" : "65",
      "class" : "Stack`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Tokenizer/KeywordEntry`1<T_INT>:.ctor (string,T_INT)",
      "code_size" : "87",
      "class" : "KeywordEntry`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1<T_BYTE>:.ctor ()",
      "code_size" : "90",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1<T_BYTE>:.ctor (int)",
      "code_size" : "192",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1<T_BYTE>:.ctor (System.Collections.Generic.IEnumerable`1<T_BYTE>)",
      "code_size" : "606",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Capacity",
      "signature" : "int System.Collections.Generic.List`1<T_BYTE>:get_Capacity ()",
      "code_size" : "24",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Capacity",
      "signature" : "void System.Collections.Generic.List`1<T_BYTE>:set_Capacity (int)",
      "code_size" : "260",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Count",
      "signature" : "int System.Collections.Generic.List`1<T_BYTE>:get_Count ()",
      "code_size" : "20",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IList.get_IsFixedSize",
      "signature" : "bool System.Collections.Generic.List`1<T_BYTE>:System.Collections.IList.get_IsFixedSize ()",
      "code_size" : "15",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<T>.get_IsReadOnly",
      "signature" : "bool System.Collections.Generic.List`1<T_BYTE>:System.Collections.Generic.ICollection<T>.get_IsReadOnly ()",
      "code_size" : "15",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IList.get_IsReadOnly",
      "signature" : "bool System.Collections.Generic.List`1<T_BYTE>:System.Collections.IList.get_IsReadOnly ()",
      "code_size" : "15",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.ICollection.get_IsSynchronized",
      "signature" : "bool System.Collections.Generic.List`1<T_BYTE>:System.Collections.ICollection.get_IsSynchronized ()",
      "code_size" : "15",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.ICollection.get_SyncRoot",
      "signature" : "object System.Collections.Generic.List`1<T_BYTE>:System.Collections.ICollection.get_SyncRoot ()",
      "code_size" : "143",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Item",
      "signature" : "T_BYTE System.Collections.Generic.List`1<T_BYTE>:get_Item (int)",
      "code_size" : "60",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Item",
      "signature" : "void System.Collections.Generic.List`1<T_BYTE>:set_Item (int,T_BYTE)",
      "code_size" : "107",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsCompatibleObject",
      "signature" : "bool System.Collections.Generic.List`1<T_BYTE>:IsCompatibleObject (object)",
      "code_size" : "125",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IList.get_Item",
      "signature" : "object System.Collections.Generic.List`1<T_BYTE>:System.Collections.IList.get_Item (int)",
      "code_size" : "92",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IList.set_Item",
      "signature" : "void System.Collections.Generic.List`1<T_BYTE>:System.Collections.IList.set_Item (int,object)",
      "code_size" : "264",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Add",
      "signature" : "void System.Collections.Generic.List`1<T_BYTE>:Add (T_BYTE)",
      "code_size" : "182",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IList.Add",
      "signature" : "int System.Collections.Generic.List`1<T_BYTE>:System.Collections.IList.Add (object)",
      "code_size" : "287",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddRange",
      "signature" : "void System.Collections.Generic.List`1<T_BYTE>:AddRange (System.Collections.Generic.IEnumerable`1<T_BYTE>)",
      "code_size" : "70",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "AsReadOnly",
      "signature" : "System.Collections.ObjectModel.ReadOnlyCollection`1<T_BYTE> System.Collections.Generic.List`1<T_BYTE>:AsReadOnly ()",
      "code_size" : "84",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "BinarySearch",
      "signature" : "int System.Collections.Generic.List`1<T_BYTE>:BinarySearch (int,int,T_BYTE,System.Collections.Generic.IComparer`1<T_BYTE>)",
      "code_size" : "179",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "BinarySearch",
      "signature" : "int System.Collections.Generic.List`1<T_BYTE>:BinarySearch (T_BYTE)",
      "code_size" : "108",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "BinarySearch",
      "signature" : "int System.Collections.Generic.List`1<T_BYTE>:BinarySearch (T_BYTE,System.Collections.Generic.IComparer`1<T_BYTE>)",
      "code_size" : "115",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Clear",
      "signature" : "void System.Collections.Generic.List`1<T_BYTE>:Clear ()",
      "code_size" : "71",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Contains",
      "signature" : "bool System.Collections.Generic.List`1<T_BYTE>:Contains (T_BYTE)",
      "code_size" : "275",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IList.Contains",
      "signature" : "bool System.Collections.Generic.List`1<T_BYTE>:System.Collections.IList.Contains (object)",
      "code_size" : "216",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "CopyTo",
      "signature" : "void System.Collections.Generic.List`1<T_BYTE>:CopyTo (T_BYTE[])",
      "code_size" : "55",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.ICollection.CopyTo",
      "signature" : "void System.Collections.Generic.List`1<T_BYTE>:System.Collections.ICollection.CopyTo (System.Array,int)",
      "code_size" : "134",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "CopyTo",
      "signature" : "void System.Collections.Generic.List`1<T_BYTE>:CopyTo (int,T_BYTE[],int,int)",
      "code_size" : "93",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "CopyTo",
      "signature" : "void System.Collections.Generic.List`1<T_BYTE>:CopyTo (T_BYTE[],int)",
      "code_size" : "55",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "EnsureCapacity",
      "signature" : "void System.Collections.Generic.List`1<T_BYTE>:EnsureCapacity (int)",
      "code_size" : "168",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Exists",
      "signature" : "bool System.Collections.Generic.List`1<T_BYTE>:Exists (System.Predicate`1<T_BYTE>)",
      "code_size" : "74",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Find",
      "signature" : "T_BYTE System.Collections.Generic.List`1<T_BYTE>:Find (System.Predicate`1<T_BYTE>)",
      "code_size" : "178",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "FindAll",
      "signature" : "System.Collections.Generic.List`1<T_BYTE> System.Collections.Generic.List`1<T_BYTE>:FindAll (System.Predicate`1<T_BYTE>)",
      "code_size" : "286",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "FindIndex",
      "signature" : "int System.Collections.Generic.List`1<T_BYTE>:FindIndex (System.Predicate`1<T_BYTE>)",
      "code_size" : "72",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "FindIndex",
      "signature" : "int System.Collections.Generic.List`1<T_BYTE>:FindIndex (int,System.Predicate`1<T_BYTE>)",
      "code_size" : "84",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "FindIndex",
      "signature" : "int System.Collections.Generic.List`1<T_BYTE>:FindIndex (int,int,System.Predicate`1<T_BYTE>)",
      "code_size" : "238",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "FindLast",
      "signature" : "T_BYTE System.Collections.Generic.List`1<T_BYTE>:FindLast (System.Predicate`1<T_BYTE>)",
      "code_size" : "177",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "FindLastIndex",
      "signature" : "int System.Collections.Generic.List`1<T_BYTE>:FindLastIndex (System.Predicate`1<T_BYTE>)",
      "code_size" : "90",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "FindLastIndex",
      "signature" : "int System.Collections.Generic.List`1<T_BYTE>:FindLastIndex (int,System.Predicate`1<T_BYTE>)",
      "code_size" : "78",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "FindLastIndex",
      "signature" : "int System.Collections.Generic.List`1<T_BYTE>:FindLastIndex (int,int,System.Predicate`1<T_BYTE>)",
      "code_size" : "270",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "ForEach",
      "signature" : "void System.Collections.Generic.List`1<T_BYTE>:ForEach (System.Action`1<T_BYTE>)",
      "code_size" : "211",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetEnumerator",
      "signature" : "System.Collections.Generic.List`1/Enumerator<T_BYTE> System.Collections.Generic.List`1<T_BYTE>:GetEnumerator ()",
      "code_size" : "198",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.IEnumerable<T>.GetEnumerator",
      "signature" : "System.Collections.Generic.IEnumerator`1<T_BYTE> System.Collections.Generic.List`1<T_BYTE>:System.Collections.Generic.IEnumerable<T>.GetEnumerator ()",
      "code_size" : "231",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerable.GetEnumerator",
      "signature" : "System.Collections.IEnumerator System.Collections.Generic.List`1<T_BYTE>:System.Collections.IEnumerable.GetEnumerator ()",
      "code_size" : "231",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetRange",
      "signature" : "System.Collections.Generic.List`1<T_BYTE> System.Collections.Generic.List`1<T_BYTE>:GetRange (int,int)",
      "code_size" : "225",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "IndexOf",
      "signature" : "int System.Collections.Generic.List`1<T_BYTE>:IndexOf (T_BYTE)",
      "code_size" : "96",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IList.IndexOf",
      "signature" : "int System.Collections.Generic.List`1<T_BYTE>:System.Collections.IList.IndexOf (object)",
      "code_size" : "224",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "IndexOf",
      "signature" : "int System.Collections.Generic.List`1<T_BYTE>:IndexOf (T_BYTE,int)",
      "code_size" : "137",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "IndexOf",
      "signature" : "int System.Collections.Generic.List`1<T_BYTE>:IndexOf (T_BYTE,int,int)",
      "code_size" : "165",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Insert",
      "signature" : "void System.Collections.Generic.List`1<T_BYTE>:Insert (int,T_BYTE)",
      "code_size" : "272",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IList.Insert",
      "signature" : "void System.Collections.Generic.List`1<T_BYTE>:System.Collections.IList.Insert (int,object)",
      "code_size" : "264",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "InsertRange",
      "signature" : "void System.Collections.Generic.List`1<T_BYTE>:InsertRange (int,System.Collections.Generic.IEnumerable`1<T_BYTE>)",
      "code_size" : "705",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "LastIndexOf",
      "signature" : "int System.Collections.Generic.List`1<T_BYTE>:LastIndexOf (T_BYTE)",
      "code_size" : "117",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "LastIndexOf",
      "signature" : "int System.Collections.Generic.List`1<T_BYTE>:LastIndexOf (T_BYTE,int)",
      "code_size" : "109",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "LastIndexOf",
      "signature" : "int System.Collections.Generic.List`1<T_BYTE>:LastIndexOf (T_BYTE,int,int)",
      "code_size" : "309",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Remove",
      "signature" : "bool System.Collections.Generic.List`1<T_BYTE>:Remove (T_BYTE)",
      "code_size" : "115",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IList.Remove",
      "signature" : "void System.Collections.Generic.List`1<T_BYTE>:System.Collections.IList.Remove (object)",
      "code_size" : "209",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "RemoveAll",
      "signature" : "int System.Collections.Generic.List`1<T_BYTE>:RemoveAll (System.Predicate`1<T_BYTE>)",
      "code_size" : "432",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "RemoveAt",
      "signature" : "void System.Collections.Generic.List`1<T_BYTE>:RemoveAt (int)",
      "code_size" : "183",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "RemoveRange",
      "signature" : "void System.Collections.Generic.List`1<T_BYTE>:RemoveRange (int,int)",
      "code_size" : "244",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Reverse",
      "signature" : "void System.Collections.Generic.List`1<T_BYTE>:Reverse ()",
      "code_size" : "95",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Reverse",
      "signature" : "void System.Collections.Generic.List`1<T_BYTE>:Reverse (int,int)",
      "code_size" : "131",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Sort",
      "signature" : "void System.Collections.Generic.List`1<T_BYTE>:Sort ()",
      "code_size" : "97",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Sort",
      "signature" : "void System.Collections.Generic.List`1<T_BYTE>:Sort (System.Collections.Generic.IComparer`1<T_BYTE>)",
      "code_size" : "105",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Sort",
      "signature" : "void System.Collections.Generic.List`1<T_BYTE>:Sort (int,int,System.Collections.Generic.IComparer`1<T_BYTE>)",
      "code_size" : "182",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Sort",
      "signature" : "void System.Collections.Generic.List`1<T_BYTE>:Sort (System.Comparison`1<T_BYTE>)",
      "code_size" : "208",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "ToArray",
      "signature" : "T_BYTE[] System.Collections.Generic.List`1<T_BYTE>:ToArray ()",
      "code_size" : "88",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "TrimExcess",
      "signature" : "void System.Collections.Generic.List`1<T_BYTE>:TrimExcess ()",
      "code_size" : "120",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "TrueForAll",
      "signature" : "bool System.Collections.Generic.List`1<T_BYTE>:TrueForAll (System.Predicate`1<T_BYTE>)",
      "code_size" : "143",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Synchronized",
      "signature" : "System.Collections.Generic.IList`1<T_BYTE> System.Collections.Generic.List`1<T_BYTE>:Synchronized (System.Collections.Generic.List`1<T_BYTE>)",
      "code_size" : "79",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".cctor",
      "signature" : "void System.Collections.Generic.List`1<T_BYTE>:.cctor ()",
      "code_size" : "54",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "invoke_bool_T",
      "signature" : "(wrapper delegate-invoke) bool System.Predicate`1<System.Xml.XmlNode>:invoke_bool_T (System.Xml.XmlNode)",
      "code_size" : "258",
      "class" : "Predicate`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_void_T",
      "signature" : "(wrapper delegate-invoke) void System.Action`1<System.Xml.XmlNode>:invoke_void_T (System.Xml.XmlNode)",
      "code_size" : "252",
      "class" : "Action`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_int_T_T",
      "signature" : "(wrapper delegate-invoke) int System.Comparison`1<System.Xml.XmlNode>:invoke_int_T_T (System.Xml.XmlNode,System.Xml.XmlNode)",
      "code_size" : "282",
      "class" : "Comparison`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_bool_T",
      "signature" : "(wrapper delegate-invoke) bool System.Predicate`1<System.Tuple`2<Mono.CSharp.RootNamespace, System.Reflection.Assembly>>:invoke_bool_T (System.Tuple`2<Mono.CSharp.RootNamespace, System.Reflection.Assembly>)",
      "code_size" : "258",
      "class" : "Predicate`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_void_T",
      "signature" : "(wrapper delegate-invoke) void System.Action`1<System.Tuple`2<Mono.CSharp.RootNamespace, System.Reflection.Assembly>>:invoke_void_T (System.Tuple`2<Mono.CSharp.RootNamespace, System.Reflection.Assembly>)",
      "code_size" : "252",
      "class" : "Action`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_int_T_T",
      "signature" : "(wrapper delegate-invoke) int System.Comparison`1<System.Tuple`2<Mono.CSharp.RootNamespace, System.Reflection.Assembly>>:invoke_int_T_T (System.Tuple`2<Mono.CSharp.RootNamespace, System.Reflection.Assembly>,System.Tuple`2<Mono.CSharp.RootNamespace, System.Reflection.Assembly>)",
      "code_size" : "282",
      "class" : "Comparison`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_bool_T",
      "signature" : "(wrapper delegate-invoke) bool System.Predicate`1<Mono.CSharp.MemberSpec>:invoke_bool_T (Mono.CSharp.MemberSpec)",
      "code_size" : "258",
      "class" : "Predicate`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_void_T",
      "signature" : "(wrapper delegate-invoke) void System.Action`1<Mono.CSharp.MemberSpec>:invoke_void_T (Mono.CSharp.MemberSpec)",
      "code_size" : "252",
      "class" : "Action`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_int_T_T",
      "signature" : "(wrapper delegate-invoke) int System.Comparison`1<Mono.CSharp.MemberSpec>:invoke_int_T_T (Mono.CSharp.MemberSpec,Mono.CSharp.MemberSpec)",
      "code_size" : "282",
      "class" : "Comparison`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Array/InternalEnumerator`1<Mono.CSharp.OverloadResolver/AmbiguousCandidate>:.ctor (System.Array)",
      "code_size" : "49",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Array/InternalEnumerator`1<Mono.CSharp.OverloadResolver/AmbiguousCandidate>:Dispose ()",
      "code_size" : "23",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "MoveNext",
      "signature" : "bool System.Array/InternalEnumerator`1<Mono.CSharp.OverloadResolver/AmbiguousCandidate>:MoveNext ()",
      "code_size" : "95",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Current",
      "signature" : "Mono.CSharp.OverloadResolver/AmbiguousCandidate System.Array/InternalEnumerator`1<Mono.CSharp.OverloadResolver/AmbiguousCandidate>:get_Current ()",
      "code_size" : "234",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerator.Reset",
      "signature" : "void System.Array/InternalEnumerator`1<Mono.CSharp.OverloadResolver/AmbiguousCandidate>:System.Collections.IEnumerator.Reset ()",
      "code_size" : "23",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerator.get_Current",
      "signature" : "object System.Array/InternalEnumerator`1<Mono.CSharp.OverloadResolver/AmbiguousCandidate>:System.Collections.IEnumerator.get_Current ()",
      "code_size" : "145",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__IEnumerable_GetEnumerator",
      "signature" : "System.Collections.Generic.IEnumerator`1<Mono.CSharp.OverloadResolver/AmbiguousCandidate> System.Array:InternalArray__IEnumerable_GetEnumerator<Mono.CSharp.OverloadResolver/AmbiguousCandidate> ()",
      "code_size" : "151",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__ICollection_Add",
      "signature" : "void System.Array:InternalArray__ICollection_Add<Mono.CSharp.OverloadResolver/AmbiguousCandidate> (Mono.CSharp.OverloadResolver/AmbiguousCandidate)",
      "code_size" : "41",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__ICollection_Remove",
      "signature" : "bool System.Array:InternalArray__ICollection_Remove<Mono.CSharp.OverloadResolver/AmbiguousCandidate> (Mono.CSharp.OverloadResolver/AmbiguousCandidate)",
      "code_size" : "41",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__ICollection_Contains",
      "signature" : "bool System.Array:InternalArray__ICollection_Contains<Mono.CSharp.OverloadResolver/AmbiguousCandidate> (Mono.CSharp.OverloadResolver/AmbiguousCandidate)",
      "code_size" : "493",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__ICollection_CopyTo",
      "signature" : "void System.Array:InternalArray__ICollection_CopyTo<Mono.CSharp.OverloadResolver/AmbiguousCandidate> (Mono.CSharp.OverloadResolver/AmbiguousCandidate[],int)",
      "code_size" : "487",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.EqualityComparer`1<Mono.CSharp.OverloadResolver/AmbiguousCandidate>:.ctor ()",
      "code_size" : "9",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Default",
      "signature" : "System.Collections.Generic.EqualityComparer`1<Mono.CSharp.OverloadResolver/AmbiguousCandidate> System.Collections.Generic.EqualityComparer`1<Mono.CSharp.OverloadResolver/AmbiguousCandidate>:get_Default ()",
      "code_size" : "66",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateComparer",
      "signature" : "System.Collections.Generic.EqualityComparer`1<Mono.CSharp.OverloadResolver/AmbiguousCandidate> System.Collections.Generic.EqualityComparer`1<Mono.CSharp.OverloadResolver/AmbiguousCandidate>:CreateComparer ()",
      "code_size" : "1064",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "IndexOf",
      "signature" : "int System.Collections.Generic.EqualityComparer`1<Mono.CSharp.OverloadResolver/AmbiguousCandidate>:IndexOf (Mono.CSharp.OverloadResolver/AmbiguousCandidate[],Mono.CSharp.OverloadResolver/AmbiguousCandidate,int,int)",
      "code_size" : "240",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "LastIndexOf",
      "signature" : "int System.Collections.Generic.EqualityComparer`1<Mono.CSharp.OverloadResolver/AmbiguousCandidate>:LastIndexOf (Mono.CSharp.OverloadResolver/AmbiguousCandidate[],Mono.CSharp.OverloadResolver/AmbiguousCandidate,int,int)",
      "code_size" : "247",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEqualityComparer.GetHashCode",
      "signature" : "int System.Collections.Generic.EqualityComparer`1<Mono.CSharp.OverloadResolver/AmbiguousCandidate>:System.Collections.IEqualityComparer.GetHashCode (object)",
      "code_size" : "238",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEqualityComparer.Equals",
      "signature" : "bool System.Collections.Generic.EqualityComparer`1<Mono.CSharp.OverloadResolver/AmbiguousCandidate>:System.Collections.IEqualityComparer.Equals (object,object)",
      "code_size" : "424",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "invoke_bool_T",
      "signature" : "(wrapper delegate-invoke) bool System.Predicate`1<Mono.CSharp.OverloadResolver/AmbiguousCandidate>:invoke_bool_T (Mono.CSharp.OverloadResolver/AmbiguousCandidate)",
      "code_size" : "316",
      "class" : "Predicate`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_void_T",
      "signature" : "(wrapper delegate-invoke) void System.Action`1<Mono.CSharp.OverloadResolver/AmbiguousCandidate>:invoke_void_T (Mono.CSharp.OverloadResolver/AmbiguousCandidate)",
      "code_size" : "310",
      "class" : "Action`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_int_T_T",
      "signature" : "(wrapper delegate-invoke) int System.Comparison`1<Mono.CSharp.OverloadResolver/AmbiguousCandidate>:invoke_int_T_T (Mono.CSharp.OverloadResolver/AmbiguousCandidate,Mono.CSharp.OverloadResolver/AmbiguousCandidate)",
      "code_size" : "391",
      "class" : "Comparison`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1/Enumerator<Mono.CSharp.OverloadResolver/AmbiguousCandidate>:.ctor (System.Collections.Generic.List`1<Mono.CSharp.OverloadResolver/AmbiguousCandidate>)",
      "code_size" : "159",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Collections.Generic.List`1/Enumerator<Mono.CSharp.OverloadResolver/AmbiguousCandidate>:Dispose ()",
      "code_size" : "9",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "MoveNext",
      "signature" : "bool System.Collections.Generic.List`1/Enumerator<Mono.CSharp.OverloadResolver/AmbiguousCandidate>:MoveNext ()",
      "code_size" : "254",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "MoveNextRare",
      "signature" : "bool System.Collections.Generic.List`1/Enumerator<Mono.CSharp.OverloadResolver/AmbiguousCandidate>:MoveNextRare ()",
      "code_size" : "206",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Current",
      "signature" : "Mono.CSharp.OverloadResolver/AmbiguousCandidate System.Collections.Generic.List`1/Enumerator<Mono.CSharp.OverloadResolver/AmbiguousCandidate>:get_Current ()",
      "code_size" : "133",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerator.get_Current",
      "signature" : "object System.Collections.Generic.List`1/Enumerator<Mono.CSharp.OverloadResolver/AmbiguousCandidate>:System.Collections.IEnumerator.get_Current ()",
      "code_size" : "204",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerator.Reset",
      "signature" : "void System.Collections.Generic.List`1/Enumerator<Mono.CSharp.OverloadResolver/AmbiguousCandidate>:System.Collections.IEnumerator.Reset ()",
      "code_size" : "199",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Nullable`1<int>:.ctor (int)",
      "code_size" : "32",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_HasValue",
      "signature" : "bool System.Nullable`1<int>:get_HasValue ()",
      "code_size" : "20",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Value",
      "signature" : "int System.Nullable`1<int>:get_Value ()",
      "code_size" : "62",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "Equals",
      "signature" : "bool System.Nullable`1<int>:Equals (object)",
      "code_size" : "152",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "Equals",
      "signature" : "bool System.Nullable`1<int>:Equals (System.Nullable`1<int>)",
      "code_size" : "124",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetHashCode",
      "signature" : "int System.Nullable`1<int>:GetHashCode ()",
      "code_size" : "40",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetValueOrDefault",
      "signature" : "int System.Nullable`1<int>:GetValueOrDefault ()",
      "code_size" : "19",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetValueOrDefault",
      "signature" : "int System.Nullable`1<int>:GetValueOrDefault (int)",
      "code_size" : "47",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "ToString",
      "signature" : "string System.Nullable`1<int>:ToString ()",
      "code_size" : "45",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "op_Implicit",
      "signature" : "System.Nullable`1<int> System.Nullable`1<int>:op_Implicit (int)",
      "code_size" : "56",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "op_Explicit",
      "signature" : "int System.Nullable`1<int>:op_Explicit (System.Nullable`1<int>)",
      "code_size" : "28",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "Box",
      "signature" : "object System.Nullable`1<int>:Box (System.Nullable`1<int>)",
      "code_size" : "60",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "Unbox",
      "signature" : "System.Nullable`1<int> System.Nullable`1<int>:Unbox (object)",
      "code_size" : "158",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "invoke_bool_T",
      "signature" : "(wrapper delegate-invoke) bool System.Predicate`1<Mono.CSharp.UsingClause>:invoke_bool_T (Mono.CSharp.UsingClause)",
      "code_size" : "258",
      "class" : "Predicate`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_void_T",
      "signature" : "(wrapper delegate-invoke) void System.Action`1<Mono.CSharp.UsingClause>:invoke_void_T (Mono.CSharp.UsingClause)",
      "code_size" : "252",
      "class" : "Action`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_int_T_T",
      "signature" : "(wrapper delegate-invoke) int System.Comparison`1<Mono.CSharp.UsingClause>:invoke_int_T_T (Mono.CSharp.UsingClause,Mono.CSharp.UsingClause)",
      "code_size" : "282",
      "class" : "Comparison`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_bool_T",
      "signature" : "(wrapper delegate-invoke) bool System.Predicate`1<System.Action>:invoke_bool_T (System.Action)",
      "code_size" : "258",
      "class" : "Predicate`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_void_T",
      "signature" : "(wrapper delegate-invoke) void System.Action`1<System.Action>:invoke_void_T (System.Action)",
      "code_size" : "252",
      "class" : "Action`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_int_T_T",
      "signature" : "(wrapper delegate-invoke) int System.Comparison`1<System.Action>:invoke_int_T_T (System.Action,System.Action)",
      "code_size" : "282",
      "class" : "Comparison`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_TResult_T",
      "signature" : "(wrapper delegate-invoke) bool System.Func`2<Mono.CSharp.TypeContainer, bool>:invoke_TResult_T (Mono.CSharp.TypeContainer)",
      "code_size" : "258",
      "class" : "Func`2",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_TResult_T1_T2",
      "signature" : "(wrapper delegate-invoke) Mono.CSharp.Expression System.Func`3<Mono.CSharp.ResolveContext, Mono.CSharp.Expression, Mono.CSharp.Expression>:invoke_TResult_T1_T2 (Mono.CSharp.ResolveContext,Mono.CSharp.Expression)",
      "code_size" : "282",
      "class" : "Func`3",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_INT, TValue_INT>:.ctor ()",
      "code_size" : "47",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_INT, TValue_INT>:.ctor (int)",
      "code_size" : "55",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_INT, TValue_INT>:.ctor (System.Collections.Generic.IEqualityComparer`1<TKey_INT>)",
      "code_size" : "55",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_INT, TValue_INT>:.ctor (int,System.Collections.Generic.IEqualityComparer`1<TKey_INT>)",
      "code_size" : "172",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_INT, TValue_INT>:.ctor (System.Collections.Generic.IDictionary`2<TKey_INT, TValue_INT>)",
      "code_size" : "55",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_INT, TValue_INT>:.ctor (System.Collections.Generic.IDictionary`2<TKey_INT, TValue_INT>,System.Collections.Generic.IEqualityComparer`1<TKey_INT>)",
      "code_size" : "486",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_INT, TValue_INT>:.ctor (System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)",
      "code_size" : "43",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Comparer",
      "signature" : "System.Collections.Generic.IEqualityComparer`1<TKey_INT> System.Collections.Generic.Dictionary`2<TKey_INT, TValue_INT>:get_Comparer ()",
      "code_size" : "20",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Count",
      "signature" : "int System.Collections.Generic.Dictionary`2<TKey_INT, TValue_INT>:get_Count ()",
      "code_size" : "30",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Keys",
      "signature" : "System.Collections.Generic.Dictionary`2/KeyCollection<TKey_INT, TValue_INT> System.Collections.Generic.Dictionary`2<TKey_INT, TValue_INT>:get_Keys ()",
      "code_size" : "146",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.IDictionary<TKey,TValue>.get_Keys",
      "signature" : "System.Collections.Generic.ICollection`1<TKey_INT> System.Collections.Generic.Dictionary`2<TKey_INT, TValue_INT>:System.Collections.Generic.IDictionary<TKey,TValue>.get_Keys ()",
      "code_size" : "146",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.get_Keys",
      "signature" : "System.Collections.Generic.IEnumerable`1<TKey_INT> System.Collections.Generic.Dictionary`2<TKey_INT, TValue_INT>:System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.get_Keys ()",
      "code_size" : "146",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Values",
      "signature" : "System.Collections.Generic.Dictionary`2/ValueCollection<TKey_INT, TValue_INT> System.Collections.Generic.Dictionary`2<TKey_INT, TValue_INT>:get_Values ()",
      "code_size" : "146",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.IDictionary<TKey,TValue>.get_Values",
      "signature" : "System.Collections.Generic.ICollection`1<TValue_INT> System.Collections.Generic.Dictionary`2<TKey_INT, TValue_INT>:System.Collections.Generic.IDictionary<TKey,TValue>.get_Values ()",
      "code_size" : "146",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.get_Values",
      "signature" : "System.Collections.Generic.IEnumerable`1<TValue_INT> System.Collections.Generic.Dictionary`2<TKey_INT, TValue_INT>:System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.get_Values ()",
      "code_size" : "146",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Item",
      "signature" : "TValue_INT System.Collections.Generic.Dictionary`2<TKey_INT, TValue_INT>:get_Item (TKey_INT)",
      "code_size" : "130",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Item",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_INT, TValue_INT>:set_Item (TKey_INT,TValue_INT)",
      "code_size" : "65",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Add",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_INT, TValue_INT>:Add (TKey_INT,TValue_INT)",
      "code_size" : "68",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_INT, TValue_INT>:System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add (System.Collections.Generic.KeyValuePair`2<TKey_INT, TValue_INT>)",
      "code_size" : "183",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains",
      "signature" : "bool System.Collections.Generic.Dictionary`2<TKey_INT, TValue_INT>:System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains (System.Collections.Generic.KeyValuePair`2<TKey_INT, TValue_INT>)",
      "code_size" : "339",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove",
      "signature" : "bool System.Collections.Generic.Dictionary`2<TKey_INT, TValue_INT>:System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove (System.Collections.Generic.KeyValuePair`2<TKey_INT, TValue_INT>)",
      "code_size" : "451",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Clear",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_INT, TValue_INT>:Clear ()",
      "code_size" : "192",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "ContainsKey",
      "signature" : "bool System.Collections.Generic.Dictionary`2<TKey_INT, TValue_INT>:ContainsKey (TKey_INT)",
      "code_size" : "73",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "ContainsValue",
      "signature" : "bool System.Collections.Generic.Dictionary`2<TKey_INT, TValue_INT>:ContainsValue (TValue_INT)",
      "code_size" : "387",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "CopyTo",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_INT, TValue_INT>:CopyTo (System.Collections.Generic.KeyValuePair`2<TKey_INT, TValue_INT>[],int)",
      "code_size" : "487",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetEnumerator",
      "signature" : "System.Collections.Generic.Dictionary`2/Enumerator<TKey_INT, TValue_INT> System.Collections.Generic.Dictionary`2<TKey_INT, TValue_INT>:GetEnumerator ()",
      "code_size" : "230",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator",
      "signature" : "System.Collections.Generic.IEnumerator`1<System.Collections.Generic.KeyValuePair`2<TKey_INT, TValue_INT>> System.Collections.Generic.Dictionary`2<TKey_INT, TValue_INT>:System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator ()",
      "code_size" : "263",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetObjectData",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_INT, TValue_INT>:GetObjectData (System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)",
      "code_size" : "394",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "FindEntry",
      "signature" : "int System.Collections.Generic.Dictionary`2<TKey_INT, TValue_INT>:FindEntry (TKey_INT)",
      "code_size" : "436",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Initialize",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_INT, TValue_INT>:Initialize (int)",
      "code_size" : "247",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Insert",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_INT, TValue_INT>:Insert (TKey_INT,TValue_INT,bool)",
      "code_size" : "1021",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "OnDeserialization",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_INT, TValue_INT>:OnDeserialization (object)",
      "code_size" : "1026",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Resize",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_INT, TValue_INT>:Resize ()",
      "code_size" : "77",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Resize",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_INT, TValue_INT>:Resize (int,bool)",
      "code_size" : "691",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Remove",
      "signature" : "bool System.Collections.Generic.Dictionary`2<TKey_INT, TValue_INT>:Remove (TKey_INT)",
      "code_size" : "862",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "TryGetValue",
      "signature" : "bool System.Collections.Generic.Dictionary`2<TKey_INT, TValue_INT>:TryGetValue (TKey_INT,TValue_INT&)",
      "code_size" : "153",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetValueOrDefault",
      "signature" : "TValue_INT System.Collections.Generic.Dictionary`2<TKey_INT, TValue_INT>:GetValueOrDefault (TKey_INT)",
      "code_size" : "125",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.get_IsReadOnly",
      "signature" : "bool System.Collections.Generic.Dictionary`2<TKey_INT, TValue_INT>:System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.get_IsReadOnly ()",
      "code_size" : "15",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_INT, TValue_INT>:System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo (System.Collections.Generic.KeyValuePair`2<TKey_INT, TValue_INT>[],int)",
      "code_size" : "63",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.ICollection.CopyTo",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_INT, TValue_INT>:System.Collections.ICollection.CopyTo (System.Array,int)",
      "code_size" : "1418",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerable.GetEnumerator",
      "signature" : "System.Collections.IEnumerator System.Collections.Generic.Dictionary`2<TKey_INT, TValue_INT>:System.Collections.IEnumerable.GetEnumerator ()",
      "code_size" : "263",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.ICollection.get_IsSynchronized",
      "signature" : "bool System.Collections.Generic.Dictionary`2<TKey_INT, TValue_INT>:System.Collections.ICollection.get_IsSynchronized ()",
      "code_size" : "15",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.ICollection.get_SyncRoot",
      "signature" : "object System.Collections.Generic.Dictionary`2<TKey_INT, TValue_INT>:System.Collections.ICollection.get_SyncRoot ()",
      "code_size" : "143",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IDictionary.get_IsFixedSize",
      "signature" : "bool System.Collections.Generic.Dictionary`2<TKey_INT, TValue_INT>:System.Collections.IDictionary.get_IsFixedSize ()",
      "code_size" : "15",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IDictionary.get_IsReadOnly",
      "signature" : "bool System.Collections.Generic.Dictionary`2<TKey_INT, TValue_INT>:System.Collections.IDictionary.get_IsReadOnly ()",
      "code_size" : "15",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IDictionary.get_Keys",
      "signature" : "System.Collections.ICollection System.Collections.Generic.Dictionary`2<TKey_INT, TValue_INT>:System.Collections.IDictionary.get_Keys ()",
      "code_size" : "43",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IDictionary.get_Values",
      "signature" : "System.Collections.ICollection System.Collections.Generic.Dictionary`2<TKey_INT, TValue_INT>:System.Collections.IDictionary.get_Values ()",
      "code_size" : "43",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IDictionary.get_Item",
      "signature" : "object System.Collections.Generic.Dictionary`2<TKey_INT, TValue_INT>:System.Collections.IDictionary.get_Item (object)",
      "code_size" : "313",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IDictionary.set_Item",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_INT, TValue_INT>:System.Collections.IDictionary.set_Item (object,object)",
      "code_size" : "444",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsCompatibleKey",
      "signature" : "bool System.Collections.Generic.Dictionary`2<TKey_INT, TValue_INT>:IsCompatibleKey (object)",
      "code_size" : "73",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IDictionary.Add",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_INT, TValue_INT>:System.Collections.IDictionary.Add (object,object)",
      "code_size" : "444",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IDictionary.Contains",
      "signature" : "bool System.Collections.Generic.Dictionary`2<TKey_INT, TValue_INT>:System.Collections.IDictionary.Contains (object)",
      "code_size" : "216",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IDictionary.GetEnumerator",
      "signature" : "System.Collections.IDictionaryEnumerator System.Collections.Generic.Dictionary`2<TKey_INT, TValue_INT>:System.Collections.IDictionary.GetEnumerator ()",
      "code_size" : "263",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IDictionary.Remove",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_INT, TValue_INT>:System.Collections.IDictionary.Remove (object)",
      "code_size" : "209",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.Dictionary`2/KeyCollection<TKey_INT, TValue_INT>:.ctor (System.Collections.Generic.Dictionary`2<TKey_INT, TValue_INT>)",
      "code_size" : "63",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetEnumerator",
      "signature" : "System.Collections.Generic.Dictionary`2/KeyCollection/Enumerator<TKey_INT, TValue_INT> System.Collections.Generic.Dictionary`2/KeyCollection<TKey_INT, TValue_INT>:GetEnumerator ()",
      "code_size" : "202",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "CopyTo",
      "signature" : "void System.Collections.Generic.Dictionary`2/KeyCollection<TKey_INT, TValue_INT>:CopyTo (TKey_INT[],int)",
      "code_size" : "354",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Count",
      "signature" : "int System.Collections.Generic.Dictionary`2/KeyCollection<TKey_INT, TValue_INT>:get_Count ()",
      "code_size" : "47",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<TKey>.get_IsReadOnly",
      "signature" : "bool System.Collections.Generic.Dictionary`2/KeyCollection<TKey_INT, TValue_INT>:System.Collections.Generic.ICollection<TKey>.get_IsReadOnly ()",
      "code_size" : "18",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<TKey>.Add",
      "signature" : "void System.Collections.Generic.Dictionary`2/KeyCollection<TKey_INT, TValue_INT>:System.Collections.Generic.ICollection<TKey>.Add (TKey_INT)",
      "code_size" : "23",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<TKey>.Clear",
      "signature" : "void System.Collections.Generic.Dictionary`2/KeyCollection<TKey_INT, TValue_INT>:System.Collections.Generic.ICollection<TKey>.Clear ()",
      "code_size" : "23",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<TKey>.Contains",
      "signature" : "bool System.Collections.Generic.Dictionary`2/KeyCollection<TKey_INT, TValue_INT>:System.Collections.Generic.ICollection<TKey>.Contains (TKey_INT)",
      "code_size" : "57",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<TKey>.Remove",
      "signature" : "bool System.Collections.Generic.Dictionary`2/KeyCollection<TKey_INT, TValue_INT>:System.Collections.Generic.ICollection<TKey>.Remove (TKey_INT)",
      "code_size" : "25",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.IEnumerable<TKey>.GetEnumerator",
      "signature" : "System.Collections.Generic.IEnumerator`1<TKey_INT> System.Collections.Generic.Dictionary`2/KeyCollection<TKey_INT, TValue_INT>:System.Collections.Generic.IEnumerable<TKey>.GetEnumerator ()",
      "code_size" : "235",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerable.GetEnumerator",
      "signature" : "System.Collections.IEnumerator System.Collections.Generic.Dictionary`2/KeyCollection<TKey_INT, TValue_INT>:System.Collections.IEnumerable.GetEnumerator ()",
      "code_size" : "235",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.ICollection.CopyTo",
      "signature" : "void System.Collections.Generic.Dictionary`2/KeyCollection<TKey_INT, TValue_INT>:System.Collections.ICollection.CopyTo (System.Array,int)",
      "code_size" : "638",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.ICollection.get_IsSynchronized",
      "signature" : "bool System.Collections.Generic.Dictionary`2/KeyCollection<TKey_INT, TValue_INT>:System.Collections.ICollection.get_IsSynchronized ()",
      "code_size" : "15",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.ICollection.get_SyncRoot",
      "signature" : "object System.Collections.Generic.Dictionary`2/KeyCollection<TKey_INT, TValue_INT>:System.Collections.ICollection.get_SyncRoot ()",
      "code_size" : "36",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.Dictionary`2/ValueCollection<TKey_INT, TValue_INT>:.ctor (System.Collections.Generic.Dictionary`2<TKey_INT, TValue_INT>)",
      "code_size" : "63",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetEnumerator",
      "signature" : "System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator<TKey_INT, TValue_INT> System.Collections.Generic.Dictionary`2/ValueCollection<TKey_INT, TValue_INT>:GetEnumerator ()",
      "code_size" : "202",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "CopyTo",
      "signature" : "void System.Collections.Generic.Dictionary`2/ValueCollection<TKey_INT, TValue_INT>:CopyTo (TValue_INT[],int)",
      "code_size" : "354",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Count",
      "signature" : "int System.Collections.Generic.Dictionary`2/ValueCollection<TKey_INT, TValue_INT>:get_Count ()",
      "code_size" : "47",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<TValue>.get_IsReadOnly",
      "signature" : "bool System.Collections.Generic.Dictionary`2/ValueCollection<TKey_INT, TValue_INT>:System.Collections.Generic.ICollection<TValue>.get_IsReadOnly ()",
      "code_size" : "18",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<TValue>.Add",
      "signature" : "void System.Collections.Generic.Dictionary`2/ValueCollection<TKey_INT, TValue_INT>:System.Collections.Generic.ICollection<TValue>.Add (TValue_INT)",
      "code_size" : "23",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<TValue>.Remove",
      "signature" : "bool System.Collections.Generic.Dictionary`2/ValueCollection<TKey_INT, TValue_INT>:System.Collections.Generic.ICollection<TValue>.Remove (TValue_INT)",
      "code_size" : "25",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<TValue>.Clear",
      "signature" : "void System.Collections.Generic.Dictionary`2/ValueCollection<TKey_INT, TValue_INT>:System.Collections.Generic.ICollection<TValue>.Clear ()",
      "code_size" : "23",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<TValue>.Contains",
      "signature" : "bool System.Collections.Generic.Dictionary`2/ValueCollection<TKey_INT, TValue_INT>:System.Collections.Generic.ICollection<TValue>.Contains (TValue_INT)",
      "code_size" : "57",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.IEnumerable<TValue>.GetEnumerator",
      "signature" : "System.Collections.Generic.IEnumerator`1<TValue_INT> System.Collections.Generic.Dictionary`2/ValueCollection<TKey_INT, TValue_INT>:System.Collections.Generic.IEnumerable<TValue>.GetEnumerator ()",
      "code_size" : "235",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerable.GetEnumerator",
      "signature" : "System.Collections.IEnumerator System.Collections.Generic.Dictionary`2/ValueCollection<TKey_INT, TValue_INT>:System.Collections.IEnumerable.GetEnumerator ()",
      "code_size" : "235",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.ICollection.CopyTo",
      "signature" : "void System.Collections.Generic.Dictionary`2/ValueCollection<TKey_INT, TValue_INT>:System.Collections.ICollection.CopyTo (System.Array,int)",
      "code_size" : "638",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.ICollection.get_IsSynchronized",
      "signature" : "bool System.Collections.Generic.Dictionary`2/ValueCollection<TKey_INT, TValue_INT>:System.Collections.ICollection.get_IsSynchronized ()",
      "code_size" : "15",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.ICollection.get_SyncRoot",
      "signature" : "object System.Collections.Generic.Dictionary`2/ValueCollection<TKey_INT, TValue_INT>:System.Collections.ICollection.get_SyncRoot ()",
      "code_size" : "36",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "invoke_bool_T",
      "signature" : "(wrapper delegate-invoke) bool System.Predicate`1<Mono.CSharp.FieldSpec>:invoke_bool_T (Mono.CSharp.FieldSpec)",
      "code_size" : "258",
      "class" : "Predicate`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_void_T",
      "signature" : "(wrapper delegate-invoke) void System.Action`1<Mono.CSharp.FieldSpec>:invoke_void_T (Mono.CSharp.FieldSpec)",
      "code_size" : "252",
      "class" : "Action`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_int_T_T",
      "signature" : "(wrapper delegate-invoke) int System.Comparison`1<Mono.CSharp.FieldSpec>:invoke_int_T_T (Mono.CSharp.FieldSpec,Mono.CSharp.FieldSpec)",
      "code_size" : "282",
      "class" : "Comparison`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_bool_T",
      "signature" : "(wrapper delegate-invoke) bool System.Predicate`1<Mono.CSharp.TypeParameterSpec>:invoke_bool_T (Mono.CSharp.TypeParameterSpec)",
      "code_size" : "258",
      "class" : "Predicate`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_void_T",
      "signature" : "(wrapper delegate-invoke) void System.Action`1<Mono.CSharp.TypeParameterSpec>:invoke_void_T (Mono.CSharp.TypeParameterSpec)",
      "code_size" : "252",
      "class" : "Action`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_int_T_T",
      "signature" : "(wrapper delegate-invoke) int System.Comparison`1<Mono.CSharp.TypeParameterSpec>:invoke_int_T_T (Mono.CSharp.TypeParameterSpec,Mono.CSharp.TypeParameterSpec)",
      "code_size" : "282",
      "class" : "Comparison`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_TResult_T",
      "signature" : "(wrapper delegate-invoke) System.Type System.Func`2<Mono.CSharp.TypeSpec, System.Type>:invoke_TResult_T (Mono.CSharp.TypeSpec)",
      "code_size" : "258",
      "class" : "Func`2",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_bool_T",
      "signature" : "(wrapper delegate-invoke) bool System.Predicate`1<System.Type>:invoke_bool_T (System.Type)",
      "code_size" : "258",
      "class" : "Predicate`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_void_T",
      "signature" : "(wrapper delegate-invoke) void System.Action`1<System.Type>:invoke_void_T (System.Type)",
      "code_size" : "252",
      "class" : "Action`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_int_T_T",
      "signature" : "(wrapper delegate-invoke) int System.Comparison`1<System.Type>:invoke_int_T_T (System.Type,System.Type)",
      "code_size" : "282",
      "class" : "Comparison`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_TResult_T",
      "signature" : "(wrapper delegate-invoke) Mono.CSharp.TypeParameterInflator System.Func`2<Mono.CSharp.TypeParameterInflator, Mono.CSharp.TypeParameterInflator>:invoke_TResult_T (Mono.CSharp.TypeParameterInflator)",
      "code_size" : "990",
      "class" : "Func`2",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Nullable`1<Mono.CSharp.TypeParameterInflator>:.ctor (Mono.CSharp.TypeParameterInflator)",
      "code_size" : "143",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_HasValue",
      "signature" : "bool System.Nullable`1<Mono.CSharp.TypeParameterInflator>:get_HasValue ()",
      "code_size" : "20",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Value",
      "signature" : "Mono.CSharp.TypeParameterInflator System.Nullable`1<Mono.CSharp.TypeParameterInflator>:get_Value ()",
      "code_size" : "254",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "Equals",
      "signature" : "bool System.Nullable`1<Mono.CSharp.TypeParameterInflator>:Equals (object)",
      "code_size" : "192",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "Equals",
      "signature" : "bool System.Nullable`1<Mono.CSharp.TypeParameterInflator>:Equals (System.Nullable`1<Mono.CSharp.TypeParameterInflator>)",
      "code_size" : "529",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetHashCode",
      "signature" : "int System.Nullable`1<Mono.CSharp.TypeParameterInflator>:GetHashCode ()",
      "code_size" : "259",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetValueOrDefault",
      "signature" : "Mono.CSharp.TypeParameterInflator System.Nullable`1<Mono.CSharp.TypeParameterInflator>:GetValueOrDefault ()",
      "code_size" : "206",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetValueOrDefault",
      "signature" : "Mono.CSharp.TypeParameterInflator System.Nullable`1<Mono.CSharp.TypeParameterInflator>:GetValueOrDefault (Mono.CSharp.TypeParameterInflator)",
      "code_size" : "237",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "ToString",
      "signature" : "string System.Nullable`1<Mono.CSharp.TypeParameterInflator>:ToString ()",
      "code_size" : "271",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "op_Implicit",
      "signature" : "System.Nullable`1<Mono.CSharp.TypeParameterInflator> System.Nullable`1<Mono.CSharp.TypeParameterInflator>:op_Implicit (Mono.CSharp.TypeParameterInflator)",
      "code_size" : "305",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "op_Explicit",
      "signature" : "Mono.CSharp.TypeParameterInflator System.Nullable`1<Mono.CSharp.TypeParameterInflator>:op_Explicit (System.Nullable`1<Mono.CSharp.TypeParameterInflator>)",
      "code_size" : "169",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "Box",
      "signature" : "object System.Nullable`1<Mono.CSharp.TypeParameterInflator>:Box (System.Nullable`1<Mono.CSharp.TypeParameterInflator>)",
      "code_size" : "220",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "Unbox",
      "signature" : "System.Nullable`1<Mono.CSharp.TypeParameterInflator> System.Nullable`1<Mono.CSharp.TypeParameterInflator>:Unbox (object)",
      "code_size" : "823",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "invoke_TResult_T",
      "signature" : "(wrapper delegate-invoke) Mono.CSharp.TypeParameterInflator System.Func`2<Mono.CSharp.InflatedTypeSpec, Mono.CSharp.TypeParameterInflator>:invoke_TResult_T (Mono.CSharp.InflatedTypeSpec)",
      "code_size" : "971",
      "class" : "Func`2",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_TResult_T",
      "signature" : "(wrapper delegate-invoke) System.Type System.Func`2<Mono.CSharp.TypeParameterSpec, System.Type>:invoke_TResult_T (Mono.CSharp.TypeParameterSpec)",
      "code_size" : "258",
      "class" : "Func`2",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_bool_T",
      "signature" : "(wrapper delegate-invoke) bool System.Predicate`1<Mono.CSharp.TypeParameter>:invoke_bool_T (Mono.CSharp.TypeParameter)",
      "code_size" : "258",
      "class" : "Predicate`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_void_T",
      "signature" : "(wrapper delegate-invoke) void System.Action`1<Mono.CSharp.TypeParameter>:invoke_void_T (Mono.CSharp.TypeParameter)",
      "code_size" : "252",
      "class" : "Action`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_int_T_T",
      "signature" : "(wrapper delegate-invoke) int System.Comparison`1<Mono.CSharp.TypeParameter>:invoke_int_T_T (Mono.CSharp.TypeParameter,Mono.CSharp.TypeParameter)",
      "code_size" : "282",
      "class" : "Comparison`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_TResult_T",
      "signature" : "(wrapper delegate-invoke) string System.Func`2<Mono.CSharp.TypeParameter, string>:invoke_TResult_T (Mono.CSharp.TypeParameter)",
      "code_size" : "258",
      "class" : "Func`2",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Array/InternalEnumerator`1<Mono.CSharp.TypeInferenceContext/BoundInfo>:.ctor (System.Array)",
      "code_size" : "49",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Array/InternalEnumerator`1<Mono.CSharp.TypeInferenceContext/BoundInfo>:Dispose ()",
      "code_size" : "23",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "MoveNext",
      "signature" : "bool System.Array/InternalEnumerator`1<Mono.CSharp.TypeInferenceContext/BoundInfo>:MoveNext ()",
      "code_size" : "95",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Current",
      "signature" : "Mono.CSharp.TypeInferenceContext/BoundInfo System.Array/InternalEnumerator`1<Mono.CSharp.TypeInferenceContext/BoundInfo>:get_Current ()",
      "code_size" : "207",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerator.Reset",
      "signature" : "void System.Array/InternalEnumerator`1<Mono.CSharp.TypeInferenceContext/BoundInfo>:System.Collections.IEnumerator.Reset ()",
      "code_size" : "23",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerator.get_Current",
      "signature" : "object System.Array/InternalEnumerator`1<Mono.CSharp.TypeInferenceContext/BoundInfo>:System.Collections.IEnumerator.get_Current ()",
      "code_size" : "118",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__IEnumerable_GetEnumerator",
      "signature" : "System.Collections.Generic.IEnumerator`1<Mono.CSharp.TypeInferenceContext/BoundInfo> System.Array:InternalArray__IEnumerable_GetEnumerator<Mono.CSharp.TypeInferenceContext/BoundInfo> ()",
      "code_size" : "151",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__ICollection_Add",
      "signature" : "void System.Array:InternalArray__ICollection_Add<Mono.CSharp.TypeInferenceContext/BoundInfo> (Mono.CSharp.TypeInferenceContext/BoundInfo)",
      "code_size" : "40",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__ICollection_Remove",
      "signature" : "bool System.Array:InternalArray__ICollection_Remove<Mono.CSharp.TypeInferenceContext/BoundInfo> (Mono.CSharp.TypeInferenceContext/BoundInfo)",
      "code_size" : "40",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__ICollection_Contains",
      "signature" : "bool System.Array:InternalArray__ICollection_Contains<Mono.CSharp.TypeInferenceContext/BoundInfo> (Mono.CSharp.TypeInferenceContext/BoundInfo)",
      "code_size" : "445",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__ICollection_CopyTo",
      "signature" : "void System.Array:InternalArray__ICollection_CopyTo<Mono.CSharp.TypeInferenceContext/BoundInfo> (Mono.CSharp.TypeInferenceContext/BoundInfo[],int)",
      "code_size" : "487",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.EqualityComparer`1<Mono.CSharp.TypeInferenceContext/BoundInfo>:.ctor ()",
      "code_size" : "9",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Default",
      "signature" : "System.Collections.Generic.EqualityComparer`1<Mono.CSharp.TypeInferenceContext/BoundInfo> System.Collections.Generic.EqualityComparer`1<Mono.CSharp.TypeInferenceContext/BoundInfo>:get_Default ()",
      "code_size" : "66",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateComparer",
      "signature" : "System.Collections.Generic.EqualityComparer`1<Mono.CSharp.TypeInferenceContext/BoundInfo> System.Collections.Generic.EqualityComparer`1<Mono.CSharp.TypeInferenceContext/BoundInfo>:CreateComparer ()",
      "code_size" : "1064",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "IndexOf",
      "signature" : "int System.Collections.Generic.EqualityComparer`1<Mono.CSharp.TypeInferenceContext/BoundInfo>:IndexOf (Mono.CSharp.TypeInferenceContext/BoundInfo[],Mono.CSharp.TypeInferenceContext/BoundInfo,int,int)",
      "code_size" : "211",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "LastIndexOf",
      "signature" : "int System.Collections.Generic.EqualityComparer`1<Mono.CSharp.TypeInferenceContext/BoundInfo>:LastIndexOf (Mono.CSharp.TypeInferenceContext/BoundInfo[],Mono.CSharp.TypeInferenceContext/BoundInfo,int,int)",
      "code_size" : "218",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEqualityComparer.GetHashCode",
      "signature" : "int System.Collections.Generic.EqualityComparer`1<Mono.CSharp.TypeInferenceContext/BoundInfo>:System.Collections.IEqualityComparer.GetHashCode (object)",
      "code_size" : "220",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEqualityComparer.Equals",
      "signature" : "bool System.Collections.Generic.EqualityComparer`1<Mono.CSharp.TypeInferenceContext/BoundInfo>:System.Collections.IEqualityComparer.Equals (object,object)",
      "code_size" : "382",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.GenericEqualityComparer`1<Mono.CSharp.TypeInferenceContext/BoundInfo>:.ctor ()",
      "code_size" : "9",
      "class" : "GenericEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Equals",
      "signature" : "bool System.Collections.Generic.GenericEqualityComparer`1<Mono.CSharp.TypeInferenceContext/BoundInfo>:Equals (Mono.CSharp.TypeInferenceContext/BoundInfo,Mono.CSharp.TypeInferenceContext/BoundInfo)",
      "code_size" : "70",
      "class" : "GenericEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetHashCode",
      "signature" : "int System.Collections.Generic.GenericEqualityComparer`1<Mono.CSharp.TypeInferenceContext/BoundInfo>:GetHashCode (Mono.CSharp.TypeInferenceContext/BoundInfo)",
      "code_size" : "35",
      "class" : "GenericEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "IndexOf",
      "signature" : "int System.Collections.Generic.GenericEqualityComparer`1<Mono.CSharp.TypeInferenceContext/BoundInfo>:IndexOf (Mono.CSharp.TypeInferenceContext/BoundInfo[],Mono.CSharp.TypeInferenceContext/BoundInfo,int,int)",
      "code_size" : "307",
      "class" : "GenericEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "LastIndexOf",
      "signature" : "int System.Collections.Generic.GenericEqualityComparer`1<Mono.CSharp.TypeInferenceContext/BoundInfo>:LastIndexOf (Mono.CSharp.TypeInferenceContext/BoundInfo[],Mono.CSharp.TypeInferenceContext/BoundInfo,int,int)",
      "code_size" : "315",
      "class" : "GenericEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Equals",
      "signature" : "bool System.Collections.Generic.GenericEqualityComparer`1<Mono.CSharp.TypeInferenceContext/BoundInfo>:Equals (object)",
      "code_size" : "91",
      "class" : "GenericEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetHashCode",
      "signature" : "int System.Collections.Generic.GenericEqualityComparer`1<Mono.CSharp.TypeInferenceContext/BoundInfo>:GetHashCode ()",
      "code_size" : "44",
      "class" : "GenericEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "invoke_bool_T",
      "signature" : "(wrapper delegate-invoke) bool System.Predicate`1<Mono.CSharp.TypeInferenceContext/BoundInfo>:invoke_bool_T (Mono.CSharp.TypeInferenceContext/BoundInfo)",
      "code_size" : "276",
      "class" : "Predicate`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_void_T",
      "signature" : "(wrapper delegate-invoke) void System.Action`1<Mono.CSharp.TypeInferenceContext/BoundInfo>:invoke_void_T (Mono.CSharp.TypeInferenceContext/BoundInfo)",
      "code_size" : "270",
      "class" : "Action`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_int_T_T",
      "signature" : "(wrapper delegate-invoke) int System.Comparison`1<Mono.CSharp.TypeInferenceContext/BoundInfo>:invoke_int_T_T (Mono.CSharp.TypeInferenceContext/BoundInfo,Mono.CSharp.TypeInferenceContext/BoundInfo)",
      "code_size" : "318",
      "class" : "Comparison`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "InternalArray__ICollection_Add",
      "signature" : "void System.Array:InternalArray__ICollection_Add<System.Reflection.CustomAttributeTypedArgument> (System.Reflection.CustomAttributeTypedArgument)",
      "code_size" : "40",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__ICollection_Remove",
      "signature" : "bool System.Array:InternalArray__ICollection_Remove<System.Reflection.CustomAttributeTypedArgument> (System.Reflection.CustomAttributeTypedArgument)",
      "code_size" : "40",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__ICollection_Contains",
      "signature" : "bool System.Array:InternalArray__ICollection_Contains<System.Reflection.CustomAttributeTypedArgument> (System.Reflection.CustomAttributeTypedArgument)",
      "code_size" : "349",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__ICollection_CopyTo",
      "signature" : "void System.Array:InternalArray__ICollection_CopyTo<System.Reflection.CustomAttributeTypedArgument> (System.Reflection.CustomAttributeTypedArgument[],int)",
      "code_size" : "487",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__Insert",
      "signature" : "void System.Array:InternalArray__Insert<System.Reflection.CustomAttributeTypedArgument> (int,System.Reflection.CustomAttributeTypedArgument)",
      "code_size" : "40",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__IndexOf",
      "signature" : "int System.Array:InternalArray__IndexOf<System.Reflection.CustomAttributeTypedArgument> (System.Reflection.CustomAttributeTypedArgument)",
      "code_size" : "397",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__get_Item",
      "signature" : "System.Reflection.CustomAttributeTypedArgument System.Array:InternalArray__get_Item<System.Reflection.CustomAttributeTypedArgument> (int)",
      "code_size" : "223",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__set_Item",
      "signature" : "void System.Array:InternalArray__set_Item<System.Reflection.CustomAttributeTypedArgument> (int,System.Reflection.CustomAttributeTypedArgument)",
      "code_size" : "430",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Array/InternalEnumerator`1<System.Reflection.CustomAttributeNamedArgument>:.ctor (System.Array)",
      "code_size" : "49",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Array/InternalEnumerator`1<System.Reflection.CustomAttributeNamedArgument>:Dispose ()",
      "code_size" : "23",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "MoveNext",
      "signature" : "bool System.Array/InternalEnumerator`1<System.Reflection.CustomAttributeNamedArgument>:MoveNext ()",
      "code_size" : "95",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Current",
      "signature" : "System.Reflection.CustomAttributeNamedArgument System.Array/InternalEnumerator`1<System.Reflection.CustomAttributeNamedArgument>:get_Current ()",
      "code_size" : "262",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerator.Reset",
      "signature" : "void System.Array/InternalEnumerator`1<System.Reflection.CustomAttributeNamedArgument>:System.Collections.IEnumerator.Reset ()",
      "code_size" : "23",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerator.get_Current",
      "signature" : "object System.Array/InternalEnumerator`1<System.Reflection.CustomAttributeNamedArgument>:System.Collections.IEnumerator.get_Current ()",
      "code_size" : "173",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__IEnumerable_GetEnumerator",
      "signature" : "System.Collections.Generic.IEnumerator`1<System.Reflection.CustomAttributeNamedArgument> System.Array:InternalArray__IEnumerable_GetEnumerator<System.Reflection.CustomAttributeNamedArgument> ()",
      "code_size" : "151",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "invoke_bool_T",
      "signature" : "(wrapper delegate-invoke) bool System.Predicate`1<System.Reflection.AssemblyName>:invoke_bool_T (System.Reflection.AssemblyName)",
      "code_size" : "258",
      "class" : "Predicate`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_void_T",
      "signature" : "(wrapper delegate-invoke) void System.Action`1<System.Reflection.AssemblyName>:invoke_void_T (System.Reflection.AssemblyName)",
      "code_size" : "252",
      "class" : "Action`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_int_T_T",
      "signature" : "(wrapper delegate-invoke) int System.Comparison`1<System.Reflection.AssemblyName>:invoke_int_T_T (System.Reflection.AssemblyName,System.Reflection.AssemblyName)",
      "code_size" : "282",
      "class" : "Comparison`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_bool_T",
      "signature" : "(wrapper delegate-invoke) bool System.Predicate`1<Mono.CSharp.MissingTypeSpecReference>:invoke_bool_T (Mono.CSharp.MissingTypeSpecReference)",
      "code_size" : "258",
      "class" : "Predicate`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_void_T",
      "signature" : "(wrapper delegate-invoke) void System.Action`1<Mono.CSharp.MissingTypeSpecReference>:invoke_void_T (Mono.CSharp.MissingTypeSpecReference)",
      "code_size" : "252",
      "class" : "Action`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_int_T_T",
      "signature" : "(wrapper delegate-invoke) int System.Comparison`1<Mono.CSharp.MissingTypeSpecReference>:invoke_int_T_T (Mono.CSharp.MissingTypeSpecReference,Mono.CSharp.MissingTypeSpecReference)",
      "code_size" : "282",
      "class" : "Comparison`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_bool_T",
      "signature" : "(wrapper delegate-invoke) bool System.Predicate`1<Mono.CSharp.EventSpec>:invoke_bool_T (Mono.CSharp.EventSpec)",
      "code_size" : "258",
      "class" : "Predicate`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_void_T",
      "signature" : "(wrapper delegate-invoke) void System.Action`1<Mono.CSharp.EventSpec>:invoke_void_T (Mono.CSharp.EventSpec)",
      "code_size" : "252",
      "class" : "Action`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_int_T_T",
      "signature" : "(wrapper delegate-invoke) int System.Comparison`1<Mono.CSharp.EventSpec>:invoke_int_T_T (Mono.CSharp.EventSpec,Mono.CSharp.EventSpec)",
      "code_size" : "282",
      "class" : "Comparison`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_bool_T",
      "signature" : "(wrapper delegate-invoke) bool System.Predicate`1<Mono.CSharp.ResumableStatement>:invoke_bool_T (Mono.CSharp.ResumableStatement)",
      "code_size" : "258",
      "class" : "Predicate`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_void_T",
      "signature" : "(wrapper delegate-invoke) void System.Action`1<Mono.CSharp.ResumableStatement>:invoke_void_T (Mono.CSharp.ResumableStatement)",
      "code_size" : "252",
      "class" : "Action`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_int_T_T",
      "signature" : "(wrapper delegate-invoke) int System.Comparison`1<Mono.CSharp.ResumableStatement>:invoke_int_T_T (Mono.CSharp.ResumableStatement,Mono.CSharp.ResumableStatement)",
      "code_size" : "282",
      "class" : "Comparison`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Array/InternalEnumerator`1<Mono.CSharp.SourceFile/LocationRegion>:.ctor (System.Array)",
      "code_size" : "49",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Array/InternalEnumerator`1<Mono.CSharp.SourceFile/LocationRegion>:Dispose ()",
      "code_size" : "23",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "MoveNext",
      "signature" : "bool System.Array/InternalEnumerator`1<Mono.CSharp.SourceFile/LocationRegion>:MoveNext ()",
      "code_size" : "95",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Current",
      "signature" : "Mono.CSharp.SourceFile/LocationRegion System.Array/InternalEnumerator`1<Mono.CSharp.SourceFile/LocationRegion>:get_Current ()",
      "code_size" : "151",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerator.Reset",
      "signature" : "void System.Array/InternalEnumerator`1<Mono.CSharp.SourceFile/LocationRegion>:System.Collections.IEnumerator.Reset ()",
      "code_size" : "23",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerator.get_Current",
      "signature" : "object System.Array/InternalEnumerator`1<Mono.CSharp.SourceFile/LocationRegion>:System.Collections.IEnumerator.get_Current ()",
      "code_size" : "66",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__IEnumerable_GetEnumerator",
      "signature" : "System.Collections.Generic.IEnumerator`1<Mono.CSharp.SourceFile/LocationRegion> System.Array:InternalArray__IEnumerable_GetEnumerator<Mono.CSharp.SourceFile/LocationRegion> ()",
      "code_size" : "151",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__ICollection_Add",
      "signature" : "void System.Array:InternalArray__ICollection_Add<Mono.CSharp.SourceFile/LocationRegion> (Mono.CSharp.SourceFile/LocationRegion)",
      "code_size" : "40",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__ICollection_Remove",
      "signature" : "bool System.Array:InternalArray__ICollection_Remove<Mono.CSharp.SourceFile/LocationRegion> (Mono.CSharp.SourceFile/LocationRegion)",
      "code_size" : "40",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__ICollection_Contains",
      "signature" : "bool System.Array:InternalArray__ICollection_Contains<Mono.CSharp.SourceFile/LocationRegion> (Mono.CSharp.SourceFile/LocationRegion)",
      "code_size" : "283",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__ICollection_CopyTo",
      "signature" : "void System.Array:InternalArray__ICollection_CopyTo<Mono.CSharp.SourceFile/LocationRegion> (Mono.CSharp.SourceFile/LocationRegion[],int)",
      "code_size" : "487",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.EqualityComparer`1<Mono.CSharp.SourceFile/LocationRegion>:.ctor ()",
      "code_size" : "9",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Default",
      "signature" : "System.Collections.Generic.EqualityComparer`1<Mono.CSharp.SourceFile/LocationRegion> System.Collections.Generic.EqualityComparer`1<Mono.CSharp.SourceFile/LocationRegion>:get_Default ()",
      "code_size" : "66",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateComparer",
      "signature" : "System.Collections.Generic.EqualityComparer`1<Mono.CSharp.SourceFile/LocationRegion> System.Collections.Generic.EqualityComparer`1<Mono.CSharp.SourceFile/LocationRegion>:CreateComparer ()",
      "code_size" : "1064",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "IndexOf",
      "signature" : "int System.Collections.Generic.EqualityComparer`1<Mono.CSharp.SourceFile/LocationRegion>:IndexOf (Mono.CSharp.SourceFile/LocationRegion[],Mono.CSharp.SourceFile/LocationRegion,int,int)",
      "code_size" : "179",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "LastIndexOf",
      "signature" : "int System.Collections.Generic.EqualityComparer`1<Mono.CSharp.SourceFile/LocationRegion>:LastIndexOf (Mono.CSharp.SourceFile/LocationRegion[],Mono.CSharp.SourceFile/LocationRegion,int,int)",
      "code_size" : "186",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEqualityComparer.GetHashCode",
      "signature" : "int System.Collections.Generic.EqualityComparer`1<Mono.CSharp.SourceFile/LocationRegion>:System.Collections.IEqualityComparer.GetHashCode (object)",
      "code_size" : "206",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEqualityComparer.Equals",
      "signature" : "bool System.Collections.Generic.EqualityComparer`1<Mono.CSharp.SourceFile/LocationRegion>:System.Collections.IEqualityComparer.Equals (object,object)",
      "code_size" : "354",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "invoke_bool_T",
      "signature" : "(wrapper delegate-invoke) bool System.Predicate`1<Mono.CSharp.SourceFile/LocationRegion>:invoke_bool_T (Mono.CSharp.SourceFile/LocationRegion)",
      "code_size" : "255",
      "class" : "Predicate`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_void_T",
      "signature" : "(wrapper delegate-invoke) void System.Action`1<Mono.CSharp.SourceFile/LocationRegion>:invoke_void_T (Mono.CSharp.SourceFile/LocationRegion)",
      "code_size" : "249",
      "class" : "Action`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_int_T_T",
      "signature" : "(wrapper delegate-invoke) int System.Comparison`1<Mono.CSharp.SourceFile/LocationRegion>:invoke_int_T_T (Mono.CSharp.SourceFile/LocationRegion,Mono.CSharp.SourceFile/LocationRegion)",
      "code_size" : "276",
      "class" : "Comparison`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.KeyValuePair`2<Mono.CSharp.ArrayContainer/TypeRankPair, Mono.CSharp.ArrayContainer>:.ctor (Mono.CSharp.ArrayContainer/TypeRankPair,Mono.CSharp.ArrayContainer)",
      "code_size" : "109",
      "class" : "KeyValuePair`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Key",
      "signature" : "Mono.CSharp.ArrayContainer/TypeRankPair System.Collections.Generic.KeyValuePair`2<Mono.CSharp.ArrayContainer/TypeRankPair, Mono.CSharp.ArrayContainer>:get_Key ()",
      "code_size" : "93",
      "class" : "KeyValuePair`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Value",
      "signature" : "Mono.CSharp.ArrayContainer System.Collections.Generic.KeyValuePair`2<Mono.CSharp.ArrayContainer/TypeRankPair, Mono.CSharp.ArrayContainer>:get_Value ()",
      "code_size" : "20",
      "class" : "KeyValuePair`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "ToString",
      "signature" : "string System.Collections.Generic.KeyValuePair`2<Mono.CSharp.ArrayContainer/TypeRankPair, Mono.CSharp.ArrayContainer>:ToString ()",
      "code_size" : "354",
      "class" : "KeyValuePair`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Array/InternalEnumerator`1<System.Collections.Generic.KeyValuePair`2<Mono.CSharp.ArrayContainer/TypeRankPair, Mono.CSharp.ArrayContainer>>:.ctor (System.Array)",
      "code_size" : "49",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Array/InternalEnumerator`1<System.Collections.Generic.KeyValuePair`2<Mono.CSharp.ArrayContainer/TypeRankPair, Mono.CSharp.ArrayContainer>>:Dispose ()",
      "code_size" : "23",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "MoveNext",
      "signature" : "bool System.Array/InternalEnumerator`1<System.Collections.Generic.KeyValuePair`2<Mono.CSharp.ArrayContainer/TypeRankPair, Mono.CSharp.ArrayContainer>>:MoveNext ()",
      "code_size" : "95",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Current",
      "signature" : "System.Collections.Generic.KeyValuePair`2<Mono.CSharp.ArrayContainer/TypeRankPair, Mono.CSharp.ArrayContainer> System.Array/InternalEnumerator`1<System.Collections.Generic.KeyValuePair`2<Mono.CSharp.ArrayContainer/TypeRankPair, Mono.CSharp.ArrayContainer>>:get_Current ()",
      "code_size" : "234",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerator.Reset",
      "signature" : "void System.Array/InternalEnumerator`1<System.Collections.Generic.KeyValuePair`2<Mono.CSharp.ArrayContainer/TypeRankPair, Mono.CSharp.ArrayContainer>>:System.Collections.IEnumerator.Reset ()",
      "code_size" : "23",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerator.get_Current",
      "signature" : "object System.Array/InternalEnumerator`1<System.Collections.Generic.KeyValuePair`2<Mono.CSharp.ArrayContainer/TypeRankPair, Mono.CSharp.ArrayContainer>>:System.Collections.IEnumerator.get_Current ()",
      "code_size" : "145",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__IEnumerable_GetEnumerator",
      "signature" : "System.Collections.Generic.IEnumerator`1<System.Collections.Generic.KeyValuePair`2<Mono.CSharp.ArrayContainer/TypeRankPair, Mono.CSharp.ArrayContainer>> System.Array:InternalArray__IEnumerable_GetEnumerator<System.Collections.Generic.KeyValuePair`2<Mono.CSharp.ArrayContainer/TypeRankPair, Mono.CSharp.ArrayContainer>> ()",
      "code_size" : "151",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.Dictionary`2/KeyCollection<Mono.CSharp.ArrayContainer/TypeRankPair, Mono.CSharp.ArrayContainer>:.ctor (System.Collections.Generic.Dictionary`2<Mono.CSharp.ArrayContainer/TypeRankPair, Mono.CSharp.ArrayContainer>)",
      "code_size" : "63",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetEnumerator",
      "signature" : "System.Collections.Generic.Dictionary`2/KeyCollection/Enumerator<Mono.CSharp.ArrayContainer/TypeRankPair, Mono.CSharp.ArrayContainer> System.Collections.Generic.Dictionary`2/KeyCollection<Mono.CSharp.ArrayContainer/TypeRankPair, Mono.CSharp.ArrayContainer>:GetEnumerator ()",
      "code_size" : "211",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "CopyTo",
      "signature" : "void System.Collections.Generic.Dictionary`2/KeyCollection<Mono.CSharp.ArrayContainer/TypeRankPair, Mono.CSharp.ArrayContainer>:CopyTo (Mono.CSharp.ArrayContainer/TypeRankPair[],int)",
      "code_size" : "380",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Count",
      "signature" : "int System.Collections.Generic.Dictionary`2/KeyCollection<Mono.CSharp.ArrayContainer/TypeRankPair, Mono.CSharp.ArrayContainer>:get_Count ()",
      "code_size" : "36",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<TKey>.get_IsReadOnly",
      "signature" : "bool System.Collections.Generic.Dictionary`2/KeyCollection<Mono.CSharp.ArrayContainer/TypeRankPair, Mono.CSharp.ArrayContainer>:System.Collections.Generic.ICollection<TKey>.get_IsReadOnly ()",
      "code_size" : "14",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<TKey>.Add",
      "signature" : "void System.Collections.Generic.Dictionary`2/KeyCollection<Mono.CSharp.ArrayContainer/TypeRankPair, Mono.CSharp.ArrayContainer>:System.Collections.Generic.ICollection<TKey>.Add (Mono.CSharp.ArrayContainer/TypeRankPair)",
      "code_size" : "19",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<TKey>.Clear",
      "signature" : "void System.Collections.Generic.Dictionary`2/KeyCollection<Mono.CSharp.ArrayContainer/TypeRankPair, Mono.CSharp.ArrayContainer>:System.Collections.Generic.ICollection<TKey>.Clear ()",
      "code_size" : "19",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<TKey>.Contains",
      "signature" : "bool System.Collections.Generic.Dictionary`2/KeyCollection<Mono.CSharp.ArrayContainer/TypeRankPair, Mono.CSharp.ArrayContainer>:System.Collections.Generic.ICollection<TKey>.Contains (Mono.CSharp.ArrayContainer/TypeRankPair)",
      "code_size" : "51",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<TKey>.Remove",
      "signature" : "bool System.Collections.Generic.Dictionary`2/KeyCollection<Mono.CSharp.ArrayContainer/TypeRankPair, Mono.CSharp.ArrayContainer>:System.Collections.Generic.ICollection<TKey>.Remove (Mono.CSharp.ArrayContainer/TypeRankPair)",
      "code_size" : "21",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.IEnumerable<TKey>.GetEnumerator",
      "signature" : "System.Collections.Generic.IEnumerator`1<Mono.CSharp.ArrayContainer/TypeRankPair> System.Collections.Generic.Dictionary`2/KeyCollection<Mono.CSharp.ArrayContainer/TypeRankPair, Mono.CSharp.ArrayContainer>:System.Collections.Generic.IEnumerable<TKey>.GetEnumerator ()",
      "code_size" : "235",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerable.GetEnumerator",
      "signature" : "System.Collections.IEnumerator System.Collections.Generic.Dictionary`2/KeyCollection<Mono.CSharp.ArrayContainer/TypeRankPair, Mono.CSharp.ArrayContainer>:System.Collections.IEnumerable.GetEnumerator ()",
      "code_size" : "235",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.ICollection.CopyTo",
      "signature" : "void System.Collections.Generic.Dictionary`2/KeyCollection<Mono.CSharp.ArrayContainer/TypeRankPair, Mono.CSharp.ArrayContainer>:System.Collections.ICollection.CopyTo (System.Array,int)",
      "code_size" : "657",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.ICollection.get_IsSynchronized",
      "signature" : "bool System.Collections.Generic.Dictionary`2/KeyCollection<Mono.CSharp.ArrayContainer/TypeRankPair, Mono.CSharp.ArrayContainer>:System.Collections.ICollection.get_IsSynchronized ()",
      "code_size" : "11",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.ICollection.get_SyncRoot",
      "signature" : "object System.Collections.Generic.Dictionary`2/KeyCollection<Mono.CSharp.ArrayContainer/TypeRankPair, Mono.CSharp.ArrayContainer>:System.Collections.ICollection.get_SyncRoot ()",
      "code_size" : "36",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.Dictionary`2/ValueCollection<Mono.CSharp.ArrayContainer/TypeRankPair, Mono.CSharp.ArrayContainer>:.ctor (System.Collections.Generic.Dictionary`2<Mono.CSharp.ArrayContainer/TypeRankPair, Mono.CSharp.ArrayContainer>)",
      "code_size" : "63",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetEnumerator",
      "signature" : "System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator<Mono.CSharp.ArrayContainer/TypeRankPair, Mono.CSharp.ArrayContainer> System.Collections.Generic.Dictionary`2/ValueCollection<Mono.CSharp.ArrayContainer/TypeRankPair, Mono.CSharp.ArrayContainer>:GetEnumerator ()",
      "code_size" : "171",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "CopyTo",
      "signature" : "void System.Collections.Generic.Dictionary`2/ValueCollection<Mono.CSharp.ArrayContainer/TypeRankPair, Mono.CSharp.ArrayContainer>:CopyTo (Mono.CSharp.ArrayContainer[],int)",
      "code_size" : "289",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Count",
      "signature" : "int System.Collections.Generic.Dictionary`2/ValueCollection<Mono.CSharp.ArrayContainer/TypeRankPair, Mono.CSharp.ArrayContainer>:get_Count ()",
      "code_size" : "36",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<TValue>.get_IsReadOnly",
      "signature" : "bool System.Collections.Generic.Dictionary`2/ValueCollection<Mono.CSharp.ArrayContainer/TypeRankPair, Mono.CSharp.ArrayContainer>:System.Collections.Generic.ICollection<TValue>.get_IsReadOnly ()",
      "code_size" : "14",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<TValue>.Add",
      "signature" : "void System.Collections.Generic.Dictionary`2/ValueCollection<Mono.CSharp.ArrayContainer/TypeRankPair, Mono.CSharp.ArrayContainer>:System.Collections.Generic.ICollection<TValue>.Add (Mono.CSharp.ArrayContainer)",
      "code_size" : "19",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<TValue>.Remove",
      "signature" : "bool System.Collections.Generic.Dictionary`2/ValueCollection<Mono.CSharp.ArrayContainer/TypeRankPair, Mono.CSharp.ArrayContainer>:System.Collections.Generic.ICollection<TValue>.Remove (Mono.CSharp.ArrayContainer)",
      "code_size" : "21",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<TValue>.Clear",
      "signature" : "void System.Collections.Generic.Dictionary`2/ValueCollection<Mono.CSharp.ArrayContainer/TypeRankPair, Mono.CSharp.ArrayContainer>:System.Collections.Generic.ICollection<TValue>.Clear ()",
      "code_size" : "19",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<TValue>.Contains",
      "signature" : "bool System.Collections.Generic.Dictionary`2/ValueCollection<Mono.CSharp.ArrayContainer/TypeRankPair, Mono.CSharp.ArrayContainer>:System.Collections.Generic.ICollection<TValue>.Contains (Mono.CSharp.ArrayContainer)",
      "code_size" : "41",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.IEnumerable<TValue>.GetEnumerator",
      "signature" : "System.Collections.Generic.IEnumerator`1<Mono.CSharp.ArrayContainer> System.Collections.Generic.Dictionary`2/ValueCollection<Mono.CSharp.ArrayContainer/TypeRankPair, Mono.CSharp.ArrayContainer>:System.Collections.Generic.IEnumerable<TValue>.GetEnumerator ()",
      "code_size" : "195",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerable.GetEnumerator",
      "signature" : "System.Collections.IEnumerator System.Collections.Generic.Dictionary`2/ValueCollection<Mono.CSharp.ArrayContainer/TypeRankPair, Mono.CSharp.ArrayContainer>:System.Collections.IEnumerable.GetEnumerator ()",
      "code_size" : "195",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.ICollection.CopyTo",
      "signature" : "void System.Collections.Generic.Dictionary`2/ValueCollection<Mono.CSharp.ArrayContainer/TypeRankPair, Mono.CSharp.ArrayContainer>:System.Collections.ICollection.CopyTo (System.Array,int)",
      "code_size" : "553",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.ICollection.get_IsSynchronized",
      "signature" : "bool System.Collections.Generic.Dictionary`2/ValueCollection<Mono.CSharp.ArrayContainer/TypeRankPair, Mono.CSharp.ArrayContainer>:System.Collections.ICollection.get_IsSynchronized ()",
      "code_size" : "11",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.ICollection.get_SyncRoot",
      "signature" : "object System.Collections.Generic.Dictionary`2/ValueCollection<Mono.CSharp.ArrayContainer/TypeRankPair, Mono.CSharp.ArrayContainer>:System.Collections.ICollection.get_SyncRoot ()",
      "code_size" : "36",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "invoke_bool_T",
      "signature" : "(wrapper delegate-invoke) bool System.Predicate`1<Mono.CSharp.AnonymousTypeClass>:invoke_bool_T (Mono.CSharp.AnonymousTypeClass)",
      "code_size" : "258",
      "class" : "Predicate`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_void_T",
      "signature" : "(wrapper delegate-invoke) void System.Action`1<Mono.CSharp.AnonymousTypeClass>:invoke_void_T (Mono.CSharp.AnonymousTypeClass)",
      "code_size" : "252",
      "class" : "Action`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_int_T_T",
      "signature" : "(wrapper delegate-invoke) int System.Comparison`1<Mono.CSharp.AnonymousTypeClass>:invoke_int_T_T (Mono.CSharp.AnonymousTypeClass,Mono.CSharp.AnonymousTypeClass)",
      "code_size" : "282",
      "class" : "Comparison`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_TResult_T",
      "signature" : "(wrapper delegate-invoke) bool System.Func`2<string, bool>:invoke_TResult_T (string)",
      "code_size" : "258",
      "class" : "Func`2",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_TResult_T",
      "signature" : "(wrapper delegate-invoke) bool System.Func`2<System.Collections.Generic.KeyValuePair`2<string, System.Collections.Generic.IList`1<Mono.CSharp.TypeSpec>>, bool>:invoke_TResult_T (System.Collections.Generic.KeyValuePair`2<string, System.Collections.Generic.IList`1<Mono.CSharp.TypeSpec>>)",
      "code_size" : "276",
      "class" : "Func`2",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_TResult_T",
      "signature" : "(wrapper delegate-invoke) string System.Func`2<System.Collections.Generic.KeyValuePair`2<string, System.Collections.Generic.IList`1<Mono.CSharp.TypeSpec>>, string>:invoke_TResult_T (System.Collections.Generic.KeyValuePair`2<string, System.Collections.Generic.IList`1<Mono.CSharp.TypeSpec>>)",
      "code_size" : "276",
      "class" : "Func`2",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_TResult_T",
      "signature" : "(wrapper delegate-invoke) bool System.Func`2<System.Collections.Generic.KeyValuePair`2<string, Mono.CSharp.Namespace>, bool>:invoke_TResult_T (System.Collections.Generic.KeyValuePair`2<string, Mono.CSharp.Namespace>)",
      "code_size" : "276",
      "class" : "Func`2",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_TResult_T",
      "signature" : "(wrapper delegate-invoke) string System.Func`2<System.Collections.Generic.KeyValuePair`2<string, Mono.CSharp.Namespace>, string>:invoke_TResult_T (System.Collections.Generic.KeyValuePair`2<string, Mono.CSharp.Namespace>)",
      "code_size" : "276",
      "class" : "Func`2",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_TResult_T",
      "signature" : "(wrapper delegate-invoke) bool System.Func`2<Mono.CSharp.TypeSpec, bool>:invoke_TResult_T (Mono.CSharp.TypeSpec)",
      "code_size" : "258",
      "class" : "Func`2",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_REF, TValue_BOOL>:.ctor ()",
      "code_size" : "47",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_REF, TValue_BOOL>:.ctor (int)",
      "code_size" : "55",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_REF, TValue_BOOL>:.ctor (System.Collections.Generic.IEqualityComparer`1<TKey_REF>)",
      "code_size" : "55",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_REF, TValue_BOOL>:.ctor (int,System.Collections.Generic.IEqualityComparer`1<TKey_REF>)",
      "code_size" : "151",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_REF, TValue_BOOL>:.ctor (System.Collections.Generic.IDictionary`2<TKey_REF, TValue_BOOL>)",
      "code_size" : "55",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_REF, TValue_BOOL>:.ctor (System.Collections.Generic.IDictionary`2<TKey_REF, TValue_BOOL>,System.Collections.Generic.IEqualityComparer`1<TKey_REF>)",
      "code_size" : "495",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_REF, TValue_BOOL>:.ctor (System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)",
      "code_size" : "43",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Comparer",
      "signature" : "System.Collections.Generic.IEqualityComparer`1<TKey_REF> System.Collections.Generic.Dictionary`2<TKey_REF, TValue_BOOL>:get_Comparer ()",
      "code_size" : "20",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Count",
      "signature" : "int System.Collections.Generic.Dictionary`2<TKey_REF, TValue_BOOL>:get_Count ()",
      "code_size" : "30",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Keys",
      "signature" : "System.Collections.Generic.Dictionary`2/KeyCollection<TKey_REF, TValue_BOOL> System.Collections.Generic.Dictionary`2<TKey_REF, TValue_BOOL>:get_Keys ()",
      "code_size" : "146",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.IDictionary<TKey,TValue>.get_Keys",
      "signature" : "System.Collections.Generic.ICollection`1<TKey_REF> System.Collections.Generic.Dictionary`2<TKey_REF, TValue_BOOL>:System.Collections.Generic.IDictionary<TKey,TValue>.get_Keys ()",
      "code_size" : "146",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.get_Keys",
      "signature" : "System.Collections.Generic.IEnumerable`1<TKey_REF> System.Collections.Generic.Dictionary`2<TKey_REF, TValue_BOOL>:System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.get_Keys ()",
      "code_size" : "146",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Values",
      "signature" : "System.Collections.Generic.Dictionary`2/ValueCollection<TKey_REF, TValue_BOOL> System.Collections.Generic.Dictionary`2<TKey_REF, TValue_BOOL>:get_Values ()",
      "code_size" : "146",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.IDictionary<TKey,TValue>.get_Values",
      "signature" : "System.Collections.Generic.ICollection`1<TValue_BOOL> System.Collections.Generic.Dictionary`2<TKey_REF, TValue_BOOL>:System.Collections.Generic.IDictionary<TKey,TValue>.get_Values ()",
      "code_size" : "146",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.get_Values",
      "signature" : "System.Collections.Generic.IEnumerable`1<TValue_BOOL> System.Collections.Generic.Dictionary`2<TKey_REF, TValue_BOOL>:System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.get_Values ()",
      "code_size" : "146",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Item",
      "signature" : "TValue_BOOL System.Collections.Generic.Dictionary`2<TKey_REF, TValue_BOOL>:get_Item (TKey_REF)",
      "code_size" : "130",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Item",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_REF, TValue_BOOL>:set_Item (TKey_REF,TValue_BOOL)",
      "code_size" : "65",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Add",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_REF, TValue_BOOL>:Add (TKey_REF,TValue_BOOL)",
      "code_size" : "68",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_REF, TValue_BOOL>:System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add (System.Collections.Generic.KeyValuePair`2<TKey_REF, TValue_BOOL>)",
      "code_size" : "188",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains",
      "signature" : "bool System.Collections.Generic.Dictionary`2<TKey_REF, TValue_BOOL>:System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains (System.Collections.Generic.KeyValuePair`2<TKey_REF, TValue_BOOL>)",
      "code_size" : "344",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove",
      "signature" : "bool System.Collections.Generic.Dictionary`2<TKey_REF, TValue_BOOL>:System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove (System.Collections.Generic.KeyValuePair`2<TKey_REF, TValue_BOOL>)",
      "code_size" : "456",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Clear",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_REF, TValue_BOOL>:Clear ()",
      "code_size" : "192",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "ContainsKey",
      "signature" : "bool System.Collections.Generic.Dictionary`2<TKey_REF, TValue_BOOL>:ContainsKey (TKey_REF)",
      "code_size" : "73",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "ContainsValue",
      "signature" : "bool System.Collections.Generic.Dictionary`2<TKey_REF, TValue_BOOL>:ContainsValue (TValue_BOOL)",
      "code_size" : "387",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "CopyTo",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_REF, TValue_BOOL>:CopyTo (System.Collections.Generic.KeyValuePair`2<TKey_REF, TValue_BOOL>[],int)",
      "code_size" : "571",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetEnumerator",
      "signature" : "System.Collections.Generic.Dictionary`2/Enumerator<TKey_REF, TValue_BOOL> System.Collections.Generic.Dictionary`2<TKey_REF, TValue_BOOL>:GetEnumerator ()",
      "code_size" : "309",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator",
      "signature" : "System.Collections.Generic.IEnumerator`1<System.Collections.Generic.KeyValuePair`2<TKey_REF, TValue_BOOL>> System.Collections.Generic.Dictionary`2<TKey_REF, TValue_BOOL>:System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator ()",
      "code_size" : "342",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetObjectData",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_REF, TValue_BOOL>:GetObjectData (System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)",
      "code_size" : "394",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "FindEntry",
      "signature" : "int System.Collections.Generic.Dictionary`2<TKey_REF, TValue_BOOL>:FindEntry (TKey_REF)",
      "code_size" : "444",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Initialize",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_REF, TValue_BOOL>:Initialize (int)",
      "code_size" : "247",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Insert",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_REF, TValue_BOOL>:Insert (TKey_REF,TValue_BOOL,bool)",
      "code_size" : "1040",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "OnDeserialization",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_REF, TValue_BOOL>:OnDeserialization (object)",
      "code_size" : "1057",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Resize",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_REF, TValue_BOOL>:Resize ()",
      "code_size" : "77",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Resize",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_REF, TValue_BOOL>:Resize (int,bool)",
      "code_size" : "691",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Remove",
      "signature" : "bool System.Collections.Generic.Dictionary`2<TKey_REF, TValue_BOOL>:Remove (TKey_REF)",
      "code_size" : "877",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "TryGetValue",
      "signature" : "bool System.Collections.Generic.Dictionary`2<TKey_REF, TValue_BOOL>:TryGetValue (TKey_REF,TValue_BOOL&)",
      "code_size" : "151",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetValueOrDefault",
      "signature" : "TValue_BOOL System.Collections.Generic.Dictionary`2<TKey_REF, TValue_BOOL>:GetValueOrDefault (TKey_REF)",
      "code_size" : "125",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.get_IsReadOnly",
      "signature" : "bool System.Collections.Generic.Dictionary`2<TKey_REF, TValue_BOOL>:System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.get_IsReadOnly ()",
      "code_size" : "15",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_REF, TValue_BOOL>:System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo (System.Collections.Generic.KeyValuePair`2<TKey_REF, TValue_BOOL>[],int)",
      "code_size" : "63",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.ICollection.CopyTo",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_REF, TValue_BOOL>:System.Collections.ICollection.CopyTo (System.Array,int)",
      "code_size" : "1449",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerable.GetEnumerator",
      "signature" : "System.Collections.IEnumerator System.Collections.Generic.Dictionary`2<TKey_REF, TValue_BOOL>:System.Collections.IEnumerable.GetEnumerator ()",
      "code_size" : "342",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.ICollection.get_IsSynchronized",
      "signature" : "bool System.Collections.Generic.Dictionary`2<TKey_REF, TValue_BOOL>:System.Collections.ICollection.get_IsSynchronized ()",
      "code_size" : "15",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.ICollection.get_SyncRoot",
      "signature" : "object System.Collections.Generic.Dictionary`2<TKey_REF, TValue_BOOL>:System.Collections.ICollection.get_SyncRoot ()",
      "code_size" : "143",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IDictionary.get_IsFixedSize",
      "signature" : "bool System.Collections.Generic.Dictionary`2<TKey_REF, TValue_BOOL>:System.Collections.IDictionary.get_IsFixedSize ()",
      "code_size" : "15",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IDictionary.get_IsReadOnly",
      "signature" : "bool System.Collections.Generic.Dictionary`2<TKey_REF, TValue_BOOL>:System.Collections.IDictionary.get_IsReadOnly ()",
      "code_size" : "15",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IDictionary.get_Keys",
      "signature" : "System.Collections.ICollection System.Collections.Generic.Dictionary`2<TKey_REF, TValue_BOOL>:System.Collections.IDictionary.get_Keys ()",
      "code_size" : "43",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IDictionary.get_Values",
      "signature" : "System.Collections.ICollection System.Collections.Generic.Dictionary`2<TKey_REF, TValue_BOOL>:System.Collections.IDictionary.get_Values ()",
      "code_size" : "43",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IDictionary.get_Item",
      "signature" : "object System.Collections.Generic.Dictionary`2<TKey_REF, TValue_BOOL>:System.Collections.IDictionary.get_Item (object)",
      "code_size" : "260",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IDictionary.set_Item",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_REF, TValue_BOOL>:System.Collections.IDictionary.set_Item (object,object)",
      "code_size" : "411",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsCompatibleKey",
      "signature" : "bool System.Collections.Generic.Dictionary`2<TKey_REF, TValue_BOOL>:IsCompatibleKey (object)",
      "code_size" : "73",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IDictionary.Add",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_REF, TValue_BOOL>:System.Collections.IDictionary.Add (object,object)",
      "code_size" : "411",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IDictionary.Contains",
      "signature" : "bool System.Collections.Generic.Dictionary`2<TKey_REF, TValue_BOOL>:System.Collections.IDictionary.Contains (object)",
      "code_size" : "152",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IDictionary.GetEnumerator",
      "signature" : "System.Collections.IDictionaryEnumerator System.Collections.Generic.Dictionary`2<TKey_REF, TValue_BOOL>:System.Collections.IDictionary.GetEnumerator ()",
      "code_size" : "342",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IDictionary.Remove",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_REF, TValue_BOOL>:System.Collections.IDictionary.Remove (object)",
      "code_size" : "145",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.Dictionary`2/KeyCollection<TKey_REF, TValue_BOOL>:.ctor (System.Collections.Generic.Dictionary`2<TKey_REF, TValue_BOOL>)",
      "code_size" : "63",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetEnumerator",
      "signature" : "System.Collections.Generic.Dictionary`2/KeyCollection/Enumerator<TKey_REF, TValue_BOOL> System.Collections.Generic.Dictionary`2/KeyCollection<TKey_REF, TValue_BOOL>:GetEnumerator ()",
      "code_size" : "217",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "CopyTo",
      "signature" : "void System.Collections.Generic.Dictionary`2/KeyCollection<TKey_REF, TValue_BOOL>:CopyTo (TKey_REF[],int)",
      "code_size" : "339",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Count",
      "signature" : "int System.Collections.Generic.Dictionary`2/KeyCollection<TKey_REF, TValue_BOOL>:get_Count ()",
      "code_size" : "47",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<TKey>.get_IsReadOnly",
      "signature" : "bool System.Collections.Generic.Dictionary`2/KeyCollection<TKey_REF, TValue_BOOL>:System.Collections.Generic.ICollection<TKey>.get_IsReadOnly ()",
      "code_size" : "18",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<TKey>.Add",
      "signature" : "void System.Collections.Generic.Dictionary`2/KeyCollection<TKey_REF, TValue_BOOL>:System.Collections.Generic.ICollection<TKey>.Add (TKey_REF)",
      "code_size" : "23",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<TKey>.Clear",
      "signature" : "void System.Collections.Generic.Dictionary`2/KeyCollection<TKey_REF, TValue_BOOL>:System.Collections.Generic.ICollection<TKey>.Clear ()",
      "code_size" : "23",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<TKey>.Contains",
      "signature" : "bool System.Collections.Generic.Dictionary`2/KeyCollection<TKey_REF, TValue_BOOL>:System.Collections.Generic.ICollection<TKey>.Contains (TKey_REF)",
      "code_size" : "57",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<TKey>.Remove",
      "signature" : "bool System.Collections.Generic.Dictionary`2/KeyCollection<TKey_REF, TValue_BOOL>:System.Collections.Generic.ICollection<TKey>.Remove (TKey_REF)",
      "code_size" : "25",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.IEnumerable<TKey>.GetEnumerator",
      "signature" : "System.Collections.Generic.IEnumerator`1<TKey_REF> System.Collections.Generic.Dictionary`2/KeyCollection<TKey_REF, TValue_BOOL>:System.Collections.Generic.IEnumerable<TKey>.GetEnumerator ()",
      "code_size" : "250",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerable.GetEnumerator",
      "signature" : "System.Collections.IEnumerator System.Collections.Generic.Dictionary`2/KeyCollection<TKey_REF, TValue_BOOL>:System.Collections.IEnumerable.GetEnumerator ()",
      "code_size" : "250",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.ICollection.CopyTo",
      "signature" : "void System.Collections.Generic.Dictionary`2/KeyCollection<TKey_REF, TValue_BOOL>:System.Collections.ICollection.CopyTo (System.Array,int)",
      "code_size" : "587",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.ICollection.get_IsSynchronized",
      "signature" : "bool System.Collections.Generic.Dictionary`2/KeyCollection<TKey_REF, TValue_BOOL>:System.Collections.ICollection.get_IsSynchronized ()",
      "code_size" : "15",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.ICollection.get_SyncRoot",
      "signature" : "object System.Collections.Generic.Dictionary`2/KeyCollection<TKey_REF, TValue_BOOL>:System.Collections.ICollection.get_SyncRoot ()",
      "code_size" : "36",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.Dictionary`2/ValueCollection<TKey_REF, TValue_BOOL>:.ctor (System.Collections.Generic.Dictionary`2<TKey_REF, TValue_BOOL>)",
      "code_size" : "63",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetEnumerator",
      "signature" : "System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator<TKey_REF, TValue_BOOL> System.Collections.Generic.Dictionary`2/ValueCollection<TKey_REF, TValue_BOOL>:GetEnumerator ()",
      "code_size" : "202",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "CopyTo",
      "signature" : "void System.Collections.Generic.Dictionary`2/ValueCollection<TKey_REF, TValue_BOOL>:CopyTo (TValue_BOOL[],int)",
      "code_size" : "355",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Count",
      "signature" : "int System.Collections.Generic.Dictionary`2/ValueCollection<TKey_REF, TValue_BOOL>:get_Count ()",
      "code_size" : "47",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<TValue>.get_IsReadOnly",
      "signature" : "bool System.Collections.Generic.Dictionary`2/ValueCollection<TKey_REF, TValue_BOOL>:System.Collections.Generic.ICollection<TValue>.get_IsReadOnly ()",
      "code_size" : "18",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<TValue>.Add",
      "signature" : "void System.Collections.Generic.Dictionary`2/ValueCollection<TKey_REF, TValue_BOOL>:System.Collections.Generic.ICollection<TValue>.Add (TValue_BOOL)",
      "code_size" : "23",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<TValue>.Remove",
      "signature" : "bool System.Collections.Generic.Dictionary`2/ValueCollection<TKey_REF, TValue_BOOL>:System.Collections.Generic.ICollection<TValue>.Remove (TValue_BOOL)",
      "code_size" : "25",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<TValue>.Clear",
      "signature" : "void System.Collections.Generic.Dictionary`2/ValueCollection<TKey_REF, TValue_BOOL>:System.Collections.Generic.ICollection<TValue>.Clear ()",
      "code_size" : "23",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<TValue>.Contains",
      "signature" : "bool System.Collections.Generic.Dictionary`2/ValueCollection<TKey_REF, TValue_BOOL>:System.Collections.Generic.ICollection<TValue>.Contains (TValue_BOOL)",
      "code_size" : "57",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.IEnumerable<TValue>.GetEnumerator",
      "signature" : "System.Collections.Generic.IEnumerator`1<TValue_BOOL> System.Collections.Generic.Dictionary`2/ValueCollection<TKey_REF, TValue_BOOL>:System.Collections.Generic.IEnumerable<TValue>.GetEnumerator ()",
      "code_size" : "235",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerable.GetEnumerator",
      "signature" : "System.Collections.IEnumerator System.Collections.Generic.Dictionary`2/ValueCollection<TKey_REF, TValue_BOOL>:System.Collections.IEnumerable.GetEnumerator ()",
      "code_size" : "235",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.ICollection.CopyTo",
      "signature" : "void System.Collections.Generic.Dictionary`2/ValueCollection<TKey_REF, TValue_BOOL>:System.Collections.ICollection.CopyTo (System.Array,int)",
      "code_size" : "639",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.ICollection.get_IsSynchronized",
      "signature" : "bool System.Collections.Generic.Dictionary`2/ValueCollection<TKey_REF, TValue_BOOL>:System.Collections.ICollection.get_IsSynchronized ()",
      "code_size" : "15",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.ICollection.get_SyncRoot",
      "signature" : "object System.Collections.Generic.Dictionary`2/ValueCollection<TKey_REF, TValue_BOOL>:System.Collections.ICollection.get_SyncRoot ()",
      "code_size" : "36",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "invoke_bool_T",
      "signature" : "(wrapper delegate-invoke) bool System.Predicate`1<Mono.CSharp.Namespace>:invoke_bool_T (Mono.CSharp.Namespace)",
      "code_size" : "258",
      "class" : "Predicate`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_void_T",
      "signature" : "(wrapper delegate-invoke) void System.Action`1<Mono.CSharp.Namespace>:invoke_void_T (Mono.CSharp.Namespace)",
      "code_size" : "252",
      "class" : "Action`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_int_T_T",
      "signature" : "(wrapper delegate-invoke) int System.Comparison`1<Mono.CSharp.Namespace>:invoke_int_T_T (Mono.CSharp.Namespace,Mono.CSharp.Namespace)",
      "code_size" : "282",
      "class" : "Comparison`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_TResult_T",
      "signature" : "(wrapper delegate-invoke) string System.Func`2<Mono.CSharp.TypeParameterSpec, string>:invoke_TResult_T (Mono.CSharp.TypeParameterSpec)",
      "code_size" : "258",
      "class" : "Func`2",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.HashSet`1<T_INT>:.ctor ()",
      "code_size" : "98",
      "class" : "HashSet`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.HashSet`1<T_INT>:.ctor (System.Collections.Generic.IEqualityComparer`1<T_INT>)",
      "code_size" : "141",
      "class" : "HashSet`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.HashSet`1<T_INT>:.ctor (System.Collections.Generic.IEnumerable`1<T_INT>)",
      "code_size" : "108",
      "class" : "HashSet`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.HashSet`1<T_INT>:.ctor (System.Collections.Generic.IEnumerable`1<T_INT>,System.Collections.Generic.IEqualityComparer`1<T_INT>)",
      "code_size" : "417",
      "class" : "HashSet`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.HashSet`1<T_INT>:.ctor (System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)",
      "code_size" : "39",
      "class" : "HashSet`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<T>.Add",
      "signature" : "void System.Collections.Generic.HashSet`1<T_INT>:System.Collections.Generic.ICollection<T>.Add (T_INT)",
      "code_size" : "53",
      "class" : "HashSet`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Clear",
      "signature" : "void System.Collections.Generic.HashSet`1<T_INT>:Clear ()",
      "code_size" : "124",
      "class" : "HashSet`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Contains",
      "signature" : "bool System.Collections.Generic.HashSet`1<T_INT>:Contains (T_INT)",
      "code_size" : "418",
      "class" : "HashSet`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "CopyTo",
      "signature" : "void System.Collections.Generic.HashSet`1<T_INT>:CopyTo (T_INT[],int)",
      "code_size" : "80",
      "class" : "HashSet`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Remove",
      "signature" : "bool System.Collections.Generic.HashSet`1<T_INT>:Remove (T_INT)",
      "code_size" : "862",
      "class" : "HashSet`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Count",
      "signature" : "int System.Collections.Generic.HashSet`1<T_INT>:get_Count ()",
      "code_size" : "20",
      "class" : "HashSet`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<T>.get_IsReadOnly",
      "signature" : "bool System.Collections.Generic.HashSet`1<T_INT>:System.Collections.Generic.ICollection<T>.get_IsReadOnly ()",
      "code_size" : "15",
      "class" : "HashSet`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetEnumerator",
      "signature" : "System.Collections.Generic.HashSet`1/Enumerator<T_INT> System.Collections.Generic.HashSet`1<T_INT>:GetEnumerator ()",
      "code_size" : "198",
      "class" : "HashSet`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.IEnumerable<T>.GetEnumerator",
      "signature" : "System.Collections.Generic.IEnumerator`1<T_INT> System.Collections.Generic.HashSet`1<T_INT>:System.Collections.Generic.IEnumerable<T>.GetEnumerator ()",
      "code_size" : "231",
      "class" : "HashSet`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerable.GetEnumerator",
      "signature" : "System.Collections.IEnumerator System.Collections.Generic.HashSet`1<T_INT>:System.Collections.IEnumerable.GetEnumerator ()",
      "code_size" : "231",
      "class" : "HashSet`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetObjectData",
      "signature" : "void System.Collections.Generic.HashSet`1<T_INT>:GetObjectData (System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)",
      "code_size" : "400",
      "class" : "HashSet`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "OnDeserialization",
      "signature" : "void System.Collections.Generic.HashSet`1<T_INT>:OnDeserialization (object)",
      "code_size" : "670",
      "class" : "HashSet`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Add",
      "signature" : "bool System.Collections.Generic.HashSet`1<T_INT>:Add (T_INT)",
      "code_size" : "53",
      "class" : "HashSet`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "UnionWith",
      "signature" : "void System.Collections.Generic.HashSet`1<T_INT>:UnionWith (System.Collections.Generic.IEnumerable`1<T_INT>)",
      "code_size" : "267",
      "class" : "HashSet`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "IntersectWith",
      "signature" : "void System.Collections.Generic.HashSet`1<T_INT>:IntersectWith (System.Collections.Generic.IEnumerable`1<T_INT>)",
      "code_size" : "417",
      "class" : "HashSet`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "ExceptWith",
      "signature" : "void System.Collections.Generic.HashSet`1<T_INT>:ExceptWith (System.Collections.Generic.IEnumerable`1<T_INT>)",
      "code_size" : "331",
      "class" : "HashSet`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "SymmetricExceptWith",
      "signature" : "void System.Collections.Generic.HashSet`1<T_INT>:SymmetricExceptWith (System.Collections.Generic.IEnumerable`1<T_INT>)",
      "code_size" : "392",
      "class" : "HashSet`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsSubsetOf",
      "signature" : "bool System.Collections.Generic.HashSet`1<T_INT>:IsSubsetOf (System.Collections.Generic.IEnumerable`1<T_INT>)",
      "code_size" : "433",
      "class" : "HashSet`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsProperSubsetOf",
      "signature" : "bool System.Collections.Generic.HashSet`1<T_INT>:IsProperSubsetOf (System.Collections.Generic.IEnumerable`1<T_INT>)",
      "code_size" : "500",
      "class" : "HashSet`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsSupersetOf",
      "signature" : "bool System.Collections.Generic.HashSet`1<T_INT>:IsSupersetOf (System.Collections.Generic.IEnumerable`1<T_INT>)",
      "code_size" : "366",
      "class" : "HashSet`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsProperSupersetOf",
      "signature" : "bool System.Collections.Generic.HashSet`1<T_INT>:IsProperSupersetOf (System.Collections.Generic.IEnumerable`1<T_INT>)",
      "code_size" : "492",
      "class" : "HashSet`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Overlaps",
      "signature" : "bool System.Collections.Generic.HashSet`1<T_INT>:Overlaps (System.Collections.Generic.IEnumerable`1<T_INT>)",
      "code_size" : "326",
      "class" : "HashSet`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetEquals",
      "signature" : "bool System.Collections.Generic.HashSet`1<T_INT>:SetEquals (System.Collections.Generic.IEnumerable`1<T_INT>)",
      "code_size" : "499",
      "class" : "HashSet`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "CopyTo",
      "signature" : "void System.Collections.Generic.HashSet`1<T_INT>:CopyTo (T_INT[])",
      "code_size" : "72",
      "class" : "HashSet`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "CopyTo",
      "signature" : "void System.Collections.Generic.HashSet`1<T_INT>:CopyTo (T_INT[],int,int)",
      "code_size" : "540",
      "class" : "HashSet`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "RemoveWhere",
      "signature" : "int System.Collections.Generic.HashSet`1<T_INT>:RemoveWhere (System.Predicate`1<T_INT>)",
      "code_size" : "312",
      "class" : "HashSet`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Comparer",
      "signature" : "System.Collections.Generic.IEqualityComparer`1<T_INT> System.Collections.Generic.HashSet`1<T_INT>:get_Comparer ()",
      "code_size" : "20",
      "class" : "HashSet`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "TrimExcess",
      "signature" : "void System.Collections.Generic.HashSet`1<T_INT>:TrimExcess ()",
      "code_size" : "596",
      "class" : "HashSet`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateSetComparer",
      "signature" : "System.Collections.Generic.IEqualityComparer`1<System.Collections.Generic.HashSet`1<T_INT>> System.Collections.Generic.HashSet`1<T_INT>:CreateSetComparer ()",
      "code_size" : "69",
      "class" : "HashSet`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Initialize",
      "signature" : "void System.Collections.Generic.HashSet`1<T_INT>:Initialize (int)",
      "code_size" : "141",
      "class" : "HashSet`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "IncreaseCapacity",
      "signature" : "void System.Collections.Generic.HashSet`1<T_INT>:IncreaseCapacity ()",
      "code_size" : "138",
      "class" : "HashSet`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "SetCapacity",
      "signature" : "void System.Collections.Generic.HashSet`1<T_INT>:SetCapacity (int,bool)",
      "code_size" : "618",
      "class" : "HashSet`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddIfNotPresent",
      "signature" : "bool System.Collections.Generic.HashSet`1<T_INT>:AddIfNotPresent (T_INT)",
      "code_size" : "927",
      "class" : "HashSet`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "ContainsAllElements",
      "signature" : "bool System.Collections.Generic.HashSet`1<T_INT>:ContainsAllElements (System.Collections.Generic.IEnumerable`1<T_INT>)",
      "code_size" : "260",
      "class" : "HashSet`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsSubsetOfHashSetWithSameEC",
      "signature" : "bool System.Collections.Generic.HashSet`1<T_INT>:IsSubsetOfHashSetWithSameEC (System.Collections.Generic.HashSet`1<T_INT>)",
      "code_size" : "338",
      "class" : "HashSet`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "IntersectWithHashSetWithSameEC",
      "signature" : "void System.Collections.Generic.HashSet`1<T_INT>:IntersectWithHashSetWithSameEC (System.Collections.Generic.HashSet`1<T_INT>)",
      "code_size" : "258",
      "class" : "HashSet`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "IntersectWithEnumerable",
      "signature" : "void System.Collections.Generic.HashSet`1<T_INT>:IntersectWithEnumerable (System.Collections.Generic.IEnumerable`1<T_INT>)",
      "code_size" : "704",
      "class" : "HashSet`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalIndexOf",
      "signature" : "int System.Collections.Generic.HashSet`1<T_INT>:InternalIndexOf (T_INT)",
      "code_size" : "408",
      "class" : "HashSet`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "SymmetricExceptWithUniqueHashSet",
      "signature" : "void System.Collections.Generic.HashSet`1<T_INT>:SymmetricExceptWithUniqueHashSet (System.Collections.Generic.HashSet`1<T_INT>)",
      "code_size" : "335",
      "class" : "HashSet`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "SymmetricExceptWithEnumerable",
      "signature" : "void System.Collections.Generic.HashSet`1<T_INT>:SymmetricExceptWithEnumerable (System.Collections.Generic.IEnumerable`1<T_INT>)",
      "code_size" : "926",
      "class" : "HashSet`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddOrGetLocation",
      "signature" : "bool System.Collections.Generic.HashSet`1<T_INT>:AddOrGetLocation (T_INT,int&)",
      "code_size" : "883",
      "class" : "HashSet`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "CheckUniqueAndUnfoundElements",
      "signature" : "System.Collections.Generic.HashSet`1/ElementCount<T_INT> System.Collections.Generic.HashSet`1<T_INT>:CheckUniqueAndUnfoundElements (System.Collections.Generic.IEnumerable`1<T_INT>,bool)",
      "code_size" : "798",
      "class" : "HashSet`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "ToArray",
      "signature" : "T_INT[] System.Collections.Generic.HashSet`1<T_INT>:ToArray ()",
      "code_size" : "127",
      "class" : "HashSet`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "HashSetEquals",
      "signature" : "bool System.Collections.Generic.HashSet`1<T_INT>:HashSetEquals (System.Collections.Generic.HashSet`1<T_INT>,System.Collections.Generic.HashSet`1<T_INT>,System.Collections.Generic.IEqualityComparer`1<T_INT>)",
      "code_size" : "1136",
      "class" : "HashSet`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "AreEqualityComparersEqual",
      "signature" : "bool System.Collections.Generic.HashSet`1<T_INT>:AreEqualityComparersEqual (System.Collections.Generic.HashSet`1<T_INT>,System.Collections.Generic.HashSet`1<T_INT>)",
      "code_size" : "91",
      "class" : "HashSet`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalGetHashCode",
      "signature" : "int System.Collections.Generic.HashSet`1<T_INT>:InternalGetHashCode (T_INT)",
      "code_size" : "79",
      "class" : "HashSet`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "invoke_bool_T",
      "signature" : "(wrapper delegate-invoke) bool System.Predicate`1<Mono.CSharp.ITypeDefinition>:invoke_bool_T (Mono.CSharp.ITypeDefinition)",
      "code_size" : "258",
      "class" : "Predicate`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_bool_T",
      "signature" : "(wrapper delegate-invoke) bool System.Predicate`1<Mono.CSharp.AbstractMessage>:invoke_bool_T (Mono.CSharp.AbstractMessage)",
      "code_size" : "258",
      "class" : "Predicate`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_void_T",
      "signature" : "(wrapper delegate-invoke) void System.Action`1<Mono.CSharp.AbstractMessage>:invoke_void_T (Mono.CSharp.AbstractMessage)",
      "code_size" : "252",
      "class" : "Action`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_int_T_T",
      "signature" : "(wrapper delegate-invoke) int System.Comparison`1<Mono.CSharp.AbstractMessage>:invoke_int_T_T (Mono.CSharp.AbstractMessage,Mono.CSharp.AbstractMessage)",
      "code_size" : "282",
      "class" : "Comparison`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_bool_T",
      "signature" : "(wrapper delegate-invoke) bool System.Predicate`1<Mono.CSharp.WarningRegions/PragmaCmd>:invoke_bool_T (Mono.CSharp.WarningRegions/PragmaCmd)",
      "code_size" : "258",
      "class" : "Predicate`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_void_T",
      "signature" : "(wrapper delegate-invoke) void System.Action`1<Mono.CSharp.WarningRegions/PragmaCmd>:invoke_void_T (Mono.CSharp.WarningRegions/PragmaCmd)",
      "code_size" : "252",
      "class" : "Action`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_int_T_T",
      "signature" : "(wrapper delegate-invoke) int System.Comparison`1<Mono.CSharp.WarningRegions/PragmaCmd>:invoke_int_T_T (Mono.CSharp.WarningRegions/PragmaCmd,Mono.CSharp.WarningRegions/PragmaCmd)",
      "code_size" : "282",
      "class" : "Comparison`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1<T_INT>:.ctor ()",
      "code_size" : "90",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1<T_INT>:.ctor (int)",
      "code_size" : "192",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1<T_INT>:.ctor (System.Collections.Generic.IEnumerable`1<T_INT>)",
      "code_size" : "606",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Capacity",
      "signature" : "int System.Collections.Generic.List`1<T_INT>:get_Capacity ()",
      "code_size" : "24",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Capacity",
      "signature" : "void System.Collections.Generic.List`1<T_INT>:set_Capacity (int)",
      "code_size" : "260",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Count",
      "signature" : "int System.Collections.Generic.List`1<T_INT>:get_Count ()",
      "code_size" : "20",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IList.get_IsFixedSize",
      "signature" : "bool System.Collections.Generic.List`1<T_INT>:System.Collections.IList.get_IsFixedSize ()",
      "code_size" : "15",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<T>.get_IsReadOnly",
      "signature" : "bool System.Collections.Generic.List`1<T_INT>:System.Collections.Generic.ICollection<T>.get_IsReadOnly ()",
      "code_size" : "15",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IList.get_IsReadOnly",
      "signature" : "bool System.Collections.Generic.List`1<T_INT>:System.Collections.IList.get_IsReadOnly ()",
      "code_size" : "15",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.ICollection.get_IsSynchronized",
      "signature" : "bool System.Collections.Generic.List`1<T_INT>:System.Collections.ICollection.get_IsSynchronized ()",
      "code_size" : "15",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.ICollection.get_SyncRoot",
      "signature" : "object System.Collections.Generic.List`1<T_INT>:System.Collections.ICollection.get_SyncRoot ()",
      "code_size" : "143",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Item",
      "signature" : "T_INT System.Collections.Generic.List`1<T_INT>:get_Item (int)",
      "code_size" : "60",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Item",
      "signature" : "void System.Collections.Generic.List`1<T_INT>:set_Item (int,T_INT)",
      "code_size" : "106",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsCompatibleObject",
      "signature" : "bool System.Collections.Generic.List`1<T_INT>:IsCompatibleObject (object)",
      "code_size" : "128",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IList.get_Item",
      "signature" : "object System.Collections.Generic.List`1<T_INT>:System.Collections.IList.get_Item (int)",
      "code_size" : "91",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IList.set_Item",
      "signature" : "void System.Collections.Generic.List`1<T_INT>:System.Collections.IList.set_Item (int,object)",
      "code_size" : "264",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Add",
      "signature" : "void System.Collections.Generic.List`1<T_INT>:Add (T_INT)",
      "code_size" : "181",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IList.Add",
      "signature" : "int System.Collections.Generic.List`1<T_INT>:System.Collections.IList.Add (object)",
      "code_size" : "287",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddRange",
      "signature" : "void System.Collections.Generic.List`1<T_INT>:AddRange (System.Collections.Generic.IEnumerable`1<T_INT>)",
      "code_size" : "70",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "AsReadOnly",
      "signature" : "System.Collections.ObjectModel.ReadOnlyCollection`1<T_INT> System.Collections.Generic.List`1<T_INT>:AsReadOnly ()",
      "code_size" : "84",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "BinarySearch",
      "signature" : "int System.Collections.Generic.List`1<T_INT>:BinarySearch (int,int,T_INT,System.Collections.Generic.IComparer`1<T_INT>)",
      "code_size" : "179",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "BinarySearch",
      "signature" : "int System.Collections.Generic.List`1<T_INT>:BinarySearch (T_INT)",
      "code_size" : "108",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "BinarySearch",
      "signature" : "int System.Collections.Generic.List`1<T_INT>:BinarySearch (T_INT,System.Collections.Generic.IComparer`1<T_INT>)",
      "code_size" : "115",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Clear",
      "signature" : "void System.Collections.Generic.List`1<T_INT>:Clear ()",
      "code_size" : "71",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Contains",
      "signature" : "bool System.Collections.Generic.List`1<T_INT>:Contains (T_INT)",
      "code_size" : "275",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IList.Contains",
      "signature" : "bool System.Collections.Generic.List`1<T_INT>:System.Collections.IList.Contains (object)",
      "code_size" : "216",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "CopyTo",
      "signature" : "void System.Collections.Generic.List`1<T_INT>:CopyTo (T_INT[])",
      "code_size" : "55",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.ICollection.CopyTo",
      "signature" : "void System.Collections.Generic.List`1<T_INT>:System.Collections.ICollection.CopyTo (System.Array,int)",
      "code_size" : "134",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "CopyTo",
      "signature" : "void System.Collections.Generic.List`1<T_INT>:CopyTo (int,T_INT[],int,int)",
      "code_size" : "93",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "CopyTo",
      "signature" : "void System.Collections.Generic.List`1<T_INT>:CopyTo (T_INT[],int)",
      "code_size" : "55",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "EnsureCapacity",
      "signature" : "void System.Collections.Generic.List`1<T_INT>:EnsureCapacity (int)",
      "code_size" : "168",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Exists",
      "signature" : "bool System.Collections.Generic.List`1<T_INT>:Exists (System.Predicate`1<T_INT>)",
      "code_size" : "74",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Find",
      "signature" : "T_INT System.Collections.Generic.List`1<T_INT>:Find (System.Predicate`1<T_INT>)",
      "code_size" : "178",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "FindAll",
      "signature" : "System.Collections.Generic.List`1<T_INT> System.Collections.Generic.List`1<T_INT>:FindAll (System.Predicate`1<T_INT>)",
      "code_size" : "286",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "FindIndex",
      "signature" : "int System.Collections.Generic.List`1<T_INT>:FindIndex (System.Predicate`1<T_INT>)",
      "code_size" : "72",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "FindIndex",
      "signature" : "int System.Collections.Generic.List`1<T_INT>:FindIndex (int,System.Predicate`1<T_INT>)",
      "code_size" : "84",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "FindIndex",
      "signature" : "int System.Collections.Generic.List`1<T_INT>:FindIndex (int,int,System.Predicate`1<T_INT>)",
      "code_size" : "238",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "FindLast",
      "signature" : "T_INT System.Collections.Generic.List`1<T_INT>:FindLast (System.Predicate`1<T_INT>)",
      "code_size" : "177",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "FindLastIndex",
      "signature" : "int System.Collections.Generic.List`1<T_INT>:FindLastIndex (System.Predicate`1<T_INT>)",
      "code_size" : "90",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "FindLastIndex",
      "signature" : "int System.Collections.Generic.List`1<T_INT>:FindLastIndex (int,System.Predicate`1<T_INT>)",
      "code_size" : "78",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "FindLastIndex",
      "signature" : "int System.Collections.Generic.List`1<T_INT>:FindLastIndex (int,int,System.Predicate`1<T_INT>)",
      "code_size" : "270",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "ForEach",
      "signature" : "void System.Collections.Generic.List`1<T_INT>:ForEach (System.Action`1<T_INT>)",
      "code_size" : "211",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetEnumerator",
      "signature" : "System.Collections.Generic.List`1/Enumerator<T_INT> System.Collections.Generic.List`1<T_INT>:GetEnumerator ()",
      "code_size" : "198",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.IEnumerable<T>.GetEnumerator",
      "signature" : "System.Collections.Generic.IEnumerator`1<T_INT> System.Collections.Generic.List`1<T_INT>:System.Collections.Generic.IEnumerable<T>.GetEnumerator ()",
      "code_size" : "231",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerable.GetEnumerator",
      "signature" : "System.Collections.IEnumerator System.Collections.Generic.List`1<T_INT>:System.Collections.IEnumerable.GetEnumerator ()",
      "code_size" : "231",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetRange",
      "signature" : "System.Collections.Generic.List`1<T_INT> System.Collections.Generic.List`1<T_INT>:GetRange (int,int)",
      "code_size" : "225",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "IndexOf",
      "signature" : "int System.Collections.Generic.List`1<T_INT>:IndexOf (T_INT)",
      "code_size" : "96",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IList.IndexOf",
      "signature" : "int System.Collections.Generic.List`1<T_INT>:System.Collections.IList.IndexOf (object)",
      "code_size" : "224",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "IndexOf",
      "signature" : "int System.Collections.Generic.List`1<T_INT>:IndexOf (T_INT,int)",
      "code_size" : "137",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "IndexOf",
      "signature" : "int System.Collections.Generic.List`1<T_INT>:IndexOf (T_INT,int,int)",
      "code_size" : "165",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Insert",
      "signature" : "void System.Collections.Generic.List`1<T_INT>:Insert (int,T_INT)",
      "code_size" : "271",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IList.Insert",
      "signature" : "void System.Collections.Generic.List`1<T_INT>:System.Collections.IList.Insert (int,object)",
      "code_size" : "264",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "InsertRange",
      "signature" : "void System.Collections.Generic.List`1<T_INT>:InsertRange (int,System.Collections.Generic.IEnumerable`1<T_INT>)",
      "code_size" : "705",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "LastIndexOf",
      "signature" : "int System.Collections.Generic.List`1<T_INT>:LastIndexOf (T_INT)",
      "code_size" : "117",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "LastIndexOf",
      "signature" : "int System.Collections.Generic.List`1<T_INT>:LastIndexOf (T_INT,int)",
      "code_size" : "109",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "LastIndexOf",
      "signature" : "int System.Collections.Generic.List`1<T_INT>:LastIndexOf (T_INT,int,int)",
      "code_size" : "309",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Remove",
      "signature" : "bool System.Collections.Generic.List`1<T_INT>:Remove (T_INT)",
      "code_size" : "115",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IList.Remove",
      "signature" : "void System.Collections.Generic.List`1<T_INT>:System.Collections.IList.Remove (object)",
      "code_size" : "209",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "RemoveAll",
      "signature" : "int System.Collections.Generic.List`1<T_INT>:RemoveAll (System.Predicate`1<T_INT>)",
      "code_size" : "431",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "RemoveAt",
      "signature" : "void System.Collections.Generic.List`1<T_INT>:RemoveAt (int)",
      "code_size" : "186",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "RemoveRange",
      "signature" : "void System.Collections.Generic.List`1<T_INT>:RemoveRange (int,int)",
      "code_size" : "244",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Reverse",
      "signature" : "void System.Collections.Generic.List`1<T_INT>:Reverse ()",
      "code_size" : "95",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Reverse",
      "signature" : "void System.Collections.Generic.List`1<T_INT>:Reverse (int,int)",
      "code_size" : "131",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Sort",
      "signature" : "void System.Collections.Generic.List`1<T_INT>:Sort ()",
      "code_size" : "97",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Sort",
      "signature" : "void System.Collections.Generic.List`1<T_INT>:Sort (System.Collections.Generic.IComparer`1<T_INT>)",
      "code_size" : "105",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Sort",
      "signature" : "void System.Collections.Generic.List`1<T_INT>:Sort (int,int,System.Collections.Generic.IComparer`1<T_INT>)",
      "code_size" : "182",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Sort",
      "signature" : "void System.Collections.Generic.List`1<T_INT>:Sort (System.Comparison`1<T_INT>)",
      "code_size" : "208",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "ToArray",
      "signature" : "T_INT[] System.Collections.Generic.List`1<T_INT>:ToArray ()",
      "code_size" : "88",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "TrimExcess",
      "signature" : "void System.Collections.Generic.List`1<T_INT>:TrimExcess ()",
      "code_size" : "120",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "TrueForAll",
      "signature" : "bool System.Collections.Generic.List`1<T_INT>:TrueForAll (System.Predicate`1<T_INT>)",
      "code_size" : "143",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Synchronized",
      "signature" : "System.Collections.Generic.IList`1<T_INT> System.Collections.Generic.List`1<T_INT>:Synchronized (System.Collections.Generic.List`1<T_INT>)",
      "code_size" : "79",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".cctor",
      "signature" : "void System.Collections.Generic.List`1<T_INT>:.cctor ()",
      "code_size" : "54",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "invoke_void_T",
      "signature" : "(wrapper delegate-invoke) void System.Action`1<int>:invoke_void_T (int)",
      "code_size" : "252",
      "class" : "Action`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_bool_T",
      "signature" : "(wrapper delegate-invoke) bool System.Predicate`1<Mono.CSharp.Statement>:invoke_bool_T (Mono.CSharp.Statement)",
      "code_size" : "258",
      "class" : "Predicate`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_void_T",
      "signature" : "(wrapper delegate-invoke) void System.Action`1<Mono.CSharp.Statement>:invoke_void_T (Mono.CSharp.Statement)",
      "code_size" : "252",
      "class" : "Action`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_int_T_T",
      "signature" : "(wrapper delegate-invoke) int System.Comparison`1<Mono.CSharp.Statement>:invoke_int_T_T (Mono.CSharp.Statement,Mono.CSharp.Statement)",
      "code_size" : "282",
      "class" : "Comparison`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_bool_T",
      "signature" : "(wrapper delegate-invoke) bool System.Predicate`1<Mono.CSharp.LabeledStatement>:invoke_bool_T (Mono.CSharp.LabeledStatement)",
      "code_size" : "258",
      "class" : "Predicate`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_void_T",
      "signature" : "(wrapper delegate-invoke) void System.Action`1<Mono.CSharp.LabeledStatement>:invoke_void_T (Mono.CSharp.LabeledStatement)",
      "code_size" : "252",
      "class" : "Action`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_int_T_T",
      "signature" : "(wrapper delegate-invoke) int System.Comparison`1<Mono.CSharp.LabeledStatement>:invoke_int_T_T (Mono.CSharp.LabeledStatement,Mono.CSharp.LabeledStatement)",
      "code_size" : "282",
      "class" : "Comparison`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_bool_T",
      "signature" : "(wrapper delegate-invoke) bool System.Predicate`1<Mono.CSharp.INamedBlockVariable>:invoke_bool_T (Mono.CSharp.INamedBlockVariable)",
      "code_size" : "258",
      "class" : "Predicate`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_void_T",
      "signature" : "(wrapper delegate-invoke) void System.Action`1<Mono.CSharp.INamedBlockVariable>:invoke_void_T (Mono.CSharp.INamedBlockVariable)",
      "code_size" : "252",
      "class" : "Action`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_int_T_T",
      "signature" : "(wrapper delegate-invoke) int System.Comparison`1<Mono.CSharp.INamedBlockVariable>:invoke_int_T_T (Mono.CSharp.INamedBlockVariable,Mono.CSharp.INamedBlockVariable)",
      "code_size" : "282",
      "class" : "Comparison`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_bool_T",
      "signature" : "(wrapper delegate-invoke) bool System.Predicate`1<Mono.CSharp.LocalVariable>:invoke_bool_T (Mono.CSharp.LocalVariable)",
      "code_size" : "258",
      "class" : "Predicate`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1<T_LONG>:.ctor ()",
      "code_size" : "90",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1<T_LONG>:.ctor (int)",
      "code_size" : "192",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1<T_LONG>:.ctor (System.Collections.Generic.IEnumerable`1<T_LONG>)",
      "code_size" : "606",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Capacity",
      "signature" : "int System.Collections.Generic.List`1<T_LONG>:get_Capacity ()",
      "code_size" : "24",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Capacity",
      "signature" : "void System.Collections.Generic.List`1<T_LONG>:set_Capacity (int)",
      "code_size" : "260",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Count",
      "signature" : "int System.Collections.Generic.List`1<T_LONG>:get_Count ()",
      "code_size" : "20",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IList.get_IsFixedSize",
      "signature" : "bool System.Collections.Generic.List`1<T_LONG>:System.Collections.IList.get_IsFixedSize ()",
      "code_size" : "15",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<T>.get_IsReadOnly",
      "signature" : "bool System.Collections.Generic.List`1<T_LONG>:System.Collections.Generic.ICollection<T>.get_IsReadOnly ()",
      "code_size" : "15",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IList.get_IsReadOnly",
      "signature" : "bool System.Collections.Generic.List`1<T_LONG>:System.Collections.IList.get_IsReadOnly ()",
      "code_size" : "15",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.ICollection.get_IsSynchronized",
      "signature" : "bool System.Collections.Generic.List`1<T_LONG>:System.Collections.ICollection.get_IsSynchronized ()",
      "code_size" : "15",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.ICollection.get_SyncRoot",
      "signature" : "object System.Collections.Generic.List`1<T_LONG>:System.Collections.ICollection.get_SyncRoot ()",
      "code_size" : "143",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Item",
      "signature" : "T_LONG System.Collections.Generic.List`1<T_LONG>:get_Item (int)",
      "code_size" : "60",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Item",
      "signature" : "void System.Collections.Generic.List`1<T_LONG>:set_Item (int,T_LONG)",
      "code_size" : "107",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsCompatibleObject",
      "signature" : "bool System.Collections.Generic.List`1<T_LONG>:IsCompatibleObject (object)",
      "code_size" : "137",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IList.get_Item",
      "signature" : "object System.Collections.Generic.List`1<T_LONG>:System.Collections.IList.get_Item (int)",
      "code_size" : "92",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IList.set_Item",
      "signature" : "void System.Collections.Generic.List`1<T_LONG>:System.Collections.IList.set_Item (int,object)",
      "code_size" : "264",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Add",
      "signature" : "void System.Collections.Generic.List`1<T_LONG>:Add (T_LONG)",
      "code_size" : "182",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IList.Add",
      "signature" : "int System.Collections.Generic.List`1<T_LONG>:System.Collections.IList.Add (object)",
      "code_size" : "287",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddRange",
      "signature" : "void System.Collections.Generic.List`1<T_LONG>:AddRange (System.Collections.Generic.IEnumerable`1<T_LONG>)",
      "code_size" : "70",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "AsReadOnly",
      "signature" : "System.Collections.ObjectModel.ReadOnlyCollection`1<T_LONG> System.Collections.Generic.List`1<T_LONG>:AsReadOnly ()",
      "code_size" : "84",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "BinarySearch",
      "signature" : "int System.Collections.Generic.List`1<T_LONG>:BinarySearch (int,int,T_LONG,System.Collections.Generic.IComparer`1<T_LONG>)",
      "code_size" : "179",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "BinarySearch",
      "signature" : "int System.Collections.Generic.List`1<T_LONG>:BinarySearch (T_LONG)",
      "code_size" : "108",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "BinarySearch",
      "signature" : "int System.Collections.Generic.List`1<T_LONG>:BinarySearch (T_LONG,System.Collections.Generic.IComparer`1<T_LONG>)",
      "code_size" : "115",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Clear",
      "signature" : "void System.Collections.Generic.List`1<T_LONG>:Clear ()",
      "code_size" : "71",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Contains",
      "signature" : "bool System.Collections.Generic.List`1<T_LONG>:Contains (T_LONG)",
      "code_size" : "275",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IList.Contains",
      "signature" : "bool System.Collections.Generic.List`1<T_LONG>:System.Collections.IList.Contains (object)",
      "code_size" : "216",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "CopyTo",
      "signature" : "void System.Collections.Generic.List`1<T_LONG>:CopyTo (T_LONG[])",
      "code_size" : "55",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.ICollection.CopyTo",
      "signature" : "void System.Collections.Generic.List`1<T_LONG>:System.Collections.ICollection.CopyTo (System.Array,int)",
      "code_size" : "134",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "CopyTo",
      "signature" : "void System.Collections.Generic.List`1<T_LONG>:CopyTo (int,T_LONG[],int,int)",
      "code_size" : "93",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "CopyTo",
      "signature" : "void System.Collections.Generic.List`1<T_LONG>:CopyTo (T_LONG[],int)",
      "code_size" : "55",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "EnsureCapacity",
      "signature" : "void System.Collections.Generic.List`1<T_LONG>:EnsureCapacity (int)",
      "code_size" : "168",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Exists",
      "signature" : "bool System.Collections.Generic.List`1<T_LONG>:Exists (System.Predicate`1<T_LONG>)",
      "code_size" : "74",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Find",
      "signature" : "T_LONG System.Collections.Generic.List`1<T_LONG>:Find (System.Predicate`1<T_LONG>)",
      "code_size" : "178",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "FindAll",
      "signature" : "System.Collections.Generic.List`1<T_LONG> System.Collections.Generic.List`1<T_LONG>:FindAll (System.Predicate`1<T_LONG>)",
      "code_size" : "286",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "FindIndex",
      "signature" : "int System.Collections.Generic.List`1<T_LONG>:FindIndex (System.Predicate`1<T_LONG>)",
      "code_size" : "72",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "FindIndex",
      "signature" : "int System.Collections.Generic.List`1<T_LONG>:FindIndex (int,System.Predicate`1<T_LONG>)",
      "code_size" : "84",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "FindIndex",
      "signature" : "int System.Collections.Generic.List`1<T_LONG>:FindIndex (int,int,System.Predicate`1<T_LONG>)",
      "code_size" : "238",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "FindLast",
      "signature" : "T_LONG System.Collections.Generic.List`1<T_LONG>:FindLast (System.Predicate`1<T_LONG>)",
      "code_size" : "177",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "FindLastIndex",
      "signature" : "int System.Collections.Generic.List`1<T_LONG>:FindLastIndex (System.Predicate`1<T_LONG>)",
      "code_size" : "90",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "FindLastIndex",
      "signature" : "int System.Collections.Generic.List`1<T_LONG>:FindLastIndex (int,System.Predicate`1<T_LONG>)",
      "code_size" : "78",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "FindLastIndex",
      "signature" : "int System.Collections.Generic.List`1<T_LONG>:FindLastIndex (int,int,System.Predicate`1<T_LONG>)",
      "code_size" : "270",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "ForEach",
      "signature" : "void System.Collections.Generic.List`1<T_LONG>:ForEach (System.Action`1<T_LONG>)",
      "code_size" : "211",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetEnumerator",
      "signature" : "System.Collections.Generic.List`1/Enumerator<T_LONG> System.Collections.Generic.List`1<T_LONG>:GetEnumerator ()",
      "code_size" : "198",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.IEnumerable<T>.GetEnumerator",
      "signature" : "System.Collections.Generic.IEnumerator`1<T_LONG> System.Collections.Generic.List`1<T_LONG>:System.Collections.Generic.IEnumerable<T>.GetEnumerator ()",
      "code_size" : "231",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerable.GetEnumerator",
      "signature" : "System.Collections.IEnumerator System.Collections.Generic.List`1<T_LONG>:System.Collections.IEnumerable.GetEnumerator ()",
      "code_size" : "231",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetRange",
      "signature" : "System.Collections.Generic.List`1<T_LONG> System.Collections.Generic.List`1<T_LONG>:GetRange (int,int)",
      "code_size" : "225",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "IndexOf",
      "signature" : "int System.Collections.Generic.List`1<T_LONG>:IndexOf (T_LONG)",
      "code_size" : "96",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IList.IndexOf",
      "signature" : "int System.Collections.Generic.List`1<T_LONG>:System.Collections.IList.IndexOf (object)",
      "code_size" : "224",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "IndexOf",
      "signature" : "int System.Collections.Generic.List`1<T_LONG>:IndexOf (T_LONG,int)",
      "code_size" : "137",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "IndexOf",
      "signature" : "int System.Collections.Generic.List`1<T_LONG>:IndexOf (T_LONG,int,int)",
      "code_size" : "165",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Insert",
      "signature" : "void System.Collections.Generic.List`1<T_LONG>:Insert (int,T_LONG)",
      "code_size" : "272",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IList.Insert",
      "signature" : "void System.Collections.Generic.List`1<T_LONG>:System.Collections.IList.Insert (int,object)",
      "code_size" : "264",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "InsertRange",
      "signature" : "void System.Collections.Generic.List`1<T_LONG>:InsertRange (int,System.Collections.Generic.IEnumerable`1<T_LONG>)",
      "code_size" : "705",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "LastIndexOf",
      "signature" : "int System.Collections.Generic.List`1<T_LONG>:LastIndexOf (T_LONG)",
      "code_size" : "117",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "LastIndexOf",
      "signature" : "int System.Collections.Generic.List`1<T_LONG>:LastIndexOf (T_LONG,int)",
      "code_size" : "109",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "LastIndexOf",
      "signature" : "int System.Collections.Generic.List`1<T_LONG>:LastIndexOf (T_LONG,int,int)",
      "code_size" : "309",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Remove",
      "signature" : "bool System.Collections.Generic.List`1<T_LONG>:Remove (T_LONG)",
      "code_size" : "115",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IList.Remove",
      "signature" : "void System.Collections.Generic.List`1<T_LONG>:System.Collections.IList.Remove (object)",
      "code_size" : "209",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "RemoveAll",
      "signature" : "int System.Collections.Generic.List`1<T_LONG>:RemoveAll (System.Predicate`1<T_LONG>)",
      "code_size" : "436",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "RemoveAt",
      "signature" : "void System.Collections.Generic.List`1<T_LONG>:RemoveAt (int)",
      "code_size" : "185",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "RemoveRange",
      "signature" : "void System.Collections.Generic.List`1<T_LONG>:RemoveRange (int,int)",
      "code_size" : "244",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Reverse",
      "signature" : "void System.Collections.Generic.List`1<T_LONG>:Reverse ()",
      "code_size" : "95",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Reverse",
      "signature" : "void System.Collections.Generic.List`1<T_LONG>:Reverse (int,int)",
      "code_size" : "131",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Sort",
      "signature" : "void System.Collections.Generic.List`1<T_LONG>:Sort ()",
      "code_size" : "97",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Sort",
      "signature" : "void System.Collections.Generic.List`1<T_LONG>:Sort (System.Collections.Generic.IComparer`1<T_LONG>)",
      "code_size" : "105",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Sort",
      "signature" : "void System.Collections.Generic.List`1<T_LONG>:Sort (int,int,System.Collections.Generic.IComparer`1<T_LONG>)",
      "code_size" : "182",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Sort",
      "signature" : "void System.Collections.Generic.List`1<T_LONG>:Sort (System.Comparison`1<T_LONG>)",
      "code_size" : "208",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "ToArray",
      "signature" : "T_LONG[] System.Collections.Generic.List`1<T_LONG>:ToArray ()",
      "code_size" : "88",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "TrimExcess",
      "signature" : "void System.Collections.Generic.List`1<T_LONG>:TrimExcess ()",
      "code_size" : "120",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "TrueForAll",
      "signature" : "bool System.Collections.Generic.List`1<T_LONG>:TrueForAll (System.Predicate`1<T_LONG>)",
      "code_size" : "143",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Synchronized",
      "signature" : "System.Collections.Generic.IList`1<T_LONG> System.Collections.Generic.List`1<T_LONG>:Synchronized (System.Collections.Generic.List`1<T_LONG>)",
      "code_size" : "79",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".cctor",
      "signature" : "void System.Collections.Generic.List`1<T_LONG>:.cctor ()",
      "code_size" : "54",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "invoke_bool_T",
      "signature" : "(wrapper delegate-invoke) bool System.Predicate`1<Mono.CSharp.SwitchLabel>:invoke_bool_T (Mono.CSharp.SwitchLabel)",
      "code_size" : "258",
      "class" : "Predicate`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_void_T",
      "signature" : "(wrapper delegate-invoke) void System.Action`1<Mono.CSharp.SwitchLabel>:invoke_void_T (Mono.CSharp.SwitchLabel)",
      "code_size" : "252",
      "class" : "Action`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_int_T_T",
      "signature" : "(wrapper delegate-invoke) int System.Comparison`1<Mono.CSharp.SwitchLabel>:invoke_int_T_T (Mono.CSharp.SwitchLabel,Mono.CSharp.SwitchLabel)",
      "code_size" : "282",
      "class" : "Comparison`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_LONG, TValue_REF>:.ctor ()",
      "code_size" : "47",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_LONG, TValue_REF>:.ctor (int)",
      "code_size" : "55",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_LONG, TValue_REF>:.ctor (System.Collections.Generic.IEqualityComparer`1<TKey_LONG>)",
      "code_size" : "55",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_LONG, TValue_REF>:.ctor (int,System.Collections.Generic.IEqualityComparer`1<TKey_LONG>)",
      "code_size" : "172",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_LONG, TValue_REF>:.ctor (System.Collections.Generic.IDictionary`2<TKey_LONG, TValue_REF>)",
      "code_size" : "55",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_LONG, TValue_REF>:.ctor (System.Collections.Generic.IDictionary`2<TKey_LONG, TValue_REF>,System.Collections.Generic.IEqualityComparer`1<TKey_LONG>)",
      "code_size" : "495",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_LONG, TValue_REF>:.ctor (System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)",
      "code_size" : "43",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Comparer",
      "signature" : "System.Collections.Generic.IEqualityComparer`1<TKey_LONG> System.Collections.Generic.Dictionary`2<TKey_LONG, TValue_REF>:get_Comparer ()",
      "code_size" : "20",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Count",
      "signature" : "int System.Collections.Generic.Dictionary`2<TKey_LONG, TValue_REF>:get_Count ()",
      "code_size" : "30",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Keys",
      "signature" : "System.Collections.Generic.Dictionary`2/KeyCollection<TKey_LONG, TValue_REF> System.Collections.Generic.Dictionary`2<TKey_LONG, TValue_REF>:get_Keys ()",
      "code_size" : "146",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.IDictionary<TKey,TValue>.get_Keys",
      "signature" : "System.Collections.Generic.ICollection`1<TKey_LONG> System.Collections.Generic.Dictionary`2<TKey_LONG, TValue_REF>:System.Collections.Generic.IDictionary<TKey,TValue>.get_Keys ()",
      "code_size" : "146",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.get_Keys",
      "signature" : "System.Collections.Generic.IEnumerable`1<TKey_LONG> System.Collections.Generic.Dictionary`2<TKey_LONG, TValue_REF>:System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.get_Keys ()",
      "code_size" : "146",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Values",
      "signature" : "System.Collections.Generic.Dictionary`2/ValueCollection<TKey_LONG, TValue_REF> System.Collections.Generic.Dictionary`2<TKey_LONG, TValue_REF>:get_Values ()",
      "code_size" : "146",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.IDictionary<TKey,TValue>.get_Values",
      "signature" : "System.Collections.Generic.ICollection`1<TValue_REF> System.Collections.Generic.Dictionary`2<TKey_LONG, TValue_REF>:System.Collections.Generic.IDictionary<TKey,TValue>.get_Values ()",
      "code_size" : "146",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.get_Values",
      "signature" : "System.Collections.Generic.IEnumerable`1<TValue_REF> System.Collections.Generic.Dictionary`2<TKey_LONG, TValue_REF>:System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.get_Values ()",
      "code_size" : "146",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Item",
      "signature" : "TValue_REF System.Collections.Generic.Dictionary`2<TKey_LONG, TValue_REF>:get_Item (TKey_LONG)",
      "code_size" : "130",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Item",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_LONG, TValue_REF>:set_Item (TKey_LONG,TValue_REF)",
      "code_size" : "65",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Add",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_LONG, TValue_REF>:Add (TKey_LONG,TValue_REF)",
      "code_size" : "68",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_LONG, TValue_REF>:System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add (System.Collections.Generic.KeyValuePair`2<TKey_LONG, TValue_REF>)",
      "code_size" : "188",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains",
      "signature" : "bool System.Collections.Generic.Dictionary`2<TKey_LONG, TValue_REF>:System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains (System.Collections.Generic.KeyValuePair`2<TKey_LONG, TValue_REF>)",
      "code_size" : "327",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove",
      "signature" : "bool System.Collections.Generic.Dictionary`2<TKey_LONG, TValue_REF>:System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove (System.Collections.Generic.KeyValuePair`2<TKey_LONG, TValue_REF>)",
      "code_size" : "439",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Clear",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_LONG, TValue_REF>:Clear ()",
      "code_size" : "192",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "ContainsKey",
      "signature" : "bool System.Collections.Generic.Dictionary`2<TKey_LONG, TValue_REF>:ContainsKey (TKey_LONG)",
      "code_size" : "73",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "ContainsValue",
      "signature" : "bool System.Collections.Generic.Dictionary`2<TKey_LONG, TValue_REF>:ContainsValue (TValue_REF)",
      "code_size" : "379",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "CopyTo",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_LONG, TValue_REF>:CopyTo (System.Collections.Generic.KeyValuePair`2<TKey_LONG, TValue_REF>[],int)",
      "code_size" : "552",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetEnumerator",
      "signature" : "System.Collections.Generic.Dictionary`2/Enumerator<TKey_LONG, TValue_REF> System.Collections.Generic.Dictionary`2<TKey_LONG, TValue_REF>:GetEnumerator ()",
      "code_size" : "309",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator",
      "signature" : "System.Collections.Generic.IEnumerator`1<System.Collections.Generic.KeyValuePair`2<TKey_LONG, TValue_REF>> System.Collections.Generic.Dictionary`2<TKey_LONG, TValue_REF>:System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator ()",
      "code_size" : "342",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetObjectData",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_LONG, TValue_REF>:GetObjectData (System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)",
      "code_size" : "394",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "FindEntry",
      "signature" : "int System.Collections.Generic.Dictionary`2<TKey_LONG, TValue_REF>:FindEntry (TKey_LONG)",
      "code_size" : "436",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Initialize",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_LONG, TValue_REF>:Initialize (int)",
      "code_size" : "247",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Insert",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_LONG, TValue_REF>:Insert (TKey_LONG,TValue_REF,bool)",
      "code_size" : "1044",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "OnDeserialization",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_LONG, TValue_REF>:OnDeserialization (object)",
      "code_size" : "1053",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Resize",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_LONG, TValue_REF>:Resize ()",
      "code_size" : "77",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Resize",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_LONG, TValue_REF>:Resize (int,bool)",
      "code_size" : "691",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Remove",
      "signature" : "bool System.Collections.Generic.Dictionary`2<TKey_LONG, TValue_REF>:Remove (TKey_LONG)",
      "code_size" : "879",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "TryGetValue",
      "signature" : "bool System.Collections.Generic.Dictionary`2<TKey_LONG, TValue_REF>:TryGetValue (TKey_LONG,TValue_REF&)",
      "code_size" : "190",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetValueOrDefault",
      "signature" : "TValue_REF System.Collections.Generic.Dictionary`2<TKey_LONG, TValue_REF>:GetValueOrDefault (TKey_LONG)",
      "code_size" : "125",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.get_IsReadOnly",
      "signature" : "bool System.Collections.Generic.Dictionary`2<TKey_LONG, TValue_REF>:System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.get_IsReadOnly ()",
      "code_size" : "15",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_LONG, TValue_REF>:System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo (System.Collections.Generic.KeyValuePair`2<TKey_LONG, TValue_REF>[],int)",
      "code_size" : "63",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.ICollection.CopyTo",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_LONG, TValue_REF>:System.Collections.ICollection.CopyTo (System.Array,int)",
      "code_size" : "1413",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerable.GetEnumerator",
      "signature" : "System.Collections.IEnumerator System.Collections.Generic.Dictionary`2<TKey_LONG, TValue_REF>:System.Collections.IEnumerable.GetEnumerator ()",
      "code_size" : "342",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.ICollection.get_IsSynchronized",
      "signature" : "bool System.Collections.Generic.Dictionary`2<TKey_LONG, TValue_REF>:System.Collections.ICollection.get_IsSynchronized ()",
      "code_size" : "15",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.ICollection.get_SyncRoot",
      "signature" : "object System.Collections.Generic.Dictionary`2<TKey_LONG, TValue_REF>:System.Collections.ICollection.get_SyncRoot ()",
      "code_size" : "143",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IDictionary.get_IsFixedSize",
      "signature" : "bool System.Collections.Generic.Dictionary`2<TKey_LONG, TValue_REF>:System.Collections.IDictionary.get_IsFixedSize ()",
      "code_size" : "15",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IDictionary.get_IsReadOnly",
      "signature" : "bool System.Collections.Generic.Dictionary`2<TKey_LONG, TValue_REF>:System.Collections.IDictionary.get_IsReadOnly ()",
      "code_size" : "15",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IDictionary.get_Keys",
      "signature" : "System.Collections.ICollection System.Collections.Generic.Dictionary`2<TKey_LONG, TValue_REF>:System.Collections.IDictionary.get_Keys ()",
      "code_size" : "43",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IDictionary.get_Values",
      "signature" : "System.Collections.ICollection System.Collections.Generic.Dictionary`2<TKey_LONG, TValue_REF>:System.Collections.IDictionary.get_Values ()",
      "code_size" : "43",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IDictionary.get_Item",
      "signature" : "object System.Collections.Generic.Dictionary`2<TKey_LONG, TValue_REF>:System.Collections.IDictionary.get_Item (object)",
      "code_size" : "274",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IDictionary.set_Item",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_LONG, TValue_REF>:System.Collections.IDictionary.set_Item (object,object)",
      "code_size" : "394",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "IsCompatibleKey",
      "signature" : "bool System.Collections.Generic.Dictionary`2<TKey_LONG, TValue_REF>:IsCompatibleKey (object)",
      "code_size" : "73",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IDictionary.Add",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_LONG, TValue_REF>:System.Collections.IDictionary.Add (object,object)",
      "code_size" : "394",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IDictionary.Contains",
      "signature" : "bool System.Collections.Generic.Dictionary`2<TKey_LONG, TValue_REF>:System.Collections.IDictionary.Contains (object)",
      "code_size" : "216",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IDictionary.GetEnumerator",
      "signature" : "System.Collections.IDictionaryEnumerator System.Collections.Generic.Dictionary`2<TKey_LONG, TValue_REF>:System.Collections.IDictionary.GetEnumerator ()",
      "code_size" : "342",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IDictionary.Remove",
      "signature" : "void System.Collections.Generic.Dictionary`2<TKey_LONG, TValue_REF>:System.Collections.IDictionary.Remove (object)",
      "code_size" : "209",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.Dictionary`2/KeyCollection<TKey_LONG, TValue_REF>:.ctor (System.Collections.Generic.Dictionary`2<TKey_LONG, TValue_REF>)",
      "code_size" : "63",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetEnumerator",
      "signature" : "System.Collections.Generic.Dictionary`2/KeyCollection/Enumerator<TKey_LONG, TValue_REF> System.Collections.Generic.Dictionary`2/KeyCollection<TKey_LONG, TValue_REF>:GetEnumerator ()",
      "code_size" : "202",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "CopyTo",
      "signature" : "void System.Collections.Generic.Dictionary`2/KeyCollection<TKey_LONG, TValue_REF>:CopyTo (TKey_LONG[],int)",
      "code_size" : "355",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Count",
      "signature" : "int System.Collections.Generic.Dictionary`2/KeyCollection<TKey_LONG, TValue_REF>:get_Count ()",
      "code_size" : "47",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<TKey>.get_IsReadOnly",
      "signature" : "bool System.Collections.Generic.Dictionary`2/KeyCollection<TKey_LONG, TValue_REF>:System.Collections.Generic.ICollection<TKey>.get_IsReadOnly ()",
      "code_size" : "18",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<TKey>.Add",
      "signature" : "void System.Collections.Generic.Dictionary`2/KeyCollection<TKey_LONG, TValue_REF>:System.Collections.Generic.ICollection<TKey>.Add (TKey_LONG)",
      "code_size" : "23",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<TKey>.Clear",
      "signature" : "void System.Collections.Generic.Dictionary`2/KeyCollection<TKey_LONG, TValue_REF>:System.Collections.Generic.ICollection<TKey>.Clear ()",
      "code_size" : "23",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<TKey>.Contains",
      "signature" : "bool System.Collections.Generic.Dictionary`2/KeyCollection<TKey_LONG, TValue_REF>:System.Collections.Generic.ICollection<TKey>.Contains (TKey_LONG)",
      "code_size" : "57",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<TKey>.Remove",
      "signature" : "bool System.Collections.Generic.Dictionary`2/KeyCollection<TKey_LONG, TValue_REF>:System.Collections.Generic.ICollection<TKey>.Remove (TKey_LONG)",
      "code_size" : "25",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.IEnumerable<TKey>.GetEnumerator",
      "signature" : "System.Collections.Generic.IEnumerator`1<TKey_LONG> System.Collections.Generic.Dictionary`2/KeyCollection<TKey_LONG, TValue_REF>:System.Collections.Generic.IEnumerable<TKey>.GetEnumerator ()",
      "code_size" : "235",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerable.GetEnumerator",
      "signature" : "System.Collections.IEnumerator System.Collections.Generic.Dictionary`2/KeyCollection<TKey_LONG, TValue_REF>:System.Collections.IEnumerable.GetEnumerator ()",
      "code_size" : "235",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.ICollection.CopyTo",
      "signature" : "void System.Collections.Generic.Dictionary`2/KeyCollection<TKey_LONG, TValue_REF>:System.Collections.ICollection.CopyTo (System.Array,int)",
      "code_size" : "639",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.ICollection.get_IsSynchronized",
      "signature" : "bool System.Collections.Generic.Dictionary`2/KeyCollection<TKey_LONG, TValue_REF>:System.Collections.ICollection.get_IsSynchronized ()",
      "code_size" : "15",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.ICollection.get_SyncRoot",
      "signature" : "object System.Collections.Generic.Dictionary`2/KeyCollection<TKey_LONG, TValue_REF>:System.Collections.ICollection.get_SyncRoot ()",
      "code_size" : "36",
      "class" : "KeyCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.Dictionary`2/ValueCollection<TKey_LONG, TValue_REF>:.ctor (System.Collections.Generic.Dictionary`2<TKey_LONG, TValue_REF>)",
      "code_size" : "63",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetEnumerator",
      "signature" : "System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator<TKey_LONG, TValue_REF> System.Collections.Generic.Dictionary`2/ValueCollection<TKey_LONG, TValue_REF>:GetEnumerator ()",
      "code_size" : "217",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "CopyTo",
      "signature" : "void System.Collections.Generic.Dictionary`2/ValueCollection<TKey_LONG, TValue_REF>:CopyTo (TValue_REF[],int)",
      "code_size" : "339",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Count",
      "signature" : "int System.Collections.Generic.Dictionary`2/ValueCollection<TKey_LONG, TValue_REF>:get_Count ()",
      "code_size" : "47",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<TValue>.get_IsReadOnly",
      "signature" : "bool System.Collections.Generic.Dictionary`2/ValueCollection<TKey_LONG, TValue_REF>:System.Collections.Generic.ICollection<TValue>.get_IsReadOnly ()",
      "code_size" : "18",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<TValue>.Add",
      "signature" : "void System.Collections.Generic.Dictionary`2/ValueCollection<TKey_LONG, TValue_REF>:System.Collections.Generic.ICollection<TValue>.Add (TValue_REF)",
      "code_size" : "23",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<TValue>.Remove",
      "signature" : "bool System.Collections.Generic.Dictionary`2/ValueCollection<TKey_LONG, TValue_REF>:System.Collections.Generic.ICollection<TValue>.Remove (TValue_REF)",
      "code_size" : "25",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<TValue>.Clear",
      "signature" : "void System.Collections.Generic.Dictionary`2/ValueCollection<TKey_LONG, TValue_REF>:System.Collections.Generic.ICollection<TValue>.Clear ()",
      "code_size" : "23",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.ICollection<TValue>.Contains",
      "signature" : "bool System.Collections.Generic.Dictionary`2/ValueCollection<TKey_LONG, TValue_REF>:System.Collections.Generic.ICollection<TValue>.Contains (TValue_REF)",
      "code_size" : "57",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.Generic.IEnumerable<TValue>.GetEnumerator",
      "signature" : "System.Collections.Generic.IEnumerator`1<TValue_REF> System.Collections.Generic.Dictionary`2/ValueCollection<TKey_LONG, TValue_REF>:System.Collections.Generic.IEnumerable<TValue>.GetEnumerator ()",
      "code_size" : "250",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerable.GetEnumerator",
      "signature" : "System.Collections.IEnumerator System.Collections.Generic.Dictionary`2/ValueCollection<TKey_LONG, TValue_REF>:System.Collections.IEnumerable.GetEnumerator ()",
      "code_size" : "250",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.ICollection.CopyTo",
      "signature" : "void System.Collections.Generic.Dictionary`2/ValueCollection<TKey_LONG, TValue_REF>:System.Collections.ICollection.CopyTo (System.Array,int)",
      "code_size" : "587",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.ICollection.get_IsSynchronized",
      "signature" : "bool System.Collections.Generic.Dictionary`2/ValueCollection<TKey_LONG, TValue_REF>:System.Collections.ICollection.get_IsSynchronized ()",
      "code_size" : "15",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.ICollection.get_SyncRoot",
      "signature" : "object System.Collections.Generic.Dictionary`2/ValueCollection<TKey_LONG, TValue_REF>:System.Collections.ICollection.get_SyncRoot ()",
      "code_size" : "36",
      "class" : "ValueCollection",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "invoke_bool_T",
      "signature" : "(wrapper delegate-invoke) bool System.Predicate`1<Mono.CSharp.Switch/LabelsRange>:invoke_bool_T (Mono.CSharp.Switch/LabelsRange)",
      "code_size" : "258",
      "class" : "Predicate`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_void_T",
      "signature" : "(wrapper delegate-invoke) void System.Action`1<Mono.CSharp.Switch/LabelsRange>:invoke_void_T (Mono.CSharp.Switch/LabelsRange)",
      "code_size" : "252",
      "class" : "Action`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_int_T_T",
      "signature" : "(wrapper delegate-invoke) int System.Comparison`1<Mono.CSharp.Switch/LabelsRange>:invoke_int_T_T (Mono.CSharp.Switch/LabelsRange,Mono.CSharp.Switch/LabelsRange)",
      "code_size" : "282",
      "class" : "Comparison`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1/Enumerator<T_LONG>:.ctor (System.Collections.Generic.List`1<T_LONG>)",
      "code_size" : "71",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Collections.Generic.List`1/Enumerator<T_LONG>:Dispose ()",
      "code_size" : "18",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "MoveNext",
      "signature" : "bool System.Collections.Generic.List`1/Enumerator<T_LONG>:MoveNext ()",
      "code_size" : "176",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "MoveNextRare",
      "signature" : "bool System.Collections.Generic.List`1/Enumerator<T_LONG>:MoveNextRare ()",
      "code_size" : "69",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Current",
      "signature" : "T_LONG System.Collections.Generic.List`1/Enumerator<T_LONG>:get_Current ()",
      "code_size" : "25",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerator.get_Current",
      "signature" : "object System.Collections.Generic.List`1/Enumerator<T_LONG>:System.Collections.IEnumerator.get_Current ()",
      "code_size" : "136",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerator.Reset",
      "signature" : "void System.Collections.Generic.List`1/Enumerator<T_LONG>:System.Collections.IEnumerator.Reset ()",
      "code_size" : "64",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "invoke_bool_T",
      "signature" : "(wrapper delegate-invoke) bool System.Predicate`1<System.Tuple`2<Mono.CSharp.GotoCase, Mono.CSharp.Constant>>:invoke_bool_T (System.Tuple`2<Mono.CSharp.GotoCase, Mono.CSharp.Constant>)",
      "code_size" : "258",
      "class" : "Predicate`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_void_T",
      "signature" : "(wrapper delegate-invoke) void System.Action`1<System.Tuple`2<Mono.CSharp.GotoCase, Mono.CSharp.Constant>>:invoke_void_T (System.Tuple`2<Mono.CSharp.GotoCase, Mono.CSharp.Constant>)",
      "code_size" : "252",
      "class" : "Action`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_int_T_T",
      "signature" : "(wrapper delegate-invoke) int System.Comparison`1<System.Tuple`2<Mono.CSharp.GotoCase, Mono.CSharp.Constant>>:invoke_int_T_T (System.Tuple`2<Mono.CSharp.GotoCase, Mono.CSharp.Constant>,System.Tuple`2<Mono.CSharp.GotoCase, Mono.CSharp.Constant>)",
      "code_size" : "282",
      "class" : "Comparison`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_bool_T",
      "signature" : "(wrapper delegate-invoke) bool System.Predicate`1<Mono.CSharp.TryFinally>:invoke_bool_T (Mono.CSharp.TryFinally)",
      "code_size" : "258",
      "class" : "Predicate`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_void_T",
      "signature" : "(wrapper delegate-invoke) void System.Action`1<Mono.CSharp.TryFinally>:invoke_void_T (Mono.CSharp.TryFinally)",
      "code_size" : "252",
      "class" : "Action`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_int_T_T",
      "signature" : "(wrapper delegate-invoke) int System.Comparison`1<Mono.CSharp.TryFinally>:invoke_int_T_T (Mono.CSharp.TryFinally,Mono.CSharp.TryFinally)",
      "code_size" : "282",
      "class" : "Comparison`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Array/InternalEnumerator`1<System.Reflection.Emit.Label>:.ctor (System.Array)",
      "code_size" : "49",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Array/InternalEnumerator`1<System.Reflection.Emit.Label>:Dispose ()",
      "code_size" : "23",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "MoveNext",
      "signature" : "bool System.Array/InternalEnumerator`1<System.Reflection.Emit.Label>:MoveNext ()",
      "code_size" : "95",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Current",
      "signature" : "System.Reflection.Emit.Label System.Array/InternalEnumerator`1<System.Reflection.Emit.Label>:get_Current ()",
      "code_size" : "149",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerator.Reset",
      "signature" : "void System.Array/InternalEnumerator`1<System.Reflection.Emit.Label>:System.Collections.IEnumerator.Reset ()",
      "code_size" : "23",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerator.get_Current",
      "signature" : "object System.Array/InternalEnumerator`1<System.Reflection.Emit.Label>:System.Collections.IEnumerator.get_Current ()",
      "code_size" : "64",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__IEnumerable_GetEnumerator",
      "signature" : "System.Collections.Generic.IEnumerator`1<System.Reflection.Emit.Label> System.Array:InternalArray__IEnumerable_GetEnumerator<System.Reflection.Emit.Label> ()",
      "code_size" : "151",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__ICollection_Add",
      "signature" : "void System.Array:InternalArray__ICollection_Add<System.Reflection.Emit.Label> (System.Reflection.Emit.Label)",
      "code_size" : "40",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__ICollection_Remove",
      "signature" : "bool System.Array:InternalArray__ICollection_Remove<System.Reflection.Emit.Label> (System.Reflection.Emit.Label)",
      "code_size" : "40",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__ICollection_Contains",
      "signature" : "bool System.Array:InternalArray__ICollection_Contains<System.Reflection.Emit.Label> (System.Reflection.Emit.Label)",
      "code_size" : "237",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__ICollection_CopyTo",
      "signature" : "void System.Array:InternalArray__ICollection_CopyTo<System.Reflection.Emit.Label> (System.Reflection.Emit.Label[],int)",
      "code_size" : "487",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.EqualityComparer`1<System.Reflection.Emit.Label>:.ctor ()",
      "code_size" : "9",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Default",
      "signature" : "System.Collections.Generic.EqualityComparer`1<System.Reflection.Emit.Label> System.Collections.Generic.EqualityComparer`1<System.Reflection.Emit.Label>:get_Default ()",
      "code_size" : "66",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateComparer",
      "signature" : "System.Collections.Generic.EqualityComparer`1<System.Reflection.Emit.Label> System.Collections.Generic.EqualityComparer`1<System.Reflection.Emit.Label>:CreateComparer ()",
      "code_size" : "1064",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "IndexOf",
      "signature" : "int System.Collections.Generic.EqualityComparer`1<System.Reflection.Emit.Label>:IndexOf (System.Reflection.Emit.Label[],System.Reflection.Emit.Label,int,int)",
      "code_size" : "178",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "LastIndexOf",
      "signature" : "int System.Collections.Generic.EqualityComparer`1<System.Reflection.Emit.Label>:LastIndexOf (System.Reflection.Emit.Label[],System.Reflection.Emit.Label,int,int)",
      "code_size" : "185",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEqualityComparer.GetHashCode",
      "signature" : "int System.Collections.Generic.EqualityComparer`1<System.Reflection.Emit.Label>:System.Collections.IEqualityComparer.GetHashCode (object)",
      "code_size" : "205",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEqualityComparer.Equals",
      "signature" : "bool System.Collections.Generic.EqualityComparer`1<System.Reflection.Emit.Label>:System.Collections.IEqualityComparer.Equals (object,object)",
      "code_size" : "352",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "invoke_bool_T",
      "signature" : "(wrapper delegate-invoke) bool System.Predicate`1<System.Reflection.Emit.Label>:invoke_bool_T (System.Reflection.Emit.Label)",
      "code_size" : "255",
      "class" : "Predicate`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_void_T",
      "signature" : "(wrapper delegate-invoke) void System.Action`1<System.Reflection.Emit.Label>:invoke_void_T (System.Reflection.Emit.Label)",
      "code_size" : "249",
      "class" : "Action`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_int_T_T",
      "signature" : "(wrapper delegate-invoke) int System.Comparison`1<System.Reflection.Emit.Label>:invoke_int_T_T (System.Reflection.Emit.Label,System.Reflection.Emit.Label)",
      "code_size" : "276",
      "class" : "Comparison`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "InternalArray__ICollection_Add",
      "signature" : "void System.Array:InternalArray__ICollection_Add<T_LONG> (T_LONG)",
      "code_size" : "49",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__ICollection_Remove",
      "signature" : "bool System.Array:InternalArray__ICollection_Remove<T_LONG> (T_LONG)",
      "code_size" : "49",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__ICollection_Contains",
      "signature" : "bool System.Array:InternalArray__ICollection_Contains<T_LONG> (T_LONG)",
      "code_size" : "368",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__ICollection_CopyTo",
      "signature" : "void System.Array:InternalArray__ICollection_CopyTo<T_LONG> (T_LONG[],int)",
      "code_size" : "516",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "runtime_invoke_object__this___object_int_object_object_object_object_object_int_int",
      "signature" : "(wrapper runtime-invoke) object <Module>:runtime_invoke_object__this___object_int_object_object_object_object_object_int_int (object,intptr,intptr,intptr)",
      "code_size" : "381",
      "class" : "<Module>",
      "namespace" : "",
      "wrapper_type" : "runtime-invoke",
    },
    {
      "name" : "runtime_invoke_void__this___int_int_int_int_int_int_byte",
      "signature" : "(wrapper runtime-invoke) object <Module>:runtime_invoke_void__this___int_int_int_int_int_int_byte (object,intptr,intptr,intptr)",
      "code_size" : "330",
      "class" : "<Module>",
      "namespace" : "",
      "wrapper_type" : "runtime-invoke",
    },
    {
      "name" : "runtime_invoke_void__this___object_object_int_object_object_object_object_object_int_int",
      "signature" : "(wrapper runtime-invoke) object <Module>:runtime_invoke_void__this___object_object_int_object_object_object_object_object_int_int (object,intptr,intptr,intptr)",
      "code_size" : "415",
      "class" : "<Module>",
      "namespace" : "",
      "wrapper_type" : "runtime-invoke",
    },
    {
      "name" : "runtime_invoke_void__this___int_object_int_int_int_int_byte",
      "signature" : "(wrapper runtime-invoke) object <Module>:runtime_invoke_void__this___int_object_int_int_int_int_byte (object,intptr,intptr,intptr)",
      "code_size" : "324",
      "class" : "<Module>",
      "namespace" : "",
      "wrapper_type" : "runtime-invoke",
    },
    {
      "name" : "runtime_invoke_void__this___object_object_object_object_int_object_object",
      "signature" : "(wrapper runtime-invoke) object <Module>:runtime_invoke_void__this___object_object_object_object_int_object_object (object,intptr,intptr,intptr)",
      "code_size" : "294",
      "class" : "<Module>",
      "namespace" : "",
      "wrapper_type" : "runtime-invoke",
    },
    {
      "name" : "runtime_invoke_void__this___object_object_int_int_int_object_object",
      "signature" : "(wrapper runtime-invoke) object <Module>:runtime_invoke_void__this___object_object_int_int_int_object_object (object,intptr,intptr,intptr)",
      "code_size" : "306",
      "class" : "<Module>",
      "namespace" : "",
      "wrapper_type" : "runtime-invoke",
    },
    {
      "name" : "runtime_invoke_void__this___object_object_object_byte_Nullable`1<Location>",
      "signature" : "(wrapper runtime-invoke) object <Module>:runtime_invoke_void__this___object_object_object_byte_Nullable`1<Location> (intptr&,intptr,intptr,intptr)",
      "code_size" : "379",
      "class" : "<Module>",
      "namespace" : "",
      "wrapper_type" : "runtime-invoke",
    },
    {
      "name" : "runtime_invoke_void__this___Nullable`1<Operator/OpType>",
      "signature" : "(wrapper runtime-invoke) object <Module>:runtime_invoke_void__this___Nullable`1<Operator/OpType> (object,intptr,intptr,intptr)",
      "code_size" : "263",
      "class" : "<Module>",
      "namespace" : "",
      "wrapper_type" : "runtime-invoke",
    },
    {
      "name" : "runtime_invoke_object_object_object_byte_object_object_int_int_Location",
      "signature" : "(wrapper runtime-invoke) object <Module>:runtime_invoke_object_object_object_byte_object_object_int_int_Location (object,intptr,intptr,intptr)",
      "code_size" : "329",
      "class" : "<Module>",
      "namespace" : "",
      "wrapper_type" : "runtime-invoke",
    },
    {
      "name" : "runtime_invoke_bool__this___object_object_object_object_byte_object_object_byte",
      "signature" : "(wrapper runtime-invoke) object <Module>:runtime_invoke_bool__this___object_object_object_object_byte_object_object_byte (intptr&,intptr,intptr,intptr)",
      "code_size" : "385",
      "class" : "<Module>",
      "namespace" : "",
      "wrapper_type" : "runtime-invoke",
    },
    {
      "name" : "runtime_invoke_int__this___object_intptr&_int_intptr&_object_intptr&_intptr&_intptr&_byte",
      "signature" : "(wrapper runtime-invoke) object <Module>:runtime_invoke_int__this___object_intptr&_int_intptr&_object_intptr&_intptr&_intptr&_byte (intptr&,intptr,intptr,intptr)",
      "code_size" : "435",
      "class" : "<Module>",
      "namespace" : "",
      "wrapper_type" : "runtime-invoke",
    },
    {
      "name" : "runtime_invoke_void__this___Nullable`1<CharSet>",
      "signature" : "(wrapper runtime-invoke) object <Module>:runtime_invoke_void__this___Nullable`1<CharSet> (object,intptr,intptr,intptr)",
      "code_size" : "263",
      "class" : "<Module>",
      "namespace" : "",
      "wrapper_type" : "runtime-invoke",
    },
    {
      "name" : "runtime_invoke_void__this___object_object_object_object_object_object_Location",
      "signature" : "(wrapper runtime-invoke) object <Module>:runtime_invoke_void__this___object_object_object_object_object_object_Location (object,intptr,intptr,intptr)",
      "code_size" : "309",
      "class" : "<Module>",
      "namespace" : "",
      "wrapper_type" : "runtime-invoke",
    },
    {
      "name" : "runtime_invoke_void__this___object_object_int_int_object_object_object",
      "signature" : "(wrapper runtime-invoke) object <Module>:runtime_invoke_void__this___object_object_int_int_object_object_object (object,intptr,intptr,intptr)",
      "code_size" : "300",
      "class" : "<Module>",
      "namespace" : "",
      "wrapper_type" : "runtime-invoke",
    },
    {
      "name" : "runtime_invoke_void__this___object_byte_object_int_object_object_object_Location",
      "signature" : "(wrapper runtime-invoke) object <Module>:runtime_invoke_void__this___object_byte_object_int_object_object_object_Location (object,intptr,intptr,intptr)",
      "code_size" : "341",
      "class" : "<Module>",
      "namespace" : "",
      "wrapper_type" : "runtime-invoke",
    },
    {
      "name" : "runtime_invoke_object__this___object_int_object_object_object_object_object_object",
      "signature" : "(wrapper runtime-invoke) object <Module>:runtime_invoke_object__this___object_int_object_object_object_object_object_object (object,intptr,intptr,intptr)",
      "code_size" : "319",
      "class" : "<Module>",
      "namespace" : "",
      "wrapper_type" : "runtime-invoke",
    },
    {
      "name" : "invoke_void_string_int_int_object",
      "signature" : "(wrapper delegate-invoke) void <Module>:invoke_void_string_int_int_object (string,int,int,object)",
      "code_size" : "323",
      "class" : "<Module>",
      "namespace" : "",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "begin_invoke_IAsyncResult__this___string_int_int_object_AsyncCallback_object",
      "signature" : "(wrapper delegate-begin-invoke) System.IAsyncResult <Module>:begin_invoke_IAsyncResult__this___string_int_int_object_AsyncCallback_object (string,int,int,object,System.AsyncCallback,object)",
      "code_size" : "201",
      "class" : "<Module>",
      "namespace" : "",
      "wrapper_type" : "delegate-begin-invoke",
    },
    {
      "name" : "end_invoke_void__this___IAsyncResult",
      "signature" : "(wrapper delegate-end-invoke) void <Module>:end_invoke_void__this___IAsyncResult (System.IAsyncResult)",
      "code_size" : "119",
      "class" : "<Module>",
      "namespace" : "",
      "wrapper_type" : "delegate-end-invoke",
    },
    {
      "name" : "invoke_void_object&",
      "signature" : "(wrapper delegate-invoke) void <Module>:invoke_void_object& (object&)",
      "code_size" : "252",
      "class" : "<Module>",
      "namespace" : "",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "begin_invoke_IAsyncResult__this___object&_AsyncCallback_object",
      "signature" : "(wrapper delegate-begin-invoke) System.IAsyncResult <Module>:begin_invoke_IAsyncResult__this___object&_AsyncCallback_object (object&,System.AsyncCallback,object)",
      "code_size" : "154",
      "class" : "<Module>",
      "namespace" : "",
      "wrapper_type" : "delegate-begin-invoke",
    },
    {
      "name" : "end_invoke_void__this___object&_IAsyncResult",
      "signature" : "(wrapper delegate-end-invoke) void <Module>:end_invoke_void__this___object&_IAsyncResult (object&,System.IAsyncResult)",
      "code_size" : "136",
      "class" : "<Module>",
      "namespace" : "",
      "wrapper_type" : "delegate-end-invoke",
    },
    {
      "name" : "invoke_int_object_object",
      "signature" : "(wrapper delegate-invoke) int <Module>:invoke_int_object_object (object,object)",
      "code_size" : "282",
      "class" : "<Module>",
      "namespace" : "",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "begin_invoke_IAsyncResult__this___object_object_AsyncCallback_object",
      "signature" : "(wrapper delegate-begin-invoke) System.IAsyncResult <Module>:begin_invoke_IAsyncResult__this___object_object_AsyncCallback_object (object,object,System.AsyncCallback,object)",
      "code_size" : "172",
      "class" : "<Module>",
      "namespace" : "",
      "wrapper_type" : "delegate-begin-invoke",
    },
    {
      "name" : "end_invoke_int__this___IAsyncResult",
      "signature" : "(wrapper delegate-end-invoke) int <Module>:end_invoke_int__this___IAsyncResult (System.IAsyncResult)",
      "code_size" : "183",
      "class" : "<Module>",
      "namespace" : "",
      "wrapper_type" : "delegate-end-invoke",
    },
    {
      "name" : "Get",
      "signature" : "(wrapper unknown) int int[]:Get (int)",
      "code_size" : "60",
      "class" : "Int32[]",
      "namespace" : "System",
      "wrapper_type" : "unknown",
    },
    {
      "name" : "runtime_invoke_int__this___int",
      "signature" : "(wrapper runtime-invoke) object <Module>:runtime_invoke_int__this___int (object,intptr,intptr,intptr)",
      "code_size" : "289",
      "class" : "<Module>",
      "namespace" : "",
      "wrapper_type" : "runtime-invoke",
    },
    {
      "name" : "Set",
      "signature" : "(wrapper unknown) void int[]:Set (int,int)",
      "code_size" : "69",
      "class" : "Int32[]",
      "namespace" : "System",
      "wrapper_type" : "unknown",
    },
    {
      "name" : "runtime_invoke_void__this___int_int",
      "signature" : "(wrapper runtime-invoke) object <Module>:runtime_invoke_void__this___int_int (object,intptr,intptr,intptr)",
      "code_size" : "242",
      "class" : "<Module>",
      "namespace" : "",
      "wrapper_type" : "runtime-invoke",
    },
    {
      "name" : "_isatty",
      "signature" : "(wrapper managed-to-native) int Mono.CSharp.UnixUtils:_isatty (int)",
      "code_size" : "202",
      "class" : "UnixUtils",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "managed-to-native",
    },
    {
      "name" : "StructureToPtr",
      "signature" : "(wrapper unknown) void Mono.CompilerServices.SymbolWriter.LocalVariableEntry:StructureToPtr (object,intptr,bool)",
      "code_size" : "147",
      "class" : "LocalVariableEntry",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "unknown",
    },
    {
      "name" : "PtrToStructure",
      "signature" : "(wrapper unknown) void Mono.CompilerServices.SymbolWriter.LocalVariableEntry:PtrToStructure (intptr,object)",
      "code_size" : "177",
      "class" : "LocalVariableEntry",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "unknown",
    },
    {
      "name" : "StructureToPtr",
      "signature" : "(wrapper unknown) void Mono.CompilerServices.SymbolWriter.CapturedVariable:StructureToPtr (object,intptr,bool)",
      "code_size" : "196",
      "class" : "CapturedVariable",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "unknown",
    },
    {
      "name" : "PtrToStructure",
      "signature" : "(wrapper unknown) void Mono.CompilerServices.SymbolWriter.CapturedVariable:PtrToStructure (intptr,object)",
      "code_size" : "229",
      "class" : "CapturedVariable",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "unknown",
    },
    {
      "name" : "StructureToPtr",
      "signature" : "(wrapper unknown) void Mono.CompilerServices.SymbolWriter.CapturedScope:StructureToPtr (object,intptr,bool)",
      "code_size" : "131",
      "class" : "CapturedScope",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "unknown",
    },
    {
      "name" : "PtrToStructure",
      "signature" : "(wrapper unknown) void Mono.CompilerServices.SymbolWriter.CapturedScope:PtrToStructure (intptr,object)",
      "code_size" : "138",
      "class" : "CapturedScope",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "unknown",
    },
    {
      "name" : "StructureToPtr",
      "signature" : "(wrapper unknown) void Mono.CompilerServices.SymbolWriter.ScopeVariable:StructureToPtr (object,intptr,bool)",
      "code_size" : "33",
      "class" : "ScopeVariable",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "unknown",
    },
    {
      "name" : "PtrToStructure",
      "signature" : "(wrapper unknown) void Mono.CompilerServices.SymbolWriter.ScopeVariable:PtrToStructure (intptr,object)",
      "code_size" : "35",
      "class" : "ScopeVariable",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "unknown",
    },
    {
      "name" : "StructureToPtr",
      "signature" : "(wrapper unknown) void System.Reflection.Emit.Label:StructureToPtr (object,intptr,bool)",
      "code_size" : "32",
      "class" : "Label",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "unknown",
    },
    {
      "name" : "PtrToStructure",
      "signature" : "(wrapper unknown) void System.Reflection.Emit.Label:PtrToStructure (intptr,object)",
      "code_size" : "34",
      "class" : "Label",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "unknown",
    },
    {
      "name" : "StructureToPtr",
      "signature" : "(wrapper unknown) void System.Reflection.Emit.MethodToken:StructureToPtr (object,intptr,bool)",
      "code_size" : "32",
      "class" : "MethodToken",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "unknown",
    },
    {
      "name" : "PtrToStructure",
      "signature" : "(wrapper unknown) void System.Reflection.Emit.MethodToken:PtrToStructure (intptr,object)",
      "code_size" : "34",
      "class" : "MethodToken",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "unknown",
    },
    {
      "name" : "StructureToPtr",
      "signature" : "(wrapper unknown) void System.Reflection.Emit.OpCode:StructureToPtr (object,intptr,bool)",
      "code_size" : "33",
      "class" : "OpCode",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "unknown",
    },
    {
      "name" : "PtrToStructure",
      "signature" : "(wrapper unknown) void System.Reflection.Emit.OpCode:PtrToStructure (intptr,object)",
      "code_size" : "35",
      "class" : "OpCode",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "unknown",
    },
    {
      "name" : "StructureToPtr",
      "signature" : "(wrapper unknown) void Mono.CSharp.Reachability:StructureToPtr (object,intptr,bool)",
      "code_size" : "32",
      "class" : "Reachability",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "unknown",
    },
    {
      "name" : "PtrToStructure",
      "signature" : "(wrapper unknown) void Mono.CSharp.Reachability:PtrToStructure (intptr,object)",
      "code_size" : "108",
      "class" : "Reachability",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "unknown",
    },
    {
      "name" : "StructureToPtr",
      "signature" : "(wrapper unknown) void Mono.CSharp.SourceFile/LocationRegion:StructureToPtr (object,intptr,bool)",
      "code_size" : "33",
      "class" : "LocationRegion",
      "namespace" : "",
      "wrapper_type" : "unknown",
    },
    {
      "name" : "PtrToStructure",
      "signature" : "(wrapper unknown) void Mono.CSharp.SourceFile/LocationRegion:PtrToStructure (intptr,object)",
      "code_size" : "35",
      "class" : "LocationRegion",
      "namespace" : "",
      "wrapper_type" : "unknown",
    },
    {
      "name" : "StructureToPtr",
      "signature" : "(wrapper unknown) void Mono.CSharp.Location:StructureToPtr (object,intptr,bool)",
      "code_size" : "32",
      "class" : "Location",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "unknown",
    },
    {
      "name" : "PtrToStructure",
      "signature" : "(wrapper unknown) void Mono.CSharp.Location:PtrToStructure (intptr,object)",
      "code_size" : "34",
      "class" : "Location",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "unknown",
    },
    {
      "name" : "StructureToPtr",
      "signature" : "(wrapper unknown) void Mono.CSharp.Location/Checkpoint:StructureToPtr (object,intptr,bool)",
      "code_size" : "33",
      "class" : "Checkpoint",
      "namespace" : "",
      "wrapper_type" : "unknown",
    },
    {
      "name" : "PtrToStructure",
      "signature" : "(wrapper unknown) void Mono.CSharp.Location/Checkpoint:PtrToStructure (intptr,object)",
      "code_size" : "35",
      "class" : "Checkpoint",
      "namespace" : "",
      "wrapper_type" : "unknown",
    },
    {
      "name" : "StructureToPtr",
      "signature" : "(wrapper unknown) void Mono.CSharp.SingleConverter:StructureToPtr (object,intptr,bool)",
      "code_size" : "32",
      "class" : "SingleConverter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "unknown",
    },
    {
      "name" : "PtrToStructure",
      "signature" : "(wrapper unknown) void Mono.CSharp.SingleConverter:PtrToStructure (intptr,object)",
      "code_size" : "34",
      "class" : "SingleConverter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "unknown",
    },
    {
      "name" : "StructureToPtr",
      "signature" : "(wrapper unknown) void Mono.CSharp.TypeNameParser:StructureToPtr (object,intptr,bool)",
      "code_size" : "34",
      "class" : "TypeNameParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "unknown",
    },
    {
      "name" : "PtrToStructure",
      "signature" : "(wrapper unknown) void Mono.CSharp.TypeNameParser:PtrToStructure (intptr,object)",
      "code_size" : "36",
      "class" : "TypeNameParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "unknown",
    },
    {
      "name" : ".cctor",
      "signature" : "void System.Collections.Generic.List`1<Mono.CompilerServices.SymbolWriter.CapturedScope>:.cctor ()",
      "code_size" : "36",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".cctor",
      "signature" : "void System.Collections.Generic.List`1<Mono.CompilerServices.SymbolWriter.CapturedVariable>:.cctor ()",
      "code_size" : "36",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Add",
      "signature" : "void System.Collections.Generic.List`1<Mono.CompilerServices.SymbolWriter.CapturedScope>:Add (Mono.CompilerServices.SymbolWriter.CapturedScope)",
      "code_size" : "164",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Add",
      "signature" : "void System.Collections.Generic.List`1<Mono.CompilerServices.SymbolWriter.CapturedVariable>:Add (Mono.CompilerServices.SymbolWriter.CapturedVariable)",
      "code_size" : "196",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "CopyTo",
      "signature" : "void System.Collections.Generic.List`1<Mono.CompilerServices.SymbolWriter.CapturedVariable>:CopyTo (Mono.CompilerServices.SymbolWriter.CapturedVariable[],int)",
      "code_size" : "51",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "CopyTo",
      "signature" : "void System.Collections.Generic.List`1<Mono.CompilerServices.SymbolWriter.CapturedScope>:CopyTo (Mono.CompilerServices.SymbolWriter.CapturedScope[],int)",
      "code_size" : "51",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetEnumerator",
      "signature" : "System.Collections.Generic.List`1/Enumerator<Mono.CompilerServices.SymbolWriter.CapturedScope> System.Collections.Generic.List`1<Mono.CompilerServices.SymbolWriter.CapturedScope>:GetEnumerator ()",
      "code_size" : "196",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetEnumerator",
      "signature" : "System.Collections.Generic.List`1/Enumerator<Mono.CompilerServices.SymbolWriter.CapturedVariable> System.Collections.Generic.List`1<Mono.CompilerServices.SymbolWriter.CapturedVariable>:GetEnumerator ()",
      "code_size" : "282",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".cctor",
      "signature" : "void System.Collections.Generic.List`1<Mono.CompilerServices.SymbolWriter.NamespaceEntry>:.cctor ()",
      "code_size" : "36",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Add",
      "signature" : "void System.Collections.Generic.List`1<Mono.CompilerServices.SymbolWriter.NamespaceEntry>:Add (Mono.CompilerServices.SymbolWriter.NamespaceEntry)",
      "code_size" : "185",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetEnumerator",
      "signature" : "System.Collections.Generic.List`1/Enumerator<Mono.CompilerServices.SymbolWriter.NamespaceEntry> System.Collections.Generic.List`1<Mono.CompilerServices.SymbolWriter.NamespaceEntry>:GetEnumerator ()",
      "code_size" : "263",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "CopyTo",
      "signature" : "void System.Collections.Generic.List`1<Mono.CompilerServices.SymbolWriter.NamespaceEntry>:CopyTo (Mono.CompilerServices.SymbolWriter.NamespaceEntry[],int)",
      "code_size" : "51",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Add",
      "signature" : "void System.Collections.Generic.Dictionary`2<string, Mono.CompilerServices.SymbolWriter.LocalVariableEntry>:Add (string,Mono.CompilerServices.SymbolWriter.LocalVariableEntry)",
      "code_size" : "54",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "ContainsKey",
      "signature" : "bool System.Collections.Generic.Dictionary`2<string, Mono.CompilerServices.SymbolWriter.LocalVariableEntry>:ContainsKey (string)",
      "code_size" : "43",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.Dictionary`2<string, Mono.CompilerServices.SymbolWriter.LocalVariableEntry>:.ctor ()",
      "code_size" : "22",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "ToArray",
      "signature" : "Mono.CompilerServices.SymbolWriter.LocalVariableEntry[] System.Collections.Generic.List`1<Mono.CompilerServices.SymbolWriter.LocalVariableEntry>:ToArray ()",
      "code_size" : "66",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".cctor",
      "signature" : "void System.EmptyArray`1<Mono.CompilerServices.SymbolWriter.LocalVariableEntry>:.cctor ()",
      "code_size" : "36",
      "class" : "EmptyArray`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "Add",
      "signature" : "void System.Collections.Generic.List`1<Mono.CompilerServices.SymbolWriter.LocalVariableEntry>:Add (Mono.CompilerServices.SymbolWriter.LocalVariableEntry)",
      "code_size" : "172",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".cctor",
      "signature" : "void System.Collections.Generic.List`1<Mono.CompilerServices.SymbolWriter.LocalVariableEntry>:.cctor ()",
      "code_size" : "36",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "ToArray",
      "signature" : "Mono.CompilerServices.SymbolWriter.ScopeVariable[] System.Collections.Generic.List`1<Mono.CompilerServices.SymbolWriter.ScopeVariable>:ToArray ()",
      "code_size" : "66",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".cctor",
      "signature" : "void System.EmptyArray`1<Mono.CompilerServices.SymbolWriter.ScopeVariable>:.cctor ()",
      "code_size" : "36",
      "class" : "EmptyArray`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "Add",
      "signature" : "void System.Collections.Generic.List`1<Mono.CompilerServices.SymbolWriter.ScopeVariable>:Add (Mono.CompilerServices.SymbolWriter.ScopeVariable)",
      "code_size" : "126",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".cctor",
      "signature" : "void System.Collections.Generic.List`1<Mono.CompilerServices.SymbolWriter.ScopeVariable>:.cctor ()",
      "code_size" : "36",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Add",
      "signature" : "void System.Collections.Generic.List`1<Mono.CSharp.AnonymousMethodStorey/StoreyFieldPair>:Add (Mono.CSharp.AnonymousMethodStorey/StoreyFieldPair)",
      "code_size" : "192",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Exists",
      "signature" : "bool System.Collections.Generic.List`1<Mono.CSharp.AnonymousMethodStorey/StoreyFieldPair>:Exists (System.Predicate`1<Mono.CSharp.AnonymousMethodStorey/StoreyFieldPair>)",
      "code_size" : "44",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".cctor",
      "signature" : "void System.Collections.Generic.List`1<Mono.CSharp.AnonymousMethodStorey/StoreyFieldPair>:.cctor ()",
      "code_size" : "36",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetEnumerator",
      "signature" : "System.Collections.Generic.List`1/Enumerator<Mono.CSharp.AnonymousMethodStorey/StoreyFieldPair> System.Collections.Generic.List`1<Mono.CSharp.AnonymousMethodStorey/StoreyFieldPair>:GetEnumerator ()",
      "code_size" : "224",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.GenericEqualityComparer`1<T_BYTE>:.ctor ()",
      "code_size" : "43",
      "class" : "GenericEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Equals",
      "signature" : "bool System.Collections.Generic.GenericEqualityComparer`1<T_BYTE>:Equals (T_BYTE,T_BYTE)",
      "code_size" : "78",
      "class" : "GenericEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetHashCode",
      "signature" : "int System.Collections.Generic.GenericEqualityComparer`1<T_BYTE>:GetHashCode (T_BYTE)",
      "code_size" : "162",
      "class" : "GenericEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "IndexOf",
      "signature" : "int System.Collections.Generic.GenericEqualityComparer`1<T_BYTE>:IndexOf (T_BYTE[],T_BYTE,int,int)",
      "code_size" : "271",
      "class" : "GenericEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "LastIndexOf",
      "signature" : "int System.Collections.Generic.GenericEqualityComparer`1<T_BYTE>:LastIndexOf (T_BYTE[],T_BYTE,int,int)",
      "code_size" : "270",
      "class" : "GenericEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Equals",
      "signature" : "bool System.Collections.Generic.GenericEqualityComparer`1<T_BYTE>:Equals (object)",
      "code_size" : "107",
      "class" : "GenericEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetHashCode",
      "signature" : "int System.Collections.Generic.GenericEqualityComparer`1<T_BYTE>:GetHashCode ()",
      "code_size" : "44",
      "class" : "GenericEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Create",
      "signature" : "System.Tuple`2<T1_REF, T2_REF> System.Tuple:Create<T1_REF, T2_REF> (T1_REF,T2_REF)",
      "code_size" : "73",
      "class" : "Tuple",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Item2",
      "signature" : "T2_REF System.Tuple`2<T1_REF, T2_REF>:get_Item2 ()",
      "code_size" : "20",
      "class" : "Tuple`2",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Default",
      "signature" : "System.Collections.Generic.EqualityComparer`1<T_REF> System.Collections.Generic.EqualityComparer`1<T_REF>:get_Default ()",
      "code_size" : "94",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Add",
      "signature" : "void System.Collections.Generic.List`1<T_INST>:Add (T_INST)",
      "code_size" : "248",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1<T_INST>:.ctor (int)",
      "code_size" : "192",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Item",
      "signature" : "T_INST System.Collections.Generic.List`1<T_INST>:get_Item (int)",
      "code_size" : "156",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetEnumerator",
      "signature" : "System.Collections.Generic.List`1/Enumerator<T_INST> System.Collections.Generic.List`1<T_INST>:GetEnumerator ()",
      "code_size" : "225",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Resize",
      "signature" : "void System.Array:Resize<T_BYTE> (T_BYTE[]&,int)",
      "code_size" : "318",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Array/InternalEnumerator`1<T_BOOL>:.ctor (System.Array)",
      "code_size" : "56",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Array/InternalEnumerator`1<T_BOOL>:Dispose ()",
      "code_size" : "28",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "MoveNext",
      "signature" : "bool System.Array/InternalEnumerator`1<T_BOOL>:MoveNext ()",
      "code_size" : "100",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Current",
      "signature" : "T_BOOL System.Array/InternalEnumerator`1<T_BOOL>:get_Current ()",
      "code_size" : "199",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerator.Reset",
      "signature" : "void System.Array/InternalEnumerator`1<T_BOOL>:System.Collections.IEnumerator.Reset ()",
      "code_size" : "28",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerator.get_Current",
      "signature" : "object System.Array/InternalEnumerator`1<T_BOOL>:System.Collections.IEnumerator.get_Current ()",
      "code_size" : "97",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__IEnumerable_GetEnumerator",
      "signature" : "System.Collections.Generic.IEnumerator`1<T_BOOL> System.Array:InternalArray__IEnumerable_GetEnumerator<T_BOOL> ()",
      "code_size" : "192",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "Resize",
      "signature" : "void System.Array:Resize<T_INT> (T_INT[]&,int)",
      "code_size" : "317",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "Create",
      "signature" : "System.Tuple`2<Mono.CSharp.Modifiers, Mono.CSharp.Location> System.Tuple:Create<Mono.CSharp.Modifiers, Mono.CSharp.Location> (Mono.CSharp.Modifiers,Mono.CSharp.Location)",
      "code_size" : "62",
      "class" : "Tuple",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "Add",
      "signature" : "void System.Collections.Generic.List`1<Mono.CSharp.Location>:Add (Mono.CSharp.Location)",
      "code_size" : "125",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".cctor",
      "signature" : "void System.Collections.Generic.List`1<Mono.CSharp.Location>:.cctor ()",
      "code_size" : "36",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Contains",
      "signature" : "bool System.Collections.Generic.List`1<Mono.CSharp.Location>:Contains (Mono.CSharp.Location)",
      "code_size" : "244",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Resize",
      "signature" : "void System.Array:Resize<T_CHAR> (T_CHAR[]&,int)",
      "code_size" : "318",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "IndexOf",
      "signature" : "int System.Array:IndexOf<T_CHAR> (T_CHAR[],T_CHAR)",
      "code_size" : "127",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__ICollection_Add",
      "signature" : "void System.Array:InternalArray__ICollection_Add<T_BOOL> (T_BOOL)",
      "code_size" : "49",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__ICollection_Remove",
      "signature" : "bool System.Array:InternalArray__ICollection_Remove<T_BOOL> (T_BOOL)",
      "code_size" : "49",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__ICollection_Contains",
      "signature" : "bool System.Array:InternalArray__ICollection_Contains<T_BOOL> (T_BOOL)",
      "code_size" : "369",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__ICollection_CopyTo",
      "signature" : "void System.Array:InternalArray__ICollection_CopyTo<T_BOOL> (T_BOOL[],int)",
      "code_size" : "516",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Array/InternalEnumerator`1<T_INT>:.ctor (System.Array)",
      "code_size" : "56",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Array/InternalEnumerator`1<T_INT>:Dispose ()",
      "code_size" : "28",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "MoveNext",
      "signature" : "bool System.Array/InternalEnumerator`1<T_INT>:MoveNext ()",
      "code_size" : "100",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Current",
      "signature" : "T_INT System.Array/InternalEnumerator`1<T_INT>:get_Current ()",
      "code_size" : "199",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerator.Reset",
      "signature" : "void System.Array/InternalEnumerator`1<T_INT>:System.Collections.IEnumerator.Reset ()",
      "code_size" : "28",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerator.get_Current",
      "signature" : "object System.Array/InternalEnumerator`1<T_INT>:System.Collections.IEnumerator.get_Current ()",
      "code_size" : "96",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__IEnumerable_GetEnumerator",
      "signature" : "System.Collections.Generic.IEnumerator`1<T_INT> System.Array:InternalArray__IEnumerable_GetEnumerator<T_INT> ()",
      "code_size" : "192",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__ICollection_Add",
      "signature" : "void System.Array:InternalArray__ICollection_Add<T_INT> (T_INT)",
      "code_size" : "49",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__ICollection_Remove",
      "signature" : "bool System.Array:InternalArray__ICollection_Remove<T_INT> (T_INT)",
      "code_size" : "49",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__ICollection_Contains",
      "signature" : "bool System.Array:InternalArray__ICollection_Contains<T_INT> (T_INT)",
      "code_size" : "367",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__ICollection_CopyTo",
      "signature" : "void System.Array:InternalArray__ICollection_CopyTo<T_INT> (T_INT[],int)",
      "code_size" : "516",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Count",
      "signature" : "int System.Collections.Generic.List`1<Mono.CSharp.OverloadResolver/AmbiguousCandidate>:get_Count ()",
      "code_size" : "20",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Item",
      "signature" : "Mono.CSharp.OverloadResolver/AmbiguousCandidate System.Collections.Generic.List`1<Mono.CSharp.OverloadResolver/AmbiguousCandidate>:get_Item (int)",
      "code_size" : "177",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Add",
      "signature" : "void System.Collections.Generic.List`1<Mono.CSharp.OverloadResolver/AmbiguousCandidate>:Add (Mono.CSharp.OverloadResolver/AmbiguousCandidate)",
      "code_size" : "185",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1<Mono.CSharp.OverloadResolver/AmbiguousCandidate>:.ctor ()",
      "code_size" : "50",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetEnumerator",
      "signature" : "System.Collections.Generic.List`1/Enumerator<Mono.CSharp.OverloadResolver/AmbiguousCandidate> System.Collections.Generic.List`1<Mono.CSharp.OverloadResolver/AmbiguousCandidate>:GetEnumerator ()",
      "code_size" : "263",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Add",
      "signature" : "void System.Collections.Generic.List`1<Mono.CSharp.TypeInferenceContext/BoundInfo>:Add (Mono.CSharp.TypeInferenceContext/BoundInfo)",
      "code_size" : "177",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Contains",
      "signature" : "bool System.Collections.Generic.List`1<Mono.CSharp.TypeInferenceContext/BoundInfo>:Contains (Mono.CSharp.TypeInferenceContext/BoundInfo)",
      "code_size" : "298",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1<Mono.CSharp.TypeInferenceContext/BoundInfo>:.ctor (int)",
      "code_size" : "132",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Item",
      "signature" : "Mono.CSharp.TypeInferenceContext/BoundInfo System.Collections.Generic.List`1<Mono.CSharp.TypeInferenceContext/BoundInfo>:get_Item (int)",
      "code_size" : "141",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Sort",
      "signature" : "void System.Collections.Generic.List`1<Mono.CSharp.SourceFile/LocationRegion>:Sort ()",
      "code_size" : "26",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Item",
      "signature" : "Mono.CSharp.SourceFile/LocationRegion System.Collections.Generic.List`1<Mono.CSharp.SourceFile/LocationRegion>:get_Item (int)",
      "code_size" : "70",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "BinarySearch",
      "signature" : "int System.Collections.Generic.List`1<Mono.CSharp.SourceFile/LocationRegion>:BinarySearch (Mono.CSharp.SourceFile/LocationRegion)",
      "code_size" : "37",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Add",
      "signature" : "void System.Collections.Generic.List`1<Mono.CSharp.SourceFile/LocationRegion>:Add (Mono.CSharp.SourceFile/LocationRegion)",
      "code_size" : "126",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".cctor",
      "signature" : "void System.Collections.Generic.List`1<Mono.CSharp.SourceFile/LocationRegion>:.cctor ()",
      "code_size" : "36",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Resize",
      "signature" : "void System.Array:Resize<Mono.CSharp.Location/Checkpoint> (Mono.CSharp.Location/Checkpoint[]&,int)",
      "code_size" : "304",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1<Mono.CSharp.Location>:.ctor (System.Collections.Generic.IEnumerable`1<Mono.CSharp.Location>)",
      "code_size" : "501",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Insert",
      "signature" : "void System.Collections.Generic.List`1<Mono.CSharp.Location>:Insert (int,Mono.CSharp.Location)",
      "code_size" : "190",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Item",
      "signature" : "Mono.CSharp.Location System.Collections.Generic.List`1<Mono.CSharp.Location>:get_Item (int)",
      "code_size" : "68",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "AddRange",
      "signature" : "void System.Collections.Generic.List`1<Mono.CSharp.Location>:AddRange (System.Collections.Generic.IEnumerable`1<Mono.CSharp.Location>)",
      "code_size" : "32",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.Dictionary`2<Mono.CSharp.ArrayContainer/TypeRankPair, Mono.CSharp.ArrayContainer>:.ctor ()",
      "code_size" : "22",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Select",
      "signature" : "System.Collections.Generic.IEnumerable`1<TResult_REF> System.Linq.Enumerable:Select<TSource_INST, TResult_REF> (System.Collections.Generic.IEnumerable`1<TSource_INST>,System.Func`2<TSource_INST, TResult_REF>)",
      "code_size" : "667",
      "class" : "Enumerable",
      "namespace" : "System.Linq",
      "wrapper_type" : "none",
    },
    {
      "name" : "Where",
      "signature" : "System.Collections.Generic.IEnumerable`1<TSource_INST> System.Linq.Enumerable:Where<TSource_INST> (System.Collections.Generic.IEnumerable`1<TSource_INST>,System.Func`2<TSource_INST, bool>)",
      "code_size" : "638",
      "class" : "Enumerable",
      "namespace" : "System.Linq",
      "wrapper_type" : "none",
    },
    {
      "name" : ".cctor",
      "signature" : "void System.EmptyArray`1<Mono.CSharp.PendingImplementation/MissingInterfacesInfo>:.cctor ()",
      "code_size" : "36",
      "class" : "EmptyArray`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.EqualityComparer`1<T_INT>:.ctor ()",
      "code_size" : "13",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Default",
      "signature" : "System.Collections.Generic.EqualityComparer`1<T_INT> System.Collections.Generic.EqualityComparer`1<T_INT>:get_Default ()",
      "code_size" : "108",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateComparer",
      "signature" : "System.Collections.Generic.EqualityComparer`1<T_INT> System.Collections.Generic.EqualityComparer`1<T_INT>:CreateComparer ()",
      "code_size" : "1185",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "IndexOf",
      "signature" : "int System.Collections.Generic.EqualityComparer`1<T_INT>:IndexOf (T_INT[],T_INT,int,int)",
      "code_size" : "172",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "LastIndexOf",
      "signature" : "int System.Collections.Generic.EqualityComparer`1<T_INT>:LastIndexOf (T_INT[],T_INT,int,int)",
      "code_size" : "179",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEqualityComparer.GetHashCode",
      "signature" : "int System.Collections.Generic.EqualityComparer`1<T_INT>:System.Collections.IEqualityComparer.GetHashCode (object)",
      "code_size" : "201",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEqualityComparer.Equals",
      "signature" : "bool System.Collections.Generic.EqualityComparer`1<T_INT>:System.Collections.IEqualityComparer.Equals (object,object)",
      "code_size" : "356",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.GenericEqualityComparer`1<T_INT>:.ctor ()",
      "code_size" : "43",
      "class" : "GenericEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Equals",
      "signature" : "bool System.Collections.Generic.GenericEqualityComparer`1<T_INT>:Equals (T_INT,T_INT)",
      "code_size" : "78",
      "class" : "GenericEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetHashCode",
      "signature" : "int System.Collections.Generic.GenericEqualityComparer`1<T_INT>:GetHashCode (T_INT)",
      "code_size" : "160",
      "class" : "GenericEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "IndexOf",
      "signature" : "int System.Collections.Generic.GenericEqualityComparer`1<T_INT>:IndexOf (T_INT[],T_INT,int,int)",
      "code_size" : "271",
      "class" : "GenericEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "LastIndexOf",
      "signature" : "int System.Collections.Generic.GenericEqualityComparer`1<T_INT>:LastIndexOf (T_INT[],T_INT,int,int)",
      "code_size" : "270",
      "class" : "GenericEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Equals",
      "signature" : "bool System.Collections.Generic.GenericEqualityComparer`1<T_INT>:Equals (object)",
      "code_size" : "107",
      "class" : "GenericEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetHashCode",
      "signature" : "int System.Collections.Generic.GenericEqualityComparer`1<T_INT>:GetHashCode ()",
      "code_size" : "44",
      "class" : "GenericEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Sort",
      "signature" : "void System.Array:Sort<T_LONG> (T_LONG[])",
      "code_size" : "55",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Array/InternalEnumerator`1<T_LONG>:.ctor (System.Array)",
      "code_size" : "56",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Array/InternalEnumerator`1<T_LONG>:Dispose ()",
      "code_size" : "28",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "MoveNext",
      "signature" : "bool System.Array/InternalEnumerator`1<T_LONG>:MoveNext ()",
      "code_size" : "100",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Current",
      "signature" : "T_LONG System.Array/InternalEnumerator`1<T_LONG>:get_Current ()",
      "code_size" : "199",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerator.Reset",
      "signature" : "void System.Array/InternalEnumerator`1<T_LONG>:System.Collections.IEnumerator.Reset ()",
      "code_size" : "28",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerator.get_Current",
      "signature" : "object System.Array/InternalEnumerator`1<T_LONG>:System.Collections.IEnumerator.get_Current ()",
      "code_size" : "97",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__IEnumerable_GetEnumerator",
      "signature" : "System.Collections.Generic.IEnumerator`1<T_LONG> System.Array:InternalArray__IEnumerable_GetEnumerator<T_LONG> ()",
      "code_size" : "192",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "Add",
      "signature" : "void System.Collections.Generic.List`1<System.Reflection.Emit.Label>:Add (System.Reflection.Emit.Label)",
      "code_size" : "125",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "IndexOf",
      "signature" : "int System.Collections.Generic.List`1<System.Reflection.Emit.Label>:IndexOf (System.Reflection.Emit.Label)",
      "code_size" : "48",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".cctor",
      "signature" : "void System.Collections.Generic.List`1<System.Reflection.Emit.Label>:.cctor ()",
      "code_size" : "36",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Item",
      "signature" : "System.Reflection.Emit.Label System.Collections.Generic.List`1<System.Reflection.Emit.Label>:get_Item (int)",
      "code_size" : "68",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "ToArray",
      "signature" : "System.Reflection.Emit.Label[] System.Collections.Generic.List`1<System.Reflection.Emit.Label>:ToArray ()",
      "code_size" : "66",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Add",
      "signature" : "void System.Collections.Generic.Dictionary`2<Mono.CSharp.ArrayContainer/TypeRankPair, Mono.CSharp.ArrayContainer>:Add (Mono.CSharp.ArrayContainer/TypeRankPair,Mono.CSharp.ArrayContainer)",
      "code_size" : "49",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "TryGetValue",
      "signature" : "bool System.Collections.Generic.Dictionary`2<Mono.CSharp.ArrayContainer/TypeRankPair, Mono.CSharp.ArrayContainer>:TryGetValue (Mono.CSharp.ArrayContainer/TypeRankPair,Mono.CSharp.ArrayContainer&)",
      "code_size" : "178",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Array/InternalEnumerator`1<T_REF>:.ctor (System.Array)",
      "code_size" : "56",
      "class" : "InternalEnumerator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "invoke_TValue_TKey",
      "signature" : "(wrapper delegate-invoke) System.Runtime.Serialization.SerializationInfo System.Runtime.CompilerServices.ConditionalWeakTable`2/CreateValueCallback<object, System.Runtime.Serialization.SerializationInfo>:invoke_TValue_TKey (object)",
      "code_size" : "258",
      "class" : "CreateValueCallback",
      "namespace" : "",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_bool_T",
      "signature" : "(wrapper delegate-invoke) bool System.Predicate`1<object>:invoke_bool_T (object)",
      "code_size" : "258",
      "class" : "Predicate`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_void_T",
      "signature" : "(wrapper delegate-invoke) void System.Action`1<object>:invoke_void_T (object)",
      "code_size" : "252",
      "class" : "Action`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "invoke_int_T_T",
      "signature" : "(wrapper delegate-invoke) int System.Comparison`1<object>:invoke_int_T_T (object,object)",
      "code_size" : "282",
      "class" : "Comparison`1",
      "namespace" : "System",
      "wrapper_type" : "delegate-invoke",
    },
    {
      "name" : "IfNullAndNullsAreIllegalThenThrow",
      "signature" : "void System.ThrowHelper:IfNullAndNullsAreIllegalThenThrow<T_REF> (object,System.ExceptionArgument)",
      "code_size" : "48",
      "class" : "ThrowHelper",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.Dictionary`2/KeyCollection/Enumerator<TKey_INT, TValue_REF>:.ctor (System.Collections.Generic.Dictionary`2<TKey_INT, TValue_REF>)",
      "code_size" : "73",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Value",
      "signature" : "TValue_INT System.Collections.Generic.KeyValuePair`2<TKey_REF, TValue_INT>:get_Value ()",
      "code_size" : "25",
      "class" : "KeyValuePair`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Key",
      "signature" : "TKey_REF System.Collections.Generic.KeyValuePair`2<TKey_REF, TValue_INT>:get_Key ()",
      "code_size" : "24",
      "class" : "KeyValuePair`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.KeyValuePair`2<TKey_REF, TValue_INT>:.ctor (TKey_REF,TValue_INT)",
      "code_size" : "62",
      "class" : "KeyValuePair`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.Dictionary`2/Enumerator<TKey_REF, TValue_INT>:.ctor (System.Collections.Generic.Dictionary`2<TKey_REF, TValue_INT>,int)",
      "code_size" : "147",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "IfNullAndNullsAreIllegalThenThrow",
      "signature" : "void System.ThrowHelper:IfNullAndNullsAreIllegalThenThrow<T_INT> (object,System.ExceptionArgument)",
      "code_size" : "43",
      "class" : "ThrowHelper",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.Dictionary`2/KeyCollection/Enumerator<TKey_REF, TValue_INT>:.ctor (System.Collections.Generic.Dictionary`2<TKey_REF, TValue_INT>)",
      "code_size" : "90",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator<TKey_REF, TValue_INT>:.ctor (System.Collections.Generic.Dictionary`2<TKey_REF, TValue_INT>)",
      "code_size" : "73",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__get_Item",
      "signature" : "Mono.CompilerServices.SymbolWriter.CapturedVariable System.Array:InternalArray__get_Item<Mono.CompilerServices.SymbolWriter.CapturedVariable> (int)",
      "code_size" : "272",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.ObjectEqualityComparer`1<Mono.CompilerServices.SymbolWriter.CapturedVariable>:.ctor ()",
      "code_size" : "9",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Equals",
      "signature" : "bool System.Collections.Generic.ObjectEqualityComparer`1<Mono.CompilerServices.SymbolWriter.CapturedVariable>:Equals (Mono.CompilerServices.SymbolWriter.CapturedVariable,Mono.CompilerServices.SymbolWriter.CapturedVariable)",
      "code_size" : "291",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetHashCode",
      "signature" : "int System.Collections.Generic.ObjectEqualityComparer`1<Mono.CompilerServices.SymbolWriter.CapturedVariable>:GetHashCode (Mono.CompilerServices.SymbolWriter.CapturedVariable)",
      "code_size" : "164",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "IndexOf",
      "signature" : "int System.Collections.Generic.ObjectEqualityComparer`1<Mono.CompilerServices.SymbolWriter.CapturedVariable>:IndexOf (Mono.CompilerServices.SymbolWriter.CapturedVariable[],Mono.CompilerServices.SymbolWriter.CapturedVariable,int,int)",
      "code_size" : "619",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "LastIndexOf",
      "signature" : "int System.Collections.Generic.ObjectEqualityComparer`1<Mono.CompilerServices.SymbolWriter.CapturedVariable>:LastIndexOf (Mono.CompilerServices.SymbolWriter.CapturedVariable[],Mono.CompilerServices.SymbolWriter.CapturedVariable,int,int)",
      "code_size" : "627",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Equals",
      "signature" : "bool System.Collections.Generic.ObjectEqualityComparer`1<Mono.CompilerServices.SymbolWriter.CapturedVariable>:Equals (object)",
      "code_size" : "91",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetHashCode",
      "signature" : "int System.Collections.Generic.ObjectEqualityComparer`1<Mono.CompilerServices.SymbolWriter.CapturedVariable>:GetHashCode ()",
      "code_size" : "44",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__get_Item",
      "signature" : "Mono.CompilerServices.SymbolWriter.CapturedScope System.Array:InternalArray__get_Item<Mono.CompilerServices.SymbolWriter.CapturedScope> (int)",
      "code_size" : "195",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.ObjectEqualityComparer`1<Mono.CompilerServices.SymbolWriter.CapturedScope>:.ctor ()",
      "code_size" : "9",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Equals",
      "signature" : "bool System.Collections.Generic.ObjectEqualityComparer`1<Mono.CompilerServices.SymbolWriter.CapturedScope>:Equals (Mono.CompilerServices.SymbolWriter.CapturedScope,Mono.CompilerServices.SymbolWriter.CapturedScope)",
      "code_size" : "218",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetHashCode",
      "signature" : "int System.Collections.Generic.ObjectEqualityComparer`1<Mono.CompilerServices.SymbolWriter.CapturedScope>:GetHashCode (Mono.CompilerServices.SymbolWriter.CapturedScope)",
      "code_size" : "124",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "IndexOf",
      "signature" : "int System.Collections.Generic.ObjectEqualityComparer`1<Mono.CompilerServices.SymbolWriter.CapturedScope>:IndexOf (Mono.CompilerServices.SymbolWriter.CapturedScope[],Mono.CompilerServices.SymbolWriter.CapturedScope,int,int)",
      "code_size" : "497",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "LastIndexOf",
      "signature" : "int System.Collections.Generic.ObjectEqualityComparer`1<Mono.CompilerServices.SymbolWriter.CapturedScope>:LastIndexOf (Mono.CompilerServices.SymbolWriter.CapturedScope[],Mono.CompilerServices.SymbolWriter.CapturedScope,int,int)",
      "code_size" : "497",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Equals",
      "signature" : "bool System.Collections.Generic.ObjectEqualityComparer`1<Mono.CompilerServices.SymbolWriter.CapturedScope>:Equals (object)",
      "code_size" : "91",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetHashCode",
      "signature" : "int System.Collections.Generic.ObjectEqualityComparer`1<Mono.CompilerServices.SymbolWriter.CapturedScope>:GetHashCode ()",
      "code_size" : "44",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__get_Item",
      "signature" : "Mono.CompilerServices.SymbolWriter.NamespaceEntry System.Array:InternalArray__get_Item<Mono.CompilerServices.SymbolWriter.NamespaceEntry> (int)",
      "code_size" : "259",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.ObjectEqualityComparer`1<Mono.CompilerServices.SymbolWriter.NamespaceEntry>:.ctor ()",
      "code_size" : "9",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Equals",
      "signature" : "bool System.Collections.Generic.ObjectEqualityComparer`1<Mono.CompilerServices.SymbolWriter.NamespaceEntry>:Equals (Mono.CompilerServices.SymbolWriter.NamespaceEntry,Mono.CompilerServices.SymbolWriter.NamespaceEntry)",
      "code_size" : "269",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetHashCode",
      "signature" : "int System.Collections.Generic.ObjectEqualityComparer`1<Mono.CompilerServices.SymbolWriter.NamespaceEntry>:GetHashCode (Mono.CompilerServices.SymbolWriter.NamespaceEntry)",
      "code_size" : "153",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "IndexOf",
      "signature" : "int System.Collections.Generic.ObjectEqualityComparer`1<Mono.CompilerServices.SymbolWriter.NamespaceEntry>:IndexOf (Mono.CompilerServices.SymbolWriter.NamespaceEntry[],Mono.CompilerServices.SymbolWriter.NamespaceEntry,int,int)",
      "code_size" : "585",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "LastIndexOf",
      "signature" : "int System.Collections.Generic.ObjectEqualityComparer`1<Mono.CompilerServices.SymbolWriter.NamespaceEntry>:LastIndexOf (Mono.CompilerServices.SymbolWriter.NamespaceEntry[],Mono.CompilerServices.SymbolWriter.NamespaceEntry,int,int)",
      "code_size" : "593",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Equals",
      "signature" : "bool System.Collections.Generic.ObjectEqualityComparer`1<Mono.CompilerServices.SymbolWriter.NamespaceEntry>:Equals (object)",
      "code_size" : "91",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetHashCode",
      "signature" : "int System.Collections.Generic.ObjectEqualityComparer`1<Mono.CompilerServices.SymbolWriter.NamespaceEntry>:GetHashCode ()",
      "code_size" : "44",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__get_Item",
      "signature" : "System.Collections.Generic.KeyValuePair`2<string, Mono.CompilerServices.SymbolWriter.LocalVariableEntry> System.Array:InternalArray__get_Item<System.Collections.Generic.KeyValuePair`2<string, Mono.CompilerServices.SymbolWriter.LocalVariableEntry>> (int)",
      "code_size" : "308",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.ObjectEqualityComparer`1<Mono.CompilerServices.SymbolWriter.LocalVariableEntry>:.ctor ()",
      "code_size" : "9",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Equals",
      "signature" : "bool System.Collections.Generic.ObjectEqualityComparer`1<Mono.CompilerServices.SymbolWriter.LocalVariableEntry>:Equals (Mono.CompilerServices.SymbolWriter.LocalVariableEntry,Mono.CompilerServices.SymbolWriter.LocalVariableEntry)",
      "code_size" : "243",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetHashCode",
      "signature" : "int System.Collections.Generic.ObjectEqualityComparer`1<Mono.CompilerServices.SymbolWriter.LocalVariableEntry>:GetHashCode (Mono.CompilerServices.SymbolWriter.LocalVariableEntry)",
      "code_size" : "140",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "IndexOf",
      "signature" : "int System.Collections.Generic.ObjectEqualityComparer`1<Mono.CompilerServices.SymbolWriter.LocalVariableEntry>:IndexOf (Mono.CompilerServices.SymbolWriter.LocalVariableEntry[],Mono.CompilerServices.SymbolWriter.LocalVariableEntry,int,int)",
      "code_size" : "547",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "LastIndexOf",
      "signature" : "int System.Collections.Generic.ObjectEqualityComparer`1<Mono.CompilerServices.SymbolWriter.LocalVariableEntry>:LastIndexOf (Mono.CompilerServices.SymbolWriter.LocalVariableEntry[],Mono.CompilerServices.SymbolWriter.LocalVariableEntry,int,int)",
      "code_size" : "555",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Equals",
      "signature" : "bool System.Collections.Generic.ObjectEqualityComparer`1<Mono.CompilerServices.SymbolWriter.LocalVariableEntry>:Equals (object)",
      "code_size" : "91",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetHashCode",
      "signature" : "int System.Collections.Generic.ObjectEqualityComparer`1<Mono.CompilerServices.SymbolWriter.LocalVariableEntry>:GetHashCode ()",
      "code_size" : "44",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.Dictionary`2/KeyCollection/Enumerator<string, Mono.CompilerServices.SymbolWriter.LocalVariableEntry>:.ctor (System.Collections.Generic.Dictionary`2<string, Mono.CompilerServices.SymbolWriter.LocalVariableEntry>)",
      "code_size" : "85",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Collections.Generic.Dictionary`2/KeyCollection/Enumerator<string, Mono.CompilerServices.SymbolWriter.LocalVariableEntry>:Dispose ()",
      "code_size" : "9",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "MoveNext",
      "signature" : "bool System.Collections.Generic.Dictionary`2/KeyCollection/Enumerator<string, Mono.CompilerServices.SymbolWriter.LocalVariableEntry>:MoveNext ()",
      "code_size" : "274",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Current",
      "signature" : "string System.Collections.Generic.Dictionary`2/KeyCollection/Enumerator<string, Mono.CompilerServices.SymbolWriter.LocalVariableEntry>:get_Current ()",
      "code_size" : "20",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerator.get_Current",
      "signature" : "object System.Collections.Generic.Dictionary`2/KeyCollection/Enumerator<string, Mono.CompilerServices.SymbolWriter.LocalVariableEntry>:System.Collections.IEnumerator.get_Current ()",
      "code_size" : "59",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerator.Reset",
      "signature" : "void System.Collections.Generic.Dictionary`2/KeyCollection/Enumerator<string, Mono.CompilerServices.SymbolWriter.LocalVariableEntry>:System.Collections.IEnumerator.Reset ()",
      "code_size" : "78",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator<string, Mono.CompilerServices.SymbolWriter.LocalVariableEntry>:.ctor (System.Collections.Generic.Dictionary`2<string, Mono.CompilerServices.SymbolWriter.LocalVariableEntry>)",
      "code_size" : "144",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator<string, Mono.CompilerServices.SymbolWriter.LocalVariableEntry>:Dispose ()",
      "code_size" : "9",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "MoveNext",
      "signature" : "bool System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator<string, Mono.CompilerServices.SymbolWriter.LocalVariableEntry>:MoveNext ()",
      "code_size" : "449",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Current",
      "signature" : "Mono.CompilerServices.SymbolWriter.LocalVariableEntry System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator<string, Mono.CompilerServices.SymbolWriter.LocalVariableEntry>:get_Current ()",
      "code_size" : "118",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerator.get_Current",
      "signature" : "object System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator<string, Mono.CompilerServices.SymbolWriter.LocalVariableEntry>:System.Collections.IEnumerator.get_Current ()",
      "code_size" : "182",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerator.Reset",
      "signature" : "void System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator<string, Mono.CompilerServices.SymbolWriter.LocalVariableEntry>:System.Collections.IEnumerator.Reset ()",
      "code_size" : "184",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "ContainsValue",
      "signature" : "bool System.Collections.Generic.Dictionary`2<string, Mono.CompilerServices.SymbolWriter.LocalVariableEntry>:ContainsValue (Mono.CompilerServices.SymbolWriter.LocalVariableEntry)",
      "code_size" : "424",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__get_Item",
      "signature" : "Mono.CompilerServices.SymbolWriter.LocalVariableEntry System.Array:InternalArray__get_Item<Mono.CompilerServices.SymbolWriter.LocalVariableEntry> (int)",
      "code_size" : "244",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__get_Item",
      "signature" : "Mono.CompilerServices.SymbolWriter.ScopeVariable System.Array:InternalArray__get_Item<Mono.CompilerServices.SymbolWriter.ScopeVariable> (int)",
      "code_size" : "122",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.ObjectEqualityComparer`1<Mono.CompilerServices.SymbolWriter.ScopeVariable>:.ctor ()",
      "code_size" : "9",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Equals",
      "signature" : "bool System.Collections.Generic.ObjectEqualityComparer`1<Mono.CompilerServices.SymbolWriter.ScopeVariable>:Equals (Mono.CompilerServices.SymbolWriter.ScopeVariable,Mono.CompilerServices.SymbolWriter.ScopeVariable)",
      "code_size" : "131",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetHashCode",
      "signature" : "int System.Collections.Generic.ObjectEqualityComparer`1<Mono.CompilerServices.SymbolWriter.ScopeVariable>:GetHashCode (Mono.CompilerServices.SymbolWriter.ScopeVariable)",
      "code_size" : "72",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "IndexOf",
      "signature" : "int System.Collections.Generic.ObjectEqualityComparer`1<Mono.CompilerServices.SymbolWriter.ScopeVariable>:IndexOf (Mono.CompilerServices.SymbolWriter.ScopeVariable[],Mono.CompilerServices.SymbolWriter.ScopeVariable,int,int)",
      "code_size" : "350",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "LastIndexOf",
      "signature" : "int System.Collections.Generic.ObjectEqualityComparer`1<Mono.CompilerServices.SymbolWriter.ScopeVariable>:LastIndexOf (Mono.CompilerServices.SymbolWriter.ScopeVariable[],Mono.CompilerServices.SymbolWriter.ScopeVariable,int,int)",
      "code_size" : "358",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Equals",
      "signature" : "bool System.Collections.Generic.ObjectEqualityComparer`1<Mono.CompilerServices.SymbolWriter.ScopeVariable>:Equals (object)",
      "code_size" : "91",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetHashCode",
      "signature" : "int System.Collections.Generic.ObjectEqualityComparer`1<Mono.CompilerServices.SymbolWriter.ScopeVariable>:GetHashCode ()",
      "code_size" : "44",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__get_Item",
      "signature" : "Mono.CSharp.AnonymousMethodStorey/StoreyFieldPair System.Array:InternalArray__get_Item<Mono.CSharp.AnonymousMethodStorey/StoreyFieldPair> (int)",
      "code_size" : "223",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.ObjectEqualityComparer`1<Mono.CSharp.AnonymousMethodStorey/StoreyFieldPair>:.ctor ()",
      "code_size" : "9",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Equals",
      "signature" : "bool System.Collections.Generic.ObjectEqualityComparer`1<Mono.CSharp.AnonymousMethodStorey/StoreyFieldPair>:Equals (Mono.CSharp.AnonymousMethodStorey/StoreyFieldPair,Mono.CSharp.AnonymousMethodStorey/StoreyFieldPair)",
      "code_size" : "280",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetHashCode",
      "signature" : "int System.Collections.Generic.ObjectEqualityComparer`1<Mono.CSharp.AnonymousMethodStorey/StoreyFieldPair>:GetHashCode (Mono.CSharp.AnonymousMethodStorey/StoreyFieldPair)",
      "code_size" : "155",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "IndexOf",
      "signature" : "int System.Collections.Generic.ObjectEqualityComparer`1<Mono.CSharp.AnonymousMethodStorey/StoreyFieldPair>:IndexOf (Mono.CSharp.AnonymousMethodStorey/StoreyFieldPair[],Mono.CSharp.AnonymousMethodStorey/StoreyFieldPair,int,int)",
      "code_size" : "583",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "LastIndexOf",
      "signature" : "int System.Collections.Generic.ObjectEqualityComparer`1<Mono.CSharp.AnonymousMethodStorey/StoreyFieldPair>:LastIndexOf (Mono.CSharp.AnonymousMethodStorey/StoreyFieldPair[],Mono.CSharp.AnonymousMethodStorey/StoreyFieldPair,int,int)",
      "code_size" : "583",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Equals",
      "signature" : "bool System.Collections.Generic.ObjectEqualityComparer`1<Mono.CSharp.AnonymousMethodStorey/StoreyFieldPair>:Equals (object)",
      "code_size" : "91",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetHashCode",
      "signature" : "int System.Collections.Generic.ObjectEqualityComparer`1<Mono.CSharp.AnonymousMethodStorey/StoreyFieldPair>:GetHashCode ()",
      "code_size" : "44",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__get_Item",
      "signature" : "T_INST System.Array:InternalArray__get_Item<T_INST> (int)",
      "code_size" : "324",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.ObjectEqualityComparer`1<T_INST>:.ctor ()",
      "code_size" : "43",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "IfNullAndNullsAreIllegalThenThrow",
      "signature" : "void System.ThrowHelper:IfNullAndNullsAreIllegalThenThrow<T_BOOL> (object,System.ExceptionArgument)",
      "code_size" : "43",
      "class" : "ThrowHelper",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.ObjectModel.ReadOnlyCollection`1<T_BOOL>:.ctor (System.Collections.Generic.IList`1<T_BOOL>)",
      "code_size" : "63",
      "class" : "ReadOnlyCollection`1",
      "namespace" : "System.Collections.ObjectModel",
      "wrapper_type" : "none",
    },
    {
      "name" : "BinarySearch",
      "signature" : "int System.Array:BinarySearch<T_BOOL> (T_BOOL[],int,int,T_BOOL,System.Collections.Generic.IComparer`1<T_BOOL>)",
      "code_size" : "613",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Default",
      "signature" : "System.Collections.Generic.EqualityComparer`1<T_BOOL> System.Collections.Generic.EqualityComparer`1<T_BOOL>:get_Default ()",
      "code_size" : "108",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1/Enumerator<T_BOOL>:.ctor (System.Collections.Generic.List`1<T_BOOL>)",
      "code_size" : "70",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "IndexOf",
      "signature" : "int System.Array:IndexOf<T_BOOL> (T_BOOL[],T_BOOL,int,int)",
      "code_size" : "269",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "LastIndexOf",
      "signature" : "int System.Array:LastIndexOf<T_BOOL> (T_BOOL[],T_BOOL,int,int)",
      "code_size" : "376",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "Sort",
      "signature" : "void System.Array:Sort<T_BOOL> (T_BOOL[],int,int,System.Collections.Generic.IComparer`1<T_BOOL>)",
      "code_size" : "282",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Array/FunctorComparer`1<T_BOOL>:.ctor (System.Comparison`1<T_BOOL>)",
      "code_size" : "39",
      "class" : "FunctorComparer`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1/SynchronizedList<T_BOOL>:.ctor (System.Collections.Generic.List`1<T_BOOL>)",
      "code_size" : "92",
      "class" : "SynchronizedList",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__get_Item",
      "signature" : "T_BYTE System.Array:InternalArray__get_Item<T_BYTE> (int)",
      "code_size" : "107",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.ObjectEqualityComparer`1<T_BYTE>:.ctor ()",
      "code_size" : "43",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "UnsafeEnumCast",
      "signature" : "int System.Runtime.CompilerServices.JitHelpers:UnsafeEnumCast<T_BYTE> (T_BYTE)",
      "code_size" : "23",
      "class" : "JitHelpers",
      "namespace" : "System.Runtime.CompilerServices",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__get_Item",
      "signature" : "T_INST System.Array:InternalArray__get_Item<T_INST> (int)",
      "code_size" : "259",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.Stack`1/Enumerator<Mono.CSharp.Location>:.ctor (System.Collections.Generic.Stack`1<Mono.CSharp.Location>)",
      "code_size" : "82",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Collections.Generic.Stack`1/Enumerator<Mono.CSharp.Location>:Dispose ()",
      "code_size" : "23",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "MoveNext",
      "signature" : "bool System.Collections.Generic.Stack`1/Enumerator<Mono.CSharp.Location>:MoveNext ()",
      "code_size" : "338",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Current",
      "signature" : "Mono.CSharp.Location System.Collections.Generic.Stack`1/Enumerator<Mono.CSharp.Location>:get_Current ()",
      "code_size" : "78",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerator.get_Current",
      "signature" : "object System.Collections.Generic.Stack`1/Enumerator<Mono.CSharp.Location>:System.Collections.IEnumerator.get_Current ()",
      "code_size" : "105",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerator.Reset",
      "signature" : "void System.Collections.Generic.Stack`1/Enumerator<Mono.CSharp.Location>:System.Collections.IEnumerator.Reset ()",
      "code_size" : "89",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".cctor",
      "signature" : "void System.EmptyArray`1<Mono.CSharp.Location>:.cctor ()",
      "code_size" : "36",
      "class" : "EmptyArray`1",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__get_Item",
      "signature" : "Mono.CSharp.Location System.Array:InternalArray__get_Item<Mono.CSharp.Location> (int)",
      "code_size" : "115",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.ObjectEqualityComparer`1<Mono.CSharp.Location>:.ctor ()",
      "code_size" : "9",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Equals",
      "signature" : "bool System.Collections.Generic.ObjectEqualityComparer`1<Mono.CSharp.Location>:Equals (Mono.CSharp.Location,Mono.CSharp.Location)",
      "code_size" : "128",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetHashCode",
      "signature" : "int System.Collections.Generic.ObjectEqualityComparer`1<Mono.CSharp.Location>:GetHashCode (Mono.CSharp.Location)",
      "code_size" : "70",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "IndexOf",
      "signature" : "int System.Collections.Generic.ObjectEqualityComparer`1<Mono.CSharp.Location>:IndexOf (Mono.CSharp.Location[],Mono.CSharp.Location,int,int)",
      "code_size" : "346",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "LastIndexOf",
      "signature" : "int System.Collections.Generic.ObjectEqualityComparer`1<Mono.CSharp.Location>:LastIndexOf (Mono.CSharp.Location[],Mono.CSharp.Location,int,int)",
      "code_size" : "346",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Equals",
      "signature" : "bool System.Collections.Generic.ObjectEqualityComparer`1<Mono.CSharp.Location>:Equals (object)",
      "code_size" : "91",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetHashCode",
      "signature" : "int System.Collections.Generic.ObjectEqualityComparer`1<Mono.CSharp.Location>:GetHashCode ()",
      "code_size" : "44",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.Stack`1/Enumerator<T_INT>:.ctor (System.Collections.Generic.Stack`1<T_INT>)",
      "code_size" : "76",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Empty",
      "signature" : "T_INT[] System.Array:Empty<T_INT> ()",
      "code_size" : "52",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.Stack`1/Enumerator<T_BOOL>:.ctor (System.Collections.Generic.Stack`1<T_BOOL>)",
      "code_size" : "73",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Empty",
      "signature" : "T_BOOL[] System.Array:Empty<T_BOOL> ()",
      "code_size" : "52",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "IfNullAndNullsAreIllegalThenThrow",
      "signature" : "void System.ThrowHelper:IfNullAndNullsAreIllegalThenThrow<T_BYTE> (object,System.ExceptionArgument)",
      "code_size" : "43",
      "class" : "ThrowHelper",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.ObjectModel.ReadOnlyCollection`1<T_BYTE>:.ctor (System.Collections.Generic.IList`1<T_BYTE>)",
      "code_size" : "63",
      "class" : "ReadOnlyCollection`1",
      "namespace" : "System.Collections.ObjectModel",
      "wrapper_type" : "none",
    },
    {
      "name" : "BinarySearch",
      "signature" : "int System.Array:BinarySearch<T_BYTE> (T_BYTE[],int,int,T_BYTE,System.Collections.Generic.IComparer`1<T_BYTE>)",
      "code_size" : "613",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1/Enumerator<T_BYTE>:.ctor (System.Collections.Generic.List`1<T_BYTE>)",
      "code_size" : "70",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "IndexOf",
      "signature" : "int System.Array:IndexOf<T_BYTE> (T_BYTE[],T_BYTE,int,int)",
      "code_size" : "269",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "LastIndexOf",
      "signature" : "int System.Array:LastIndexOf<T_BYTE> (T_BYTE[],T_BYTE,int,int)",
      "code_size" : "376",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "Sort",
      "signature" : "void System.Array:Sort<T_BYTE> (T_BYTE[],int,int,System.Collections.Generic.IComparer`1<T_BYTE>)",
      "code_size" : "282",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Array/FunctorComparer`1<T_BYTE>:.ctor (System.Comparison`1<T_BYTE>)",
      "code_size" : "39",
      "class" : "FunctorComparer`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1/SynchronizedList<T_BYTE>:.ctor (System.Collections.Generic.List`1<T_BYTE>)",
      "code_size" : "92",
      "class" : "SynchronizedList",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__get_Item",
      "signature" : "Mono.CSharp.OverloadResolver/AmbiguousCandidate System.Array:InternalArray__get_Item<Mono.CSharp.OverloadResolver/AmbiguousCandidate> (int)",
      "code_size" : "259",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.ObjectEqualityComparer`1<Mono.CSharp.OverloadResolver/AmbiguousCandidate>:.ctor ()",
      "code_size" : "9",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Equals",
      "signature" : "bool System.Collections.Generic.ObjectEqualityComparer`1<Mono.CSharp.OverloadResolver/AmbiguousCandidate>:Equals (Mono.CSharp.OverloadResolver/AmbiguousCandidate,Mono.CSharp.OverloadResolver/AmbiguousCandidate)",
      "code_size" : "269",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetHashCode",
      "signature" : "int System.Collections.Generic.ObjectEqualityComparer`1<Mono.CSharp.OverloadResolver/AmbiguousCandidate>:GetHashCode (Mono.CSharp.OverloadResolver/AmbiguousCandidate)",
      "code_size" : "153",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "IndexOf",
      "signature" : "int System.Collections.Generic.ObjectEqualityComparer`1<Mono.CSharp.OverloadResolver/AmbiguousCandidate>:IndexOf (Mono.CSharp.OverloadResolver/AmbiguousCandidate[],Mono.CSharp.OverloadResolver/AmbiguousCandidate,int,int)",
      "code_size" : "585",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "LastIndexOf",
      "signature" : "int System.Collections.Generic.ObjectEqualityComparer`1<Mono.CSharp.OverloadResolver/AmbiguousCandidate>:LastIndexOf (Mono.CSharp.OverloadResolver/AmbiguousCandidate[],Mono.CSharp.OverloadResolver/AmbiguousCandidate,int,int)",
      "code_size" : "593",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Equals",
      "signature" : "bool System.Collections.Generic.ObjectEqualityComparer`1<Mono.CSharp.OverloadResolver/AmbiguousCandidate>:Equals (object)",
      "code_size" : "91",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetHashCode",
      "signature" : "int System.Collections.Generic.ObjectEqualityComparer`1<Mono.CSharp.OverloadResolver/AmbiguousCandidate>:GetHashCode ()",
      "code_size" : "44",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Value",
      "signature" : "TValue_INT System.Collections.Generic.KeyValuePair`2<TKey_INT, TValue_INT>:get_Value ()",
      "code_size" : "25",
      "class" : "KeyValuePair`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Key",
      "signature" : "TKey_INT System.Collections.Generic.KeyValuePair`2<TKey_INT, TValue_INT>:get_Key ()",
      "code_size" : "24",
      "class" : "KeyValuePair`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.KeyValuePair`2<TKey_INT, TValue_INT>:.ctor (TKey_INT,TValue_INT)",
      "code_size" : "46",
      "class" : "KeyValuePair`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.Dictionary`2/Enumerator<TKey_INT, TValue_INT>:.ctor (System.Collections.Generic.Dictionary`2<TKey_INT, TValue_INT>,int)",
      "code_size" : "99",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.Dictionary`2/KeyCollection/Enumerator<TKey_INT, TValue_INT>:.ctor (System.Collections.Generic.Dictionary`2<TKey_INT, TValue_INT>)",
      "code_size" : "73",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator<TKey_INT, TValue_INT>:.ctor (System.Collections.Generic.Dictionary`2<TKey_INT, TValue_INT>)",
      "code_size" : "73",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__get_Item",
      "signature" : "Mono.CSharp.TypeInferenceContext/BoundInfo System.Array:InternalArray__get_Item<Mono.CSharp.TypeInferenceContext/BoundInfo> (int)",
      "code_size" : "208",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.ObjectEqualityComparer`1<Mono.CSharp.TypeInferenceContext/BoundInfo>:.ctor ()",
      "code_size" : "9",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Equals",
      "signature" : "bool System.Collections.Generic.ObjectEqualityComparer`1<Mono.CSharp.TypeInferenceContext/BoundInfo>:Equals (Mono.CSharp.TypeInferenceContext/BoundInfo,Mono.CSharp.TypeInferenceContext/BoundInfo)",
      "code_size" : "250",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetHashCode",
      "signature" : "int System.Collections.Generic.ObjectEqualityComparer`1<Mono.CSharp.TypeInferenceContext/BoundInfo>:GetHashCode (Mono.CSharp.TypeInferenceContext/BoundInfo)",
      "code_size" : "35",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "IndexOf",
      "signature" : "int System.Collections.Generic.ObjectEqualityComparer`1<Mono.CSharp.TypeInferenceContext/BoundInfo>:IndexOf (Mono.CSharp.TypeInferenceContext/BoundInfo[],Mono.CSharp.TypeInferenceContext/BoundInfo,int,int)",
      "code_size" : "541",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "LastIndexOf",
      "signature" : "int System.Collections.Generic.ObjectEqualityComparer`1<Mono.CSharp.TypeInferenceContext/BoundInfo>:LastIndexOf (Mono.CSharp.TypeInferenceContext/BoundInfo[],Mono.CSharp.TypeInferenceContext/BoundInfo,int,int)",
      "code_size" : "541",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Equals",
      "signature" : "bool System.Collections.Generic.ObjectEqualityComparer`1<Mono.CSharp.TypeInferenceContext/BoundInfo>:Equals (object)",
      "code_size" : "91",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetHashCode",
      "signature" : "int System.Collections.Generic.ObjectEqualityComparer`1<Mono.CSharp.TypeInferenceContext/BoundInfo>:GetHashCode ()",
      "code_size" : "44",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__get_Item",
      "signature" : "System.Reflection.CustomAttributeNamedArgument System.Array:InternalArray__get_Item<System.Reflection.CustomAttributeNamedArgument> (int)",
      "code_size" : "287",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__get_Item",
      "signature" : "Mono.CSharp.SourceFile/LocationRegion System.Array:InternalArray__get_Item<Mono.CSharp.SourceFile/LocationRegion> (int)",
      "code_size" : "122",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.ObjectEqualityComparer`1<Mono.CSharp.SourceFile/LocationRegion>:.ctor ()",
      "code_size" : "9",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Equals",
      "signature" : "bool System.Collections.Generic.ObjectEqualityComparer`1<Mono.CSharp.SourceFile/LocationRegion>:Equals (Mono.CSharp.SourceFile/LocationRegion,Mono.CSharp.SourceFile/LocationRegion)",
      "code_size" : "131",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetHashCode",
      "signature" : "int System.Collections.Generic.ObjectEqualityComparer`1<Mono.CSharp.SourceFile/LocationRegion>:GetHashCode (Mono.CSharp.SourceFile/LocationRegion)",
      "code_size" : "72",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "IndexOf",
      "signature" : "int System.Collections.Generic.ObjectEqualityComparer`1<Mono.CSharp.SourceFile/LocationRegion>:IndexOf (Mono.CSharp.SourceFile/LocationRegion[],Mono.CSharp.SourceFile/LocationRegion,int,int)",
      "code_size" : "350",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "LastIndexOf",
      "signature" : "int System.Collections.Generic.ObjectEqualityComparer`1<Mono.CSharp.SourceFile/LocationRegion>:LastIndexOf (Mono.CSharp.SourceFile/LocationRegion[],Mono.CSharp.SourceFile/LocationRegion,int,int)",
      "code_size" : "358",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Equals",
      "signature" : "bool System.Collections.Generic.ObjectEqualityComparer`1<Mono.CSharp.SourceFile/LocationRegion>:Equals (object)",
      "code_size" : "91",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetHashCode",
      "signature" : "int System.Collections.Generic.ObjectEqualityComparer`1<Mono.CSharp.SourceFile/LocationRegion>:GetHashCode ()",
      "code_size" : "44",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__get_Item",
      "signature" : "System.Collections.Generic.KeyValuePair`2<Mono.CSharp.ArrayContainer/TypeRankPair, Mono.CSharp.ArrayContainer> System.Array:InternalArray__get_Item<System.Collections.Generic.KeyValuePair`2<Mono.CSharp.ArrayContainer/TypeRankPair, Mono.CSharp.ArrayContainer>> (int)",
      "code_size" : "259",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.Dictionary`2/KeyCollection/Enumerator<Mono.CSharp.ArrayContainer/TypeRankPair, Mono.CSharp.ArrayContainer>:.ctor (System.Collections.Generic.Dictionary`2<Mono.CSharp.ArrayContainer/TypeRankPair, Mono.CSharp.ArrayContainer>)",
      "code_size" : "127",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Collections.Generic.Dictionary`2/KeyCollection/Enumerator<Mono.CSharp.ArrayContainer/TypeRankPair, Mono.CSharp.ArrayContainer>:Dispose ()",
      "code_size" : "9",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "MoveNext",
      "signature" : "bool System.Collections.Generic.Dictionary`2/KeyCollection/Enumerator<Mono.CSharp.ArrayContainer/TypeRankPair, Mono.CSharp.ArrayContainer>:MoveNext ()",
      "code_size" : "401",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Current",
      "signature" : "Mono.CSharp.ArrayContainer/TypeRankPair System.Collections.Generic.Dictionary`2/KeyCollection/Enumerator<Mono.CSharp.ArrayContainer/TypeRankPair, Mono.CSharp.ArrayContainer>:get_Current ()",
      "code_size" : "97",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerator.get_Current",
      "signature" : "object System.Collections.Generic.Dictionary`2/KeyCollection/Enumerator<Mono.CSharp.ArrayContainer/TypeRankPair, Mono.CSharp.ArrayContainer>:System.Collections.IEnumerator.get_Current ()",
      "code_size" : "161",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerator.Reset",
      "signature" : "void System.Collections.Generic.Dictionary`2/KeyCollection/Enumerator<Mono.CSharp.ArrayContainer/TypeRankPair, Mono.CSharp.ArrayContainer>:System.Collections.IEnumerator.Reset ()",
      "code_size" : "152",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "ContainsKey",
      "signature" : "bool System.Collections.Generic.Dictionary`2<Mono.CSharp.ArrayContainer/TypeRankPair, Mono.CSharp.ArrayContainer>:ContainsKey (Mono.CSharp.ArrayContainer/TypeRankPair)",
      "code_size" : "58",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator<Mono.CSharp.ArrayContainer/TypeRankPair, Mono.CSharp.ArrayContainer>:.ctor (System.Collections.Generic.Dictionary`2<Mono.CSharp.ArrayContainer/TypeRankPair, Mono.CSharp.ArrayContainer>)",
      "code_size" : "85",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator<Mono.CSharp.ArrayContainer/TypeRankPair, Mono.CSharp.ArrayContainer>:Dispose ()",
      "code_size" : "9",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "MoveNext",
      "signature" : "bool System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator<Mono.CSharp.ArrayContainer/TypeRankPair, Mono.CSharp.ArrayContainer>:MoveNext ()",
      "code_size" : "274",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Current",
      "signature" : "Mono.CSharp.ArrayContainer System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator<Mono.CSharp.ArrayContainer/TypeRankPair, Mono.CSharp.ArrayContainer>:get_Current ()",
      "code_size" : "20",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerator.get_Current",
      "signature" : "object System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator<Mono.CSharp.ArrayContainer/TypeRankPair, Mono.CSharp.ArrayContainer>:System.Collections.IEnumerator.get_Current ()",
      "code_size" : "59",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEnumerator.Reset",
      "signature" : "void System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator<Mono.CSharp.ArrayContainer/TypeRankPair, Mono.CSharp.ArrayContainer>:System.Collections.IEnumerator.Reset ()",
      "code_size" : "78",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "ContainsValue",
      "signature" : "bool System.Collections.Generic.Dictionary`2<Mono.CSharp.ArrayContainer/TypeRankPair, Mono.CSharp.ArrayContainer>:ContainsValue (Mono.CSharp.ArrayContainer)",
      "code_size" : "346",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Value",
      "signature" : "TValue_BOOL System.Collections.Generic.KeyValuePair`2<TKey_REF, TValue_BOOL>:get_Value ()",
      "code_size" : "25",
      "class" : "KeyValuePair`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Key",
      "signature" : "TKey_REF System.Collections.Generic.KeyValuePair`2<TKey_REF, TValue_BOOL>:get_Key ()",
      "code_size" : "24",
      "class" : "KeyValuePair`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.KeyValuePair`2<TKey_REF, TValue_BOOL>:.ctor (TKey_REF,TValue_BOOL)",
      "code_size" : "63",
      "class" : "KeyValuePair`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.Dictionary`2/Enumerator<TKey_REF, TValue_BOOL>:.ctor (System.Collections.Generic.Dictionary`2<TKey_REF, TValue_BOOL>,int)",
      "code_size" : "147",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.Dictionary`2/KeyCollection/Enumerator<TKey_REF, TValue_BOOL>:.ctor (System.Collections.Generic.Dictionary`2<TKey_REF, TValue_BOOL>)",
      "code_size" : "90",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator<TKey_REF, TValue_BOOL>:.ctor (System.Collections.Generic.Dictionary`2<TKey_REF, TValue_BOOL>)",
      "code_size" : "70",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.HashSet`1/Enumerator<T_INT>:.ctor (System.Collections.Generic.HashSet`1<T_INT>)",
      "code_size" : "73",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.HashSetEqualityComparer`1<T_INT>:.ctor ()",
      "code_size" : "81",
      "class" : "HashSetEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Collections.Generic.HashSet`1/Enumerator<T_INT>:Dispose ()",
      "code_size" : "18",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "MoveNext",
      "signature" : "bool System.Collections.Generic.HashSet`1/Enumerator<T_INT>:MoveNext ()",
      "code_size" : "284",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Current",
      "signature" : "T_INT System.Collections.Generic.HashSet`1/Enumerator<T_INT>:get_Current ()",
      "code_size" : "25",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.ObjectModel.ReadOnlyCollection`1<T_INT>:.ctor (System.Collections.Generic.IList`1<T_INT>)",
      "code_size" : "63",
      "class" : "ReadOnlyCollection`1",
      "namespace" : "System.Collections.ObjectModel",
      "wrapper_type" : "none",
    },
    {
      "name" : "BinarySearch",
      "signature" : "int System.Array:BinarySearch<T_INT> (T_INT[],int,int,T_INT,System.Collections.Generic.IComparer`1<T_INT>)",
      "code_size" : "613",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1/Enumerator<T_INT>:.ctor (System.Collections.Generic.List`1<T_INT>)",
      "code_size" : "73",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "IndexOf",
      "signature" : "int System.Array:IndexOf<T_INT> (T_INT[],T_INT,int,int)",
      "code_size" : "269",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "LastIndexOf",
      "signature" : "int System.Array:LastIndexOf<T_INT> (T_INT[],T_INT,int,int)",
      "code_size" : "376",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "Sort",
      "signature" : "void System.Array:Sort<T_INT> (T_INT[],int,int,System.Collections.Generic.IComparer`1<T_INT>)",
      "code_size" : "282",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Array/FunctorComparer`1<T_INT>:.ctor (System.Comparison`1<T_INT>)",
      "code_size" : "39",
      "class" : "FunctorComparer`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1/SynchronizedList<T_INT>:.ctor (System.Collections.Generic.List`1<T_INT>)",
      "code_size" : "92",
      "class" : "SynchronizedList",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "IfNullAndNullsAreIllegalThenThrow",
      "signature" : "void System.ThrowHelper:IfNullAndNullsAreIllegalThenThrow<T_LONG> (object,System.ExceptionArgument)",
      "code_size" : "43",
      "class" : "ThrowHelper",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.ObjectModel.ReadOnlyCollection`1<T_LONG>:.ctor (System.Collections.Generic.IList`1<T_LONG>)",
      "code_size" : "63",
      "class" : "ReadOnlyCollection`1",
      "namespace" : "System.Collections.ObjectModel",
      "wrapper_type" : "none",
    },
    {
      "name" : "BinarySearch",
      "signature" : "int System.Array:BinarySearch<T_LONG> (T_LONG[],int,int,T_LONG,System.Collections.Generic.IComparer`1<T_LONG>)",
      "code_size" : "613",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Default",
      "signature" : "System.Collections.Generic.EqualityComparer`1<T_LONG> System.Collections.Generic.EqualityComparer`1<T_LONG>:get_Default ()",
      "code_size" : "108",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "IndexOf",
      "signature" : "int System.Array:IndexOf<T_LONG> (T_LONG[],T_LONG,int,int)",
      "code_size" : "269",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "LastIndexOf",
      "signature" : "int System.Array:LastIndexOf<T_LONG> (T_LONG[],T_LONG,int,int)",
      "code_size" : "376",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "Sort",
      "signature" : "void System.Array:Sort<T_LONG> (T_LONG[],int,int,System.Collections.Generic.IComparer`1<T_LONG>)",
      "code_size" : "282",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Array/FunctorComparer`1<T_LONG>:.ctor (System.Comparison`1<T_LONG>)",
      "code_size" : "39",
      "class" : "FunctorComparer`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1/SynchronizedList<T_LONG>:.ctor (System.Collections.Generic.List`1<T_LONG>)",
      "code_size" : "92",
      "class" : "SynchronizedList",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Value",
      "signature" : "TValue_REF System.Collections.Generic.KeyValuePair`2<TKey_LONG, TValue_REF>:get_Value ()",
      "code_size" : "25",
      "class" : "KeyValuePair`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Key",
      "signature" : "TKey_LONG System.Collections.Generic.KeyValuePair`2<TKey_LONG, TValue_REF>:get_Key ()",
      "code_size" : "24",
      "class" : "KeyValuePair`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.KeyValuePair`2<TKey_LONG, TValue_REF>:.ctor (TKey_LONG,TValue_REF)",
      "code_size" : "64",
      "class" : "KeyValuePair`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.Dictionary`2/Enumerator<TKey_LONG, TValue_REF>:.ctor (System.Collections.Generic.Dictionary`2<TKey_LONG, TValue_REF>,int)",
      "code_size" : "134",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.Dictionary`2/KeyCollection/Enumerator<TKey_LONG, TValue_REF>:.ctor (System.Collections.Generic.Dictionary`2<TKey_LONG, TValue_REF>)",
      "code_size" : "71",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator<TKey_LONG, TValue_REF>:.ctor (System.Collections.Generic.Dictionary`2<TKey_LONG, TValue_REF>)",
      "code_size" : "90",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__get_Item",
      "signature" : "System.Reflection.Emit.Label System.Array:InternalArray__get_Item<System.Reflection.Emit.Label> (int)",
      "code_size" : "115",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.ObjectEqualityComparer`1<System.Reflection.Emit.Label>:.ctor ()",
      "code_size" : "9",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Equals",
      "signature" : "bool System.Collections.Generic.ObjectEqualityComparer`1<System.Reflection.Emit.Label>:Equals (System.Reflection.Emit.Label,System.Reflection.Emit.Label)",
      "code_size" : "97",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetHashCode",
      "signature" : "int System.Collections.Generic.ObjectEqualityComparer`1<System.Reflection.Emit.Label>:GetHashCode (System.Reflection.Emit.Label)",
      "code_size" : "25",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "IndexOf",
      "signature" : "int System.Collections.Generic.ObjectEqualityComparer`1<System.Reflection.Emit.Label>:IndexOf (System.Reflection.Emit.Label[],System.Reflection.Emit.Label,int,int)",
      "code_size" : "289",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "LastIndexOf",
      "signature" : "int System.Collections.Generic.ObjectEqualityComparer`1<System.Reflection.Emit.Label>:LastIndexOf (System.Reflection.Emit.Label[],System.Reflection.Emit.Label,int,int)",
      "code_size" : "289",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Equals",
      "signature" : "bool System.Collections.Generic.ObjectEqualityComparer`1<System.Reflection.Emit.Label>:Equals (object)",
      "code_size" : "91",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetHashCode",
      "signature" : "int System.Collections.Generic.ObjectEqualityComparer`1<System.Reflection.Emit.Label>:GetHashCode ()",
      "code_size" : "44",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "EnsureCapacity",
      "signature" : "void System.Collections.Generic.List`1<Mono.CompilerServices.SymbolWriter.CapturedScope>:EnsureCapacity (int)",
      "code_size" : "138",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "EnsureCapacity",
      "signature" : "void System.Collections.Generic.List`1<Mono.CompilerServices.SymbolWriter.CapturedVariable>:EnsureCapacity (int)",
      "code_size" : "138",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "EnsureCapacity",
      "signature" : "void System.Collections.Generic.List`1<Mono.CompilerServices.SymbolWriter.NamespaceEntry>:EnsureCapacity (int)",
      "code_size" : "138",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Insert",
      "signature" : "void System.Collections.Generic.Dictionary`2<string, Mono.CompilerServices.SymbolWriter.LocalVariableEntry>:Insert (string,Mono.CompilerServices.SymbolWriter.LocalVariableEntry,bool)",
      "code_size" : "920",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "FindEntry",
      "signature" : "int System.Collections.Generic.Dictionary`2<string, Mono.CompilerServices.SymbolWriter.LocalVariableEntry>:FindEntry (string)",
      "code_size" : "356",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.Dictionary`2<string, Mono.CompilerServices.SymbolWriter.LocalVariableEntry>:.ctor (int,System.Collections.Generic.IEqualityComparer`1<string>)",
      "code_size" : "113",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "EnsureCapacity",
      "signature" : "void System.Collections.Generic.List`1<Mono.CompilerServices.SymbolWriter.LocalVariableEntry>:EnsureCapacity (int)",
      "code_size" : "138",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "EnsureCapacity",
      "signature" : "void System.Collections.Generic.List`1<Mono.CompilerServices.SymbolWriter.ScopeVariable>:EnsureCapacity (int)",
      "code_size" : "138",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "EnsureCapacity",
      "signature" : "void System.Collections.Generic.List`1<Mono.CSharp.AnonymousMethodStorey/StoreyFieldPair>:EnsureCapacity (int)",
      "code_size" : "138",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "FindIndex",
      "signature" : "int System.Collections.Generic.List`1<Mono.CSharp.AnonymousMethodStorey/StoreyFieldPair>:FindIndex (System.Predicate`1<Mono.CSharp.AnonymousMethodStorey/StoreyFieldPair>)",
      "code_size" : "34",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Tuple`2<T1_REF, T2_REF>:.ctor (T1_REF,T2_REF)",
      "code_size" : "71",
      "class" : "Tuple`2",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateComparer",
      "signature" : "System.Collections.Generic.EqualityComparer`1<T_REF> System.Collections.Generic.EqualityComparer`1<T_REF>:CreateComparer ()",
      "code_size" : "1168",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "EnsureCapacity",
      "signature" : "void System.Collections.Generic.List`1<T_INST>:EnsureCapacity (int)",
      "code_size" : "168",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__get_Item",
      "signature" : "T_BOOL System.Array:InternalArray__get_Item<T_BOOL> (int)",
      "code_size" : "107",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "EnsureCapacity",
      "signature" : "void System.Collections.Generic.List`1<Mono.CSharp.Location>:EnsureCapacity (int)",
      "code_size" : "138",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "IndexOf",
      "signature" : "int System.Array:IndexOf<T_CHAR> (T_CHAR[],T_CHAR,int,int)",
      "code_size" : "269",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__get_Item",
      "signature" : "T_INT System.Array:InternalArray__get_Item<T_INT> (int)",
      "code_size" : "106",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "EnsureCapacity",
      "signature" : "void System.Collections.Generic.List`1<Mono.CSharp.OverloadResolver/AmbiguousCandidate>:EnsureCapacity (int)",
      "code_size" : "138",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".cctor",
      "signature" : "void System.Collections.Generic.List`1<Mono.CSharp.OverloadResolver/AmbiguousCandidate>:.cctor ()",
      "code_size" : "36",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "EnsureCapacity",
      "signature" : "void System.Collections.Generic.List`1<Mono.CSharp.TypeInferenceContext/BoundInfo>:EnsureCapacity (int)",
      "code_size" : "138",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".cctor",
      "signature" : "void System.Collections.Generic.List`1<Mono.CSharp.TypeInferenceContext/BoundInfo>:.cctor ()",
      "code_size" : "36",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Sort",
      "signature" : "void System.Collections.Generic.List`1<Mono.CSharp.SourceFile/LocationRegion>:Sort (int,int,System.Collections.Generic.IComparer`1<Mono.CSharp.SourceFile/LocationRegion>)",
      "code_size" : "148",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "BinarySearch",
      "signature" : "int System.Collections.Generic.List`1<Mono.CSharp.SourceFile/LocationRegion>:BinarySearch (int,int,Mono.CSharp.SourceFile/LocationRegion,System.Collections.Generic.IComparer`1<Mono.CSharp.SourceFile/LocationRegion>)",
      "code_size" : "145",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "EnsureCapacity",
      "signature" : "void System.Collections.Generic.List`1<Mono.CSharp.SourceFile/LocationRegion>:EnsureCapacity (int)",
      "code_size" : "138",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "InsertRange",
      "signature" : "void System.Collections.Generic.List`1<Mono.CSharp.Location>:InsertRange (int,System.Collections.Generic.IEnumerable`1<Mono.CSharp.Location>)",
      "code_size" : "617",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.Dictionary`2<Mono.CSharp.ArrayContainer/TypeRankPair, Mono.CSharp.ArrayContainer>:.ctor (int,System.Collections.Generic.IEqualityComparer`1<Mono.CSharp.ArrayContainer/TypeRankPair>)",
      "code_size" : "113",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Linq.Enumerable/WhereSelectEnumerableIterator`2<TSource_INST, TResult_REF>:.ctor (System.Collections.Generic.IEnumerable`1<TSource_INST>,System.Func`2<TSource_INST, bool>,System.Func`2<TSource_INST, TResult_REF>)",
      "code_size" : "114",
      "class" : "WhereSelectEnumerableIterator`2",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Linq.Enumerable/WhereSelectListIterator`2<TSource_INST, TResult_REF>:.ctor (System.Collections.Generic.List`1<TSource_INST>,System.Func`2<TSource_INST, bool>,System.Func`2<TSource_INST, TResult_REF>)",
      "code_size" : "114",
      "class" : "WhereSelectListIterator`2",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Linq.Enumerable/WhereSelectArrayIterator`2<TSource_INST, TResult_REF>:.ctor (TSource_INST[],System.Func`2<TSource_INST, bool>,System.Func`2<TSource_INST, TResult_REF>)",
      "code_size" : "114",
      "class" : "WhereSelectArrayIterator`2",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Linq.Enumerable/WhereEnumerableIterator`1<TSource_INST>:.ctor (System.Collections.Generic.IEnumerable`1<TSource_INST>,System.Func`2<TSource_INST, bool>)",
      "code_size" : "107",
      "class" : "WhereEnumerableIterator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Linq.Enumerable/WhereListIterator`1<TSource_INST>:.ctor (System.Collections.Generic.List`1<TSource_INST>,System.Func`2<TSource_INST, bool>)",
      "code_size" : "107",
      "class" : "WhereListIterator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Linq.Enumerable/WhereArrayIterator`1<TSource_INST>:.ctor (TSource_INST[],System.Func`2<TSource_INST, bool>)",
      "code_size" : "107",
      "class" : "WhereArrayIterator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.ObjectEqualityComparer`1<T_INT>:.ctor ()",
      "code_size" : "43",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Sort",
      "signature" : "void System.Array:Sort<T_LONG> (T_LONG[],System.Collections.Generic.IComparer`1<T_LONG>)",
      "code_size" : "127",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "InternalArray__get_Item",
      "signature" : "T_LONG System.Array:InternalArray__get_Item<T_LONG> (int)",
      "code_size" : "106",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "EnsureCapacity",
      "signature" : "void System.Collections.Generic.List`1<System.Reflection.Emit.Label>:EnsureCapacity (int)",
      "code_size" : "138",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "IndexOf",
      "signature" : "int System.Array:IndexOf<System.Reflection.Emit.Label> (System.Reflection.Emit.Label[],System.Reflection.Emit.Label,int,int)",
      "code_size" : "243",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "Insert",
      "signature" : "void System.Collections.Generic.Dictionary`2<Mono.CSharp.ArrayContainer/TypeRankPair, Mono.CSharp.ArrayContainer>:Insert (Mono.CSharp.ArrayContainer/TypeRankPair,Mono.CSharp.ArrayContainer,bool)",
      "code_size" : "902",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "FindEntry",
      "signature" : "int System.Collections.Generic.Dictionary`2<Mono.CSharp.ArrayContainer/TypeRankPair, Mono.CSharp.ArrayContainer>:FindEntry (Mono.CSharp.ArrayContainer/TypeRankPair)",
      "code_size" : "397",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Default",
      "signature" : "System.Collections.Generic.Comparer`1<T_BOOL> System.Collections.Generic.Comparer`1<T_BOOL>:get_Default ()",
      "code_size" : "108",
      "class" : "Comparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateComparer",
      "signature" : "System.Collections.Generic.EqualityComparer`1<T_BOOL> System.Collections.Generic.EqualityComparer`1<T_BOOL>:CreateComparer ()",
      "code_size" : "1185",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "SortImpl",
      "signature" : "void System.Array:SortImpl<TKey_BOOL> (TKey_BOOL[],int,int,System.Collections.Generic.IComparer`1<TKey_BOOL>)",
      "code_size" : "1555",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Default",
      "signature" : "System.Collections.Generic.Comparer`1<T_BYTE> System.Collections.Generic.Comparer`1<T_BYTE>:get_Default ()",
      "code_size" : "108",
      "class" : "Comparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "SortImpl",
      "signature" : "void System.Array:SortImpl<TKey_BYTE> (TKey_BYTE[],int,int,System.Collections.Generic.IComparer`1<TKey_BYTE>)",
      "code_size" : "1555",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Default",
      "signature" : "System.Collections.Generic.Comparer`1<T_INT> System.Collections.Generic.Comparer`1<T_INT>:get_Default ()",
      "code_size" : "108",
      "class" : "Comparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "SortImpl",
      "signature" : "void System.Array:SortImpl<TKey_INT> (TKey_INT[],int,int,System.Collections.Generic.IComparer`1<TKey_INT>)",
      "code_size" : "1555",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Default",
      "signature" : "System.Collections.Generic.Comparer`1<T_LONG> System.Collections.Generic.Comparer`1<T_LONG>:get_Default ()",
      "code_size" : "108",
      "class" : "Comparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateComparer",
      "signature" : "System.Collections.Generic.EqualityComparer`1<T_LONG> System.Collections.Generic.EqualityComparer`1<T_LONG>:CreateComparer ()",
      "code_size" : "1185",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "SortImpl",
      "signature" : "void System.Array:SortImpl<TKey_LONG> (TKey_LONG[],int,int,System.Collections.Generic.IComparer`1<TKey_LONG>)",
      "code_size" : "1555",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Capacity",
      "signature" : "void System.Collections.Generic.List`1<Mono.CompilerServices.SymbolWriter.CapturedScope>:set_Capacity (int)",
      "code_size" : "180",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Capacity",
      "signature" : "void System.Collections.Generic.List`1<Mono.CompilerServices.SymbolWriter.CapturedVariable>:set_Capacity (int)",
      "code_size" : "180",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Capacity",
      "signature" : "void System.Collections.Generic.List`1<Mono.CompilerServices.SymbolWriter.NamespaceEntry>:set_Capacity (int)",
      "code_size" : "180",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Resize",
      "signature" : "void System.Collections.Generic.Dictionary`2<string, Mono.CompilerServices.SymbolWriter.LocalVariableEntry>:Resize ()",
      "code_size" : "39",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Initialize",
      "signature" : "void System.Collections.Generic.Dictionary`2<string, Mono.CompilerServices.SymbolWriter.LocalVariableEntry>:Initialize (int)",
      "code_size" : "211",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Capacity",
      "signature" : "void System.Collections.Generic.List`1<Mono.CompilerServices.SymbolWriter.LocalVariableEntry>:set_Capacity (int)",
      "code_size" : "180",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Capacity",
      "signature" : "void System.Collections.Generic.List`1<Mono.CompilerServices.SymbolWriter.ScopeVariable>:set_Capacity (int)",
      "code_size" : "180",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Capacity",
      "signature" : "void System.Collections.Generic.List`1<Mono.CSharp.AnonymousMethodStorey/StoreyFieldPair>:set_Capacity (int)",
      "code_size" : "180",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "FindIndex",
      "signature" : "int System.Collections.Generic.List`1<Mono.CSharp.AnonymousMethodStorey/StoreyFieldPair>:FindIndex (int,int,System.Predicate`1<Mono.CSharp.AnonymousMethodStorey/StoreyFieldPair>)",
      "code_size" : "261",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.ObjectEqualityComparer`1<T_REF>:.ctor ()",
      "code_size" : "18",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Capacity",
      "signature" : "void System.Collections.Generic.List`1<T_INST>:set_Capacity (int)",
      "code_size" : "260",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Capacity",
      "signature" : "void System.Collections.Generic.List`1<Mono.CSharp.Location>:set_Capacity (int)",
      "code_size" : "180",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Default",
      "signature" : "System.Collections.Generic.EqualityComparer`1<T_CHAR> System.Collections.Generic.EqualityComparer`1<T_CHAR>:get_Default ()",
      "code_size" : "108",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Capacity",
      "signature" : "void System.Collections.Generic.List`1<Mono.CSharp.OverloadResolver/AmbiguousCandidate>:set_Capacity (int)",
      "code_size" : "180",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Capacity",
      "signature" : "void System.Collections.Generic.List`1<Mono.CSharp.TypeInferenceContext/BoundInfo>:set_Capacity (int)",
      "code_size" : "180",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Sort",
      "signature" : "void System.Array:Sort<Mono.CSharp.SourceFile/LocationRegion> (Mono.CSharp.SourceFile/LocationRegion[],int,int,System.Collections.Generic.IComparer`1<Mono.CSharp.SourceFile/LocationRegion>)",
      "code_size" : "249",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "BinarySearch",
      "signature" : "int System.Array:BinarySearch<Mono.CSharp.SourceFile/LocationRegion> (Mono.CSharp.SourceFile/LocationRegion[],int,int,Mono.CSharp.SourceFile/LocationRegion,System.Collections.Generic.IComparer`1<Mono.CSharp.SourceFile/LocationRegion>)",
      "code_size" : "565",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Capacity",
      "signature" : "void System.Collections.Generic.List`1<Mono.CSharp.SourceFile/LocationRegion>:set_Capacity (int)",
      "code_size" : "180",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Default",
      "signature" : "System.Collections.Generic.EqualityComparer`1<Mono.CSharp.ArrayContainer/TypeRankPair> System.Collections.Generic.EqualityComparer`1<Mono.CSharp.ArrayContainer/TypeRankPair>:get_Default ()",
      "code_size" : "66",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.EqualityComparer`1<Mono.CSharp.ArrayContainer/TypeRankPair>:.ctor ()",
      "code_size" : "9",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateComparer",
      "signature" : "System.Collections.Generic.EqualityComparer`1<Mono.CSharp.ArrayContainer/TypeRankPair> System.Collections.Generic.EqualityComparer`1<Mono.CSharp.ArrayContainer/TypeRankPair>:CreateComparer ()",
      "code_size" : "1064",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "IndexOf",
      "signature" : "int System.Collections.Generic.EqualityComparer`1<Mono.CSharp.ArrayContainer/TypeRankPair>:IndexOf (Mono.CSharp.ArrayContainer/TypeRankPair[],Mono.CSharp.ArrayContainer/TypeRankPair,int,int)",
      "code_size" : "211",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "LastIndexOf",
      "signature" : "int System.Collections.Generic.EqualityComparer`1<Mono.CSharp.ArrayContainer/TypeRankPair>:LastIndexOf (Mono.CSharp.ArrayContainer/TypeRankPair[],Mono.CSharp.ArrayContainer/TypeRankPair,int,int)",
      "code_size" : "218",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEqualityComparer.GetHashCode",
      "signature" : "int System.Collections.Generic.EqualityComparer`1<Mono.CSharp.ArrayContainer/TypeRankPair>:System.Collections.IEqualityComparer.GetHashCode (object)",
      "code_size" : "220",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IEqualityComparer.Equals",
      "signature" : "bool System.Collections.Generic.EqualityComparer`1<Mono.CSharp.ArrayContainer/TypeRankPair>:System.Collections.IEqualityComparer.Equals (object,object)",
      "code_size" : "382",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.GenericEqualityComparer`1<Mono.CSharp.ArrayContainer/TypeRankPair>:.ctor ()",
      "code_size" : "9",
      "class" : "GenericEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Equals",
      "signature" : "bool System.Collections.Generic.GenericEqualityComparer`1<Mono.CSharp.ArrayContainer/TypeRankPair>:Equals (Mono.CSharp.ArrayContainer/TypeRankPair,Mono.CSharp.ArrayContainer/TypeRankPair)",
      "code_size" : "70",
      "class" : "GenericEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetHashCode",
      "signature" : "int System.Collections.Generic.GenericEqualityComparer`1<Mono.CSharp.ArrayContainer/TypeRankPair>:GetHashCode (Mono.CSharp.ArrayContainer/TypeRankPair)",
      "code_size" : "35",
      "class" : "GenericEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "IndexOf",
      "signature" : "int System.Collections.Generic.GenericEqualityComparer`1<Mono.CSharp.ArrayContainer/TypeRankPair>:IndexOf (Mono.CSharp.ArrayContainer/TypeRankPair[],Mono.CSharp.ArrayContainer/TypeRankPair,int,int)",
      "code_size" : "307",
      "class" : "GenericEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "LastIndexOf",
      "signature" : "int System.Collections.Generic.GenericEqualityComparer`1<Mono.CSharp.ArrayContainer/TypeRankPair>:LastIndexOf (Mono.CSharp.ArrayContainer/TypeRankPair[],Mono.CSharp.ArrayContainer/TypeRankPair,int,int)",
      "code_size" : "315",
      "class" : "GenericEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Equals",
      "signature" : "bool System.Collections.Generic.GenericEqualityComparer`1<Mono.CSharp.ArrayContainer/TypeRankPair>:Equals (object)",
      "code_size" : "91",
      "class" : "GenericEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetHashCode",
      "signature" : "int System.Collections.Generic.GenericEqualityComparer`1<Mono.CSharp.ArrayContainer/TypeRankPair>:GetHashCode ()",
      "code_size" : "44",
      "class" : "GenericEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Initialize",
      "signature" : "void System.Collections.Generic.Dictionary`2<Mono.CSharp.ArrayContainer/TypeRankPair, Mono.CSharp.ArrayContainer>:Initialize (int)",
      "code_size" : "211",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Linq.Enumerable/Iterator`1<TSource_REF>:.ctor ()",
      "code_size" : "48",
      "class" : "Iterator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Linq.Enumerable/Iterator`1<TSource_INST>:.ctor ()",
      "code_size" : "48",
      "class" : "Iterator`1",
      "namespace" : "",
      "wrapper_type" : "none",
    },
    {
      "name" : "set_Capacity",
      "signature" : "void System.Collections.Generic.List`1<System.Reflection.Emit.Label>:set_Capacity (int)",
      "code_size" : "180",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Resize",
      "signature" : "void System.Collections.Generic.Dictionary`2<Mono.CSharp.ArrayContainer/TypeRankPair, Mono.CSharp.ArrayContainer>:Resize ()",
      "code_size" : "39",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateComparer",
      "signature" : "System.Collections.Generic.Comparer`1<T_BOOL> System.Collections.Generic.Comparer`1<T_BOOL>:CreateComparer ()",
      "code_size" : "577",
      "class" : "Comparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.ObjectEqualityComparer`1<T_BOOL>:.ctor ()",
      "code_size" : "43",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "qsort",
      "signature" : "void System.Array:qsort<K_BOOL> (K_BOOL[],int,int,System.Collections.Generic.IComparer`1<K_BOOL>)",
      "code_size" : "2748",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "CheckComparerAvailable",
      "signature" : "void System.Array:CheckComparerAvailable<K_BOOL> (K_BOOL[],int,int)",
      "code_size" : "438",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "qsort",
      "signature" : "void System.Array:qsort<T_ULONG> (T_ULONG[],int,int)",
      "code_size" : "1340",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "qsort",
      "signature" : "void System.Array:qsort<T_UINT> (T_UINT[],int,int)",
      "code_size" : "1331",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "qsort",
      "signature" : "void System.Array:qsort<T_UINT16> (T_UINT16[],int,int)",
      "code_size" : "1340",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "qsort",
      "signature" : "void System.Array:qsort<T_SINGLE> (T_SINGLE[],int,int)",
      "code_size" : "1417",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "qsort",
      "signature" : "void System.Array:qsort<T_SBYTE> (T_SBYTE[],int,int)",
      "code_size" : "1349",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "qsort",
      "signature" : "void System.Array:qsort<T_INT16> (T_INT16[],int,int)",
      "code_size" : "1349",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "qsort",
      "signature" : "void System.Array:qsort<T_DOUBLE> (T_DOUBLE[],int,int)",
      "code_size" : "1349",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "qsort",
      "signature" : "void System.Array:qsort<System.Decimal> (System.Decimal[],int,int)",
      "code_size" : "2417",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "qsort",
      "signature" : "void System.Array:qsort<System.DateTime> (System.DateTime[],int,int)",
      "code_size" : "1572",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "qsort",
      "signature" : "void System.Array:qsort<T_CHAR> (T_CHAR[],int,int)",
      "code_size" : "1340",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "qsort",
      "signature" : "void System.Array:qsort<T_BYTE> (T_BYTE[],int,int)",
      "code_size" : "1340",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "qsort",
      "signature" : "void System.Array:qsort<T_LONG> (T_LONG[],int,int)",
      "code_size" : "1340",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "qsort",
      "signature" : "void System.Array:qsort<T_INT> (T_INT[],int,int)",
      "code_size" : "1340",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateComparer",
      "signature" : "System.Collections.Generic.Comparer`1<T_BYTE> System.Collections.Generic.Comparer`1<T_BYTE>:CreateComparer ()",
      "code_size" : "577",
      "class" : "Comparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "qsort",
      "signature" : "void System.Array:qsort<K_BYTE> (K_BYTE[],int,int,System.Collections.Generic.IComparer`1<K_BYTE>)",
      "code_size" : "2748",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "CheckComparerAvailable",
      "signature" : "void System.Array:CheckComparerAvailable<K_BYTE> (K_BYTE[],int,int)",
      "code_size" : "438",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateComparer",
      "signature" : "System.Collections.Generic.Comparer`1<T_INT> System.Collections.Generic.Comparer`1<T_INT>:CreateComparer ()",
      "code_size" : "577",
      "class" : "Comparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "qsort",
      "signature" : "void System.Array:qsort<K_INT> (K_INT[],int,int,System.Collections.Generic.IComparer`1<K_INT>)",
      "code_size" : "2740",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "CheckComparerAvailable",
      "signature" : "void System.Array:CheckComparerAvailable<K_INT> (K_INT[],int,int)",
      "code_size" : "437",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateComparer",
      "signature" : "System.Collections.Generic.Comparer`1<T_LONG> System.Collections.Generic.Comparer`1<T_LONG>:CreateComparer ()",
      "code_size" : "577",
      "class" : "Comparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.ObjectEqualityComparer`1<T_LONG>:.ctor ()",
      "code_size" : "43",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "qsort",
      "signature" : "void System.Array:qsort<K_LONG> (K_LONG[],int,int,System.Collections.Generic.IComparer`1<K_LONG>)",
      "code_size" : "2748",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "CheckComparerAvailable",
      "signature" : "void System.Array:CheckComparerAvailable<K_LONG> (K_LONG[],int,int)",
      "code_size" : "437",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "Resize",
      "signature" : "void System.Collections.Generic.Dictionary`2<string, Mono.CompilerServices.SymbolWriter.LocalVariableEntry>:Resize (int,bool)",
      "code_size" : "613",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.EqualityComparer`1<T_REF>:.ctor ()",
      "code_size" : "13",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateComparer",
      "signature" : "System.Collections.Generic.EqualityComparer`1<T_CHAR> System.Collections.Generic.EqualityComparer`1<T_CHAR>:CreateComparer ()",
      "code_size" : "1185",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "SortImpl",
      "signature" : "void System.Array:SortImpl<Mono.CSharp.SourceFile/LocationRegion> (Mono.CSharp.SourceFile/LocationRegion[],int,int,System.Collections.Generic.IComparer`1<Mono.CSharp.SourceFile/LocationRegion>)",
      "code_size" : "1454",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "get_Default",
      "signature" : "System.Collections.Generic.Comparer`1<Mono.CSharp.SourceFile/LocationRegion> System.Collections.Generic.Comparer`1<Mono.CSharp.SourceFile/LocationRegion>:get_Default ()",
      "code_size" : "66",
      "class" : "Comparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.Comparer`1<Mono.CSharp.SourceFile/LocationRegion>:.ctor ()",
      "code_size" : "9",
      "class" : "Comparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Create",
      "signature" : "System.Collections.Generic.Comparer`1<Mono.CSharp.SourceFile/LocationRegion> System.Collections.Generic.Comparer`1<Mono.CSharp.SourceFile/LocationRegion>:Create (System.Comparison`1<Mono.CSharp.SourceFile/LocationRegion>)",
      "code_size" : "107",
      "class" : "Comparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "CreateComparer",
      "signature" : "System.Collections.Generic.Comparer`1<Mono.CSharp.SourceFile/LocationRegion> System.Collections.Generic.Comparer`1<Mono.CSharp.SourceFile/LocationRegion>:CreateComparer ()",
      "code_size" : "510",
      "class" : "Comparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "System.Collections.IComparer.Compare",
      "signature" : "int System.Collections.Generic.Comparer`1<Mono.CSharp.SourceFile/LocationRegion>:System.Collections.IComparer.Compare (object,object)",
      "code_size" : "363",
      "class" : "Comparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.GenericComparer`1<Mono.CSharp.SourceFile/LocationRegion>:.ctor ()",
      "code_size" : "9",
      "class" : "GenericComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Compare",
      "signature" : "int System.Collections.Generic.GenericComparer`1<Mono.CSharp.SourceFile/LocationRegion>:Compare (Mono.CSharp.SourceFile/LocationRegion,Mono.CSharp.SourceFile/LocationRegion)",
      "code_size" : "63",
      "class" : "GenericComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Equals",
      "signature" : "bool System.Collections.Generic.GenericComparer`1<Mono.CSharp.SourceFile/LocationRegion>:Equals (object)",
      "code_size" : "91",
      "class" : "GenericComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetHashCode",
      "signature" : "int System.Collections.Generic.GenericComparer`1<Mono.CSharp.SourceFile/LocationRegion>:GetHashCode ()",
      "code_size" : "44",
      "class" : "GenericComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.ObjectEqualityComparer`1<Mono.CSharp.ArrayContainer/TypeRankPair>:.ctor ()",
      "code_size" : "9",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Equals",
      "signature" : "bool System.Collections.Generic.ObjectEqualityComparer`1<Mono.CSharp.ArrayContainer/TypeRankPair>:Equals (Mono.CSharp.ArrayContainer/TypeRankPair,Mono.CSharp.ArrayContainer/TypeRankPair)",
      "code_size" : "250",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetHashCode",
      "signature" : "int System.Collections.Generic.ObjectEqualityComparer`1<Mono.CSharp.ArrayContainer/TypeRankPair>:GetHashCode (Mono.CSharp.ArrayContainer/TypeRankPair)",
      "code_size" : "35",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "IndexOf",
      "signature" : "int System.Collections.Generic.ObjectEqualityComparer`1<Mono.CSharp.ArrayContainer/TypeRankPair>:IndexOf (Mono.CSharp.ArrayContainer/TypeRankPair[],Mono.CSharp.ArrayContainer/TypeRankPair,int,int)",
      "code_size" : "541",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "LastIndexOf",
      "signature" : "int System.Collections.Generic.ObjectEqualityComparer`1<Mono.CSharp.ArrayContainer/TypeRankPair>:LastIndexOf (Mono.CSharp.ArrayContainer/TypeRankPair[],Mono.CSharp.ArrayContainer/TypeRankPair,int,int)",
      "code_size" : "541",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Equals",
      "signature" : "bool System.Collections.Generic.ObjectEqualityComparer`1<Mono.CSharp.ArrayContainer/TypeRankPair>:Equals (object)",
      "code_size" : "91",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetHashCode",
      "signature" : "int System.Collections.Generic.ObjectEqualityComparer`1<Mono.CSharp.ArrayContainer/TypeRankPair>:GetHashCode ()",
      "code_size" : "44",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Resize",
      "signature" : "void System.Collections.Generic.Dictionary`2<Mono.CSharp.ArrayContainer/TypeRankPair, Mono.CSharp.ArrayContainer>:Resize (int,bool)",
      "code_size" : "645",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.ObjectComparer`1<T_BOOL>:.ctor ()",
      "code_size" : "43",
      "class" : "ObjectComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.EqualityComparer`1<T_BOOL>:.ctor ()",
      "code_size" : "13",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "swap",
      "signature" : "void System.Array:swap<T_BOOL> (T_BOOL[],int,int)",
      "code_size" : "163",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "QSortArrange",
      "signature" : "bool System.Array:QSortArrange<K_BOOL> (K_BOOL[],int,int,System.Collections.Generic.IComparer`1<K_BOOL>)",
      "code_size" : "936",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "swap",
      "signature" : "void System.Array:swap<T_ULONG> (T_ULONG[],int,int)",
      "code_size" : "163",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "QSortArrange",
      "signature" : "bool System.Array:QSortArrange<T_ULONG> (T_ULONG[],int,int)",
      "code_size" : "268",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "swap",
      "signature" : "void System.Array:swap<T_UINT> (T_UINT[],int,int)",
      "code_size" : "159",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "QSortArrange",
      "signature" : "bool System.Array:QSortArrange<T_UINT> (T_UINT[],int,int)",
      "code_size" : "265",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "swap",
      "signature" : "void System.Array:swap<T_UINT16> (T_UINT16[],int,int)",
      "code_size" : "163",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "QSortArrange",
      "signature" : "bool System.Array:QSortArrange<T_UINT16> (T_UINT16[],int,int)",
      "code_size" : "268",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "swap",
      "signature" : "void System.Array:swap<T_SINGLE> (T_SINGLE[],int,int)",
      "code_size" : "209",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "QSortArrange",
      "signature" : "bool System.Array:QSortArrange<T_SINGLE> (T_SINGLE[],int,int)",
      "code_size" : "289",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "swap",
      "signature" : "void System.Array:swap<T_SBYTE> (T_SBYTE[],int,int)",
      "code_size" : "165",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "QSortArrange",
      "signature" : "bool System.Array:QSortArrange<T_SBYTE> (T_SBYTE[],int,int)",
      "code_size" : "271",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "swap",
      "signature" : "void System.Array:swap<T_INT16> (T_INT16[],int,int)",
      "code_size" : "165",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "QSortArrange",
      "signature" : "bool System.Array:QSortArrange<T_INT16> (T_INT16[],int,int)",
      "code_size" : "271",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "swap",
      "signature" : "void System.Array:swap<T_DOUBLE> (T_DOUBLE[],int,int)",
      "code_size" : "167",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "QSortArrange",
      "signature" : "bool System.Array:QSortArrange<T_DOUBLE> (T_DOUBLE[],int,int)",
      "code_size" : "273",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "QSortArrange",
      "signature" : "bool System.Array:QSortArrange<System.Decimal> (System.Decimal[],int,int)",
      "code_size" : "620",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "QSortArrange",
      "signature" : "bool System.Array:QSortArrange<System.DateTime> (System.DateTime[],int,int)",
      "code_size" : "351",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "swap",
      "signature" : "void System.Array:swap<T_CHAR> (T_CHAR[],int,int)",
      "code_size" : "163",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "QSortArrange",
      "signature" : "bool System.Array:QSortArrange<T_CHAR> (T_CHAR[],int,int)",
      "code_size" : "268",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "swap",
      "signature" : "void System.Array:swap<T_BYTE> (T_BYTE[],int,int)",
      "code_size" : "163",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "QSortArrange",
      "signature" : "bool System.Array:QSortArrange<T_BYTE> (T_BYTE[],int,int)",
      "code_size" : "268",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "swap",
      "signature" : "void System.Array:swap<T_LONG> (T_LONG[],int,int)",
      "code_size" : "163",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "QSortArrange",
      "signature" : "bool System.Array:QSortArrange<T_LONG> (T_LONG[],int,int)",
      "code_size" : "268",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "swap",
      "signature" : "void System.Array:swap<T_INT> (T_INT[],int,int)",
      "code_size" : "161",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "QSortArrange",
      "signature" : "bool System.Array:QSortArrange<T_INT> (T_INT[],int,int)",
      "code_size" : "268",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.ObjectComparer`1<T_BYTE>:.ctor ()",
      "code_size" : "43",
      "class" : "ObjectComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "QSortArrange",
      "signature" : "bool System.Array:QSortArrange<K_BYTE> (K_BYTE[],int,int,System.Collections.Generic.IComparer`1<K_BYTE>)",
      "code_size" : "936",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.ObjectComparer`1<T_INT>:.ctor ()",
      "code_size" : "43",
      "class" : "ObjectComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "QSortArrange",
      "signature" : "bool System.Array:QSortArrange<K_INT> (K_INT[],int,int,System.Collections.Generic.IComparer`1<K_INT>)",
      "code_size" : "933",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.ObjectComparer`1<T_LONG>:.ctor ()",
      "code_size" : "43",
      "class" : "ObjectComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.EqualityComparer`1<T_LONG>:.ctor ()",
      "code_size" : "13",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "QSortArrange",
      "signature" : "bool System.Array:QSortArrange<K_LONG> (K_LONG[],int,int,System.Collections.Generic.IComparer`1<K_LONG>)",
      "code_size" : "936",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.ObjectEqualityComparer`1<T_CHAR>:.ctor ()",
      "code_size" : "43",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "qsort",
      "signature" : "void System.Array:qsort<Mono.CSharp.SourceFile/LocationRegion> (Mono.CSharp.SourceFile/LocationRegion[],int,int,System.Collections.Generic.IComparer`1<Mono.CSharp.SourceFile/LocationRegion>)",
      "code_size" : "3354",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : "CheckComparerAvailable",
      "signature" : "void System.Array:CheckComparerAvailable<Mono.CSharp.SourceFile/LocationRegion> (Mono.CSharp.SourceFile/LocationRegion[],int,int)",
      "code_size" : "509",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.ComparisonComparer`1<Mono.CSharp.SourceFile/LocationRegion>:.ctor (System.Comparison`1<Mono.CSharp.SourceFile/LocationRegion>)",
      "code_size" : "43",
      "class" : "ComparisonComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Compare",
      "signature" : "int System.Collections.Generic.ComparisonComparer`1<Mono.CSharp.SourceFile/LocationRegion>:Compare (Mono.CSharp.SourceFile/LocationRegion,Mono.CSharp.SourceFile/LocationRegion)",
      "code_size" : "56",
      "class" : "ComparisonComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.ObjectComparer`1<Mono.CSharp.SourceFile/LocationRegion>:.ctor ()",
      "code_size" : "9",
      "class" : "ObjectComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Compare",
      "signature" : "int System.Collections.Generic.ObjectComparer`1<Mono.CSharp.SourceFile/LocationRegion>:Compare (Mono.CSharp.SourceFile/LocationRegion,Mono.CSharp.SourceFile/LocationRegion)",
      "code_size" : "124",
      "class" : "ObjectComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "Equals",
      "signature" : "bool System.Collections.Generic.ObjectComparer`1<Mono.CSharp.SourceFile/LocationRegion>:Equals (object)",
      "code_size" : "91",
      "class" : "ObjectComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "GetHashCode",
      "signature" : "int System.Collections.Generic.ObjectComparer`1<Mono.CSharp.SourceFile/LocationRegion>:GetHashCode ()",
      "code_size" : "44",
      "class" : "ObjectComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.Comparer`1<T_BOOL>:.ctor ()",
      "code_size" : "13",
      "class" : "Comparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.Comparer`1<T_BYTE>:.ctor ()",
      "code_size" : "13",
      "class" : "Comparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.Comparer`1<T_INT>:.ctor ()",
      "code_size" : "13",
      "class" : "Comparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.Comparer`1<T_LONG>:.ctor ()",
      "code_size" : "13",
      "class" : "Comparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.EqualityComparer`1<T_CHAR>:.ctor ()",
      "code_size" : "13",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
    },
    {
      "name" : "QSortArrange",
      "signature" : "bool System.Array:QSortArrange<Mono.CSharp.SourceFile/LocationRegion> (Mono.CSharp.SourceFile/LocationRegion[],int,int,System.Collections.Generic.IComparer`1<Mono.CSharp.SourceFile/LocationRegion>)",
      "code_size" : "1460",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
    }
  ],
  "inlined_methods" : [

    {
      "name" : "get_IsTryCatchFinally",
      "signature" : "bool Mono.CSharp.TryCatch:get_IsTryCatchFinally ()",
      "class" : "TryCatch",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1<Mono.CSharp.INamedBlockVariable>:.ctor ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Value",
      "signature" : "object System.Reflection.CustomAttributeTypedArgument:get_Value ()",
      "class" : "CustomAttributeTypedArgument",
      "namespace" : "System.Reflection",
      "wrapper_type" : "none",
      "inline_successes" : "20",
      "inline_failures" : "0",
    },
    {
      "name" : "SetOwner",
      "signature" : "void Mono.CSharp.Attribute:SetOwner (Mono.CSharp.Attributable)",
      "class" : "Attribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "set_DefiniteAssignmentOnTrue",
      "signature" : "void Mono.CSharp.FlowAnalysisContext:set_DefiniteAssignmentOnTrue (Mono.CSharp.DefiniteAssignmentBitSet)",
      "class" : "FlowAnalysisContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "12",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.MemberExpr:.ctor ()",
      "class" : "MemberExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "9",
      "inline_failures" : "0",
    },
    {
      "name" : "get_HoistedThis",
      "signature" : "Mono.CSharp.HoistedThis Mono.CSharp.AnonymousMethodStorey:get_HoistedThis ()",
      "class" : "AnonymousMethodStorey",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "12",
      "inline_failures" : "0",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Collections.Generic.List`1/Enumerator<Mono.CSharp.Expression>:Dispose ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "12",
      "inline_failures" : "0",
    },
    {
      "name" : "get_AllowMultiple",
      "signature" : "bool System.AttributeUsageAttribute:get_AllowMultiple ()",
      "class" : "AttributeUsageAttribute",
      "namespace" : "System",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_HasAwaitInsideFinally",
      "signature" : "bool Mono.CSharp.AsyncTaskStorey:get_HasAwaitInsideFinally ()",
      "class" : "AsyncTaskStorey",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "Save",
      "signature" : "void System.Reflection.Emit.AssemblyBuilder:Save (object[])",
      "class" : "AssemblyBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_TypeParametersAll",
      "signature" : "Mono.CSharp.TypeParameters Mono.CSharp.TypeDefinition:get_TypeParametersAll ()",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_IsFixed",
      "signature" : "bool Mono.CSharp.LocalVariable:get_IsFixed ()",
      "class" : "LocalVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Collections.Generic.List`1/Enumerator<Mono.CSharp.ImportedModuleDefinition>:Dispose ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "AddDeclarativeSecurity",
      "signature" : "void System.Reflection.Emit.TypeBuilder:AddDeclarativeSecurity (object[])",
      "class" : "TypeBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Storey",
      "signature" : "Mono.CSharp.AnonymousMethodStorey Mono.CSharp.HoistedVariable:get_Storey ()",
      "class" : "HoistedVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "10",
      "inline_failures" : "0",
    },
    {
      "name" : "get_TemporaryLocalsCount",
      "signature" : "int Mono.CSharp.ParametersBlock:get_TemporaryLocalsCount ()",
      "class" : "ParametersBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "DefineGenericParameters",
      "signature" : "System.Reflection.Emit.GenericTypeParameterBuilder[] System.Reflection.Emit.MethodBuilder:DefineGenericParameters (string[])",
      "class" : "MethodBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.PropertyOrIndexerExpr`1<Mono.CSharp.IndexerSpec>:.ctor (Mono.CSharp.Location)",
      "class" : "PropertyOrIndexerExpr`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_IsGeneric",
      "signature" : "bool Mono.CSharp.MemberSpec:get_IsGeneric ()",
      "class" : "MemberSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "55",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.YieldBreak:.ctor (Mono.CSharp.Location)",
      "class" : "YieldBreak",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "BeginExceptionFilterBlock",
      "signature" : "void Mono.CSharp.EmitContext:BeginExceptionFilterBlock ()",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_CounterSwitchTypes",
      "signature" : "int Mono.CSharp.TypeContainer:get_CounterSwitchTypes ()",
      "class" : "TypeContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Initializer",
      "signature" : "Mono.CSharp.Statement Mono.CSharp.For:get_Initializer ()",
      "class" : "For",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "7",
      "inline_failures" : "0",
    },
    {
      "name" : "set_ErrorsCount",
      "signature" : "void Mono.CSharp.ReportPrinter:set_ErrorsCount (int)",
      "class" : "ReportPrinter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1<Mono.CSharp.ImportedModuleDefinition>:.ctor ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Type",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.LocalVariable:get_Type ()",
      "class" : "LocalVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "34",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Count",
      "signature" : "int System.Collections.Generic.List`1<Mono.CSharp.EventSpec>:get_Count ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Code",
      "signature" : "int Mono.CSharp.AbstractMessage:get_Code ()",
      "class" : "AbstractMessage",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Count",
      "signature" : "int System.Collections.Generic.List`1<Mono.CSharp.AbstractMessage>:get_Count ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : "get_UserOperator",
      "signature" : "Mono.CSharp.MethodSpec Mono.CSharp.Nullable.LiftedBinaryOperator:get_UserOperator ()",
      "class" : "LiftedBinaryOperator",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
      "inline_successes" : "8",
      "inline_failures" : "0",
    },
    {
      "name" : "HasSet",
      "signature" : "bool Mono.CSharp.ResolveContext:HasSet (Mono.CSharp.ResolveContext/Options)",
      "class" : "ResolveContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "54",
      "inline_failures" : "0",
    },
    {
      "name" : "GetHashCode",
      "signature" : "int System.Reflection.Emit.Label:GetHashCode ()",
      "class" : "Label",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Count",
      "signature" : "int System.Collections.Generic.List`1<Mono.CSharp.UsingClause>:get_Count ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Value",
      "signature" : "System.Collections.Generic.List`1<Mono.CSharp.AnonymousTypeClass> System.Collections.Generic.KeyValuePair`2<int, System.Collections.Generic.List`1<Mono.CSharp.AnonymousTypeClass>>:get_Value ()",
      "class" : "KeyValuePair`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Parameters",
      "signature" : "Mono.CSharp.ParametersCompiled Mono.CSharp.AnonymousMethodBody:get_Parameters ()",
      "class" : "AnonymousMethodBody",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Set",
      "signature" : "Mono.CSharp.PropertyBase/PropertyMethod Mono.CSharp.PropertyBase:get_Set ()",
      "class" : "PropertyBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "32",
      "inline_failures" : "0",
    },
    {
      "name" : "get_CultureInfo",
      "signature" : "System.Globalization.CultureInfo System.Reflection.AssemblyName:get_CultureInfo ()",
      "class" : "AssemblyName",
      "namespace" : "System.Reflection",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_TimeReporter",
      "signature" : "Mono.CSharp.TimeReporter Mono.CSharp.CompilerContext:get_TimeReporter ()",
      "class" : "CompilerContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Constant:.ctor (Mono.CSharp.Location)",
      "class" : "Constant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "15",
      "inline_failures" : "0",
    },
    {
      "name" : "set_Type",
      "signature" : "void Mono.CSharp.MissingTypeSpecReference:set_Type (Mono.CSharp.TypeSpec)",
      "class" : "MissingTypeSpecReference",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "SetCatchBlock",
      "signature" : "void Mono.CSharp.ExplicitBlock:SetCatchBlock ()",
      "class" : "ExplicitBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "set_Evaluator",
      "signature" : "void Mono.CSharp.ModuleContainer:set_Evaluator (Mono.CSharp.Evaluator)",
      "class" : "ModuleContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_CurrentMemberDefinition",
      "signature" : "Mono.CSharp.MemberCore Mono.CSharp.MemberCore:get_CurrentMemberDefinition ()",
      "class" : "MemberCore",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "get_LookupIndex",
      "signature" : "int Mono.CSharp.ExtensionMethodCandidates:get_LookupIndex ()",
      "class" : "ExtensionMethodCandidates",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "Empty",
      "signature" : "Mono.CSharp.VariableInfo[] System.Array:Empty<Mono.CSharp.VariableInfo> ()",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_HasOperators",
      "signature" : "bool Mono.CSharp.TypeDefinition:get_HasOperators ()",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.UnreachableExpression:.ctor (Mono.CSharp.Expression)",
      "class" : "UnreachableExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "SetGetMethod",
      "signature" : "void System.Reflection.Emit.PropertyBuilder:SetGetMethod (object)",
      "class" : "PropertyBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Expr",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.YieldStatement`1<Mono.CSharp.AsyncInitializer>:get_Expr ()",
      "class" : "YieldStatement`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Reflection.Assembly/ResolveEventHolder:.ctor ()",
      "class" : "ResolveEventHolder",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Parameters",
      "signature" : "Mono.CSharp.ParametersCompiled Mono.CSharp.AnonymousMethodExpression:get_Parameters ()",
      "class" : "AnonymousMethodExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "27",
      "inline_failures" : "0",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Collections.Generic.List`1/Enumerator<System.Reflection.AssemblyName>:Dispose ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_GenericDefinition",
      "signature" : "Mono.CSharp.IGenericMethodDefinition Mono.CSharp.MethodSpec:get_GenericDefinition ()",
      "class" : "MethodSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "13",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Count",
      "signature" : "int System.Collections.Generic.List`1<Mono.CSharp.DocumentationParameter>:get_Count ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_TypeSpec",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.PredefinedType:get_TypeSpec ()",
      "class" : "PredefinedType",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "75",
      "inline_failures" : "0",
    },
    {
      "name" : "op_Explicit",
      "signature" : "double System.Decimal:op_Explicit (System.Decimal)",
      "class" : "Decimal",
      "namespace" : "System",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "Empty",
      "signature" : "Mono.CompilerServices.SymbolWriter.LocalVariableEntry[] System.Array:Empty<Mono.CompilerServices.SymbolWriter.LocalVariableEntry> ()",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1<Mono.CSharp.Location>:.ctor ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.TypeOfMember`1<Mono.CSharp.MethodSpec>:DoResolve (Mono.CSharp.ResolveContext)",
      "class" : "TypeOfMember`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "__icall_wrapper___emul_frem",
      "signature" : "(wrapper managed-to-native) double object:__icall_wrapper___emul_frem (double,double)",
      "class" : "Object",
      "namespace" : "System",
      "wrapper_type" : "managed-to-native",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : "Define",
      "signature" : "void Mono.CSharp.TypeParameter:Define (Mono.CSharp.TypeParameter)",
      "class" : "TypeParameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_DefiniteAssignmentOnFalse",
      "signature" : "Mono.CSharp.DefiniteAssignmentBitSet Mono.CSharp.FlowAnalysisContext:get_DefiniteAssignmentOnFalse ()",
      "class" : "FlowAnalysisContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "17",
      "inline_failures" : "0",
    },
    {
      "name" : "get_IsNested",
      "signature" : "bool Mono.CSharp.Using/VariableDeclaration:get_IsNested ()",
      "class" : "VariableDeclaration",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "set_HoistedThis",
      "signature" : "void Mono.CSharp.AnonymousMethodStorey:set_HoistedThis (Mono.CSharp.HoistedThis)",
      "class" : "AnonymousMethodStorey",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Initializer",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.FieldBase:get_Initializer ()",
      "class" : "FieldBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_AllowSpecialMethodsInvocation",
      "signature" : "bool Mono.CSharp.DelegateCreation:get_AllowSpecialMethodsInvocation ()",
      "class" : "DelegateCreation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "__isinst_wrapper_IReducedExpressionStatement",
      "signature" : "(wrapper isinst) object object:__isinst_wrapper_IReducedExpressionStatement (object)",
      "class" : "Object",
      "namespace" : "System",
      "wrapper_type" : "isinst",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "set_HasAwaitInsideFinally",
      "signature" : "void Mono.CSharp.AsyncTaskStorey:set_HasAwaitInsideFinally (bool)",
      "class" : "AsyncTaskStorey",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "SetEntryPoint",
      "signature" : "void System.Reflection.Emit.AssemblyBuilder:SetEntryPoint (object[])",
      "class" : "AssemblyBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Current",
      "signature" : "long System.Collections.Generic.List`1/Enumerator<long>:get_Current ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "FCallMultiply",
      "signature" : "(wrapper managed-to-native) void System.Decimal:FCallMultiply (System.Decimal&,System.Decimal&)",
      "class" : "Decimal",
      "namespace" : "System",
      "wrapper_type" : "managed-to-native",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "HasBounds",
      "signature" : "bool Mono.CSharp.TypeInferenceContext:HasBounds (int)",
      "class" : "TypeInferenceContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.GotoCase:.ctor (Mono.CSharp.Expression,Mono.CSharp.Location)",
      "class" : "GotoCase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.FullNamedExpression:.ctor ()",
      "class" : "FullNamedExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "17",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Current",
      "signature" : "Mono.CSharp.ResumableStatement System.Collections.Generic.List`1/Enumerator<Mono.CSharp.ResumableStatement>:get_Current ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_LineNumbers",
      "signature" : "Mono.CompilerServices.SymbolWriter.LineNumberEntry[] Mono.CompilerServices.SymbolWriter.LineNumberTable:get_LineNumbers ()",
      "class" : "LineNumberTable",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
      "inline_successes" : "15",
      "inline_failures" : "0",
    },
    {
      "name" : "SetParent",
      "signature" : "void System.Reflection.Emit.TypeBuilder:SetParent (object)",
      "class" : "TypeBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Variable",
      "signature" : "Mono.CSharp.LocalVariable Mono.CSharp.DeclarationExpression:get_Variable ()",
      "class" : "DeclarationExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "5",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.EmptyStatement:.ctor (Mono.CSharp.Location)",
      "class" : "EmptyStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "7",
      "inline_failures" : "0",
    },
    {
      "name" : "set_TemporaryLocalsCount",
      "signature" : "void Mono.CSharp.ParametersBlock:set_TemporaryLocalsCount (int)",
      "class" : "ParametersBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "GetToken",
      "signature" : "System.Reflection.Emit.MethodToken System.Reflection.Emit.MethodBuilder:GetToken ()",
      "class" : "MethodBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Current",
      "signature" : "Mono.CSharp.DocumentationParameter System.Collections.Generic.List`1/Enumerator<Mono.CSharp.DocumentationParameter>:get_Current ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.HoistedVariable/ExpressionTreeVariableReference:.ctor (Mono.CSharp.HoistedVariable)",
      "class" : "ExpressionTreeVariableReference",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.EqualityComparer`1<Mono.CSharp.TypeInferenceContext/BoundInfo>:.ctor ()",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.StringConstant:.ctor (Mono.CSharp.Location)",
      "class" : "StringConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "BeginFinallyBlock",
      "signature" : "void Mono.CSharp.EmitContext:BeginFinallyBlock ()",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "set_CounterSwitchTypes",
      "signature" : "void Mono.CSharp.TypeContainer:set_CounterSwitchTypes (int)",
      "class" : "TypeContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "set_Type",
      "signature" : "void Mono.CSharp.LocalVariable:set_Type (Mono.CSharp.TypeSpec)",
      "class" : "LocalVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "16",
      "inline_failures" : "0",
    },
    {
      "name" : "get_WarningsCount",
      "signature" : "int Mono.CSharp.ReportPrinter:get_WarningsCount ()",
      "class" : "ReportPrinter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "5",
      "inline_failures" : "0",
    },
    {
      "name" : "set_Initializer",
      "signature" : "void Mono.CSharp.For:set_Initializer (Mono.CSharp.Statement)",
      "class" : "For",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "CombineHashCodes",
      "signature" : "int System.Tuple:CombineHashCodes (int,int)",
      "class" : "Tuple",
      "namespace" : "System",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.EqualityComparer`1<Mono.CompilerServices.SymbolWriter.LocalVariableEntry>:.ctor ()",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "SetCustomAttribute",
      "signature" : "void System.Reflection.Emit.GenericTypeParameterBuilder:SetCustomAttribute (object[])",
      "class" : "GenericTypeParameterBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Current",
      "signature" : "Mono.CSharp.TypeSpec System.Collections.Generic.List`1/Enumerator<Mono.CSharp.TypeSpec>:get_Current ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "7",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Continue:.ctor (Mono.CSharp.Location)",
      "class" : "Continue",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Type",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.Argument:get_Type ()",
      "class" : "Argument",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "21",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Count",
      "signature" : "int System.Collections.Generic.List`1<Mono.CSharp.LabeledStatement>:get_Count ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : "Empty",
      "signature" : "object[] System.Array:Empty<object> ()",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_LeftExpression",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.MemberAccess:get_LeftExpression ()",
      "class" : "MemberAccess",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "5",
      "inline_failures" : "0",
    },
    {
      "name" : "GetValueOrDefault",
      "signature" : "int System.Nullable`1<int>:GetValueOrDefault ()",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator<string, Mono.CSharp.SourceFile>:Dispose ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_EntryPoint",
      "signature" : "Mono.CSharp.Method Mono.CSharp.AssemblyDefinition:get_EntryPoint ()",
      "class" : "AssemblyDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Count",
      "signature" : "int System.Collections.Generic.List`1<Mono.CSharp.ResumableStatement>:get_Count ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "11",
      "inline_failures" : "0",
    },
    {
      "name" : "set_UserOperator",
      "signature" : "void Mono.CSharp.Nullable.LiftedBinaryOperator:set_UserOperator (Mono.CSharp.MethodSpec)",
      "class" : "LiftedBinaryOperator",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.AnonymousMethodStorey/<AddParentStoreyReference>c__AnonStorey0:.ctor ()",
      "class" : "<AddParentStoreyReference>c__AnonStorey0",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "HasAny",
      "signature" : "bool Mono.CSharp.ResolveContext:HasAny (Mono.CSharp.ResolveContext/Options)",
      "class" : "ResolveContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "10",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Value",
      "signature" : "Mono.CSharp.ArrayContainer System.Collections.Generic.KeyValuePair`2<Mono.CSharp.ArrayContainer/TypeRankPair, Mono.CSharp.ArrayContainer>:get_Value ()",
      "class" : "KeyValuePair`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Key",
      "signature" : "string System.Collections.Generic.KeyValuePair`2<string, System.Collections.Generic.IList`1<Mono.CSharp.TypeSpec>>:get_Key ()",
      "class" : "KeyValuePair`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Location",
      "signature" : "Mono.CSharp.Location Mono.CSharp.Attribute:get_Location ()",
      "class" : "Attribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "70",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1<Mono.CSharp.TypeContainer>:.ctor ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Count",
      "signature" : "int System.Collections.Generic.List`1<Mono.CSharp.TypeParameterSpec>:get_Count ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "Create",
      "signature" : "bool Mono.CSharp.AssemblyDefinitionDynamic:Create (System.AppDomain,System.Reflection.Emit.AssemblyBuilderAccess)",
      "class" : "AssemblyDefinitionDynamic",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "get_ReturnTypeInference",
      "signature" : "Mono.CSharp.TypeInferenceContext Mono.CSharp.AnonymousMethodBody:get_ReturnTypeInference ()",
      "class" : "AnonymousMethodBody",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "8",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Size",
      "signature" : "int Mono.CompilerServices.SymbolWriter.SourceFileEntry:get_Size ()",
      "class" : "SourceFileEntry",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1<string>:.ctor ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "14",
      "inline_failures" : "0",
    },
    {
      "name" : "get_TypeParameters",
      "signature" : "Mono.CSharp.TypeParameterSpec[] Mono.CSharp.ImportedGenericMethodDefinition:get_TypeParameters ()",
      "class" : "ImportedGenericMethodDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "set_TimeReporter",
      "signature" : "void Mono.CSharp.CompilerContext:set_TimeReporter (Mono.CSharp.TimeReporter)",
      "class" : "CompilerContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.EqualityComparer`1<Mono.CSharp.OverloadResolver/AmbiguousCandidate>:.ctor ()",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "SetFinallyBlock",
      "signature" : "void Mono.CSharp.ExplicitBlock:SetFinallyBlock ()",
      "class" : "ExplicitBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Collections.Generic.List`1/Enumerator<Mono.CSharp.WarningRegions/PragmaCmd>:Dispose ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Caller",
      "signature" : "Mono.CSharp.MemberSpec Mono.CSharp.MissingTypeSpecReference:get_Caller ()",
      "class" : "MissingTypeSpecReference",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_HasDefaultCharSet",
      "signature" : "bool Mono.CSharp.ModuleContainer:get_HasDefaultCharSet ()",
      "class" : "ModuleContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Methods",
      "signature" : "System.Collections.Generic.IList`1<Mono.CSharp.MethodSpec> Mono.CSharp.ExtensionMethodCandidates:get_Methods ()",
      "class" : "ExtensionMethodCandidates",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "ExpressionTreeVariableReference",
      "signature" : "Mono.CSharp.TemporaryVariableReference Mono.CSharp.Parameter:ExpressionTreeVariableReference ()",
      "class" : "Parameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : "Close",
      "signature" : "void Mono.CompilerServices.SymbolWriter.CodeBlockEntry:Close (int)",
      "class" : "CodeBlockEntry",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "DoubleToInt64Bits",
      "signature" : "long System.BitConverter:DoubleToInt64Bits (double)",
      "class" : "BitConverter",
      "namespace" : "System",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "set_HasOperators",
      "signature" : "void Mono.CSharp.TypeDefinition:set_HasOperators (bool)",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_HasValue",
      "signature" : "bool System.Nullable`1<System.Runtime.InteropServices.CharSet>:get_HasValue ()",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : "swap",
      "signature" : "void System.Array:swap<System.DateTime> (System.DateTime[],int,int)",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "SetSetMethod",
      "signature" : "void System.Reflection.Emit.PropertyBuilder:SetSetMethod (object)",
      "class" : "PropertyBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Parameters",
      "signature" : "Mono.CSharp.AParametersCollection Mono.CSharp.IndexerSpec:get_Parameters ()",
      "class" : "IndexerSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ParameterBase:.ctor ()",
      "class" : "ParameterBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "DoDefineContainer",
      "signature" : "void Mono.CSharp.TypeContainer:DoDefineContainer ()",
      "class" : "TypeContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_TypeInferenceReportPrinter",
      "signature" : "Mono.CSharp.ReportPrinter Mono.CSharp.AnonymousMethodExpression:get_TypeInferenceReportPrinter ()",
      "class" : "AnonymousMethodExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : "get_IsAsync",
      "signature" : "bool Mono.CSharp.MethodSpec:get_IsAsync ()",
      "class" : "MethodSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Location",
      "signature" : "Mono.CSharp.Location Mono.CSharp.MemberCore:get_Location ()",
      "class" : "MemberCore",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "495",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Initializers",
      "signature" : "System.Collections.Generic.IList`1<Mono.CSharp.Expression> Mono.CSharp.CollectionOrObjectInitializers:get_Initializers ()",
      "class" : "CollectionOrObjectInitializers",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Collections.Generic.List`1/Enumerator<System.Action>:Dispose ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "set_DefiniteAssignmentOnFalse",
      "signature" : "void Mono.CSharp.FlowAnalysisContext:set_DefiniteAssignmentOnFalse (Mono.CSharp.DefiniteAssignmentBitSet)",
      "class" : "FlowAnalysisContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "12",
      "inline_failures" : "0",
    },
    {
      "name" : "set_IsNested",
      "signature" : "void Mono.CSharp.Using/VariableDeclaration:set_IsNested (bool)",
      "class" : "VariableDeclaration",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_ReferencesFromChildrenBlock",
      "signature" : "System.Collections.Generic.IList`1<Mono.CSharp.ExplicitBlock> Mono.CSharp.AnonymousMethodStorey:get_ReferencesFromChildrenBlock ()",
      "class" : "AnonymousMethodStorey",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Name",
      "signature" : "string System.Reflection.AssemblyName:get_Name ()",
      "class" : "AssemblyName",
      "namespace" : "System.Reflection",
      "wrapper_type" : "none",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : "set_Initializer",
      "signature" : "void Mono.CSharp.FieldBase:set_Initializer (Mono.CSharp.Expression)",
      "class" : "FieldBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "7",
      "inline_failures" : "0",
    },
    {
      "name" : "set_AllowSpecialMethodsInvocation",
      "signature" : "void Mono.CSharp.DelegateCreation:set_AllowSpecialMethodsInvocation (bool)",
      "class" : "DelegateCreation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Namespace",
      "signature" : "string Mono.CSharp.BuiltinTypeSpec:get_Namespace ()",
      "class" : "BuiltinTypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "get_AssignmentOffset",
      "signature" : "int Mono.CSharp.FieldInitializer:get_AssignmentOffset ()",
      "class" : "FieldInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_HoistedReturnValue",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.AsyncTaskStorey:get_HoistedReturnValue ()",
      "class" : "AsyncTaskStorey",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : "get_IsDefault",
      "signature" : "bool Mono.CSharp.SwitchLabel:get_IsDefault ()",
      "class" : "SwitchLabel",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "SetCustomAttribute",
      "signature" : "void System.Reflection.Emit.AssemblyBuilder:SetCustomAttribute (object[])",
      "class" : "AssemblyBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Item2",
      "signature" : "Mono.CSharp.Constant System.Tuple`2<Mono.CSharp.GotoCase, Mono.CSharp.Constant>:get_Item2 ()",
      "class" : "Tuple`2",
      "namespace" : "System",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Current",
      "signature" : "Mono.CSharp.Statement System.Collections.Generic.List`1/Enumerator<Mono.CSharp.Statement>:get_Current ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "10",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Element",
      "signature" : "Mono.CSharp.FieldSpec Mono.CSharp.FixedFieldSpec:get_Element ()",
      "class" : "FixedFieldSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Current",
      "signature" : "Mono.CSharp.LabeledStatement System.Collections.Generic.List`1/Enumerator<Mono.CSharp.LabeledStatement>:get_Current ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Count",
      "signature" : "int System.Collections.Generic.Dictionary`2<string, System.Collections.Generic.IList`1<Mono.CSharp.MemberSpec>>:get_Count ()",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Count",
      "signature" : "int System.Collections.Generic.List`1<Mono.CSharp.HoistedParameter>:get_Count ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "set_Setter",
      "signature" : "void Mono.CSharp.PropertyOrIndexerExpr`1<Mono.CSharp.PropertySpec>:set_Setter (Mono.CSharp.MethodSpec)",
      "class" : "PropertyOrIndexerExpr`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Current",
      "signature" : "System.Collections.Generic.KeyValuePair`2<Mono.CSharp.Attribute, System.Collections.Generic.List`1<Mono.CSharp.Attribute>> System.Collections.Generic.Dictionary`2/Enumerator<Mono.CSharp.Attribute, System.Collections.Generic.List`1<Mono.CSharp.Attribute>>:get_Current ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "CreateType",
      "signature" : "System.Type System.Reflection.Emit.TypeBuilder:CreateType ()",
      "class" : "TypeBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "set_Variable",
      "signature" : "void Mono.CSharp.DeclarationExpression:set_Variable (Mono.CSharp.LocalVariable)",
      "class" : "DeclarationExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.HoistedVariable:CreateExpressionTree ()",
      "class" : "HoistedVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "GetILGenerator",
      "signature" : "System.Reflection.Emit.ILGenerator System.Reflection.Emit.MethodBuilder:GetILGenerator ()",
      "class" : "MethodBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_IsNotCSharpCompatible",
      "signature" : "bool Mono.CSharp.MemberSpec:get_IsNotCSharpCompatible ()",
      "class" : "MemberSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Errors",
      "signature" : "int Mono.CSharp.Report:get_Errors ()",
      "class" : "Report",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "49",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Value",
      "signature" : "string Mono.CSharp.StringConstant:get_Value ()",
      "class" : "StringConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "22",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Condition",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.For:get_Condition ()",
      "class" : "For",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "13",
      "inline_failures" : "0",
    },
    {
      "name" : "set_WarningsCount",
      "signature" : "void Mono.CSharp.ReportPrinter:set_WarningsCount (int)",
      "class" : "ReportPrinter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Collections.Generic.List`1/Enumerator<Mono.CSharp.SwitchLabel>:Dispose ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "SetGenericParameterAttributes",
      "signature" : "void System.Reflection.Emit.GenericTypeParameterBuilder:SetGenericParameterAttributes (System.Reflection.GenericParameterAttributes)",
      "class" : "GenericTypeParameterBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "ExtractSecurityPermissionSet",
      "signature" : "void Mono.CSharp.Attribute:ExtractSecurityPermissionSet (Mono.CSharp.MethodSpec,System.Collections.Generic.Dictionary`2<System.Security.Permissions.SecurityAction, System.Security.PermissionSet>&)",
      "class" : "Attribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "7",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.yydebug.yyDebugSimple:.ctor ()",
      "class" : "yyDebugSimple",
      "namespace" : "Mono.CSharp.yydebug",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Initializers",
      "signature" : "Mono.CSharp.CollectionOrObjectInitializers Mono.CSharp.NewInitialize:get_Initializers ()",
      "class" : "NewInitialize",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "set_EntryPoint",
      "signature" : "void Mono.CSharp.AssemblyDefinition:set_EntryPoint (Mono.CSharp.Method)",
      "class" : "AssemblyDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Current",
      "signature" : "Mono.CSharp.Argument System.Collections.Generic.List`1/Enumerator<Mono.CSharp.Argument>:get_Current ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "18",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.BaseThis:.ctor (Mono.CSharp.Location)",
      "class" : "BaseThis",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_NamedArguments",
      "signature" : "Mono.CSharp.Arguments Mono.CSharp.Attribute:get_NamedArguments ()",
      "class" : "Attribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "8",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Count",
      "signature" : "int System.Collections.Generic.Dictionary`2<int, Mono.CompilerServices.SymbolWriter.AnonymousScopeEntry>:get_Count ()",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Current",
      "signature" : "Mono.CSharp.Catch System.Collections.Generic.List`1/Enumerator<Mono.CSharp.Catch>:get_Current ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : "get_ValidAttributeTargets",
      "signature" : "string[] Mono.CSharp.PropertyBase:get_ValidAttributeTargets ()",
      "class" : "PropertyBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "set_ReturnTypeInference",
      "signature" : "void Mono.CSharp.AnonymousMethodBody:set_ReturnTypeInference (Mono.CSharp.TypeInferenceContext)",
      "class" : "AnonymousMethodBody",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "case_233",
      "signature" : "void Mono.CSharp.CSharpParser:case_233 ()",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "set_Caller",
      "signature" : "void Mono.CSharp.MissingTypeSpecReference:set_Caller (Mono.CSharp.MemberSpec)",
      "class" : "MissingTypeSpecReference",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_HasExtensionMethod",
      "signature" : "bool Mono.CSharp.ModuleContainer:get_HasExtensionMethod ()",
      "class" : "ModuleContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Type",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.Expression:get_Type ()",
      "class" : "Expression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "571",
      "inline_failures" : "0",
    },
    {
      "name" : "op_GreaterThanOrEqual",
      "signature" : "bool System.Decimal:op_GreaterThanOrEqual (System.Decimal,System.Decimal)",
      "class" : "Decimal",
      "namespace" : "System",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_HasStructLayout",
      "signature" : "bool Mono.CSharp.TypeDefinition:get_HasStructLayout ()",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "get_WaitOnTask",
      "signature" : "bool Mono.CSharp.Evaluator:get_WaitOnTask ()",
      "class" : "Evaluator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "__castclass_wrapper_IMemoryLocation",
      "signature" : "(wrapper castclass) object object:__castclass_wrapper_IMemoryLocation (object)",
      "class" : "Object",
      "namespace" : "System",
      "wrapper_type" : "castclass",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Count",
      "signature" : "int System.Collections.Generic.List`1<Mono.CSharp.Location>:get_Count ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "SetCustomAttribute",
      "signature" : "void System.Reflection.Emit.PropertyBuilder:SetCustomAttribute (object[])",
      "class" : "PropertyBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "set_TypeInferenceReportPrinter",
      "signature" : "void Mono.CSharp.AnonymousMethodExpression:set_TypeInferenceReportPrinter (Mono.CSharp.ReportPrinter)",
      "class" : "AnonymousMethodExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "GetNextNamespaceIndex",
      "signature" : "int Mono.CompilerServices.SymbolWriter.MonoSymbolFile:GetNextNamespaceIndex ()",
      "class" : "MonoSymbolFile",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.EmitContext:Emit (System.Reflection.Emit.OpCode,System.Reflection.MethodInfo)",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "DefineManifestResource",
      "signature" : "void System.Reflection.Emit.ModuleBuilder:DefineManifestResource (object[])",
      "class" : "ModuleBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_WhileLocation",
      "signature" : "Mono.CSharp.Location Mono.CSharp.Do:get_WhileLocation ()",
      "class" : "Do",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "GetValueOrDefault",
      "signature" : "Mono.CSharp.Operator/OpType System.Nullable`1<Mono.CSharp.Operator/OpType>:GetValueOrDefault ()",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : "get_ValidOn",
      "signature" : "System.AttributeTargets System.AttributeUsageAttribute:get_ValidOn ()",
      "class" : "AttributeUsageAttribute",
      "namespace" : "System",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_LabelStack",
      "signature" : "System.Collections.Generic.Dictionary`2<Mono.CSharp.Statement, System.Collections.Generic.List`1<Mono.CSharp.DefiniteAssignmentBitSet>> Mono.CSharp.FlowAnalysisContext:get_LabelStack ()",
      "class" : "FlowAnalysisContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1<Mono.CSharp.AnonymousMethodStorey/StoreyFieldPair>:.ctor ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Name",
      "signature" : "string Mono.CSharp.FieldBase:get_Name ()",
      "class" : "FieldBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "21",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Current",
      "signature" : "Mono.CSharp.ITypeDefinition System.Collections.Generic.HashSet`1/Enumerator<Mono.CSharp.ITypeDefinition>:get_Current ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Block",
      "signature" : "Mono.CSharp.ParametersBlock Mono.CSharp.AnonymousExpression:get_Block ()",
      "class" : "AnonymousExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "15",
      "inline_failures" : "0",
    },
    {
      "name" : "get_PrimaryConstructorBlock",
      "signature" : "Mono.CSharp.ToplevelBlock Mono.CSharp.ClassOrStruct:get_PrimaryConstructorBlock ()",
      "class" : "ClassOrStruct",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "__isinst_wrapper_IVariableReference",
      "signature" : "(wrapper isinst) object object:__isinst_wrapper_IVariableReference (object)",
      "class" : "Object",
      "namespace" : "System",
      "wrapper_type" : "isinst",
      "inline_successes" : "12",
      "inline_failures" : "0",
    },
    {
      "name" : "set_HoistedReturnValue",
      "signature" : "void Mono.CSharp.AsyncTaskStorey:set_HoistedReturnValue (Mono.CSharp.Expression)",
      "class" : "AsyncTaskStorey",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "set_AssignmentOffset",
      "signature" : "void Mono.CSharp.FieldInitializer:set_AssignmentOffset (int)",
      "class" : "FieldInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Label",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.SwitchLabel:get_Label ()",
      "class" : "SwitchLabel",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_ElementType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.FixedFieldSpec:get_ElementType ()",
      "class" : "FixedFieldSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "get_HasCompliantArgs",
      "signature" : "bool Mono.CSharp.Constructor:get_HasCompliantArgs ()",
      "class" : "Constructor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Expr",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Conditional:get_Expr ()",
      "class" : "Conditional",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_HasUnmanagedCheckDone",
      "signature" : "bool Mono.CSharp.Struct:get_HasUnmanagedCheckDone ()",
      "class" : "Struct",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "DefineConstructor",
      "signature" : "System.Reflection.Emit.ConstructorBuilder System.Reflection.Emit.TypeBuilder:DefineConstructor (object[])",
      "class" : "TypeBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Count",
      "signature" : "int System.Collections.Generic.List`1<Mono.CSharp.TypeParameter>:get_Count ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "43",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.ObjectEqualityComparer`1<Mono.CSharp.Location>:.ctor ()",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.EqualityComparer`1<Mono.CSharp.AnonymousMethodStorey/StoreyFieldPair>:.ctor ()",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Current",
      "signature" : "Mono.CSharp.SourceFile System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator<string, Mono.CSharp.SourceFile>:get_Current ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Initializer",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.DeclarationExpression:get_Initializer ()",
      "class" : "DeclarationExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "8",
      "inline_failures" : "0",
    },
    {
      "name" : "get_IsDisabled",
      "signature" : "bool Mono.CSharp.Report:get_IsDisabled ()",
      "class" : "Report",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "SetCustomAttribute",
      "signature" : "void System.Reflection.Emit.MethodBuilder:SetCustomAttribute (object[])",
      "class" : "MethodBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Child",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.CompositeExpression:get_Child ()",
      "class" : "CompositeExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "6",
      "inline_failures" : "0",
    },
    {
      "name" : "set_Value",
      "signature" : "void Mono.CSharp.StringConstant:set_Value (string)",
      "class" : "StringConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "Empty",
      "signature" : "Mono.CSharp.TypeParameterSpec[] System.Array:Empty<Mono.CSharp.TypeParameterSpec> ()",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_BestCandidate",
      "signature" : "Mono.CSharp.MethodSpec Mono.CSharp.MethodGroupExpr:get_BestCandidate ()",
      "class" : "MethodGroupExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "12",
      "inline_failures" : "0",
    },
    {
      "name" : "get_DefinedNames",
      "signature" : "System.Collections.Generic.Dictionary`2<string, Mono.CSharp.MemberCore> Mono.CSharp.TypeContainer:get_DefinedNames ()",
      "class" : "TypeContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "set_Condition",
      "signature" : "void Mono.CSharp.For:set_Condition (Mono.CSharp.Expression)",
      "class" : "For",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : "SetInterfaceConstraints",
      "signature" : "void System.Reflection.Emit.GenericTypeParameterBuilder:SetInterfaceConstraints (System.Type[])",
      "class" : "GenericTypeParameterBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.ObjectEqualityComparer`1<Mono.CSharp.ArrayContainer/TypeRankPair>:.ctor ()",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Collections.Generic.List`1/Enumerator<Mono.CSharp.IExpressionCleanup>:Dispose ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Version",
      "signature" : "System.Version System.Reflection.AssemblyName:get_Version ()",
      "class" : "AssemblyName",
      "namespace" : "System.Reflection",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Location",
      "signature" : "Mono.CSharp.Location Mono.CSharp.UsingClause:get_Location ()",
      "class" : "UsingClause",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "10",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Mutator",
      "signature" : "Mono.CSharp.TypeParameterMutator Mono.CSharp.HoistedStoreyClass:get_Mutator ()",
      "class" : "HoistedStoreyClass",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "26",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Count",
      "signature" : "int System.Collections.Generic.List`1<Mono.CompilerServices.SymbolWriter.SourceFileEntry>:get_Count ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "5",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1<Mono.CSharp.TypeParameter>:.ctor ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.SessionReportPrinter:.ctor ()",
      "class" : "SessionReportPrinter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "9",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Original",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Nullable.Unwrap:get_Original ()",
      "class" : "Unwrap",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "set_HasExtensionMethod",
      "signature" : "void Mono.CSharp.ModuleContainer:set_HasExtensionMethod (bool)",
      "class" : "ModuleContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator<string, System.Collections.Generic.IList`1<Mono.CSharp.MemberSpec>>:Dispose ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_HasValue",
      "signature" : "bool System.Nullable`1<Mono.CSharp.Location>:get_HasValue ()",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Current",
      "signature" : "Mono.CSharp.INamedBlockVariable System.Collections.Generic.List`1/Enumerator<Mono.CSharp.INamedBlockVariable>:get_Current ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Expression",
      "signature" : "System.Linq.Expressions.Expression System.Dynamic.DynamicMetaObject:get_Expression ()",
      "class" : "DynamicMetaObject",
      "namespace" : "System.Dynamic",
      "wrapper_type" : "none",
      "inline_successes" : "8",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Count",
      "signature" : "int System.Collections.Generic.List`1<Mono.CSharp.FieldInitializer>:get_Count ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : "SetIndex",
      "signature" : "void Mono.CSharp.Parameter:SetIndex (int)",
      "class" : "Parameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "set_Type",
      "signature" : "void Mono.CSharp.Expression:set_Type (Mono.CSharp.TypeSpec)",
      "class" : "Expression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "8",
      "inline_failures" : "0",
    },
    {
      "name" : "set_HasStructLayout",
      "signature" : "void Mono.CSharp.TypeDefinition:set_HasStructLayout (bool)",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Constraint",
      "signature" : "Mono.CSharp.SpecialConstraint Mono.CSharp.SpecialContraintExpr:get_Constraint ()",
      "class" : "SpecialContraintExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : "get_HasArglist",
      "signature" : "bool Mono.CSharp.AParametersCollection:get_HasArglist ()",
      "class" : "AParametersCollection",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "5",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Name",
      "signature" : "string Mono.CSharp.PropertyPatternMember:get_Name ()",
      "class" : "PropertyPatternMember",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : "SetMemberName",
      "signature" : "void Mono.CSharp.MemberCore:SetMemberName (Mono.CSharp.MemberName)",
      "class" : "MemberCore",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1<Mono.CSharp.DocumentationParameter>:.ctor ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "DefineType",
      "signature" : "System.Reflection.Emit.TypeBuilder System.Reflection.Emit.ModuleBuilder:DefineType (object[])",
      "class" : "ModuleBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "set_TypeParameters",
      "signature" : "void Mono.CSharp.ImportedTypeDefinition:set_TypeParameters (Mono.CSharp.TypeParameterSpec[])",
      "class" : "ImportedTypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_IsCollectionInitializer",
      "signature" : "bool Mono.CSharp.CollectionOrObjectInitializers:get_IsCollectionInitializer ()",
      "class" : "CollectionOrObjectInitializers",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.DynamicTypeExpr:.ctor (Mono.CSharp.Location)",
      "class" : "DynamicTypeExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_NoEmptyInterpolation",
      "signature" : "bool Mono.CSharp.ArrayCreation:get_NoEmptyInterpolation ()",
      "class" : "ArrayCreation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "set_WhileLocation",
      "signature" : "void Mono.CSharp.Do:set_WhileLocation (Mono.CSharp.Location)",
      "class" : "Do",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_ReturnType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.EmitContext:get_ReturnType ()",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_TypeArgument",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.TypeOf:get_TypeArgument ()",
      "class" : "TypeOf",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Value",
      "signature" : "System.Collections.Generic.IList`1<Mono.CSharp.TypeSpec> System.Collections.Generic.KeyValuePair`2<string, System.Collections.Generic.IList`1<Mono.CSharp.TypeSpec>>:get_Value ()",
      "class" : "KeyValuePair`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Collections.Generic.List`1/Enumerator<Mono.CSharp.ExplicitBlock>:Dispose ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_NumberMatcher",
      "signature" : "Mono.CSharp.Method Mono.CSharp.ModuleContainer/PatternMatchingHelper:get_NumberMatcher ()",
      "class" : "PatternMatchingHelper",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "set_LabelStack",
      "signature" : "void Mono.CSharp.FlowAnalysisContext:set_LabelStack (System.Collections.Generic.Dictionary`2<Mono.CSharp.Statement, System.Collections.Generic.List`1<Mono.CSharp.DefiniteAssignmentBitSet>>)",
      "class" : "FlowAnalysisContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Spec",
      "signature" : "Mono.CSharp.FieldSpec Mono.CSharp.FieldBase:get_Spec ()",
      "class" : "FieldBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "57",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Block",
      "signature" : "Mono.CSharp.ExplicitBlock Mono.CSharp.Catch:get_Block ()",
      "class" : "Catch",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "14",
      "inline_failures" : "0",
    },
    {
      "name" : "set_PrimaryConstructorBlock",
      "signature" : "void Mono.CSharp.ClassOrStruct:set_PrimaryConstructorBlock (Mono.CSharp.ToplevelBlock)",
      "class" : "ClassOrStruct",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1<Mono.CompilerServices.SymbolWriter.SourceFileEntry>:.ctor ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : "get_ReturnType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.AsyncTaskStorey:get_ReturnType ()",
      "class" : "AsyncTaskStorey",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "7",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Field",
      "signature" : "Mono.CSharp.FieldBase Mono.CSharp.FieldInitializer:get_Field ()",
      "class" : "FieldInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Location",
      "signature" : "Mono.CSharp.Location Mono.CSharp.SwitchLabel:get_Location ()",
      "class" : "SwitchLabel",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_IdentifierType",
      "signature" : "Mono.CSharp.FullNamedExpression Mono.CSharp.Linq.ARangeVariableQueryClause:get_IdentifierType ()",
      "class" : "ARangeVariableQueryClause",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : "swap",
      "signature" : "void System.Array:swap<Mono.CSharp.SourceFile/LocationRegion> (Mono.CSharp.SourceFile/LocationRegion[],int,int)",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
      "inline_successes" : "6",
      "inline_failures" : "0",
    },
    {
      "name" : "Empty",
      "signature" : "Mono.CSharp.PendingImplementation/MissingInterfacesInfo[] System.Array:Empty<Mono.CSharp.PendingImplementation/MissingInterfacesInfo> ()",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "DefineMethod",
      "signature" : "System.Reflection.Emit.MethodBuilder System.Reflection.Emit.TypeBuilder:DefineMethod (object[])",
      "class" : "TypeBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CompilerServices.SymbolWriter.CapturedScope:.ctor (int,string)",
      "class" : "CapturedScope",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.LocatedToken:.ctor ()",
      "class" : "LocatedToken",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Collections.Generic.List`1/Enumerator<Mono.CompilerServices.SymbolWriter.CompileUnitEntry>:Dispose ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Alias",
      "signature" : "string Mono.CSharp.QualifiedAliasMember:get_Alias ()",
      "class" : "QualifiedAliasMember",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "__isinst_wrapper_IDynamicAssign",
      "signature" : "(wrapper isinst) object object:__isinst_wrapper_IDynamicAssign (object)",
      "class" : "Object",
      "namespace" : "System",
      "wrapper_type" : "isinst",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "set_Initializer",
      "signature" : "void Mono.CSharp.DeclarationExpression:set_Initializer (Mono.CSharp.Expression)",
      "class" : "DeclarationExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Name",
      "signature" : "string Mono.CSharp.ConstInitializer:get_Name ()",
      "class" : "ConstInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Printer",
      "signature" : "Mono.CSharp.ReportPrinter Mono.CSharp.Report:get_Printer ()",
      "class" : "Report",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "8",
      "inline_failures" : "0",
    },
    {
      "name" : "get_IsPrivate",
      "signature" : "bool Mono.CSharp.MemberSpec:get_IsPrivate ()",
      "class" : "MemberSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_HasDefaultValue",
      "signature" : "bool Mono.CSharp.Parameter:get_HasDefaultValue ()",
      "class" : "Parameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "6",
      "inline_failures" : "0",
    },
    {
      "name" : "SetImplementationFlags",
      "signature" : "void System.Reflection.Emit.MethodBuilder:SetImplementationFlags (System.Reflection.MethodImplAttributes)",
      "class" : "MethodBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "get_BestCandidateReturnType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.MethodGroupExpr:get_BestCandidateReturnType ()",
      "class" : "MethodGroupExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "6",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Length",
      "signature" : "int System.Text.StringBuilder:get_Length ()",
      "class" : "StringBuilder",
      "namespace" : "System.Text",
      "wrapper_type" : "none",
      "inline_successes" : "13",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Iterator",
      "signature" : "Mono.CSharp.Statement Mono.CSharp.For:get_Iterator ()",
      "class" : "For",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "6",
      "inline_failures" : "0",
    },
    {
      "name" : "ApplyToExtraTarget",
      "signature" : "void Mono.CSharp.AbstractPropertyEventMethod:ApplyToExtraTarget (Mono.CSharp.Attribute,Mono.CSharp.MethodSpec,byte[],Mono.CSharp.PredefinedAttributes)",
      "class" : "AbstractPropertyEventMethod",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Collections.Generic.Dictionary`2/Enumerator<string, Mono.CSharp.Namespace>:Dispose ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_PartialContainer",
      "signature" : "Mono.CSharp.TypeDefinition Mono.CSharp.TypeContainer:get_PartialContainer ()",
      "class" : "TypeContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "145",
      "inline_failures" : "0",
    },
    {
      "name" : "EndExceptionBlock",
      "signature" : "void Mono.CSharp.EmitContext:EndExceptionBlock ()",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "7",
      "inline_failures" : "0",
    },
    {
      "name" : "SetBaseTypeConstraint",
      "signature" : "void System.Reflection.Emit.GenericTypeParameterBuilder:SetBaseTypeConstraint (System.Type)",
      "class" : "GenericTypeParameterBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "op_Inequality",
      "signature" : "bool System.Type:op_Inequality (System.Type,System.Type)",
      "class" : "Type",
      "namespace" : "System",
      "wrapper_type" : "none",
      "inline_successes" : "16",
      "inline_failures" : "0",
    },
    {
      "name" : "get_AccessorAdd",
      "signature" : "Mono.CSharp.MethodSpec Mono.CSharp.EventSpec:get_AccessorAdd ()",
      "class" : "EventSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Location",
      "signature" : "Mono.CSharp.Location Mono.CSharp.AbstractMessage:get_Location ()",
      "class" : "AbstractMessage",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ModuleContainer/<GetCompletionStartingWith>c__AnonStorey0:.ctor ()",
      "class" : "<GetCompletionStartingWith>c__AnonStorey0",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_HasCLSCompliantAttribute",
      "signature" : "bool Mono.CSharp.AssemblyDefinition:get_HasCLSCompliantAttribute ()",
      "class" : "AssemblyDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "set_Mutator",
      "signature" : "void Mono.CSharp.HoistedStoreyClass:set_Mutator (Mono.CSharp.TypeParameterMutator)",
      "class" : "HoistedStoreyClass",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_NamespaceExpression",
      "signature" : "Mono.CSharp.ATypeNameExpression Mono.CSharp.UsingClause:get_NamespaceExpression ()",
      "class" : "UsingClause",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : "get_PendingImplementations",
      "signature" : "Mono.CSharp.PendingImplementation Mono.CSharp.TypeDefinition:get_PendingImplementations ()",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_ResolveError",
      "signature" : "bool Mono.CSharp.Attribute:get_ResolveError ()",
      "class" : "Attribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Current",
      "signature" : "string System.Collections.Generic.List`1/Enumerator<string>:get_Current ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Item1",
      "signature" : "Mono.CSharp.FieldSpec System.Tuple`2<Mono.CSharp.FieldSpec, System.Reflection.FieldInfo>:get_Item1 ()",
      "class" : "Tuple`2",
      "namespace" : "System",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Collections.Generic.List`1/Enumerator<Mono.CSharp.FieldDeclarator>:Dispose ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Operator",
      "signature" : "Mono.CSharp.MethodSpec Mono.CSharp.EventExpr:get_Operator ()",
      "class" : "EventExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.BuilderContext:.ctor ()",
      "class" : "BuilderContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1<Mono.CompilerServices.SymbolWriter.CompileUnitEntry>:.ctor ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "EmitBeginFinallyBlock",
      "signature" : "bool Mono.CSharp.TryFinallyBlock:EmitBeginFinallyBlock (Mono.CSharp.EmitContext)",
      "class" : "TryFinallyBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_HasTypesFullyDefined",
      "signature" : "bool Mono.CSharp.ModuleContainer:get_HasTypesFullyDefined ()",
      "class" : "ModuleContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_IsStatic",
      "signature" : "bool Mono.CSharp.MemberCore:get_IsStatic ()",
      "class" : "MemberCore",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "26",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.BlockVariable:.ctor (Mono.CSharp.LocalVariable)",
      "class" : "BlockVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Current",
      "signature" : "Mono.CompilerServices.SymbolWriter.MethodEntry System.Collections.Generic.List`1/Enumerator<Mono.CompilerServices.SymbolWriter.MethodEntry>:get_Current ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "ToString",
      "signature" : "string char:ToString ()",
      "class" : "Char",
      "namespace" : "System",
      "wrapper_type" : "none",
      "inline_successes" : "5",
      "inline_failures" : "0",
    },
    {
      "name" : "set_Constraint",
      "signature" : "void Mono.CSharp.SpecialContraintExpr:set_Constraint (Mono.CSharp.SpecialConstraint)",
      "class" : "SpecialContraintExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Interfaces",
      "signature" : "Mono.CSharp.TypeSpec[] Mono.CSharp.TypeDefinition:get_Interfaces ()",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Current",
      "signature" : "Mono.CSharp.TypeDefinition System.Collections.Generic.List`1/Enumerator<Mono.CSharp.TypeDefinition>:get_Current ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.PredefinedMembers/<PredefinedMembers>c__AnonStorey0:.ctor ()",
      "class" : "<PredefinedMembers>c__AnonStorey0",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.IteratorStorey/DynamicFieldExpr:.ctor (Mono.CSharp.Field,Mono.CSharp.Location)",
      "class" : "DynamicFieldExpr",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1<System.Tuple`2<Mono.CSharp.GotoCase, Mono.CSharp.Constant>>:.ctor ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "set_Name",
      "signature" : "void Mono.CSharp.PropertyPatternMember:set_Name (string)",
      "class" : "PropertyPatternMember",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "SetConstant",
      "signature" : "void System.Reflection.Emit.FieldBuilder:SetConstant (object)",
      "class" : "FieldBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.ComparisonComparer`1<Mono.CSharp.SourceFile/LocationRegion>:.ctor (System.Comparison`1<Mono.CSharp.SourceFile/LocationRegion>)",
      "class" : "ComparisonComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_IsVirtual",
      "signature" : "bool Mono.CSharp.MethodSpec:get_IsVirtual ()",
      "class" : "MethodSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Current",
      "signature" : "Mono.CompilerServices.SymbolWriter.SourceFileEntry System.Collections.Generic.List`1/Enumerator<Mono.CompilerServices.SymbolWriter.SourceFileEntry>:get_Current ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "__isinst_wrapper_IConvertible",
      "signature" : "(wrapper isinst) object object:__isinst_wrapper_IConvertible (object)",
      "class" : "Object",
      "namespace" : "System",
      "wrapper_type" : "isinst",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "set_NoEmptyInterpolation",
      "signature" : "void Mono.CSharp.ArrayCreation:set_NoEmptyInterpolation (bool)",
      "class" : "ArrayCreation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "__icall_wrapper___emul_fconv_to_u8",
      "signature" : "(wrapper managed-to-native) ulong object:__icall_wrapper___emul_fconv_to_u8 (double)",
      "class" : "Object",
      "namespace" : "System",
      "wrapper_type" : "managed-to-native",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator<int, Mono.CompilerServices.SymbolWriter.AnonymousScopeEntry>:Dispose ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.PropertyOrIndexerExpr`1<Mono.CSharp.PropertySpec>:.ctor (Mono.CSharp.Location)",
      "class" : "PropertyOrIndexerExpr`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Label",
      "signature" : "Mono.CSharp.SwitchLabel Mono.CSharp.GotoCase:get_Label ()",
      "class" : "GotoCase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "set_NumberMatcher",
      "signature" : "void Mono.CSharp.ModuleContainer/PatternMatchingHelper:set_NumberMatcher (Mono.CSharp.Method)",
      "class" : "PatternMatchingHelper",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_ParametersBlock",
      "signature" : "Mono.CSharp.ParametersBlock Mono.CSharp.FlowAnalysisContext:get_ParametersBlock ()",
      "class" : "FlowAnalysisContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Collections.Generic.List`1/Enumerator<Mono.CompilerServices.SymbolWriter.CapturedScope>:Dispose ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1<Mono.CSharp.TryFinally>:.ctor ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Parameters",
      "signature" : "System.Collections.Generic.IList`1<Mono.CSharp.AnonymousTypeParameter> Mono.CSharp.AnonymousTypeClass:get_Parameters ()",
      "class" : "AnonymousTypeClass",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Count",
      "signature" : "int System.Collections.Generic.List`1<Mono.CSharp.Attribute>:get_Count ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "5",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.TypeDefinition/BaseContext:.ctor (Mono.CSharp.TypeContainer)",
      "class" : "BaseContext",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_CatchType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.Catch:get_CatchType ()",
      "class" : "Catch",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1<Mono.CompilerServices.SymbolWriter.CapturedScope>:.ctor ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Count",
      "signature" : "int System.Collections.Generic.List`1<string>:get_Count ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "5",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Task",
      "signature" : "Mono.CSharp.PropertySpec Mono.CSharp.AsyncTaskStorey:get_Task ()",
      "class" : "AsyncTaskStorey",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.ObjectEqualityComparer`1<System.Reflection.Emit.Label>:.ctor ()",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Converted",
      "signature" : "Mono.CSharp.Constant Mono.CSharp.SwitchLabel:get_Converted ()",
      "class" : "SwitchLabel",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "11",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ImportedDefinition/AttributesBag:.ctor ()",
      "class" : "AttributesBag",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "7",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.SourceFile/LocationRegion:.ctor (Mono.CSharp.Location,Mono.CSharp.Location)",
      "class" : "LocationRegion",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "set_IdentifierType",
      "signature" : "void Mono.CSharp.Linq.ARangeVariableQueryClause:set_IdentifierType (Mono.CSharp.FullNamedExpression)",
      "class" : "ARangeVariableQueryClause",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
      "inline_successes" : "5",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.Comparer`1<Mono.CSharp.SourceFile/LocationRegion>:.ctor ()",
      "class" : "Comparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "5",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Original",
      "signature" : "Mono.CSharp.Block Mono.CSharp.Block:get_Original ()",
      "class" : "Block",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "19",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Arguments",
      "signature" : "Mono.CSharp.TypeSpec[] Mono.CSharp.TypeArguments:get_Arguments ()",
      "class" : "TypeArguments",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "5",
      "inline_failures" : "0",
    },
    {
      "name" : "SetAddOnMethod",
      "signature" : "void System.Reflection.Emit.EventBuilder:SetAddOnMethod (System.Reflection.Emit.MethodBuilder)",
      "class" : "EventBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "set_Block",
      "signature" : "void Mono.CSharp.Linq.RangeVariable:set_Block (Mono.CSharp.Block)",
      "class" : "RangeVariable",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "DefineNestedType",
      "signature" : "System.Reflection.Emit.TypeBuilder System.Reflection.Emit.TypeBuilder:DefineNestedType (object[])",
      "class" : "TypeBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_AnonymousMethodStorey",
      "signature" : "Mono.CSharp.AnonymousMethodStorey Mono.CSharp.ExplicitBlock:get_AnonymousMethodStorey ()",
      "class" : "ExplicitBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "12",
      "inline_failures" : "0",
    },
    {
      "name" : "get_VariableType",
      "signature" : "Mono.CSharp.FullNamedExpression Mono.CSharp.DeclarationExpression:get_VariableType ()",
      "class" : "DeclarationExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Count",
      "signature" : "int System.Collections.Generic.List`1<Mono.CompilerServices.SymbolWriter.LineNumberEntry>:get_Count ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "set_Name",
      "signature" : "void Mono.CSharp.ConstInitializer:set_Name (string)",
      "class" : "ConstInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "SetParameters",
      "signature" : "void System.Reflection.Emit.MethodBuilder:SetParameters (System.Type[])",
      "class" : "MethodBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "SetPrinter",
      "signature" : "Mono.CSharp.ReportPrinter Mono.CSharp.Report:SetPrinter (Mono.CSharp.ReportPrinter)",
      "class" : "Report",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "24",
      "inline_failures" : "0",
    },
    {
      "name" : "get_IsPublic",
      "signature" : "bool Mono.CSharp.MemberSpec:get_IsPublic ()",
      "class" : "MemberSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "8",
      "inline_failures" : "0",
    },
    {
      "name" : "get_HasExtensionMethodModifier",
      "signature" : "bool Mono.CSharp.Parameter:get_HasExtensionMethodModifier ()",
      "class" : "Parameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.ObjectEqualityComparer`1<Mono.CompilerServices.SymbolWriter.CapturedVariable>:.ctor ()",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Candidates",
      "signature" : "System.Collections.Generic.IList`1<Mono.CSharp.MemberSpec> Mono.CSharp.MethodGroupExpr:get_Candidates ()",
      "class" : "MethodGroupExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1<Mono.CSharp.TypeDefinition>:.ctor ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Current",
      "signature" : "System.Tuple`2<Mono.CSharp.GotoCase, Mono.CSharp.Constant> System.Collections.Generic.List`1/Enumerator<System.Tuple`2<Mono.CSharp.GotoCase, Mono.CSharp.Constant>>:get_Current ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator<string, System.Collections.Generic.IList`1<Mono.CSharp.TypeSpec>>:Dispose ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "set_PartialContainer",
      "signature" : "void Mono.CSharp.TypeContainer:set_PartialContainer (Mono.CSharp.TypeDefinition)",
      "class" : "TypeContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "set_Iterator",
      "signature" : "void Mono.CSharp.For:set_Iterator (Mono.CSharp.Statement)",
      "class" : "For",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Count",
      "signature" : "int System.Collections.Generic.Dictionary`2<Mono.CSharp.MethodSpec, Mono.CSharp.Method>:get_Count ()",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_UnderlyingType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.OpcodeCast:get_UnderlyingType ()",
      "class" : "OpcodeCast",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Collections.Generic.Dictionary`2/Enumerator<Mono.CSharp.Attribute, System.Collections.Generic.List`1<Mono.CSharp.Attribute>>:Dispose ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "set_AccessorAdd",
      "signature" : "void Mono.CSharp.EventSpec:set_AccessorAdd (Mono.CSharp.MethodSpec)",
      "class" : "EventSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Current",
      "signature" : "Mono.CSharp.Attribute System.Collections.Generic.List`1/Enumerator<Mono.CSharp.Attribute>:get_Current ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "12",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Importer",
      "signature" : "Mono.CSharp.MetadataImporter Mono.CSharp.AssemblyDefinition:get_Importer ()",
      "class" : "AssemblyDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "get_ResolvedExpression",
      "signature" : "Mono.CSharp.FullNamedExpression Mono.CSharp.UsingClause:get_ResolvedExpression ()",
      "class" : "UsingClause",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "14",
      "inline_failures" : "0",
    },
    {
      "name" : "case_772",
      "signature" : "void Mono.CSharp.CSharpParser:case_772 ()",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Current",
      "signature" : "Mono.CSharp.MemberSpec System.Collections.Generic.List`1/Enumerator<Mono.CSharp.MemberSpec>:get_Current ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_FileName",
      "signature" : "string Mono.CompilerServices.SymbolWriter.SourceFileEntry:get_FileName ()",
      "class" : "SourceFileEntry",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ExitStatement:.ctor ()",
      "class" : "ExitStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "10",
      "inline_failures" : "0",
    },
    {
      "name" : "set_HasTypesFullyDefined",
      "signature" : "void Mono.CSharp.ModuleContainer:set_HasTypesFullyDefined (bool)",
      "class" : "ModuleContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Expr",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Probe:get_Expr ()",
      "class" : "Probe",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "12",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Declarators",
      "signature" : "System.Collections.Generic.List`1<Mono.CSharp.BlockVariableDeclarator> Mono.CSharp.BlockVariable:get_Declarators ()",
      "class" : "BlockVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "6",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.EqualityComparer`1<Mono.CompilerServices.SymbolWriter.CapturedVariable>:.ctor ()",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "Empty",
      "signature" : "Mono.CompilerServices.SymbolWriter.ScopeVariable[] System.Array:Empty<Mono.CompilerServices.SymbolWriter.ScopeVariable> ()",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_ParameterInfo",
      "signature" : "Mono.CSharp.ParametersCompiled Mono.CSharp.Indexer:get_ParameterInfo ()",
      "class" : "Indexer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "5",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Location",
      "signature" : "Mono.CSharp.Location Mono.CSharp.Expression:get_Location ()",
      "class" : "Expression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "622",
      "inline_failures" : "0",
    },
    {
      "name" : "get_IsGenericOrParentIsGeneric",
      "signature" : "bool Mono.CSharp.TypeDefinition:get_IsGenericOrParentIsGeneric ()",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "7",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.EqualityComparer`1<System.Reflection.Emit.Label>:.ctor ()",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "op_Division",
      "signature" : "System.Decimal System.Decimal:op_Division (System.Decimal,System.Decimal)",
      "class" : "Decimal",
      "namespace" : "System",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_IsIterator",
      "signature" : "bool Mono.CSharp.ToplevelBlock:get_IsIterator ()",
      "class" : "ToplevelBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Constraints",
      "signature" : "Mono.CSharp.Constraints Mono.CSharp.TypeParameter:get_Constraints ()",
      "class" : "TypeParameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "get_HasParams",
      "signature" : "bool Mono.CSharp.AParametersCollection:get_HasParams ()",
      "class" : "AParametersCollection",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "14",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Expr",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.PropertyPatternMember:get_Expr ()",
      "class" : "PropertyPatternMember",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "ClearSession",
      "signature" : "void Mono.CSharp.SessionReportPrinter:ClearSession ()",
      "class" : "SessionReportPrinter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "SetCustomAttribute",
      "signature" : "void System.Reflection.Emit.FieldBuilder:SetCustomAttribute (object[])",
      "class" : "FieldBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
      "inline_successes" : "7",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.EqualityComparer`1<Mono.CompilerServices.SymbolWriter.NamespaceEntry>:.ctor ()",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Collections.Generic.List`1/Enumerator<Mono.CSharp.AbstractMessage>:Dispose ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.LocationsBag/MemberLocations:.ctor (System.Collections.Generic.IList`1<System.Tuple`2<Mono.CSharp.Modifiers, Mono.CSharp.Location>>)",
      "class" : "MemberLocations",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "7",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1<Mono.CSharp.MovableArgument>:.ctor ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Current",
      "signature" : "Mono.CSharp.DefiniteAssignmentBitSet System.Collections.Generic.List`1/Enumerator<Mono.CSharp.DefiniteAssignmentBitSet>:get_Current ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Value",
      "signature" : "single Mono.CSharp.FloatConstant:get_Value ()",
      "class" : "FloatConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "35",
      "inline_failures" : "0",
    },
    {
      "name" : "GetArrayMethod",
      "signature" : "System.Reflection.MethodInfo System.Reflection.Emit.ModuleBuilder:GetArrayMethod (object[])",
      "class" : "ModuleBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : "Reset",
      "signature" : "void Mono.CSharp.Linq.QueryBlock/TransparentParameter:Reset ()",
      "class" : "TransparentParameter",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Arguments:.ctor (System.Collections.Generic.List`1<Mono.CSharp.Argument>)",
      "class" : "Arguments",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_StatementEpilogue",
      "signature" : "System.Collections.Generic.List`1<Mono.CSharp.IExpressionCleanup> Mono.CSharp.EmitContext:get_StatementEpilogue ()",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "set_Label",
      "signature" : "void Mono.CSharp.GotoCase:set_Label (Mono.CSharp.SwitchLabel)",
      "class" : "GotoCase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "set_ParametersBlock",
      "signature" : "void Mono.CSharp.FlowAnalysisContext:set_ParametersBlock (Mono.CSharp.ParametersBlock)",
      "class" : "FlowAnalysisContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Collections.Generic.Dictionary`2/Enumerator<Mono.CSharp.TypeSpec[], Mono.CSharp.InflatedTypeSpec>:Dispose ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Collections.Generic.List`1/Enumerator<System.Collections.Generic.KeyValuePair`2<Mono.CSharp.MemberExpr, Mono.CSharp.NamedArgument>>:Dispose ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Filter",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Catch:get_Filter ()",
      "class" : "Catch",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "18",
      "inline_failures" : "0",
    },
    {
      "name" : "set_Converted",
      "signature" : "void Mono.CSharp.SwitchLabel:set_Converted (Mono.CSharp.Constant)",
      "class" : "SwitchLabel",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.MakeRefExpr:.ctor (Mono.CSharp.Expression,Mono.CSharp.Location)",
      "class" : "MakeRefExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_UnderlyingType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.Enum:get_UnderlyingType ()",
      "class" : "Enum",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "5",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.InstanceEmitter:.ctor (Mono.CSharp.Expression,bool)",
      "class" : "InstanceEmitter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "7",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1<Mono.CSharp.Catch>:.ctor ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "get_IsPrimaryConstructor",
      "signature" : "bool Mono.CSharp.Constructor:get_IsPrimaryConstructor ()",
      "class" : "Constructor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "set_Original",
      "signature" : "void Mono.CSharp.Block:set_Original (Mono.CSharp.Block)",
      "class" : "Block",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Initializer",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.EventField:get_Initializer ()",
      "class" : "EventField",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Current",
      "signature" : "Mono.CSharp.AssemblyResource System.Collections.Generic.List`1/Enumerator<Mono.CSharp.AssemblyResource>:get_Current ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "set_Arguments",
      "signature" : "void Mono.CSharp.TypeArguments:set_Arguments (Mono.CSharp.TypeSpec[])",
      "class" : "TypeArguments",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "SetRemoveOnMethod",
      "signature" : "void System.Reflection.Emit.EventBuilder:SetRemoveOnMethod (System.Reflection.Emit.MethodBuilder)",
      "class" : "EventBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Count",
      "signature" : "int System.Collections.Generic.List`1<Mono.CSharp.SourceFile>:get_Count ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "5",
      "inline_failures" : "0",
    },
    {
      "name" : "DefineProperty",
      "signature" : "System.Reflection.Emit.PropertyBuilder System.Reflection.Emit.TypeBuilder:DefineProperty (object[])",
      "class" : "TypeBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_SymbolUnitEntry",
      "signature" : "Mono.CompilerServices.SymbolWriter.CompileUnitEntry Mono.CSharp.CompilationSourceFile:get_SymbolUnitEntry ()",
      "class" : "CompilationSourceFile",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_HasAwait",
      "signature" : "bool Mono.CSharp.ExplicitBlock:get_HasAwait ()",
      "class" : "ExplicitBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "15",
      "inline_failures" : "0",
    },
    {
      "name" : "HasSet",
      "signature" : "bool Mono.CSharp.BuilderContext:HasSet (Mono.CSharp.BuilderContext/Options)",
      "class" : "BuilderContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "30",
      "inline_failures" : "0",
    },
    {
      "name" : "ReferenceEquals",
      "signature" : "bool object:ReferenceEquals (object,object)",
      "class" : "Object",
      "namespace" : "System",
      "wrapper_type" : "none",
      "inline_successes" : "78",
      "inline_failures" : "0",
    },
    {
      "name" : "set_VariableType",
      "signature" : "void Mono.CSharp.DeclarationExpression:set_VariableType (Mono.CSharp.FullNamedExpression)",
      "class" : "DeclarationExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Catch/CatchVariableStore:.ctor (Mono.CSharp.Catch)",
      "class" : "CatchVariableStore",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.WarningRegions:.ctor ()",
      "class" : "WarningRegions",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "SetReturnType",
      "signature" : "void System.Reflection.Emit.MethodBuilder:SetReturnType (object)",
      "class" : "MethodBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_IsStatic",
      "signature" : "bool Mono.CSharp.MemberSpec:get_IsStatic ()",
      "class" : "MemberSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "38",
      "inline_failures" : "0",
    },
    {
      "name" : "get_HoistedVariant",
      "signature" : "Mono.CSharp.HoistedParameter Mono.CSharp.Parameter:get_HoistedVariant ()",
      "class" : "Parameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "5",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Variable",
      "signature" : "Mono.CSharp.LocalVariable Mono.CSharp.Is:get_Variable ()",
      "class" : "Is",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "12",
      "inline_failures" : "0",
    },
    {
      "name" : "get_ParsedName",
      "signature" : "Mono.CSharp.MemberName Mono.CSharp.DocumentationBuilder:get_ParsedName ()",
      "class" : "DocumentationBuilder",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "11",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Current",
      "signature" : "Mono.CSharp.OverloadResolver/AmbiguousCandidate System.Collections.Generic.List`1/Enumerator<Mono.CSharp.OverloadResolver/AmbiguousCandidate>:get_Current ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Containers",
      "signature" : "System.Collections.Generic.IList`1<Mono.CSharp.TypeContainer> Mono.CSharp.TypeContainer:get_Containers ()",
      "class" : "TypeContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "5",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.CompletingExpression:.ctor ()",
      "class" : "CompletingExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "7",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ArrayContainer/TypeRankPair:.ctor (Mono.CSharp.TypeSpec,int)",
      "class" : "TypeRankPair",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1<System.Type>:.ctor ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_NS",
      "signature" : "Mono.CSharp.Namespace Mono.CSharp.NamespaceContainer:get_NS ()",
      "class" : "NamespaceContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : "get_AccessorRemove",
      "signature" : "Mono.CSharp.MethodSpec Mono.CSharp.EventSpec:get_AccessorRemove ()",
      "class" : "EventSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_RelatedSymbols",
      "signature" : "string[] Mono.CSharp.AbstractMessage:get_RelatedSymbols ()",
      "class" : "AbstractMessage",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Exp",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Invocation:get_Exp ()",
      "class" : "Invocation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "set_Importer",
      "signature" : "void Mono.CSharp.AssemblyDefinition:set_Importer (Mono.CSharp.MetadataImporter)",
      "class" : "AssemblyDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.ObjectEqualityComparer`1<Mono.CSharp.OverloadResolver/AmbiguousCandidate>:.ctor ()",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "case_773",
      "signature" : "void Mono.CSharp.CSharpParser:case_773 ()",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_HasValue",
      "signature" : "bool System.Nullable`1<System.Security.Permissions.SecurityAction>:get_HasValue ()",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Driver:.ctor (Mono.CSharp.CompilerContext)",
      "class" : "Driver",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Rank",
      "signature" : "int Mono.CSharp.ArrayContainer:get_Rank ()",
      "class" : "ArrayContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "33",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Count",
      "signature" : "int System.Collections.Generic.List`1<Mono.CSharp.MethodSpec>:get_Count ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "10",
      "inline_failures" : "0",
    },
    {
      "name" : "get_GlobalRootNamespace",
      "signature" : "Mono.CSharp.RootNamespace Mono.CSharp.ModuleContainer:get_GlobalRootNamespace ()",
      "class" : "ModuleContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "12",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.TypeSpecComparer/DefaultImpl:.ctor ()",
      "class" : "DefaultImpl",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Initializer",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.BlockVariable:get_Initializer ()",
      "class" : "BlockVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "13",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Expression:.ctor ()",
      "class" : "Expression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "201",
      "inline_failures" : "0",
    },
    {
      "name" : "get_IsTopLevel",
      "signature" : "bool Mono.CSharp.TypeDefinition:get_IsTopLevel ()",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "14",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.WarningRegions/Enable:.ctor (int,int)",
      "class" : "Enable",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Current",
      "signature" : "Mono.CompilerServices.SymbolWriter.AnonymousScopeEntry System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator<int, Mono.CompilerServices.SymbolWriter.AnonymousScopeEntry>:get_Current ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Count",
      "signature" : "int System.Collections.Generic.List`1<Mono.CSharp.TypeInferenceContext/BoundInfo>:get_Count ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_IsEmpty",
      "signature" : "bool Mono.CSharp.AParametersCollection:get_IsEmpty ()",
      "class" : "AParametersCollection",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "24",
      "inline_failures" : "0",
    },
    {
      "name" : "set_Constraints",
      "signature" : "void Mono.CSharp.TypeParameter:set_Constraints (Mono.CSharp.Constraints)",
      "class" : "TypeParameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Statement",
      "signature" : "Mono.CSharp.AwaitStatement Mono.CSharp.Await:get_Statement ()",
      "class" : "Await",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : "set_Expr",
      "signature" : "void Mono.CSharp.PropertyPatternMember:set_Expr (Mono.CSharp.Expression)",
      "class" : "PropertyPatternMember",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Collections.Generic.List`1/Enumerator<Mono.CSharp.BlockVariableDeclarator>:Dispose ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "7",
      "inline_failures" : "0",
    },
    {
      "name" : "SetCustomAttribute",
      "signature" : "void System.Reflection.Emit.ModuleBuilder:SetCustomAttribute (object[])",
      "class" : "ModuleBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Count",
      "signature" : "int System.Collections.Generic.List`1<Mono.CSharp.Switch/LabelsRange>:get_Count ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Block",
      "signature" : "Mono.CSharp.Block Mono.CSharp.LabeledStatement:get_Block ()",
      "class" : "LabeledStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "14",
      "inline_failures" : "0",
    },
    {
      "name" : "HasMissingType",
      "signature" : "bool Mono.CSharp.ImportedDefinition/AttributesBag:HasMissingType (System.Reflection.ConstructorInfo)",
      "class" : "AttributesBag",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_AsyncThrowVariable",
      "signature" : "Mono.CSharp.LocalVariable Mono.CSharp.EmitContext:get_AsyncThrowVariable ()",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void object:.ctor ()",
      "class" : "Object",
      "namespace" : "System",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Spec",
      "signature" : "Mono.CSharp.FieldSpec Mono.CSharp.FieldExpr:get_Spec ()",
      "class" : "FieldExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "7",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Expr",
      "signature" : "Mono.CSharp.ExpressionStatement Mono.CSharp.StatementExpression:get_Expr ()",
      "class" : "StatementExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Report",
      "signature" : "Mono.CSharp.Report Mono.CSharp.FlowAnalysisContext:get_Report ()",
      "class" : "FlowAnalysisContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "15",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Current",
      "signature" : "System.Tuple`2<Mono.CSharp.RootNamespace, System.Reflection.Assembly> System.Collections.Generic.List`1/Enumerator<System.Tuple`2<Mono.CSharp.RootNamespace, System.Reflection.Assembly>>:get_Current ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "set_ToplevelTypes",
      "signature" : "void Mono.CSharp.RootContext:set_ToplevelTypes (Mono.CSharp.ModuleContainer)",
      "class" : "RootContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Collections.Generic.List`1/Enumerator<Mono.CSharp.TypeParameter>:Dispose ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "set_Filter",
      "signature" : "void Mono.CSharp.Catch:set_Filter (Mono.CSharp.Expression)",
      "class" : "Catch",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1<System.Reflection.AssemblyName>:.ctor ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Count",
      "signature" : "int System.Collections.Generic.List`1<System.Reflection.Emit.Label>:get_Count ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_PatternMatching",
      "signature" : "bool Mono.CSharp.SwitchLabel:get_PatternMatching ()",
      "class" : "SwitchLabel",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_CurrentIterator",
      "signature" : "Mono.CSharp.Iterator Mono.CSharp.ResolveContext:get_CurrentIterator ()",
      "class" : "ResolveContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "6",
      "inline_failures" : "0",
    },
    {
      "name" : "set_Next",
      "signature" : "void Mono.CSharp.Linq.AQueryClause:set_Next (Mono.CSharp.Linq.AQueryClause)",
      "class" : "AQueryClause",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
      "inline_successes" : "8",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Tokenizer/IdentifiersComparer:.ctor (int)",
      "class" : "IdentifiersComparer",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "ToDouble",
      "signature" : "(wrapper managed-to-native) double System.Decimal:ToDouble (System.Decimal)",
      "class" : "Decimal",
      "namespace" : "System",
      "wrapper_type" : "managed-to-native",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Count",
      "signature" : "int System.Collections.Generic.Stack`1<Mono.CompilerServices.SymbolWriter.CodeBlockEntry>:get_Count ()",
      "class" : "Stack`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "set_IsPrimaryConstructor",
      "signature" : "void Mono.CSharp.Constructor:set_IsPrimaryConstructor (bool)",
      "class" : "Constructor",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Count",
      "signature" : "int Mono.CSharp.TypeArguments:get_Count ()",
      "class" : "TypeArguments",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "9",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1<Mono.CSharp.Operator/OpType>:.ctor ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "set_Initializer",
      "signature" : "void Mono.CSharp.EventField:set_Initializer (Mono.CSharp.Expression)",
      "class" : "EventField",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_IsCompilerGenerated",
      "signature" : "bool Mono.CSharp.Block:get_IsCompilerGenerated ()",
      "class" : "Block",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "5",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Spec",
      "signature" : "Mono.CSharp.MethodSpec Mono.CSharp.MethodCore:get_Spec ()",
      "class" : "MethodCore",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "8",
      "inline_failures" : "0",
    },
    {
      "name" : "SetCustomAttribute",
      "signature" : "void System.Reflection.Emit.EventBuilder:SetCustomAttribute (object[])",
      "class" : "EventBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "DefineEvent",
      "signature" : "System.Reflection.Emit.EventBuilder System.Reflection.Emit.TypeBuilder:DefineEvent (object[])",
      "class" : "TypeBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "op_Equality",
      "signature" : "bool System.Type:op_Equality (System.Type,System.Type)",
      "class" : "Type",
      "namespace" : "System",
      "wrapper_type" : "none",
      "inline_successes" : "61",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Current",
      "signature" : "Mono.CSharp.MemberCore System.Collections.Generic.List`1/Enumerator<Mono.CSharp.MemberCore>:get_Current ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "13",
      "inline_failures" : "0",
    },
    {
      "name" : "set_HoistedVariant",
      "signature" : "void Mono.CSharp.Parameter:set_HoistedVariant (Mono.CSharp.HoistedParameter)",
      "class" : "Parameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : "set_Variable",
      "signature" : "void Mono.CSharp.Is:set_Variable (Mono.CSharp.LocalVariable)",
      "class" : "Is",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Checksum",
      "signature" : "byte[] Mono.CSharp.SourceFile:get_Checksum ()",
      "class" : "SourceFile",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "set_ParsedName",
      "signature" : "void Mono.CSharp.DocumentationBuilder:set_ParsedName (Mono.CSharp.MemberName)",
      "class" : "DocumentationBuilder",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ShimExpression:.ctor (Mono.CSharp.Expression)",
      "class" : "ShimExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "27",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1<Mono.CSharp.EventSpec>:.ctor ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_IsConditionallyExcluded",
      "signature" : "bool Mono.CSharp.MethodGroupExpr:get_IsConditionallyExcluded ()",
      "class" : "MethodGroupExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "5",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Count",
      "signature" : "int System.Collections.Generic.List`1<Mono.CSharp.DefiniteAssignmentBitSet>:get_Count ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_IsBase",
      "signature" : "bool Mono.CSharp.MemberExpr:get_IsBase ()",
      "class" : "MemberExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "5",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.EqualityComparer`1<Mono.CompilerServices.SymbolWriter.CapturedScope>:.ctor ()",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.LocalExitStatement:.ctor (Mono.CSharp.Location)",
      "class" : "LocalExitStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "5",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Usings",
      "signature" : "System.Collections.Generic.List`1<Mono.CSharp.UsingClause> Mono.CSharp.NamespaceContainer:get_Usings ()",
      "class" : "NamespaceContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "6",
      "inline_failures" : "0",
    },
    {
      "name" : "get_MemberType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.MemberBase:get_MemberType ()",
      "class" : "MemberBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "94",
      "inline_failures" : "0",
    },
    {
      "name" : "get_CurrentTryBlock",
      "signature" : "Mono.CSharp.ExceptionStatement Mono.CSharp.BlockContext:get_CurrentTryBlock ()",
      "class" : "BlockContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "set_AccessorRemove",
      "signature" : "void Mono.CSharp.EventSpec:set_AccessorRemove (Mono.CSharp.MethodSpec)",
      "class" : "EventSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Size",
      "signature" : "int Mono.CompilerServices.SymbolWriter.CompileUnitEntry:get_Size ()",
      "class" : "CompileUnitEntry",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Text",
      "signature" : "string Mono.CSharp.AbstractMessage:get_Text ()",
      "class" : "AbstractMessage",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_IsCLSCompliant",
      "signature" : "bool Mono.CSharp.AssemblyDefinition:get_IsCLSCompliant ()",
      "class" : "AssemblyDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_IsError",
      "signature" : "bool System.ObsoleteAttribute:get_IsError ()",
      "class" : "ObsoleteAttribute",
      "namespace" : "System",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_HasValue",
      "signature" : "bool System.Nullable`1<Mono.CSharp.Operator/OpType>:get_HasValue ()",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
      "inline_successes" : "9",
      "inline_failures" : "0",
    },
    {
      "name" : "get_MethodGroup",
      "signature" : "Mono.CSharp.MethodGroupExpr Mono.CSharp.Invocation:get_MethodGroup ()",
      "class" : "Invocation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "10",
      "inline_failures" : "0",
    },
    {
      "name" : "op_Explicit",
      "signature" : "single System.Decimal:op_Explicit (System.Decimal)",
      "class" : "Decimal",
      "namespace" : "System",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "case_774",
      "signature" : "void Mono.CSharp.CSharpParser:case_774 ()",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Type:.ctor ()",
      "class" : "Type",
      "namespace" : "System",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Current",
      "signature" : "System.Collections.Generic.KeyValuePair`2<string, System.Collections.Generic.IList`1<Mono.CSharp.MemberSpec>> System.Collections.Generic.Dictionary`2/Enumerator<string, System.Collections.Generic.IList`1<Mono.CSharp.MemberSpec>>:get_Current ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "10",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.StreamReportPrinter:.ctor (System.IO.TextWriter)",
      "class" : "StreamReportPrinter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "5",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Current",
      "signature" : "Mono.CSharp.TypeContainer System.Collections.Generic.List`1/Enumerator<Mono.CSharp.TypeContainer>:get_Current ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "12",
      "inline_failures" : "0",
    },
    {
      "name" : "IsMissingType",
      "signature" : "bool Mono.CSharp.MetadataImporter:IsMissingType (System.Type)",
      "class" : "MetadataImporter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "get_MethodBuilder",
      "signature" : "System.Reflection.Emit.MethodBuilder Mono.CSharp.MethodOrOperator:get_MethodBuilder ()",
      "class" : "MethodOrOperator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "23",
      "inline_failures" : "0",
    },
    {
      "name" : "get_IsMethodOwned",
      "signature" : "bool Mono.CSharp.TypeParameterSpec:get_IsMethodOwned ()",
      "class" : "TypeParameterSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "9",
      "inline_failures" : "0",
    },
    {
      "name" : "get_LocationsBag",
      "signature" : "Mono.CSharp.LocationsBag Mono.CSharp.ParserSession:get_LocationsBag ()",
      "class" : "ParserSession",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.EqualityComparer`1<byte>:.ctor ()",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "12",
      "inline_failures" : "0",
    },
    {
      "name" : "set_Initializer",
      "signature" : "void Mono.CSharp.BlockVariable:set_Initializer (Mono.CSharp.Expression)",
      "class" : "BlockVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "10",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Current",
      "signature" : "System.Collections.Generic.KeyValuePair`2<System.Security.Permissions.SecurityAction, System.Security.PermissionSet> System.Collections.Generic.Dictionary`2/Enumerator<System.Security.Permissions.SecurityAction, System.Security.PermissionSet>:get_Current ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "5",
      "inline_failures" : "0",
    },
    {
      "name" : "__isinst_wrapper_IDisposable",
      "signature" : "(wrapper isinst) object object:__isinst_wrapper_IDisposable (object)",
      "class" : "Object",
      "namespace" : "System",
      "wrapper_type" : "isinst",
      "inline_successes" : "9",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1<Mono.CSharp.BlockVariableDeclarator>:.ctor ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Collections.Generic.List`1/Enumerator<Mono.CSharp.MemberSpec>:Dispose ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Report",
      "signature" : "Mono.CSharp.Report Mono.CSharp.ToplevelBlock:get_Report ()",
      "class" : "ToplevelBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "12",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1<Mono.CSharp.HoistedVariable>:.ctor ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Location",
      "signature" : "Mono.CSharp.Location Mono.CSharp.PropertyPatternMember:get_Location ()",
      "class" : "PropertyPatternMember",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Parameters",
      "signature" : "Mono.CSharp.AParametersCollection Mono.CSharp.MethodSpec:get_Parameters ()",
      "class" : "MethodSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "73",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Add",
      "signature" : "Mono.CSharp.Event/AEventAccessor Mono.CSharp.Event:get_Add ()",
      "class" : "Event",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "9",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Key",
      "signature" : "string System.Collections.Generic.KeyValuePair`2<string, System.Collections.Generic.IList`1<Mono.CSharp.MemberSpec>>:get_Key ()",
      "class" : "KeyValuePair`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "9",
      "inline_failures" : "0",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Collections.Generic.List`1/Enumerator<System.Tuple`2<Mono.CSharp.GotoCase, Mono.CSharp.Constant>>:Dispose ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1<Mono.CSharp.MissingTypeSpecReference>:.ctor ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "7",
      "inline_failures" : "0",
    },
    {
      "name" : "EnableRedefinition",
      "signature" : "void Mono.CSharp.NamespaceContainer:EnableRedefinition ()",
      "class" : "NamespaceContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.ArrayList:.ctor ()",
      "class" : "ArrayList",
      "namespace" : "System.Collections",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Name",
      "signature" : "string Mono.CSharp.LabeledStatement:get_Name ()",
      "class" : "LabeledStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "set_AsyncThrowVariable",
      "signature" : "void Mono.CSharp.EmitContext:set_AsyncThrowVariable (Mono.CSharp.LocalVariable)",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.PropertyPattern:.ctor (Mono.CSharp.ATypeNameExpression,System.Collections.Generic.List`1<Mono.CSharp.PropertyPatternMember>,Mono.CSharp.Location)",
      "class" : "PropertyPattern",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Attributes",
      "signature" : "System.Reflection.ResourceAttributes Mono.CSharp.AssemblyResource:get_Attributes ()",
      "class" : "AssemblyResource",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_SwitchInitialDefinitiveAssignment",
      "signature" : "Mono.CSharp.DefiniteAssignmentBitSet Mono.CSharp.FlowAnalysisContext:get_SwitchInitialDefinitiveAssignment ()",
      "class" : "FlowAnalysisContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Name",
      "signature" : "string Mono.CSharp.Attribute:get_Name ()",
      "class" : "Attribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Break:.ctor (Mono.CSharp.Location)",
      "class" : "Break",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Collections.Generic.List`1/Enumerator<Mono.CSharp.Attribute>:Dispose ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "12",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Statement:.ctor ()",
      "class" : "Statement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "68",
      "inline_failures" : "0",
    },
    {
      "name" : "get_IsGeneral",
      "signature" : "bool Mono.CSharp.Catch:get_IsGeneral ()",
      "class" : "Catch",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "5",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Context",
      "signature" : "Mono.CSharp.IModuleContext Mono.CSharp.TypeParameterInflator:get_Context ()",
      "class" : "TypeParameterInflator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Current",
      "signature" : "Mono.CSharp.FullNamedExpression System.Collections.Generic.List`1/Enumerator<Mono.CSharp.FullNamedExpression>:get_Current ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "EnableRedefinition",
      "signature" : "void Mono.CSharp.ModuleContainer:EnableRedefinition ()",
      "class" : "ModuleContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "__isinst_wrapper_IFixedExpression",
      "signature" : "(wrapper isinst) object object:__isinst_wrapper_IFixedExpression (object)",
      "class" : "Object",
      "namespace" : "System",
      "wrapper_type" : "isinst",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.AwaiterDefinition:.ctor ()",
      "class" : "AwaiterDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Count",
      "signature" : "int System.Collections.Generic.Dictionary`2<int, int>:get_Count ()",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1<Mono.CSharp.Attribute>:.ctor ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Count",
      "signature" : "int System.Collections.Generic.List`1<Mono.CSharp.Statement>:get_Count ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "16",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Location",
      "signature" : "Mono.CSharp.Location Mono.CSharp.Linq.RangeVariable:get_Location ()",
      "class" : "RangeVariable",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
      "inline_successes" : "7",
      "inline_failures" : "0",
    },
    {
      "name" : "get_HasCapturedThis",
      "signature" : "bool Mono.CSharp.ExplicitBlock:get_HasCapturedThis ()",
      "class" : "ExplicitBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "5",
      "inline_failures" : "0",
    },
    {
      "name" : "DefineField",
      "signature" : "System.Reflection.Emit.FieldBuilder System.Reflection.Emit.TypeBuilder:DefineField (object[])",
      "class" : "TypeBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
      "inline_successes" : "6",
      "inline_failures" : "0",
    },
    {
      "name" : "get_SourceFile",
      "signature" : "Mono.CSharp.SourceFile Mono.CSharp.CompilationSourceFile:get_SourceFile ()",
      "class" : "CompilationSourceFile",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "BeginCatchBlock",
      "signature" : "void System.Reflection.Emit.ILGenerator:BeginCatchBlock (System.Type)",
      "class" : "ILGenerator",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "IsNaN",
      "signature" : "bool single:IsNaN (single)",
      "class" : "Single",
      "namespace" : "System",
      "wrapper_type" : "none",
      "inline_successes" : "9",
      "inline_failures" : "0",
    },
    {
      "name" : "get_ModFlags",
      "signature" : "Mono.CSharp.Parameter/Modifier Mono.CSharp.Parameter:get_ModFlags ()",
      "class" : "Parameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "15",
      "inline_failures" : "0",
    },
    {
      "name" : "get_ParsedParameters",
      "signature" : "System.Collections.Generic.List`1<Mono.CSharp.DocumentationParameter> Mono.CSharp.DocumentationBuilder:get_ParsedParameters ()",
      "class" : "DocumentationBuilder",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "10",
      "inline_failures" : "0",
    },
    {
      "name" : "get_HasChecksum",
      "signature" : "bool Mono.CSharp.SourceFile:get_HasChecksum ()",
      "class" : "SourceFile",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.AParametersCollection:.ctor ()",
      "class" : "AParametersCollection",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "5",
      "inline_failures" : "0",
    },
    {
      "name" : "Reset",
      "signature" : "void Mono.CSharp.ReportPrinter:Reset ()",
      "class" : "ReportPrinter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "set_UnattachedAttributes",
      "signature" : "void Mono.CSharp.TypeContainer:set_UnattachedAttributes (Mono.CSharp.Attributes)",
      "class" : "TypeContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "SetStateMachine",
      "signature" : "void Mono.CSharp.StateMachineInitializer:SetStateMachine (Mono.CSharp.StateMachine)",
      "class" : "StateMachineInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Fixed/ExpressionEmitter:.ctor (Mono.CSharp.Expression,Mono.CSharp.LocalVariable)",
      "class" : "ExpressionEmitter",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "AddDeclarativeSecurity",
      "signature" : "void System.Reflection.Emit.ConstructorBuilder:AddDeclarativeSecurity (object[])",
      "class" : "ConstructorBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "set_BaseMembersProvider",
      "signature" : "void Mono.CSharp.OverloadResolver:set_BaseMembersProvider (Mono.CSharp.OverloadResolver/IBaseMembersProvider)",
      "class" : "OverloadResolver",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_TypeExpression",
      "signature" : "Mono.CSharp.FullNamedExpression Mono.CSharp.MemberBase:get_TypeExpression ()",
      "class" : "MemberBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "7",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.ByteEqualityComparer:.ctor ()",
      "class" : "ByteEqualityComparer",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "12",
      "inline_failures" : "0",
    },
    {
      "name" : "set_CurrentTryBlock",
      "signature" : "void Mono.CSharp.BlockContext:set_CurrentTryBlock (Mono.CSharp.ExceptionStatement)",
      "class" : "BlockContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : "get_BackingField",
      "signature" : "Mono.CSharp.FieldSpec Mono.CSharp.EventSpec:get_BackingField ()",
      "class" : "EventSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Count",
      "signature" : "int System.Collections.Generic.List`1<Mono.CSharp.Argument>:get_Count ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "70",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1<Mono.CSharp.MemberCore>:.ctor ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "Empty",
      "signature" : "Mono.CSharp.Expression[] System.Array:Empty<Mono.CSharp.Expression> ()",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Message",
      "signature" : "string System.ObsoleteAttribute:get_Message ()",
      "class" : "ObsoleteAttribute",
      "namespace" : "System",
      "wrapper_type" : "none",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : "case_775",
      "signature" : "void Mono.CSharp.CSharpParser:case_775 ()",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_IsDictionaryInitializer",
      "signature" : "bool Mono.CSharp.ElementInitializer:get_IsDictionaryInitializer ()",
      "class" : "ElementInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Reflection.MemberInfo:.ctor ()",
      "class" : "MemberInfo",
      "namespace" : "System.Reflection",
      "wrapper_type" : "none",
      "inline_successes" : "6",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Count",
      "signature" : "int System.Collections.Generic.List`1<Mono.CSharp.SourceFile/LocationRegion>:get_Count ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : "get_SpecialConstraint",
      "signature" : "Mono.CSharp.SpecialConstraint Mono.CSharp.TypeParameterSpec:get_SpecialConstraint ()",
      "class" : "TypeParameterSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "5",
      "inline_failures" : "0",
    },
    {
      "name" : "Empty",
      "signature" : "Mono.CSharp.FullNamedExpression[] System.Array:Empty<Mono.CSharp.FullNamedExpression> ()",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
      "inline_successes" : "6",
      "inline_failures" : "0",
    },
    {
      "name" : "get_PointerTypesCache",
      "signature" : "System.Collections.Generic.Dictionary`2<Mono.CSharp.TypeSpec, Mono.CSharp.PointerContainer> Mono.CSharp.ModuleContainer:get_PointerTypesCache ()",
      "class" : "ModuleContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Current",
      "signature" : "Mono.CSharp.UsingClause System.Collections.Generic.List`1/Enumerator<Mono.CSharp.UsingClause>:get_Current ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Current",
      "signature" : "Mono.CSharp.HoistedParameter System.Collections.Generic.List`1/Enumerator<Mono.CSharp.HoistedParameter>:get_Current ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_InvariantCulture",
      "signature" : "System.Globalization.CultureInfo System.Globalization.CultureInfo:get_InvariantCulture ()",
      "class" : "CultureInfo",
      "namespace" : "System.Globalization",
      "wrapper_type" : "none",
      "inline_successes" : "11",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Getter",
      "signature" : "Mono.CSharp.MethodSpec Mono.CSharp.PropertyOrIndexerExpr`1<Mono.CSharp.IndexerSpec>:get_Getter ()",
      "class" : "PropertyOrIndexerExpr`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_TypeExpression",
      "signature" : "Mono.CSharp.FullNamedExpression Mono.CSharp.BlockVariable:get_TypeExpression ()",
      "class" : "BlockVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "Empty",
      "signature" : "Mono.CompilerServices.SymbolWriter.SourceFileEntry[] System.Array:Empty<Mono.CompilerServices.SymbolWriter.SourceFileEntry> ()",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1<int>:.ctor ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_AddressTaken",
      "signature" : "bool Mono.CSharp.LocalVariable:get_AddressTaken ()",
      "class" : "LocalVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_ThisReferencesFromChildrenBlock",
      "signature" : "System.Collections.Generic.List`1<Mono.CSharp.ExplicitBlock> Mono.CSharp.ToplevelBlock:get_ThisReferencesFromChildrenBlock ()",
      "class" : "ToplevelBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_RequiresEmitWithAwait",
      "signature" : "bool Mono.CSharp.CompoundAssign/TargetExpression:get_RequiresEmitWithAwait ()",
      "class" : "TargetExpression",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_IsGeneric",
      "signature" : "bool Mono.CSharp.MemberName:get_IsGeneric ()",
      "class" : "MemberName",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "7",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1<Mono.CompilerServices.SymbolWriter.MethodEntry>:.ctor ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "set_Location",
      "signature" : "void Mono.CSharp.PropertyPatternMember:set_Location (Mono.CSharp.Location)",
      "class" : "PropertyPatternMember",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Count",
      "signature" : "int System.Collections.Generic.Dictionary`2<Mono.CSharp.Attribute, System.Collections.Generic.List`1<Mono.CSharp.Attribute>>:get_Count ()",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_ReturnType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.MethodSpec:get_ReturnType ()",
      "class" : "MethodSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "57",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Current",
      "signature" : "System.Collections.Generic.KeyValuePair`2<Mono.CSharp.MemberExpr, Mono.CSharp.NamedArgument> System.Collections.Generic.List`1/Enumerator<System.Collections.Generic.KeyValuePair`2<Mono.CSharp.MemberExpr, Mono.CSharp.NamedArgument>>:get_Current ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "CompareTo",
      "signature" : "int System.Decimal:CompareTo (System.Decimal)",
      "class" : "Decimal",
      "namespace" : "System",
      "wrapper_type" : "none",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : "get_DefaultValue",
      "signature" : "Mono.CSharp.DefaultParameterValueExpression Mono.CSharp.Parameter:get_DefaultValue ()",
      "class" : "Parameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CompilerServices.SymbolWriter.LineNumberEntry/LocationComparer:.ctor ()",
      "class" : "LocationComparer",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.WarningRegions/Disable:.ctor (int,int)",
      "class" : "Disable",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_TryFinallyUnwind",
      "signature" : "System.Collections.Generic.List`1<Mono.CSharp.TryFinally> Mono.CSharp.EmitContext:get_TryFinallyUnwind ()",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "12",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.GotoDefault:.ctor (Mono.CSharp.Location)",
      "class" : "GotoDefault",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "set_Attributes",
      "signature" : "void Mono.CSharp.AssemblyResource:set_Attributes (System.Reflection.ResourceAttributes)",
      "class" : "AssemblyResource",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "set_SwitchInitialDefinitiveAssignment",
      "signature" : "void Mono.CSharp.FlowAnalysisContext:set_SwitchInitialDefinitiveAssignment (Mono.CSharp.DefiniteAssignmentBitSet)",
      "class" : "FlowAnalysisContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_ConditionalAccess",
      "signature" : "bool Mono.CSharp.ElementAccess:get_ConditionalAccess ()",
      "class" : "ElementAccess",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Item2",
      "signature" : "System.Reflection.FieldInfo System.Tuple`2<Mono.CSharp.FieldSpec, System.Reflection.FieldInfo>:get_Item2 ()",
      "class" : "Tuple`2",
      "namespace" : "System",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Item",
      "signature" : "Mono.CSharp.Parameter Mono.CSharp.ParametersCompiled:get_Item (int)",
      "class" : "ParametersCompiled",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "31",
      "inline_failures" : "0",
    },
    {
      "name" : "op_Addition",
      "signature" : "System.Decimal System.Decimal:op_Addition (System.Decimal,System.Decimal)",
      "class" : "Decimal",
      "namespace" : "System",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1<Mono.CSharp.ResumableStatement>:.ctor ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "__castclass_wrapper_IAssignMethod",
      "signature" : "(wrapper castclass) object object:__castclass_wrapper_IAssignMethod (object)",
      "class" : "Object",
      "namespace" : "System",
      "wrapper_type" : "castclass",
      "inline_successes" : "5",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Count",
      "signature" : "int System.Collections.Generic.Dictionary`2<Mono.CSharp.ArrayContainer/TypeRankPair, Mono.CSharp.ArrayContainer>:get_Count ()",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "6",
      "inline_failures" : "0",
    },
    {
      "name" : "get_TypeInstance",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.TypeParameterInflator:get_TypeInstance ()",
      "class" : "TypeParameterInflator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "5",
      "inline_failures" : "0",
    },
    {
      "name" : "get_SectionStart",
      "signature" : "bool Mono.CSharp.SwitchLabel:get_SectionStart ()",
      "class" : "SwitchLabel",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "5",
      "inline_failures" : "0",
    },
    {
      "name" : "__isinst_wrapper_IMemoryLocation",
      "signature" : "(wrapper isinst) object object:__isinst_wrapper_IMemoryLocation (object)",
      "class" : "Object",
      "namespace" : "System",
      "wrapper_type" : "isinst",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Current",
      "signature" : "Mono.CompilerServices.SymbolWriter.NamespaceEntry System.Collections.Generic.List`1/Enumerator<Mono.CompilerServices.SymbolWriter.NamespaceEntry>:get_Current ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_TotalSeconds",
      "signature" : "double System.TimeSpan:get_TotalSeconds ()",
      "class" : "TimeSpan",
      "namespace" : "System",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Collections.Generic.List`1/Enumerator<System.Xml.XmlNode>:Dispose ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Range",
      "signature" : "long Mono.CSharp.Switch/LabelsRange:get_Range ()",
      "class" : "LabelsRange",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_IsCatchBlock",
      "signature" : "bool Mono.CSharp.Block:get_IsCatchBlock ()",
      "class" : "Block",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "set_Location",
      "signature" : "void Mono.CSharp.Linq.RangeVariable:set_Location (Mono.CSharp.Location)",
      "class" : "RangeVariable",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_ArrayTypesCache",
      "signature" : "System.Collections.Generic.Dictionary`2<Mono.CSharp.ArrayContainer/TypeRankPair, Mono.CSharp.ArrayContainer> Mono.CSharp.ModuleContainer:get_ArrayTypesCache ()",
      "class" : "ModuleContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "DefineGenericParameters",
      "signature" : "System.Reflection.Emit.GenericTypeParameterBuilder[] System.Reflection.Emit.TypeBuilder:DefineGenericParameters (string[])",
      "class" : "TypeBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Value",
      "signature" : "string Mono.CSharp.LocatedToken:get_Value ()",
      "class" : "LocatedToken",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "113",
      "inline_failures" : "0",
    },
    {
      "name" : "__isinst_wrapper_IComparable",
      "signature" : "(wrapper isinst) object object:__isinst_wrapper_IComparable (object)",
      "class" : "Object",
      "namespace" : "System",
      "wrapper_type" : "isinst",
      "inline_successes" : "20",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Current",
      "signature" : "System.Collections.Generic.IList`1<Mono.CSharp.MemberSpec> System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator<string, System.Collections.Generic.IList`1<Mono.CSharp.MemberSpec>>:get_Current ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "BeginExceptionBlock",
      "signature" : "System.Reflection.Emit.Label System.Reflection.Emit.ILGenerator:BeginExceptionBlock ()",
      "class" : "ILGenerator",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
      "inline_successes" : "6",
      "inline_failures" : "0",
    },
    {
      "name" : "Empty",
      "signature" : "Mono.CSharp.Location[] System.Array:Empty<Mono.CSharp.Location> ()",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Name",
      "signature" : "string Mono.CSharp.Parameter:get_Name ()",
      "class" : "Parameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "36",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Item1",
      "signature" : "Mono.CSharp.RootNamespace System.Tuple`2<Mono.CSharp.RootNamespace, System.Reflection.Assembly>:get_Item1 ()",
      "class" : "Tuple`2",
      "namespace" : "System",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "set_ParsedParameters",
      "signature" : "void Mono.CSharp.DocumentationBuilder:set_ParsedParameters (System.Collections.Generic.List`1<Mono.CSharp.DocumentationParameter>)",
      "class" : "DocumentationBuilder",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "9",
      "inline_failures" : "0",
    },
    {
      "name" : "get_SourceFileEntry",
      "signature" : "Mono.CompilerServices.SymbolWriter.SourceFileEntry Mono.CSharp.SourceFile:get_SourceFileEntry ()",
      "class" : "SourceFile",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Key",
      "signature" : "string System.Collections.Generic.KeyValuePair`2<string, Mono.CompilerServices.SymbolWriter.LocalVariableEntry>:get_Key ()",
      "class" : "KeyValuePair`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Report",
      "signature" : "Mono.CSharp.Report Mono.CSharp.Driver:get_Report ()",
      "class" : "Driver",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "17",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1<Mono.CompilerServices.SymbolWriter.LineNumberEntry>:.ctor ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "DefineParameter",
      "signature" : "System.Reflection.Emit.ParameterBuilder System.Reflection.Emit.ConstructorBuilder:DefineParameter (object[])",
      "class" : "ConstructorBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "Mark_HasEquals",
      "signature" : "void Mono.CSharp.TypeDefinition:Mark_HasEquals ()",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "Empty",
      "signature" : "Mono.CSharp.MemberSpec[] System.Array:Empty<Mono.CSharp.MemberSpec> ()",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "swap",
      "signature" : "void System.Array:swap<System.Decimal> (System.Decimal[],int,int)",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "ToString",
      "signature" : "string char:ToString (char)",
      "class" : "Char",
      "namespace" : "System",
      "wrapper_type" : "none",
      "inline_successes" : "5",
      "inline_failures" : "0",
    },
    {
      "name" : "get_BestCandidateIsDynamic",
      "signature" : "bool Mono.CSharp.OverloadResolver:get_BestCandidateIsDynamic ()",
      "class" : "OverloadResolver",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Reachability:.ctor (bool)",
      "class" : "Reachability",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "22",
      "inline_failures" : "0",
    },
    {
      "name" : "set_TypeExpression",
      "signature" : "void Mono.CSharp.MemberBase:set_TypeExpression (Mono.CSharp.FullNamedExpression)",
      "class" : "MemberBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_CurrentTryCatch",
      "signature" : "Mono.CSharp.TryCatch Mono.CSharp.BlockContext:get_CurrentTryCatch ()",
      "class" : "BlockContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "set_BackingField",
      "signature" : "void Mono.CSharp.EventSpec:set_BackingField (Mono.CSharp.FieldSpec)",
      "class" : "EventSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Expr",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.ShimExpression:get_Expr ()",
      "class" : "ShimExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Count",
      "signature" : "int System.Collections.Generic.List`1<Mono.CSharp.PropertyPatternMember>:get_Count ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_IsSatelliteAssembly",
      "signature" : "bool Mono.CSharp.AssemblyDefinition:get_IsSatelliteAssembly ()",
      "class" : "AssemblyDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_ConditionalAccess",
      "signature" : "Mono.CSharp.ConditionalAccessContext Mono.CSharp.EmitContext:get_ConditionalAccess ()",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "11",
      "inline_failures" : "0",
    },
    {
      "name" : "case_776",
      "signature" : "void Mono.CSharp.CSharpParser:case_776 ()",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.TypeExpr:.ctor ()",
      "class" : "TypeExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "12",
      "inline_failures" : "0",
    },
    {
      "name" : "Empty",
      "signature" : "Mono.CSharp.Namespace[] System.Array:Empty<Mono.CSharp.Namespace> ()",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_IsLifted",
      "signature" : "bool Mono.CSharp.Binary/PredefinedOperator:get_IsLifted ()",
      "class" : "PredefinedOperator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "6",
      "inline_failures" : "0",
    },
    {
      "name" : "set_SpecialConstraint",
      "signature" : "void Mono.CSharp.TypeParameterSpec:set_SpecialConstraint (Mono.CSharp.SpecialConstraint)",
      "class" : "TypeParameterSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "get_UseJayGlobalArrays",
      "signature" : "bool Mono.CSharp.ParserSession:get_UseJayGlobalArrays ()",
      "class" : "ParserSession",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_PredefinedAttributes",
      "signature" : "Mono.CSharp.PredefinedAttributes Mono.CSharp.ModuleContainer:get_PredefinedAttributes ()",
      "class" : "ModuleContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "59",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Variable",
      "signature" : "Mono.CSharp.LocalVariable Mono.CSharp.BlockVariable:get_Variable ()",
      "class" : "BlockVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "12",
      "inline_failures" : "0",
    },
    {
      "name" : "GetType",
      "signature" : "System.Type System.Type:GetType ()",
      "class" : "Type",
      "namespace" : "System",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Block",
      "signature" : "Mono.CSharp.Block Mono.CSharp.LocalVariable:get_Block ()",
      "class" : "LocalVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "9",
      "inline_failures" : "0",
    },
    {
      "name" : "get_ThisVariable",
      "signature" : "Mono.CSharp.LocalVariable Mono.CSharp.ToplevelBlock:get_ThisVariable ()",
      "class" : "ToplevelBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : "set_RequiresEmitWithAwait",
      "signature" : "void Mono.CSharp.CompoundAssign/TargetExpression:set_RequiresEmitWithAwait (bool)",
      "class" : "TargetExpression",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Types",
      "signature" : "Mono.CSharp.TypeSpec[] Mono.CSharp.AParametersCollection:get_Types ()",
      "class" : "AParametersCollection",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "87",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Name",
      "signature" : "Mono.CSharp.SimpleMemberName Mono.CSharp.FieldDeclarator:get_Name ()",
      "class" : "FieldDeclarator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "13",
      "inline_failures" : "0",
    },
    {
      "name" : "get_CompileUnitCount",
      "signature" : "int Mono.CompilerServices.SymbolWriter.MonoSymbolFile:get_CompileUnitCount ()",
      "class" : "MonoSymbolFile",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.PatternExpression:.ctor (Mono.CSharp.Location)",
      "class" : "PatternExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "7",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Count",
      "signature" : "int System.Collections.Generic.List`1<Mono.CSharp.INamedBlockVariable>:get_Count ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : "get_TypeArguments",
      "signature" : "Mono.CSharp.TypeSpec[] Mono.CSharp.MethodSpec:get_TypeArguments ()",
      "class" : "MethodSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "13",
      "inline_failures" : "0",
    },
    {
      "name" : "Exit",
      "signature" : "(wrapper managed-to-native) void System.Threading.Monitor:Exit (object)",
      "class" : "Monitor",
      "namespace" : "System.Threading",
      "wrapper_type" : "managed-to-native",
      "inline_successes" : "23",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.AnonymousMethodStorey/StoreyFieldPair:.ctor (Mono.CSharp.AnonymousMethodStorey,Mono.CSharp.Field)",
      "class" : "StoreyFieldPair",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Collections.Generic.List`1/Enumerator<Mono.CSharp.AnonymousTypeClass>:Dispose ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Count",
      "signature" : "int System.Collections.Generic.List`1<Mono.CompilerServices.SymbolWriter.NamespaceEntry>:get_Count ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "set_DefaultValue",
      "signature" : "void Mono.CSharp.Parameter:set_DefaultValue (Mono.CSharp.DefaultParameterValueExpression)",
      "class" : "Parameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Comparer:.ctor (Mono.CSharp.Comparer/ComparerFunc)",
      "class" : "Comparer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : "get_IsNullable",
      "signature" : "bool Mono.CSharp.ComposedTypeSpecifier:get_IsNullable ()",
      "class" : "ComposedTypeSpecifier",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "FCallAddSub",
      "signature" : "(wrapper managed-to-native) void System.Decimal:FCallAddSub (System.Decimal&,System.Decimal&,byte)",
      "class" : "Decimal",
      "namespace" : "System",
      "wrapper_type" : "managed-to-native",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Block",
      "signature" : "Mono.CSharp.ParametersBlock Mono.CSharp.ParametersBlock/ParameterInfo:get_Block ()",
      "class" : "ParameterInfo",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "6",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Count",
      "signature" : "int System.Collections.Generic.Dictionary`2<string, Mono.CompilerServices.SymbolWriter.LocalVariableEntry>:get_Count ()",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "6",
      "inline_failures" : "0",
    },
    {
      "name" : "set_TryFinallyUnwind",
      "signature" : "void Mono.CSharp.EmitContext:set_TryFinallyUnwind (System.Collections.Generic.List`1<Mono.CSharp.TryFinally>)",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Name",
      "signature" : "string Mono.CSharp.AssemblyResource:get_Name ()",
      "class" : "AssemblyResource",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "5",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Name",
      "signature" : "string Mono.CSharp.Namespace:get_Name ()",
      "class" : "Namespace",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "5",
      "inline_failures" : "0",
    },
    {
      "name" : "get_TryFinally",
      "signature" : "Mono.CSharp.TryFinally Mono.CSharp.FlowAnalysisContext:get_TryFinally ()",
      "class" : "FlowAnalysisContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Count",
      "signature" : "int System.Collections.Generic.List`1<Mono.CSharp.Expression>:get_Count ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "33",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1<System.Tuple`2<Mono.CSharp.Modifiers, Mono.CSharp.Location>>:.ctor ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.ObjectComparer`1<Mono.CSharp.SourceFile/LocationRegion>:.ctor ()",
      "class" : "ObjectComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Collections.Generic.Dictionary`2/Enumerator<string, System.Collections.Generic.IList`1<Mono.CSharp.MemberSpec>>:Dispose ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "10",
      "inline_failures" : "0",
    },
    {
      "name" : "set_ConditionalAccess",
      "signature" : "void Mono.CSharp.ElementAccess:set_ConditionalAccess (bool)",
      "class" : "ElementAccess",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ProxyMethodContext:.ctor (Mono.CSharp.TypeContainer)",
      "class" : "ProxyMethodContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Constructor",
      "signature" : "Mono.CSharp.MethodSpec Mono.CSharp.PredefinedAttribute:get_Constructor ()",
      "class" : "PredefinedAttribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_CurrentField",
      "signature" : "Mono.CSharp.Field Mono.CSharp.IteratorStorey:get_CurrentField ()",
      "class" : "IteratorStorey",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_CopyOnWrite",
      "signature" : "bool Mono.CSharp.DefiniteAssignmentBitSet:get_CopyOnWrite ()",
      "class" : "DefiniteAssignmentBitSet",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "set_TypeExpression",
      "signature" : "void Mono.CSharp.Catch:set_TypeExpression (Mono.CSharp.FullNamedExpression)",
      "class" : "Catch",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Variable",
      "signature" : "Mono.CSharp.LocalVariable Mono.CSharp.BlockVariableDeclarator:get_Variable ()",
      "class" : "BlockVariableDeclarator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "12",
      "inline_failures" : "0",
    },
    {
      "name" : "get_HasValue",
      "signature" : "bool System.Nullable`1<int>:get_HasValue ()",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
      "inline_successes" : "7",
      "inline_failures" : "0",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Collections.Generic.Dictionary`2/Enumerator<System.Security.Permissions.SecurityAction, System.Security.PermissionSet>:Dispose ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "5",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Key",
      "signature" : "Mono.CSharp.MemberExpr System.Collections.Generic.KeyValuePair`2<Mono.CSharp.MemberExpr, Mono.CSharp.NamedArgument>:get_Key ()",
      "class" : "KeyValuePair`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : "set_SectionStart",
      "signature" : "void Mono.CSharp.SwitchLabel:set_SectionStart (bool)",
      "class" : "SwitchLabel",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Collections.Generic.List`1/Enumerator<Mono.CSharp.TypeContainer>:Dispose ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "12",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Current",
      "signature" : "System.Collections.Generic.IList`1<Mono.CSharp.TypeSpec> System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator<string, System.Collections.Generic.IList`1<Mono.CSharp.TypeSpec>>:get_Current ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Members",
      "signature" : "System.Collections.Generic.List`1<Mono.CSharp.PropertyPatternMember> Mono.CSharp.PropertyPattern:get_Members ()",
      "class" : "PropertyPattern",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "case_209",
      "signature" : "void Mono.CSharp.CSharpParser:case_209 ()",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_IsFinallyBlock",
      "signature" : "bool Mono.CSharp.Block:get_IsFinallyBlock ()",
      "class" : "Block",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "get_ArgumentType",
      "signature" : "System.Type System.Reflection.CustomAttributeTypedArgument:get_ArgumentType ()",
      "class" : "CustomAttributeTypedArgument",
      "namespace" : "System.Reflection",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ArglistAccess:.ctor (Mono.CSharp.Location)",
      "class" : "ArglistAccess",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_ProbingMode",
      "signature" : "bool Mono.CSharp.AwaitStatement/AwaitableMemberAccess:get_ProbingMode ()",
      "class" : "AwaitableMemberAccess",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Name",
      "signature" : "string Mono.CSharp.Linq.RangeVariable:get_Name ()",
      "class" : "RangeVariable",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
      "inline_successes" : "12",
      "inline_failures" : "0",
    },
    {
      "name" : "DefineMethodOverride",
      "signature" : "System.Reflection.Emit.MethodBuilder System.Reflection.Emit.TypeBuilder:DefineMethodOverride (object[])",
      "class" : "TypeBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_AttributeConstructorCache",
      "signature" : "System.Collections.Generic.Dictionary`2<Mono.CSharp.TypeSpec, Mono.CSharp.MethodSpec> Mono.CSharp.ModuleContainer:get_AttributeConstructorCache ()",
      "class" : "ModuleContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Collections.Generic.List`1/Enumerator<Mono.CompilerServices.SymbolWriter.NamespaceEntry>:Dispose ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_HasCapturedVariable",
      "signature" : "bool Mono.CSharp.ExplicitBlock:get_HasCapturedVariable ()",
      "class" : "ExplicitBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Value",
      "signature" : "System.Collections.Generic.IList`1<Mono.CSharp.MemberSpec> System.Collections.Generic.KeyValuePair`2<string, System.Collections.Generic.IList`1<Mono.CSharp.MemberSpec>>:get_Value ()",
      "class" : "KeyValuePair`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "23",
      "inline_failures" : "0",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Collections.Generic.List`1/Enumerator<Mono.CSharp.FullNamedExpression>:Dispose ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "BeginExceptFilterBlock",
      "signature" : "void System.Reflection.Emit.ILGenerator:BeginExceptFilterBlock ()",
      "class" : "ILGenerator",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "set_Name",
      "signature" : "void Mono.CSharp.Parameter:set_Name (string)",
      "class" : "Parameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Collections.Generic.List`1/Enumerator<Mono.CSharp.MethodSpec>:Dispose ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "SetChecksum",
      "signature" : "void Mono.CSharp.SourceFile:SetChecksum (byte[])",
      "class" : "SourceFile",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_ParsedBuiltinType",
      "signature" : "Mono.CSharp.TypeExpression Mono.CSharp.DocumentationBuilder:get_ParsedBuiltinType ()",
      "class" : "DocumentationBuilder",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Alias",
      "signature" : "string Mono.CSharp.RootNamespace:get_Alias ()",
      "class" : "RootNamespace",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "DefineLabel",
      "signature" : "System.Reflection.Emit.Label Mono.CSharp.EmitContext:DefineLabel ()",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "87",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.EqualityComparer`1<string>:.ctor ()",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "12",
      "inline_failures" : "0",
    },
    {
      "name" : "GetToken",
      "signature" : "System.Reflection.Emit.MethodToken System.Reflection.Emit.ConstructorBuilder:GetToken ()",
      "class" : "ConstructorBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "Mark_HasGetHashCode",
      "signature" : "void Mono.CSharp.TypeDefinition:Mark_HasGetHashCode ()",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.LocationsBag/MemberLocations:.ctor (System.Collections.Generic.IList`1<System.Tuple`2<Mono.CSharp.Modifiers, Mono.CSharp.Location>>,System.Collections.Generic.List`1<Mono.CSharp.Location>)",
      "class" : "MemberLocations",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "__castclass_wrapper_IParametersMember",
      "signature" : "(wrapper castclass) object object:__castclass_wrapper_IParametersMember (object)",
      "class" : "Object",
      "namespace" : "System",
      "wrapper_type" : "castclass",
      "inline_successes" : "14",
      "inline_failures" : "0",
    },
    {
      "name" : "set_CurrentTryCatch",
      "signature" : "void Mono.CSharp.BlockContext:set_CurrentTryCatch (Mono.CSharp.TryCatch)",
      "class" : "BlockContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Variance",
      "signature" : "Mono.CSharp.Variance Mono.CSharp.VarianceDecl:get_Variance ()",
      "class" : "VarianceDecl",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_MemberType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.EventSpec:get_MemberType ()",
      "class" : "EventSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "set_IsSatelliteAssembly",
      "signature" : "void Mono.CSharp.AssemblyDefinition:set_IsSatelliteAssembly (bool)",
      "class" : "AssemblyDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "set_ConditionalAccess",
      "signature" : "void Mono.CSharp.EmitContext:set_ConditionalAccess (Mono.CSharp.ConditionalAccessContext)",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "11",
      "inline_failures" : "0",
    },
    {
      "name" : "get_HasConstraintsChecked",
      "signature" : "bool Mono.CSharp.InflatedTypeSpec:get_HasConstraintsChecked ()",
      "class" : "InflatedTypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "case_777",
      "signature" : "void Mono.CSharp.CSharpParser:case_777 ()",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "SetBaseTypes",
      "signature" : "void Mono.CSharp.TypeDefinition:SetBaseTypes (System.Collections.Generic.List`1<Mono.CSharp.FullNamedExpression>)",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "__isinst_wrapper_IComparable`1",
      "signature" : "(wrapper isinst) object object:__isinst_wrapper_IComparable`1 (object)",
      "class" : "Object",
      "namespace" : "System",
      "wrapper_type" : "isinst",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Count",
      "signature" : "int System.Collections.Generic.List`1<Mono.CSharp.FieldSpec>:get_Count ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "7",
      "inline_failures" : "0",
    },
    {
      "name" : "get_TypeArguments",
      "signature" : "Mono.CSharp.TypeSpec[] Mono.CSharp.TypeParameterSpec:get_TypeArguments ()",
      "class" : "TypeParameterSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "18",
      "inline_failures" : "0",
    },
    {
      "name" : "__isinst_wrapper_IAssignMethod",
      "signature" : "(wrapper isinst) object object:__isinst_wrapper_IAssignMethod (object)",
      "class" : "Object",
      "namespace" : "System",
      "wrapper_type" : "isinst",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "set_UseJayGlobalArrays",
      "signature" : "void Mono.CSharp.ParserSession:set_UseJayGlobalArrays (bool)",
      "class" : "ParserSession",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_PredefinedMembers",
      "signature" : "Mono.CSharp.PredefinedMembers Mono.CSharp.ModuleContainer:get_PredefinedMembers ()",
      "class" : "ModuleContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "52",
      "inline_failures" : "0",
    },
    {
      "name" : "get_IsPartialPart",
      "signature" : "bool Mono.CSharp.TypeDefinition:get_IsPartialPart ()",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "11",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.EnumMember/EnumTypeExpr:.ctor ()",
      "class" : "EnumTypeExpr",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : "get_IsCompleted",
      "signature" : "Mono.CSharp.PropertySpec Mono.CSharp.AwaiterDefinition:get_IsCompleted ()",
      "class" : "AwaiterDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.AnonymousMethodStorey/<EmitHoistedParameters>c__AnonStorey1:.ctor ()",
      "class" : "<EmitHoistedParameters>c__AnonStorey1",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "set_Types",
      "signature" : "void Mono.CSharp.AParametersCollection:set_Types (Mono.CSharp.TypeSpec[])",
      "class" : "AParametersCollection",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Current",
      "signature" : "System.Action System.Collections.Generic.List`1/Enumerator<System.Action>:get_Current ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Current",
      "signature" : "Mono.CSharp.FieldDeclarator System.Collections.Generic.List`1/Enumerator<Mono.CSharp.FieldDeclarator>:get_Current ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1<System.Reflection.Emit.Label>:.ctor ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1<Mono.CSharp.AnonymousTypeClass>:.ctor ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "set_Name",
      "signature" : "void Mono.CSharp.FieldDeclarator:set_Name (Mono.CSharp.SimpleMemberName)",
      "class" : "FieldDeclarator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_SourceCount",
      "signature" : "int Mono.CompilerServices.SymbolWriter.MonoSymbolFile:get_SourceCount ()",
      "class" : "MonoSymbolFile",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "case_57",
      "signature" : "void Mono.CSharp.CSharpParser:case_57 ()",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "SetParameterType",
      "signature" : "void Mono.CSharp.ImplicitLambdaParameter:SetParameterType (Mono.CSharp.TypeSpec)",
      "class" : "ImplicitLambdaParameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Remove",
      "signature" : "Mono.CSharp.Event/AEventAccessor Mono.CSharp.Event:get_Remove ()",
      "class" : "Event",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "7",
      "inline_failures" : "0",
    },
    {
      "name" : "get_MethodData",
      "signature" : "Mono.CSharp.MethodData Mono.CSharp.Event/AEventAccessor:get_MethodData ()",
      "class" : "AEventAccessor",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_IsPointer",
      "signature" : "bool Mono.CSharp.ComposedTypeSpecifier:get_IsPointer ()",
      "class" : "ComposedTypeSpecifier",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "get_RecursivePatternLabel",
      "signature" : "System.Reflection.Emit.Label Mono.CSharp.EmitContext:get_RecursivePatternLabel ()",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.RecursivePattern:.ctor (Mono.CSharp.ATypeNameExpression,Mono.CSharp.Arguments,Mono.CSharp.Location)",
      "class" : "RecursivePattern",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Count",
      "signature" : "int System.Collections.Generic.Stack`1<bool>:get_Count ()",
      "class" : "Stack`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Collections.Generic.List`1/Enumerator<Mono.CompilerServices.SymbolWriter.CapturedVariable>:Dispose ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "set_Name",
      "signature" : "void Mono.CSharp.AssemblyResource:set_Name (string)",
      "class" : "AssemblyResource",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1<Mono.CSharp.Expression>:.ctor ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "5",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Parent",
      "signature" : "Mono.CSharp.Namespace Mono.CSharp.Namespace:get_Parent ()",
      "class" : "Namespace",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "7",
      "inline_failures" : "0",
    },
    {
      "name" : "set_TryFinally",
      "signature" : "void Mono.CSharp.FlowAnalysisContext:set_TryFinally (Mono.CSharp.TryFinally)",
      "class" : "FlowAnalysisContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : "get_DelegateType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.AsyncInitializer:get_DelegateType ()",
      "class" : "AsyncInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_DisposingField",
      "signature" : "Mono.CSharp.Field Mono.CSharp.IteratorStorey:get_DisposingField ()",
      "class" : "IteratorStorey",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Variable",
      "signature" : "Mono.CSharp.LocalVariable Mono.CSharp.Catch:get_Variable ()",
      "class" : "Catch",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Initializer",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.BlockVariableDeclarator:get_Initializer ()",
      "class" : "BlockVariableDeclarator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "10",
      "inline_failures" : "0",
    },
    {
      "name" : "get_ConstantCheckState",
      "signature" : "bool Mono.CSharp.ResolveContext:get_ConstantCheckState ()",
      "class" : "ResolveContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "40",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Binary",
      "signature" : "Mono.CSharp.Binary Mono.CSharp.Nullable.LiftedBinaryOperator:get_Binary ()",
      "class" : "LiftedBinaryOperator",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
      "inline_successes" : "27",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Element",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.ElementTypeSpec:get_Element ()",
      "class" : "ElementTypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "112",
      "inline_failures" : "0",
    },
    {
      "name" : "get_SourceFiles",
      "signature" : "System.Collections.Generic.List`1<Mono.CSharp.SourceFile> Mono.CSharp.CompilerSettings:get_SourceFiles ()",
      "class" : "CompilerSettings",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "10",
      "inline_failures" : "0",
    },
    {
      "name" : "set_Members",
      "signature" : "void Mono.CSharp.PropertyPattern:set_Members (System.Collections.Generic.List`1<Mono.CSharp.PropertyPatternMember>)",
      "class" : "PropertyPattern",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Collections.Generic.List`1/Enumerator<Mono.CSharp.UsingClause>:Dispose ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : "set_ProbingMode",
      "signature" : "void Mono.CSharp.AwaitStatement/AwaitableMemberAccess:set_ProbingMode (bool)",
      "class" : "AwaitableMemberAccess",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "set_Name",
      "signature" : "void Mono.CSharp.Linq.RangeVariable:set_Name (string)",
      "class" : "RangeVariable",
      "namespace" : "Mono.CSharp.Linq",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "GetConstructor",
      "signature" : "System.Reflection.ConstructorInfo System.Reflection.Emit.TypeBuilder:GetConstructor (System.Type,System.Reflection.ConstructorInfo)",
      "class" : "TypeBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Count",
      "signature" : "int System.Collections.Generic.Stack`1<System.Reflection.Emit.LocalBuilder>:get_Count ()",
      "class" : "Stack`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_HasReachableClosingBrace",
      "signature" : "bool Mono.CSharp.ExplicitBlock:get_HasReachableClosingBrace ()",
      "class" : "ExplicitBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "10",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Key",
      "signature" : "Mono.CSharp.Attribute System.Collections.Generic.KeyValuePair`2<Mono.CSharp.Attribute, System.Collections.Generic.List`1<Mono.CSharp.Attribute>>:get_Key ()",
      "class" : "KeyValuePair`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "BeginFinallyBlock",
      "signature" : "void System.Reflection.Emit.ILGenerator:BeginFinallyBlock ()",
      "class" : "ILGenerator",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Current",
      "signature" : "System.Collections.Generic.KeyValuePair`2<string, System.Tuple`2<Mono.CSharp.FieldSpec, System.Reflection.FieldInfo>> System.Collections.Generic.Dictionary`2/Enumerator<string, System.Tuple`2<Mono.CSharp.FieldSpec, System.Reflection.FieldInfo>>:get_Current ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_MethodBuilder",
      "signature" : "System.Reflection.Emit.MethodBuilder Mono.CSharp.MethodData:get_MethodBuilder ()",
      "class" : "MethodData",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "37",
      "inline_failures" : "0",
    },
    {
      "name" : "SetConditionalAccessReceiver",
      "signature" : "void Mono.CSharp.IndexerExpr:SetConditionalAccessReceiver ()",
      "class" : "IndexerExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "SetChecksum",
      "signature" : "void Mono.CSharp.SourceFile:SetChecksum (byte[],byte[])",
      "class" : "SourceFile",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "set_ParsedBuiltinType",
      "signature" : "void Mono.CSharp.DocumentationBuilder:set_ParsedBuiltinType (Mono.CSharp.TypeExpression)",
      "class" : "DocumentationBuilder",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Days",
      "signature" : "int System.TimeSpan:get_Days ()",
      "class" : "TimeSpan",
      "namespace" : "System",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1<Mono.CSharp.MemberSpec>:.ctor ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "8",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1<Mono.CSharp.HoistedParameter>:.ctor ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1<Mono.CSharp.SwitchLabel>:.ctor ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "IsNullOrEmpty",
      "signature" : "bool string:IsNullOrEmpty (string)",
      "class" : "String",
      "namespace" : "System",
      "wrapper_type" : "none",
      "inline_successes" : "10",
      "inline_failures" : "0",
    },
    {
      "name" : "GetILGenerator",
      "signature" : "System.Reflection.Emit.ILGenerator System.Reflection.Emit.ConstructorBuilder:GetILGenerator ()",
      "class" : "ConstructorBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Statement",
      "signature" : "bool Mono.CSharp.ConditionalAccessContext:get_Statement ()",
      "class" : "ConditionalAccessContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_ConditionalAccess",
      "signature" : "bool Mono.CSharp.MemberExpr:get_ConditionalAccess ()",
      "class" : "MemberExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "16",
      "inline_failures" : "0",
    },
    {
      "name" : "get_BestCandidateNewMethodGroup",
      "signature" : "Mono.CSharp.MethodGroupExpr Mono.CSharp.OverloadResolver:get_BestCandidateNewMethodGroup ()",
      "class" : "OverloadResolver",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_IsUnreachable",
      "signature" : "bool Mono.CSharp.Reachability:get_IsUnreachable ()",
      "class" : "Reachability",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "21",
      "inline_failures" : "0",
    },
    {
      "name" : "Empty",
      "signature" : "Mono.CSharp.Binary/PredefinedOperator[] System.Array:Empty<Mono.CSharp.Binary/PredefinedOperator> ()",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "set_MemberType",
      "signature" : "void Mono.CSharp.EventSpec:set_MemberType (Mono.CSharp.TypeSpec)",
      "class" : "EventSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "set_Variance",
      "signature" : "void Mono.CSharp.VarianceDecl:set_Variance (Mono.CSharp.Variance)",
      "class" : "VarianceDecl",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_EnclosingLoop",
      "signature" : "Mono.CSharp.LoopStatement Mono.CSharp.BlockContext:get_EnclosingLoop ()",
      "class" : "BlockContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : "__isinst_wrapper_INamedBlockVariable",
      "signature" : "(wrapper isinst) object object:__isinst_wrapper_INamedBlockVariable (object)",
      "class" : "Object",
      "namespace" : "System",
      "wrapper_type" : "isinst",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Name",
      "signature" : "string Mono.CSharp.AssemblyDefinition:get_Name ()",
      "class" : "AssemblyDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "case_778",
      "signature" : "void Mono.CSharp.CSharpParser:case_778 ()",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "__castclass_wrapper_ITypeDefinition",
      "signature" : "(wrapper castclass) object object:__castclass_wrapper_ITypeDefinition (object)",
      "class" : "Object",
      "namespace" : "System",
      "wrapper_type" : "castclass",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Indent",
      "signature" : "int System.CodeDom.Compiler.IndentedTextWriter:get_Indent ()",
      "class" : "IndentedTextWriter",
      "namespace" : "System.CodeDom.Compiler",
      "wrapper_type" : "none",
      "inline_successes" : "5",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Variance",
      "signature" : "Mono.CSharp.Variance Mono.CSharp.TypeParameter:get_Variance ()",
      "class" : "TypeParameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : "set_TypeArguments",
      "signature" : "void Mono.CSharp.TypeParameterSpec:set_TypeArguments (Mono.CSharp.TypeSpec[])",
      "class" : "TypeParameterSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "6",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.TypeParameters:.ctor ()",
      "class" : "TypeParameters",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Source",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.UserCast:get_Source ()",
      "class" : "UserCast",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : "get_LocatedTokens",
      "signature" : "Mono.CSharp.LocatedToken[] Mono.CSharp.ParserSession:get_LocatedTokens ()",
      "class" : "ParserSession",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_PredefinedTypes",
      "signature" : "Mono.CSharp.PredefinedTypes Mono.CSharp.ModuleContainer:get_PredefinedTypes ()",
      "class" : "ModuleContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "80",
      "inline_failures" : "0",
    },
    {
      "name" : "op_LessThanOrEqual",
      "signature" : "bool System.Decimal:op_LessThanOrEqual (System.Decimal,System.Decimal)",
      "class" : "Decimal",
      "namespace" : "System",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "set_IsCompleted",
      "signature" : "void Mono.CSharp.AwaiterDefinition:set_IsCompleted (Mono.CSharp.PropertySpec)",
      "class" : "AwaiterDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1<Mono.CSharp.FieldSpec>:.ctor ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "set_ConstantValue",
      "signature" : "void Mono.CSharp.LocalVariable:set_ConstantValue (Mono.CSharp.Constant)",
      "class" : "LocalVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_InferredTypeArguments",
      "signature" : "Mono.CSharp.TypeSpec[] Mono.CSharp.TypeInferenceContext:get_InferredTypeArguments ()",
      "class" : "TypeInferenceContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : "get_IsMethodTypeParameter",
      "signature" : "bool Mono.CSharp.TypeParameter:get_IsMethodTypeParameter ()",
      "class" : "TypeParameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Value",
      "signature" : "Mono.CompilerServices.SymbolWriter.LocalVariableEntry System.Collections.Generic.KeyValuePair`2<string, Mono.CompilerServices.SymbolWriter.LocalVariableEntry>:get_Value ()",
      "class" : "KeyValuePair`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Reflection.LocalVariableInfo:.ctor ()",
      "class" : "LocalVariableInfo",
      "namespace" : "System.Reflection",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "__castclass_wrapper_IList`1",
      "signature" : "(wrapper castclass) object object:__castclass_wrapper_IList`1 (object)",
      "class" : "Object",
      "namespace" : "System",
      "wrapper_type" : "castclass",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Initializer",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.FieldDeclarator:get_Initializer ()",
      "class" : "FieldDeclarator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "6",
      "inline_failures" : "0",
    },
    {
      "name" : "get_MethodCount",
      "signature" : "int Mono.CompilerServices.SymbolWriter.MonoSymbolFile:get_MethodCount ()",
      "class" : "MonoSymbolFile",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_IsUnreachable",
      "signature" : "bool Mono.CSharp.Statement:get_IsUnreachable ()",
      "class" : "Statement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "10",
      "inline_failures" : "0",
    },
    {
      "name" : "Empty",
      "signature" : "Mono.CSharp.TypeSpec[] System.Array:Empty<Mono.CSharp.TypeSpec> ()",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "UpdateSource",
      "signature" : "void Mono.CSharp.CompilerAssign:UpdateSource (Mono.CSharp.Expression)",
      "class" : "CompilerAssign",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_HasOptionalExpression",
      "signature" : "bool Mono.CSharp.Parameter:get_HasOptionalExpression ()",
      "class" : "Parameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "GetValueOrDefault",
      "signature" : "bool System.Nullable`1<bool>:GetValueOrDefault ()",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Next",
      "signature" : "Mono.CSharp.ComposedTypeSpecifier Mono.CSharp.ComposedTypeSpecifier:get_Next ()",
      "class" : "ComposedTypeSpecifier",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "6",
      "inline_failures" : "0",
    },
    {
      "name" : "Empty",
      "signature" : "string[] System.Array:Empty<string> ()",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "set_RecursivePatternLabel",
      "signature" : "void Mono.CSharp.EmitContext:set_RecursivePatternLabel (System.Reflection.Emit.Label)",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "FCallDivide",
      "signature" : "(wrapper managed-to-native) void System.Decimal:FCallDivide (System.Decimal&,System.Decimal&)",
      "class" : "Decimal",
      "namespace" : "System",
      "wrapper_type" : "managed-to-native",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "set_AllowMultiple",
      "signature" : "void System.AttributeUsageAttribute:set_AllowMultiple (bool)",
      "class" : "AttributeUsageAttribute",
      "namespace" : "System",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_FileName",
      "signature" : "string Mono.CSharp.AssemblyResource:get_FileName ()",
      "class" : "AssemblyResource",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "5",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.SwitchGoto:.ctor (Mono.CSharp.Location)",
      "class" : "SwitchGoto",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : "get_UnreachableReported",
      "signature" : "bool Mono.CSharp.FlowAnalysisContext:get_UnreachableReported ()",
      "class" : "FlowAnalysisContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "set_DelegateType",
      "signature" : "void Mono.CSharp.AsyncInitializer:set_DelegateType (Mono.CSharp.TypeSpec)",
      "class" : "AsyncInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1<Mono.CompilerServices.SymbolWriter.CodeBlockEntry>:.ctor ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "set_Initializer",
      "signature" : "void Mono.CSharp.BlockVariableDeclarator:set_Initializer (Mono.CSharp.Expression)",
      "class" : "BlockVariableDeclarator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1<Mono.CSharp.WarningRegions/PragmaCmd>:.ctor ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_HoistedParameters",
      "signature" : "System.Collections.Generic.IList`1<Mono.CSharp.HoistedParameter> Mono.CSharp.IteratorStorey:get_HoistedParameters ()",
      "class" : "IteratorStorey",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "set_Variable",
      "signature" : "void Mono.CSharp.Catch:set_Variable (Mono.CSharp.LocalVariable)",
      "class" : "Catch",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Count",
      "signature" : "int System.Collections.Generic.List`1<Mono.CSharp.SwitchLabel>:get_Count ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "set_Binary",
      "signature" : "void Mono.CSharp.Nullable.LiftedBinaryOperator:set_Binary (Mono.CSharp.Binary)",
      "class" : "LiftedBinaryOperator",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_IsInProbingMode",
      "signature" : "bool Mono.CSharp.ResolveContext:get_IsInProbingMode ()",
      "class" : "ResolveContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "18",
      "inline_failures" : "0",
    },
    {
      "name" : "set_Element",
      "signature" : "void Mono.CSharp.ElementTypeSpec:set_Element (Mono.CSharp.TypeSpec)",
      "class" : "ElementTypeSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.FieldExpr:.ctor (Mono.CSharp.Location)",
      "class" : "FieldExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Get",
      "signature" : "Mono.CSharp.MethodSpec Mono.CSharp.PropertySpec:get_Get ()",
      "class" : "PropertySpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "26",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ComplexPatternExpression:.ctor (Mono.CSharp.ATypeNameExpression,Mono.CSharp.Location)",
      "class" : "ComplexPatternExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : "get_FallOut",
      "signature" : "bool Mono.CSharp.Switch/MissingBreak:get_FallOut ()",
      "class" : "MissingBreak",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "GetField",
      "signature" : "System.Reflection.FieldInfo System.Reflection.Emit.TypeBuilder:GetField (System.Type,System.Reflection.FieldInfo)",
      "class" : "TypeBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Builder",
      "signature" : "System.Reflection.Emit.ModuleBuilder Mono.CSharp.ModuleContainer:get_Builder ()",
      "class" : "ModuleContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "8",
      "inline_failures" : "0",
    },
    {
      "name" : "DeclareLocal",
      "signature" : "System.Reflection.Emit.LocalBuilder System.Reflection.Emit.ILGenerator:DeclareLocal (object[])",
      "class" : "ILGenerator",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Current",
      "signature" : "Mono.CSharp.IExpressionCleanup System.Collections.Generic.List`1/Enumerator<Mono.CSharp.IExpressionCleanup>:get_Current ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Count",
      "signature" : "int System.Collections.Generic.List`1<System.Collections.Generic.KeyValuePair`2<Mono.CSharp.MemberExpr, Mono.CSharp.NamedArgument>>:get_Count ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_ParsedOperator",
      "signature" : "System.Nullable`1<Mono.CSharp.Operator/OpType> Mono.CSharp.DocumentationBuilder:get_ParsedOperator ()",
      "class" : "DocumentationBuilder",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "9",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1<Mono.CSharp.LabeledStatement>:.ctor ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1<Mono.CSharp.Namespace>:.ctor ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "MarkLabel",
      "signature" : "void Mono.CSharp.EmitContext:MarkLabel (System.Reflection.Emit.Label)",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "99",
      "inline_failures" : "0",
    },
    {
      "name" : "set_ConditionalAccess",
      "signature" : "void Mono.CSharp.MemberExpr:set_ConditionalAccess (bool)",
      "class" : "MemberExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : "set_Statement",
      "signature" : "void Mono.CSharp.ConditionalAccessContext:set_Statement (bool)",
      "class" : "ConditionalAccessContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "SetCustomAttribute",
      "signature" : "void System.Reflection.Emit.ConstructorBuilder:SetCustomAttribute (object[])",
      "class" : "ConstructorBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_HasEquals",
      "signature" : "bool Mono.CSharp.TypeDefinition:get_HasEquals ()",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Current",
      "signature" : "Mono.CSharp.Expression System.Collections.Generic.List`1/Enumerator<Mono.CSharp.Expression>:get_Current ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "12",
      "inline_failures" : "0",
    },
    {
      "name" : "get_BestCandidateReturnType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.OverloadResolver:get_BestCandidateReturnType ()",
      "class" : "OverloadResolver",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Count",
      "signature" : "int System.Collections.Generic.List`1<Mono.CompilerServices.SymbolWriter.MethodEntry>:get_Count ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : "CreateUnreachable",
      "signature" : "Mono.CSharp.Reachability Mono.CSharp.Reachability:CreateUnreachable ()",
      "class" : "Reachability",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "19",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Current",
      "signature" : "Mono.CSharp.Field System.Collections.Generic.List`1/Enumerator<Mono.CSharp.Field>:get_Current ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "set_EnclosingLoop",
      "signature" : "void Mono.CSharp.BlockContext:set_EnclosingLoop (Mono.CSharp.LoopStatement)",
      "class" : "BlockContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : "get_WrapNonExceptionThrows",
      "signature" : "bool Mono.CSharp.AssemblyDefinition:get_WrapNonExceptionThrows ()",
      "class" : "AssemblyDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Item2",
      "signature" : "System.Reflection.Assembly System.Tuple`2<Mono.CSharp.RootNamespace, System.Reflection.Assembly>:get_Item2 ()",
      "class" : "Tuple`2",
      "namespace" : "System",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "CreateExpressionTree",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.ShimExpression:CreateExpressionTree (Mono.CSharp.ResolveContext)",
      "class" : "ShimExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "GetElementType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.TypeManager:GetElementType (Mono.CSharp.TypeSpec)",
      "class" : "TypeManager",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "10",
      "inline_failures" : "0",
    },
    {
      "name" : "get_OriginalTypeParameters",
      "signature" : "Mono.CSharp.TypeParameters Mono.CSharp.StateMachine:get_OriginalTypeParameters ()",
      "class" : "StateMachine",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "case_779",
      "signature" : "void Mono.CSharp.CSharpParser:case_779 ()",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Current",
      "signature" : "Mono.CSharp.AnonymousTypeClass System.Collections.Generic.List`1/Enumerator<Mono.CSharp.AnonymousTypeClass>:get_Current ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1<Mono.CSharp.UsingClause>:.ctor ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "__isinst_wrapper_IParametersMember",
      "signature" : "(wrapper isinst) object object:__isinst_wrapper_IParametersMember (object)",
      "class" : "Object",
      "namespace" : "System",
      "wrapper_type" : "isinst",
      "inline_successes" : "19",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Variance",
      "signature" : "Mono.CSharp.Variance Mono.CSharp.TypeParameterSpec:get_Variance ()",
      "class" : "TypeParameterSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "14",
      "inline_failures" : "0",
    },
    {
      "name" : "get_ReferenceTypesCache",
      "signature" : "System.Collections.Generic.Dictionary`2<Mono.CSharp.TypeSpec, Mono.CSharp.ReferenceContainer> Mono.CSharp.ModuleContainer:get_ReferenceTypesCache ()",
      "class" : "ModuleContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "set_Source",
      "signature" : "void Mono.CSharp.UserCast:set_Source (Mono.CSharp.Expression)",
      "class" : "UserCast",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "set_LocatedTokens",
      "signature" : "void Mono.CSharp.ParserSession:set_LocatedTokens (Mono.CSharp.LocatedToken[])",
      "class" : "ParserSession",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Count",
      "signature" : "int System.Collections.Generic.List`1<Mono.CSharp.TryFinally>:get_Count ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1<Mono.CompilerServices.SymbolWriter.ScopeVariable>:.ctor ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_GetResult",
      "signature" : "Mono.CSharp.MethodSpec Mono.CSharp.AwaiterDefinition:get_GetResult ()",
      "class" : "AwaiterDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Members",
      "signature" : "System.Collections.Generic.List`1<Mono.CSharp.MemberCore> Mono.CSharp.TypeDefinition:get_Members ()",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "37",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.ObjectEqualityComparer`1<Mono.CompilerServices.SymbolWriter.CapturedScope>:.ctor ()",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "SetDeclaringAssembly",
      "signature" : "void Mono.CSharp.ModuleContainer:SetDeclaringAssembly (Mono.CSharp.AssemblyDefinition)",
      "class" : "ModuleContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "get_HoistedVariant",
      "signature" : "Mono.CSharp.HoistedVariable Mono.CSharp.LocalVariable:get_HoistedVariant ()",
      "class" : "LocalVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "7",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1<Mono.CSharp.TypeSpec>:.ctor ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "13",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Current",
      "signature" : "Mono.CSharp.ExplicitBlock System.Collections.Generic.List`1/Enumerator<Mono.CSharp.ExplicitBlock>:get_Current ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Reflection.Module:.ctor ()",
      "class" : "Module",
      "namespace" : "System.Reflection",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1<Mono.CSharp.SourceFile>:.ctor ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "set_Initializer",
      "signature" : "void Mono.CSharp.FieldDeclarator:set_Initializer (Mono.CSharp.Expression)",
      "class" : "FieldDeclarator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "EmitNull",
      "signature" : "void Mono.CSharp.EmitContext:EmitNull ()",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "8",
      "inline_failures" : "0",
    },
    {
      "name" : "get_IsAvailableForReuse",
      "signature" : "bool Mono.CSharp.MemberCore:get_IsAvailableForReuse ()",
      "class" : "MemberCore",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "Resolve",
      "signature" : "bool Mono.CSharp.Statement:Resolve (Mono.CSharp.BlockContext)",
      "class" : "Statement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_PropertyInfo",
      "signature" : "Mono.CSharp.PropertySpec Mono.CSharp.PropertyExpr:get_PropertyInfo ()",
      "class" : "PropertyExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "10",
      "inline_failures" : "0",
    },
    {
      "name" : "get_IsAsync",
      "signature" : "bool Mono.CSharp.ParametersBlock:get_IsAsync ()",
      "class" : "ParametersBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "5",
      "inline_failures" : "0",
    },
    {
      "name" : "get_DeclaringType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.MemberSpec:get_DeclaringType ()",
      "class" : "MemberSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "192",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Location",
      "signature" : "Mono.CSharp.Location Mono.CSharp.Parameter:get_Location ()",
      "class" : "Parameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "40",
      "inline_failures" : "0",
    },
    {
      "name" : "set_Next",
      "signature" : "void Mono.CSharp.ComposedTypeSpecifier:set_Next (Mono.CSharp.ComposedTypeSpecifier)",
      "class" : "ComposedTypeSpecifier",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "get_OriginalProperty",
      "signature" : "Mono.CSharp.Property Mono.CSharp.Property/BackingFieldDeclaration:get_OriginalProperty ()",
      "class" : "BackingFieldDeclaration",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Current",
      "signature" : "System.Collections.Generic.KeyValuePair`2<int, System.Collections.Generic.List`1<Mono.CSharp.AnonymousTypeClass>> System.Collections.Generic.Dictionary`2/Enumerator<int, System.Collections.Generic.List`1<Mono.CSharp.AnonymousTypeClass>>:get_Current ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "set_Indent",
      "signature" : "void System.CodeDom.Compiler.IndentedTextWriter:set_Indent (int)",
      "class" : "IndentedTextWriter",
      "namespace" : "System.CodeDom.Compiler",
      "wrapper_type" : "none",
      "inline_successes" : "5",
      "inline_failures" : "0",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Collections.Generic.List`1/Enumerator<Mono.CSharp.ResumableStatement>:Dispose ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "set_FileName",
      "signature" : "void Mono.CSharp.AssemblyResource:set_FileName (string)",
      "class" : "AssemblyResource",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "set_Inherited",
      "signature" : "void System.AttributeUsageAttribute:set_Inherited (bool)",
      "class" : "AttributeUsageAttribute",
      "namespace" : "System",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "set_UnreachableReported",
      "signature" : "void Mono.CSharp.FlowAnalysisContext:set_UnreachableReported (bool)",
      "class" : "FlowAnalysisContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Key",
      "signature" : "string System.Collections.Generic.KeyValuePair`2<string, Mono.CSharp.Namespace>:get_Key ()",
      "class" : "KeyValuePair`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "5",
      "inline_failures" : "0",
    },
    {
      "name" : "get_HoistedReturnState",
      "signature" : "Mono.CSharp.StackFieldExpr Mono.CSharp.AsyncInitializer:get_HoistedReturnState ()",
      "class" : "AsyncInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Location",
      "signature" : "Mono.CSharp.Location Mono.CSharp.NamedArgument:get_Location ()",
      "class" : "NamedArgument",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "9",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Left",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Nullable.LiftedBinaryOperator:get_Left ()",
      "class" : "LiftedBinaryOperator",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
      "inline_successes" : "26",
      "inline_failures" : "0",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Collections.Generic.List`1/Enumerator<Mono.CSharp.TypeSpec>:Dispose ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "7",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.VariableReference:.ctor ()",
      "class" : "VariableReference",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "45",
      "inline_failures" : "0",
    },
    {
      "name" : "set_FallOut",
      "signature" : "void Mono.CSharp.Switch/MissingBreak:set_FallOut (bool)",
      "class" : "MissingBreak",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Target",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Assign:get_Target ()",
      "class" : "Assign",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "GetMethod",
      "signature" : "System.Reflection.MethodInfo System.Reflection.Emit.TypeBuilder:GetMethod (System.Type,System.Reflection.MethodInfo)",
      "class" : "TypeBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_HasYield",
      "signature" : "bool Mono.CSharp.ExplicitBlock:get_HasYield ()",
      "class" : "ExplicitBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Count",
      "signature" : "int System.Collections.Generic.List`1<Mono.CSharp.MemberCore>:get_Count ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "7",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1<long>:.ctor ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "DefineLabel",
      "signature" : "System.Reflection.Emit.Label System.Reflection.Emit.ILGenerator:DefineLabel ()",
      "class" : "ILGenerator",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
      "inline_successes" : "88",
      "inline_failures" : "0",
    },
    {
      "name" : "get_MetadataName",
      "signature" : "string Mono.CSharp.MethodData:get_MetadataName ()",
      "class" : "MethodData",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "Empty",
      "signature" : "Mono.CSharp.AnonymousTypeParameter[] System.Array:Empty<Mono.CSharp.AnonymousTypeParameter> ()",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Attributable:.ctor ()",
      "class" : "Attributable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : "set_ParsedOperator",
      "signature" : "void Mono.CSharp.DocumentationBuilder:set_ParsedOperator (System.Nullable`1<Mono.CSharp.Operator/OpType>)",
      "class" : "DocumentationBuilder",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : "get_CallingConvention",
      "signature" : "System.Reflection.CallingConventions Mono.CSharp.AParametersCollection:get_CallingConvention ()",
      "class" : "AParametersCollection",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Alignment",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.InterpolatedStringInsert:get_Alignment ()",
      "class" : "InterpolatedStringInsert",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "5",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Spec",
      "signature" : "Mono.CSharp.MethodSpec Mono.CSharp.AbstractPropertyEventMethod:get_Spec ()",
      "class" : "AbstractPropertyEventMethod",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "20",
      "inline_failures" : "0",
    },
    {
      "name" : "SetIsUsed",
      "signature" : "void Mono.CSharp.LocalVariable:SetIsUsed ()",
      "class" : "LocalVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Lexer",
      "signature" : "Mono.CSharp.Tokenizer Mono.CSharp.CSharpParser:get_Lexer ()",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "70",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Position",
      "signature" : "int Mono.CSharp.SeekableStreamReader:get_Position ()",
      "class" : "SeekableStreamReader",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.EmitContext:Emit (System.Reflection.Emit.OpCode)",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "260",
      "inline_failures" : "0",
    },
    {
      "name" : "SetImplementationFlags",
      "signature" : "void System.Reflection.Emit.ConstructorBuilder:SetImplementationFlags (System.Reflection.MethodImplAttributes)",
      "class" : "ConstructorBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_HasGetHashCode",
      "signature" : "bool Mono.CSharp.TypeDefinition:get_HasGetHashCode ()",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_EndLabel",
      "signature" : "System.Reflection.Emit.Label Mono.CSharp.ConditionalAccessContext:get_EndLabel ()",
      "class" : "ConditionalAccessContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.SentinelStatement:.ctor ()",
      "class" : "SentinelStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "set_Location",
      "signature" : "void Mono.CSharp.VarianceDecl:set_Location (Mono.CSharp.Location)",
      "class" : "VarianceDecl",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_EnclosingLoopOrSwitch",
      "signature" : "Mono.CSharp.LoopStatement Mono.CSharp.BlockContext:get_EnclosingLoopOrSwitch ()",
      "class" : "BlockContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "5",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.ObjectEqualityComparer`1<Mono.CSharp.TypeInferenceContext/BoundInfo>:.ctor ()",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "set_OriginalTypeParameters",
      "signature" : "void Mono.CSharp.StateMachine:set_OriginalTypeParameters (Mono.CSharp.TypeParameters)",
      "class" : "StateMachine",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "HasElementType",
      "signature" : "bool Mono.CSharp.TypeManager:HasElementType (Mono.CSharp.TypeSpec)",
      "class" : "TypeManager",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "6",
      "inline_failures" : "0",
    },
    {
      "name" : "case_780",
      "signature" : "void Mono.CSharp.CSharpParser:case_780 ()",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "set_VarianceDecl",
      "signature" : "void Mono.CSharp.TypeParameter:set_VarianceDecl (Mono.CSharp.VarianceDecl)",
      "class" : "TypeParameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "GetText",
      "signature" : "string Locale:GetText (string)",
      "class" : "Locale",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "55",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Current",
      "signature" : "Mono.CSharp.SwitchLabel System.Collections.Generic.List`1/Enumerator<Mono.CSharp.SwitchLabel>:get_Current ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Namespace",
      "signature" : "Mono.CSharp.Namespace Mono.CSharp.NamespaceExpression:get_Namespace ()",
      "class" : "NamespaceExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "10",
      "inline_failures" : "0",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Collections.Generic.List`1/Enumerator<string[]>:Dispose ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Value",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.ConstSpec:get_Value ()",
      "class" : "ConstSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_TypeInfoCache",
      "signature" : "System.Collections.Generic.Dictionary`2<Mono.CSharp.TypeSpec, Mono.CSharp.TypeInfo> Mono.CSharp.ModuleContainer:get_TypeInfoCache ()",
      "class" : "ModuleContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Value",
      "signature" : "System.Collections.Generic.List`1<Mono.CSharp.Attribute> System.Collections.Generic.KeyValuePair`2<Mono.CSharp.Attribute, System.Collections.Generic.List`1<Mono.CSharp.Attribute>>:get_Value ()",
      "class" : "KeyValuePair`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Collections.Generic.Dictionary`2/Enumerator<string, System.Tuple`2<Mono.CSharp.FieldSpec, System.Reflection.FieldInfo>>:Dispose ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "ToSingle",
      "signature" : "(wrapper managed-to-native) single System.Decimal:ToSingle (System.Decimal)",
      "class" : "Decimal",
      "namespace" : "System",
      "wrapper_type" : "managed-to-native",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Namespace/<CompletionGetTypesStartingWith>c__AnonStorey0:.ctor ()",
      "class" : "<CompletionGetTypesStartingWith>c__AnonStorey0",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "set_GetResult",
      "signature" : "void Mono.CSharp.AwaiterDefinition:set_GetResult (Mono.CSharp.MethodSpec)",
      "class" : "AwaiterDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Count",
      "signature" : "int System.Collections.Generic.List`1<Mono.CSharp.MissingTypeSpecReference>:get_Count ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Arguments",
      "signature" : "Mono.CSharp.Arguments Mono.CSharp.RecursivePattern:get_Arguments ()",
      "class" : "RecursivePattern",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "8",
      "inline_failures" : "0",
    },
    {
      "name" : "set_HoistedVariant",
      "signature" : "void Mono.CSharp.LocalVariable:set_HoistedVariant (Mono.CSharp.HoistedVariable)",
      "class" : "LocalVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_FusionLog",
      "signature" : "string System.IO.FileNotFoundException:get_FusionLog ()",
      "class" : "FileNotFoundException",
      "namespace" : "System.IO",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Reflection.PropertyInfo:.ctor ()",
      "class" : "PropertyInfo",
      "namespace" : "System.Reflection",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1<Mono.CompilerServices.SymbolWriter.CapturedVariable>:.ctor ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Current",
      "signature" : "Mono.CompilerServices.SymbolWriter.CapturedScope System.Collections.Generic.List`1/Enumerator<Mono.CompilerServices.SymbolWriter.CapturedScope>:get_Current ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Current",
      "signature" : "Mono.CSharp.AnonymousTypeParameter System.Collections.Generic.List`1/Enumerator<Mono.CSharp.AnonymousTypeParameter>:get_Current ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Current",
      "signature" : "Mono.CSharp.AnonymousMethodStorey/StoreyFieldPair System.Collections.Generic.List`1/Enumerator<Mono.CSharp.AnonymousMethodStorey/StoreyFieldPair>:get_Current ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "GetHashCode",
      "signature" : "int bool:GetHashCode ()",
      "class" : "Boolean",
      "namespace" : "System",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_ParameterModifier",
      "signature" : "Mono.CSharp.Parameter/Modifier Mono.CSharp.Parameter:get_ParameterModifier ()",
      "class" : "Parameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Current",
      "signature" : "System.Collections.Generic.KeyValuePair`2<string, Mono.CSharp.Namespace> System.Collections.Generic.Dictionary`2/Enumerator<string, Mono.CSharp.Namespace>:get_Current ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Warnings",
      "signature" : "int Mono.CSharp.Report:get_Warnings ()",
      "class" : "Report",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "set_DeclaringType",
      "signature" : "void Mono.CSharp.MemberSpec:set_DeclaringType (Mono.CSharp.TypeSpec)",
      "class" : "MemberSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "5",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1<Mono.CSharp.PropertyPatternMember>:.ctor ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Count",
      "signature" : "int Mono.CSharp.Arguments:get_Count ()",
      "class" : "Arguments",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "66",
      "inline_failures" : "0",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Collections.Generic.List`1/Enumerator<Mono.CSharp.Statement>:Dispose ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "10",
      "inline_failures" : "0",
    },
    {
      "name" : "get_IsLocked",
      "signature" : "bool Mono.CSharp.ParametersBlock/ParameterInfo:get_IsLocked ()",
      "class" : "ParameterInfo",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Collections.Generic.List`1/Enumerator<Mono.CSharp.LabeledStatement>:Dispose ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Block",
      "signature" : "Mono.CSharp.ToplevelBlock Mono.CSharp.AbstractPropertyEventMethod:get_Block ()",
      "class" : "AbstractPropertyEventMethod",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "10",
      "inline_failures" : "0",
    },
    {
      "name" : "AssertEmptyStack",
      "signature" : "void Mono.CSharp.EmitContext:AssertEmptyStack ()",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_BodyEnd",
      "signature" : "System.Reflection.Emit.Label Mono.CSharp.StateMachineInitializer:get_BodyEnd ()",
      "class" : "StateMachineInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "6",
      "inline_failures" : "0",
    },
    {
      "name" : "get_IsEmbeded",
      "signature" : "bool Mono.CSharp.AssemblyResource:get_IsEmbeded ()",
      "class" : "AssemblyResource",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Getter",
      "signature" : "Mono.CSharp.MethodSpec Mono.CSharp.PropertyOrIndexerExpr`1<Mono.CSharp.PropertySpec>:get_Getter ()",
      "class" : "PropertyOrIndexerExpr`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1<Mono.CompilerServices.SymbolWriter.NamespaceEntry>:.ctor ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "set_HoistedReturnState",
      "signature" : "void Mono.CSharp.AsyncInitializer:set_HoistedReturnState (Mono.CSharp.StackFieldExpr)",
      "class" : "AsyncInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_BackingField",
      "signature" : "Mono.CSharp.Property/BackingFieldDeclaration Mono.CSharp.Property:get_BackingField ()",
      "class" : "Property",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "17",
      "inline_failures" : "0",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Collections.Generic.List`1/Enumerator<long>:Dispose ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "set_Left",
      "signature" : "void Mono.CSharp.Nullable.LiftedBinaryOperator:set_Left (Mono.CSharp.Expression)",
      "class" : "LiftedBinaryOperator",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
      "inline_successes" : "13",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.CompilerGeneratedThis:.ctor (Mono.CSharp.TypeSpec,Mono.CSharp.Location)",
      "class" : "CompilerGeneratedThis",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "26",
      "inline_failures" : "0",
    },
    {
      "name" : "get_IsDynamic",
      "signature" : "bool Mono.CSharp.AwaitStatement:get_IsDynamic ()",
      "class" : "AwaitStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Set",
      "signature" : "Mono.CSharp.MethodSpec Mono.CSharp.PropertySpec:get_Set ()",
      "class" : "PropertySpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "21",
      "inline_failures" : "0",
    },
    {
      "name" : "set_Unsafe",
      "signature" : "void Mono.CSharp.Block:set_Unsafe (bool)",
      "class" : "Block",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_TypeExpression",
      "signature" : "Mono.CSharp.ATypeNameExpression Mono.CSharp.ComplexPatternExpression:get_TypeExpression ()",
      "class" : "ComplexPatternExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_DeclaredPosition",
      "signature" : "int Mono.CSharp.TypeParameterSpec:get_DeclaredPosition ()",
      "class" : "TypeParameterSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "8",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Source",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Assign:get_Source ()",
      "class" : "Assign",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "GetCallerMemberName",
      "signature" : "string Mono.CSharp.MemberCore:GetCallerMemberName ()",
      "class" : "MemberCore",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_CharSetValue",
      "signature" : "System.Nullable`1<System.Runtime.InteropServices.CharSet> Mono.CSharp.FixedField:get_CharSetValue ()",
      "class" : "FixedField",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_CounterAnonymousTypes",
      "signature" : "int Mono.CSharp.ModuleContainer:get_CounterAnonymousTypes ()",
      "class" : "ModuleContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "SetCustomAttribute",
      "signature" : "void System.Reflection.Emit.TypeBuilder:SetCustomAttribute (object[])",
      "class" : "TypeBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
      "inline_successes" : "5",
      "inline_failures" : "0",
    },
    {
      "name" : "SetConditionalAccessReceiver",
      "signature" : "void Mono.CSharp.ArrayAccess:SetConditionalAccessReceiver ()",
      "class" : "ArrayAccess",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "Emit",
      "signature" : "void System.Reflection.Emit.ILGenerator:Emit (System.Reflection.Emit.OpCode)",
      "class" : "ILGenerator",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
      "inline_successes" : "341",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Count",
      "signature" : "int System.Collections.Generic.Stack`1<int>:get_Count ()",
      "class" : "Stack`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "8",
      "inline_failures" : "0",
    },
    {
      "name" : "get_FinallyBlock",
      "signature" : "Mono.CSharp.ExplicitBlock Mono.CSharp.TryFinally:get_FinallyBlock ()",
      "class" : "TryFinally",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Collections.Generic.List`1/Enumerator<Mono.CSharp.Argument>:Dispose ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "18",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.WildcardPattern:.ctor (Mono.CSharp.Location)",
      "class" : "WildcardPattern",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Count",
      "signature" : "int Mono.CSharp.AParametersCollection:get_Count ()",
      "class" : "AParametersCollection",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "123",
      "inline_failures" : "0",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Collections.Generic.List`1/Enumerator<Mono.CSharp.Catch>:Dispose ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : "set_Spec",
      "signature" : "void Mono.CSharp.AbstractPropertyEventMethod:set_Spec (Mono.CSharp.MethodSpec)",
      "class" : "AbstractPropertyEventMethod",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "SetHasAddressTaken",
      "signature" : "void Mono.CSharp.LocalVariable:SetHasAddressTaken ()",
      "class" : "LocalVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.EmitContext:Emit (System.Reflection.Emit.OpCode,System.Reflection.Emit.LocalBuilder)",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "32",
      "inline_failures" : "0",
    },
    {
      "name" : "set_Alignment",
      "signature" : "void Mono.CSharp.InterpolatedStringInsert:set_Alignment (Mono.CSharp.Expression)",
      "class" : "InterpolatedStringInsert",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "Empty",
      "signature" : "Mono.CSharp.Parameter[] System.Array:Empty<Mono.CSharp.Parameter> ()",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Child",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.TypeCast:get_Child ()",
      "class" : "TypeCast",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "7",
      "inline_failures" : "0",
    },
    {
      "name" : "get_HasStaticFieldInitializer",
      "signature" : "bool Mono.CSharp.TypeDefinition:get_HasStaticFieldInitializer ()",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "set_EndLabel",
      "signature" : "void Mono.CSharp.ConditionalAccessContext:set_EndLabel (System.Reflection.Emit.Label)",
      "class" : "ConditionalAccessContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1<Mono.CSharp.IExpressionCleanup>:.ctor ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "set_CustomErrors",
      "signature" : "void Mono.CSharp.OverloadResolver:set_CustomErrors (Mono.CSharp.OverloadResolver/IErrorHandler)",
      "class" : "OverloadResolver",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "DisableReporting",
      "signature" : "void Mono.CSharp.Report:DisableReporting ()",
      "class" : "Report",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Current",
      "signature" : "Mono.CSharp.MovableArgument System.Collections.Generic.List`1/Enumerator<Mono.CSharp.MovableArgument>:get_Current ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "set_EnclosingLoopOrSwitch",
      "signature" : "void Mono.CSharp.BlockContext:set_EnclosingLoopOrSwitch (Mono.CSharp.LoopStatement)",
      "class" : "BlockContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "6",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ParenthesizedExpression:.ctor (Mono.CSharp.Expression,Mono.CSharp.Location)",
      "class" : "ParenthesizedExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Collections.Generic.List`1/Enumerator<Mono.CompilerServices.SymbolWriter.SourceFileEntry>:Dispose ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_SymbolWriter",
      "signature" : "Mono.CompilerServices.SymbolWriter.MonoSymbolFile Mono.CSharp.AssemblyDefinition:get_SymbolWriter ()",
      "class" : "AssemblyDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "op_Subtraction",
      "signature" : "System.Decimal System.Decimal:op_Subtraction (System.Decimal,System.Decimal)",
      "class" : "Decimal",
      "namespace" : "System",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_EmitAccurateDebugInfo",
      "signature" : "bool Mono.CSharp.EmitContext:get_EmitAccurateDebugInfo ()",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "8",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Current",
      "signature" : "System.Collections.Generic.KeyValuePair`2<string, object> System.Collections.Generic.Dictionary`2/Enumerator<string, object>:get_Current ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : "get_StateMachineMethod",
      "signature" : "Mono.CSharp.StateMachineMethod Mono.CSharp.StateMachine:get_StateMachineMethod ()",
      "class" : "StateMachine",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "case_781",
      "signature" : "void Mono.CSharp.CSharpParser:case_781 ()",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Current",
      "signature" : "System.Collections.Generic.KeyValuePair`2<Mono.CSharp.TypeSpec[], Mono.CSharp.InflatedTypeSpec> System.Collections.Generic.Dictionary`2/Enumerator<Mono.CSharp.TypeSpec[], Mono.CSharp.InflatedTypeSpec>:get_Current ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.ObjectEqualityComparer`1<Mono.CompilerServices.SymbolWriter.NamespaceEntry>:.ctor ()",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Current",
      "signature" : "Mono.CSharp.AbstractMessage System.Collections.Generic.List`1/Enumerator<Mono.CSharp.AbstractMessage>:get_Current ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1<Mono.CompilerServices.SymbolWriter.LocalVariableEntry>:.ctor ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Current",
      "signature" : "Mono.CompilerServices.SymbolWriter.CompileUnitEntry System.Collections.Generic.List`1/Enumerator<Mono.CompilerServices.SymbolWriter.CompileUnitEntry>:get_Current ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Key",
      "signature" : "string System.Collections.Generic.KeyValuePair`2<string, object>:get_Key ()",
      "class" : "KeyValuePair`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Collections.Generic.List`1/Enumerator<Mono.CSharp.DocumentationParameter>:Dispose ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Undo/<AddTypeContainer>c__AnonStorey1:.ctor ()",
      "class" : "<AddTypeContainer>c__AnonStorey1",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_INotifyCompletion",
      "signature" : "bool Mono.CSharp.AwaiterDefinition:get_INotifyCompletion ()",
      "class" : "AwaiterDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_PrimaryConstructorParameters",
      "signature" : "Mono.CSharp.ParametersCompiled Mono.CSharp.TypeDefinition:get_PrimaryConstructorParameters ()",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "14",
      "inline_failures" : "0",
    },
    {
      "name" : "get_IsDeclared",
      "signature" : "bool Mono.CSharp.LocalVariable:get_IsDeclared ()",
      "class" : "LocalVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Key",
      "signature" : "string System.Collections.Generic.KeyValuePair`2<string, System.Tuple`2<Mono.CSharp.FieldSpec, System.Reflection.FieldInfo>>:get_Key ()",
      "class" : "KeyValuePair`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_ModificationListener",
      "signature" : "Mono.CSharp.ValueModificationHandler Mono.CSharp.Evaluator:get_ModificationListener ()",
      "class" : "Evaluator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "set_Arguments",
      "signature" : "void Mono.CSharp.RecursivePattern:set_Arguments (Mono.CSharp.Arguments)",
      "class" : "RecursivePattern",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Undo/<AddTypeContainer>c__AnonStorey0:.ctor ()",
      "class" : "<AddTypeContainer>c__AnonStorey0",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Name",
      "signature" : "string Mono.CSharp.TypeParameter:get_Name ()",
      "class" : "TypeParameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "8",
      "inline_failures" : "0",
    },
    {
      "name" : "get_ParameterTypes",
      "signature" : "Mono.CSharp.TypeSpec[] Mono.CSharp.MethodCore:get_ParameterTypes ()",
      "class" : "MethodCore",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "5",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Reflection.FieldInfo:.ctor ()",
      "class" : "FieldInfo",
      "namespace" : "System.Reflection",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.AssemblyBuilderExtension:.ctor (Mono.CSharp.CompilerContext)",
      "class" : "AssemblyBuilderExtension",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator<string, System.Collections.Generic.List`1<Mono.CSharp.TypeSpec>>:Dispose ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.CollectionElementInitializer/ElementInitializerArgument:.ctor (Mono.CSharp.Expression)",
      "class" : "ElementInitializerArgument",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "ToString",
      "signature" : "string bool:ToString ()",
      "class" : "Boolean",
      "namespace" : "System",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Expr",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Return:get_Expr ()",
      "class" : "Return",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "6",
      "inline_failures" : "0",
    },
    {
      "name" : "get_IsExpressionTree",
      "signature" : "bool Mono.CSharp.ParametersBlock:get_IsExpressionTree ()",
      "class" : "ParametersBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Current",
      "signature" : "Mono.CSharp.ImportedModuleDefinition System.Collections.Generic.List`1/Enumerator<Mono.CSharp.ImportedModuleDefinition>:get_Current ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_MemberDefinition",
      "signature" : "Mono.CSharp.IMemberDefinition Mono.CSharp.MemberSpec:get_MemberDefinition ()",
      "class" : "MemberSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "37",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Type",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.Parameter:get_Type ()",
      "class" : "Parameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "8",
      "inline_failures" : "0",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Collections.Generic.List`1/Enumerator<Mono.CompilerServices.SymbolWriter.MethodEntry>:Dispose ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "set_IsLocked",
      "signature" : "void Mono.CSharp.ParametersBlock/ParameterInfo:set_IsLocked (bool)",
      "class" : "ParameterInfo",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Block",
      "signature" : "Mono.CSharp.ExplicitBlock Mono.CSharp.Switch:get_Block ()",
      "class" : "Switch",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : "set_Block",
      "signature" : "void Mono.CSharp.AbstractPropertyEventMethod:set_Block (Mono.CSharp.ToplevelBlock)",
      "class" : "AbstractPropertyEventMethod",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "10",
      "inline_failures" : "0",
    },
    {
      "name" : "set_IsEmbeded",
      "signature" : "void Mono.CSharp.AssemblyResource:set_IsEmbeded (bool)",
      "class" : "AssemblyResource",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "set_BodyEnd",
      "signature" : "void Mono.CSharp.StateMachineInitializer:set_BodyEnd (System.Reflection.Emit.Label)",
      "class" : "StateMachineInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Reflection.Emit.CustomAttributeBuilder:.ctor (object[])",
      "class" : "CustomAttributeBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
      "inline_successes" : "5",
      "inline_failures" : "0",
    },
    {
      "name" : "set_BackingField",
      "signature" : "void Mono.CSharp.Property:set_BackingField (Mono.CSharp.Property/BackingFieldDeclaration)",
      "class" : "Property",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Setter",
      "signature" : "Mono.CSharp.MethodSpec Mono.CSharp.PropertyOrIndexerExpr`1<Mono.CSharp.IndexerSpec>:get_Setter ()",
      "class" : "PropertyOrIndexerExpr`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.RefTypeExpr:.ctor (Mono.CSharp.Expression,Mono.CSharp.Location)",
      "class" : "RefTypeExpr",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1<Mono.CSharp.AssemblyResource>:.ctor ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Right",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Nullable.LiftedBinaryOperator:get_Right ()",
      "class" : "LiftedBinaryOperator",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
      "inline_successes" : "22",
      "inline_failures" : "0",
    },
    {
      "name" : "get_InferenceScore",
      "signature" : "int Mono.CSharp.TypeInference:get_InferenceScore ()",
      "class" : "TypeInference",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1<Mono.CSharp.DefiniteAssignmentBitSet>:.ctor ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "5",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1<Mono.CSharp.ExplicitBlock>:.ctor ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_ResultType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.AwaitStatement:get_ResultType ()",
      "class" : "AwaitStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Statements",
      "signature" : "System.Collections.Generic.List`1<Mono.CSharp.Statement> Mono.CSharp.Block:get_Statements ()",
      "class" : "Block",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "11",
      "inline_failures" : "0",
    },
    {
      "name" : "SetConstant",
      "signature" : "void System.Reflection.Emit.ParameterBuilder:SetConstant (object)",
      "class" : "ParameterBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Count",
      "signature" : "int Mono.CSharp.TypeInfo/StructInfo:get_Count ()",
      "class" : "StructInfo",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_OperandType",
      "signature" : "System.Reflection.Emit.OperandType System.Reflection.Emit.OpCode:get_OperandType ()",
      "class" : "OpCode",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Builder",
      "signature" : "System.Reflection.Emit.ParameterBuilder Mono.CSharp.ParameterBase:get_Builder ()",
      "class" : "ParameterBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "6",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Count",
      "signature" : "int System.Collections.Generic.List`1<Mono.CompilerServices.SymbolWriter.CapturedVariable>:get_Count ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "set_TypeExpression",
      "signature" : "void Mono.CSharp.ComplexPatternExpression:set_TypeExpression (Mono.CSharp.ATypeNameExpression)",
      "class" : "ComplexPatternExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "5",
      "inline_failures" : "0",
    },
    {
      "name" : "get_IsEverAssigned",
      "signature" : "bool Mono.CSharp.VariableInfo:get_IsEverAssigned ()",
      "class" : "VariableInfo",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_BuiltinTypes",
      "signature" : "Mono.CSharp.BuiltinTypes Mono.CSharp.CompilerContext:get_BuiltinTypes ()",
      "class" : "CompilerContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "174",
      "inline_failures" : "0",
    },
    {
      "name" : "set_DeclaredPosition",
      "signature" : "void Mono.CSharp.TypeParameterSpec:set_DeclaredPosition (int)",
      "class" : "TypeParameterSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.ObjectEqualityComparer`1<Mono.CompilerServices.SymbolWriter.LocalVariableEntry>:.ctor ()",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "set_CounterAnonymousTypes",
      "signature" : "void Mono.CSharp.ModuleContainer:set_CounterAnonymousTypes (int)",
      "class" : "ModuleContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Current",
      "signature" : "System.Xml.XmlNode System.Collections.Generic.List`1/Enumerator<System.Xml.XmlNode>:get_Current ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "set_CharSetValue",
      "signature" : "void Mono.CSharp.FixedField:set_CharSetValue (System.Nullable`1<System.Runtime.InteropServices.CharSet>)",
      "class" : "FixedField",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "Emit",
      "signature" : "void System.Reflection.Emit.ILGenerator:Emit (System.Reflection.Emit.OpCode,object)",
      "class" : "ILGenerator",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
      "inline_successes" : "195",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.ObjectEqualityComparer`1<Mono.CompilerServices.SymbolWriter.ScopeVariable>:.ctor ()",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "set_PreserveWhitespace",
      "signature" : "void System.Xml.XmlDocument:set_PreserveWhitespace (bool)",
      "class" : "XmlDocument",
      "namespace" : "System.Xml",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Definition",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.TypeDefinition:get_Definition ()",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "34",
      "inline_failures" : "0",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Collections.Generic.Dictionary`2/Enumerator<int, System.Collections.Generic.List`1<Mono.CSharp.AnonymousTypeClass>>:Dispose ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Format",
      "signature" : "string Mono.CSharp.InterpolatedStringInsert:get_Format ()",
      "class" : "InterpolatedStringInsert",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Count",
      "signature" : "int System.Collections.Generic.List`1<Mono.CompilerServices.SymbolWriter.CodeBlockEntry>:get_Count ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.EmitContext:Emit (System.Reflection.Emit.OpCode,string)",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.LoopStatement:.ctor (Mono.CSharp.Statement)",
      "class" : "LoopStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "6",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.EqualityComparer`1<Mono.CompilerServices.SymbolWriter.ScopeVariable>:.ctor ()",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1<System.Tuple`2<string, string>>:.ctor ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "GetPackageFlags",
      "signature" : "string Mono.CSharp.Driver:GetPackageFlags (string,Mono.CSharp.Report)",
      "class" : "Driver",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_OrdinalIgnoreCase",
      "signature" : "System.StringComparer System.StringComparer:get_OrdinalIgnoreCase ()",
      "class" : "StringComparer",
      "namespace" : "System",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Value",
      "signature" : "Mono.CSharp.Namespace System.Collections.Generic.KeyValuePair`2<string, Mono.CSharp.Namespace>:get_Value ()",
      "class" : "KeyValuePair`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Count",
      "signature" : "int Mono.CSharp.ArrayInitializer:get_Count ()",
      "class" : "ArrayInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "9",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Type",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.ConditionalAccessContext:get_Type ()",
      "class" : "ConditionalAccessContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Count",
      "signature" : "int System.Collections.Generic.List`1<Mono.CSharp.FullNamedExpression>:get_Count ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "14",
      "inline_failures" : "0",
    },
    {
      "name" : "EnableReporting",
      "signature" : "void Mono.CSharp.Report:EnableReporting ()",
      "class" : "Report",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Collections.Generic.List`1/Enumerator<Mono.CSharp.INamedBlockVariable>:Dispose ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Key",
      "signature" : "System.Security.Permissions.SecurityAction System.Collections.Generic.KeyValuePair`2<System.Security.Permissions.SecurityAction, System.Security.PermissionSet>:get_Key ()",
      "class" : "KeyValuePair`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "5",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.EnumConstant:.ctor (Mono.CSharp.Location)",
      "class" : "EnumConstant",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Switch",
      "signature" : "Mono.CSharp.Switch Mono.CSharp.BlockContext:get_Switch ()",
      "class" : "BlockContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "13",
      "inline_failures" : "0",
    },
    {
      "name" : "op_Multiply",
      "signature" : "System.Decimal System.Decimal:op_Multiply (System.Decimal,System.Decimal)",
      "class" : "Decimal",
      "namespace" : "System",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_HasMethodSymbolBuilder",
      "signature" : "bool Mono.CSharp.EmitContext:get_HasMethodSymbolBuilder ()",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Count",
      "signature" : "int System.Collections.Generic.List`1<Mono.CSharp.TypeSpec>:get_Count ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "7",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1<System.Action>:.ctor ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Name",
      "signature" : "string Mono.CSharp.ATypeNameExpression:get_Name ()",
      "class" : "ATypeNameExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "72",
      "inline_failures" : "0",
    },
    {
      "name" : "get_PC",
      "signature" : "Mono.CSharp.Field Mono.CSharp.StateMachine:get_PC ()",
      "class" : "StateMachine",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "11",
      "inline_failures" : "0",
    },
    {
      "name" : "case_782",
      "signature" : "void Mono.CSharp.CSharpParser:case_782 ()",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.DocumentationParameter:.ctor (Mono.CSharp.Parameter/Modifier,Mono.CSharp.FullNamedExpression)",
      "class" : "DocumentationParameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Current",
      "signature" : "Mono.CSharp.BlockVariableDeclarator System.Collections.Generic.List`1/Enumerator<Mono.CSharp.BlockVariableDeclarator>:get_Current ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "7",
      "inline_failures" : "0",
    },
    {
      "name" : "get_GetResourceStrings",
      "signature" : "System.Collections.Generic.Dictionary`2<string, string> Mono.CSharp.ModuleContainer:get_GetResourceStrings ()",
      "class" : "ModuleContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : "set_INotifyCompletion",
      "signature" : "void Mono.CSharp.AwaiterDefinition:set_INotifyCompletion (bool)",
      "class" : "AwaiterDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "set_PrimaryConstructorParameters",
      "signature" : "void Mono.CSharp.TypeDefinition:set_PrimaryConstructorParameters (Mono.CSharp.ParametersCompiled)",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : "get_IsCompilerGenerated",
      "signature" : "bool Mono.CSharp.LocalVariable:get_IsCompilerGenerated ()",
      "class" : "LocalVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.UsingAliasNamespace/AliasContext:.ctor (Mono.CSharp.NamespaceContainer)",
      "class" : "AliasContext",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_ParameterInfo",
      "signature" : "Mono.CSharp.ParametersCompiled Mono.CSharp.MethodCore:get_ParameterInfo ()",
      "class" : "MethodCore",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "16",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Reflection.ParameterInfo:.ctor ()",
      "class" : "ParameterInfo",
      "namespace" : "System.Reflection",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_HasBeenStopped",
      "signature" : "bool Mono.CSharp.CommandLineParser:get_HasBeenStopped ()",
      "class" : "CommandLineParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.EmptyExpressionStatement:.ctor ()",
      "class" : "EmptyExpressionStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "set_KeyPair",
      "signature" : "void System.Reflection.AssemblyName:set_KeyPair (System.Reflection.StrongNameKeyPair)",
      "class" : "AssemblyName",
      "namespace" : "System.Reflection",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "set_Expr",
      "signature" : "void Mono.CSharp.Return:set_Expr (Mono.CSharp.Expression)",
      "class" : "Return",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CompilerServices.SymbolWriter.ScopeVariable:.ctor (int,int)",
      "class" : "ScopeVariable",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "set_Type",
      "signature" : "void Mono.CSharp.Parameter:set_Type (Mono.CSharp.TypeSpec)",
      "class" : "Parameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Current",
      "signature" : "Mono.CSharp.TypeParameter System.Collections.Generic.List`1/Enumerator<Mono.CSharp.TypeParameter>:get_Current ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Modifiers",
      "signature" : "Mono.CSharp.Modifiers Mono.CSharp.MemberSpec:get_Modifiers ()",
      "class" : "MemberSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "80",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Parameters",
      "signature" : "Mono.CSharp.ParametersCompiled Mono.CSharp.ParametersBlock:get_Parameters ()",
      "class" : "ParametersBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "35",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.EqualityComparer`1<Mono.CSharp.ArrayContainer/TypeRankPair>:.ctor ()",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "get_DefaultLabel",
      "signature" : "Mono.CSharp.SwitchLabel Mono.CSharp.Switch:get_DefaultLabel ()",
      "class" : "Switch",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.WarningRegions/EnableAll:.ctor (int)",
      "class" : "EnableAll",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Count",
      "signature" : "int System.Collections.Generic.List`1<Mono.CSharp.BlockVariableDeclarator>:get_Count ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_CurrentPC",
      "signature" : "System.Reflection.Emit.LocalBuilder Mono.CSharp.StateMachineInitializer:get_CurrentPC ()",
      "class" : "StateMachineInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Token",
      "signature" : "int System.Reflection.Emit.MethodToken:get_Token ()",
      "class" : "MethodToken",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_ReturnTypeInference",
      "signature" : "Mono.CSharp.TypeInferenceContext Mono.CSharp.AsyncInitializer:get_ReturnTypeInference ()",
      "class" : "AsyncInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Platform",
      "signature" : "System.PlatformID System.OperatingSystem:get_Platform ()",
      "class" : "OperatingSystem",
      "namespace" : "System",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Initializer",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Property:get_Initializer ()",
      "class" : "Property",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "6",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Count",
      "signature" : "int System.Collections.Generic.List`1<Mono.CompilerServices.SymbolWriter.CompileUnitEntry>:get_Count ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1<Mono.CSharp.TypeParameterSpec>:.ctor ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Count",
      "signature" : "int System.Collections.Generic.List`1<long>:get_Count ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "set_Right",
      "signature" : "void Mono.CSharp.Nullable.LiftedBinaryOperator:set_Right (Mono.CSharp.Expression)",
      "class" : "LiftedBinaryOperator",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
      "inline_successes" : "13",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.NullReportPrinter:.ctor ()",
      "class" : "NullReportPrinter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "get_AccessorFirst",
      "signature" : "Mono.CSharp.PropertyBase/PropertyMethod Mono.CSharp.PropertyBase:get_AccessorFirst ()",
      "class" : "PropertyBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "6",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Fields",
      "signature" : "System.Collections.Generic.List`1<Mono.CSharp.FieldSpec> Mono.CSharp.TypeInfo/StructInfo:get_Fields ()",
      "class" : "StructInfo",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "SetEndLocation",
      "signature" : "void Mono.CSharp.Block:SetEndLocation (Mono.CSharp.Location)",
      "class" : "Block",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "22",
      "inline_failures" : "0",
    },
    {
      "name" : "SetCustomAttribute",
      "signature" : "void System.Reflection.Emit.ParameterBuilder:SetCustomAttribute (object[])",
      "class" : "ParameterBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : "get_HasSpecialConstructor",
      "signature" : "bool Mono.CSharp.TypeParameterSpec:get_HasSpecialConstructor ()",
      "class" : "TypeParameterSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "set_IsEverAssigned",
      "signature" : "void Mono.CSharp.VariableInfo:set_IsEverAssigned (bool)",
      "class" : "VariableInfo",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "get_IsRuntimeBinder",
      "signature" : "bool Mono.CSharp.CompilerContext:get_IsRuntimeBinder ()",
      "class" : "CompilerContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "DoResolve",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.TypeOfMember`1<Mono.CSharp.FieldSpec>:DoResolve (Mono.CSharp.ResolveContext)",
      "class" : "TypeOfMember`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_DeclaringAssembly",
      "signature" : "Mono.CSharp.AssemblyDefinition Mono.CSharp.ModuleContainer:get_DeclaringAssembly ()",
      "class" : "ModuleContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "28",
      "inline_failures" : "0",
    },
    {
      "name" : "EmitCall",
      "signature" : "void System.Reflection.Emit.ILGenerator:EmitCall (System.Reflection.Emit.OpCode,object[])",
      "class" : "ILGenerator",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_HasMembersDefined",
      "signature" : "bool Mono.CSharp.TypeDefinition:get_HasMembersDefined ()",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : "get_IsCompound",
      "signature" : "bool Mono.CSharp.Binary:get_IsCompound ()",
      "class" : "Binary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "11",
      "inline_failures" : "0",
    },
    {
      "name" : "get_FixedParameters",
      "signature" : "Mono.CSharp.IParameterData[] Mono.CSharp.AParametersCollection:get_FixedParameters ()",
      "class" : "AParametersCollection",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "82",
      "inline_failures" : "0",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Collections.Generic.List`1/Enumerator<Mono.CSharp.AnonymousMethodStorey/StoreyFieldPair>:Dispose ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "set_Format",
      "signature" : "void Mono.CSharp.InterpolatedStringInsert:set_Format (string)",
      "class" : "InterpolatedStringInsert",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.EmitContext:Emit (System.Reflection.Emit.OpCode,double)",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "set_Getter",
      "signature" : "void Mono.CSharp.PropertyOrIndexerExpr`1<Mono.CSharp.PropertySpec>:set_Getter (Mono.CSharp.MethodSpec)",
      "class" : "PropertyOrIndexerExpr`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Diagnostics.Stopwatch:.ctor ()",
      "class" : "Stopwatch",
      "namespace" : "System.Diagnostics",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "set_Type",
      "signature" : "void Mono.CSharp.ConditionalAccessContext:set_Type (Mono.CSharp.TypeSpec)",
      "class" : "ConditionalAccessContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_InstanceQualifier",
      "signature" : "Mono.CSharp.OverloadResolver/IInstanceQualifier Mono.CSharp.OverloadResolver:get_InstanceQualifier ()",
      "class" : "OverloadResolver",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "get_HasValue",
      "signature" : "bool System.Nullable`1<bool>:get_HasValue ()",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
      "inline_successes" : "10",
      "inline_failures" : "0",
    },
    {
      "name" : "get_HasValue",
      "signature" : "bool System.Nullable`1<Mono.CSharp.TypeParameterInflator>:get_HasValue ()",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "set_Switch",
      "signature" : "void Mono.CSharp.BlockContext:set_Switch (Mono.CSharp.Switch)",
      "class" : "BlockContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Count",
      "signature" : "int System.Collections.Generic.List`1<Mono.CompilerServices.SymbolWriter.CapturedScope>:get_Count ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_HasReturnLabel",
      "signature" : "bool Mono.CSharp.EmitContext:get_HasReturnLabel ()",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1<Mono.CSharp.Statement>:.ctor ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "set_Name",
      "signature" : "void Mono.CSharp.ATypeNameExpression:set_Name (string)",
      "class" : "ATypeNameExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Current",
      "signature" : "Mono.CSharp.SourceFile System.Collections.Generic.List`1/Enumerator<Mono.CSharp.SourceFile>:get_Current ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "case_783",
      "signature" : "void Mono.CSharp.CSharpParser:case_783 ()",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "IsGenericType",
      "signature" : "bool Mono.CSharp.TypeManager:IsGenericType (Mono.CSharp.TypeSpec)",
      "class" : "TypeManager",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "10",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Value",
      "signature" : "Mono.CSharp.InflatedTypeSpec System.Collections.Generic.KeyValuePair`2<Mono.CSharp.TypeSpec[], Mono.CSharp.InflatedTypeSpec>:get_Value ()",
      "class" : "KeyValuePair`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_MemberInfo",
      "signature" : "System.Reflection.MemberInfo System.Reflection.CustomAttributeNamedArgument:get_MemberInfo ()",
      "class" : "CustomAttributeNamedArgument",
      "namespace" : "System.Reflection",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_IsDecrement",
      "signature" : "bool Mono.CSharp.UnaryMutator:get_IsDecrement ()",
      "class" : "UnaryMutator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Collections.Generic.List`1/Enumerator<Mono.CSharp.MemberCore>:Dispose ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "13",
      "inline_failures" : "0",
    },
    {
      "name" : "get_LocalInfo",
      "signature" : "Mono.CSharp.LocalVariable Mono.CSharp.TemporaryVariableReference:get_LocalInfo ()",
      "class" : "TemporaryVariableReference",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "5",
      "inline_failures" : "0",
    },
    {
      "name" : "set_GetResourceStrings",
      "signature" : "void Mono.CSharp.ModuleContainer:set_GetResourceStrings (System.Collections.Generic.Dictionary`2<string, string>)",
      "class" : "ModuleContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Collections.Generic.List`1/Enumerator<Mono.CSharp.SourceFile>:Dispose ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "Empty",
      "signature" : "Mono.CompilerServices.SymbolWriter.CodeBlockEntry[] System.Array:Empty<Mono.CompilerServices.SymbolWriter.CodeBlockEntry> ()",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "AddResourceFile",
      "signature" : "void System.Reflection.Emit.AssemblyBuilder:AddResourceFile (object[])",
      "class" : "AssemblyBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ImportedModuleDefinition:.ctor (System.Reflection.Module)",
      "class" : "ImportedModuleDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_PrimaryConstructorBaseArguments",
      "signature" : "Mono.CSharp.Arguments Mono.CSharp.TypeDefinition:get_PrimaryConstructorBaseArguments ()",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "get_IsConstant",
      "signature" : "bool Mono.CSharp.LocalVariable:get_IsConstant ()",
      "class" : "LocalVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ReportPrinter:.ctor ()",
      "class" : "ReportPrinter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "20",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.For:.ctor (Mono.CSharp.Location)",
      "class" : "For",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_DefaultBufferSize",
      "signature" : "int System.IO.StreamReader:get_DefaultBufferSize ()",
      "class" : "StreamReader",
      "namespace" : "System.IO",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ConstructorInstanceQualifier:.ctor (Mono.CSharp.TypeSpec)",
      "class" : "ConstructorInstanceQualifier",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Type",
      "signature" : "Mono.CSharp.TypeParameterSpec Mono.CSharp.TypeParameter:get_Type ()",
      "class" : "TypeParameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "15",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Count",
      "signature" : "int System.Collections.Generic.List`1<Mono.CSharp.TypeContainer>:get_Count ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_OffsetTable",
      "signature" : "Mono.CompilerServices.SymbolWriter.OffsetTable Mono.CompilerServices.SymbolWriter.MonoSymbolFile:get_OffsetTable ()",
      "class" : "MonoSymbolFile",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : "get_IsUsed",
      "signature" : "bool Mono.CSharp.MemberCore:get_IsUsed ()",
      "class" : "MemberCore",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.AnonymousMethodExpression/Quote:.ctor (Mono.CSharp.Expression)",
      "class" : "Quote",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_ConditionalAccess",
      "signature" : "bool Mono.CSharp.ArrayAccess:get_ConditionalAccess ()",
      "class" : "ArrayAccess",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "get_TypeExpression",
      "signature" : "Mono.CSharp.FullNamedExpression Mono.CSharp.Parameter:get_TypeExpression ()",
      "class" : "Parameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "set_Modifiers",
      "signature" : "void Mono.CSharp.MemberSpec:set_Modifiers (Mono.CSharp.Modifiers)",
      "class" : "MemberSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_StateMachine",
      "signature" : "Mono.CSharp.StateMachine Mono.CSharp.ParametersBlock:get_StateMachine ()",
      "class" : "ParametersBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "21",
      "inline_failures" : "0",
    },
    {
      "name" : "get_OptAttributes",
      "signature" : "Mono.CSharp.Attributes Mono.CSharp.Attributable:get_OptAttributes ()",
      "class" : "Attributable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "80",
      "inline_failures" : "0",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Collections.Generic.Dictionary`2/Enumerator<string, object>:Dispose ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : "get_IsNullable",
      "signature" : "bool Mono.CSharp.Switch:get_IsNullable ()",
      "class" : "Switch",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "get_HasValue",
      "signature" : "bool System.Nullable`1<System.Reflection.Emit.Label>:get_HasValue ()",
      "class" : "Nullable`1",
      "namespace" : "System",
      "wrapper_type" : "none",
      "inline_successes" : "7",
      "inline_failures" : "0",
    },
    {
      "name" : "get_CounterAnonymousMethods",
      "signature" : "int Mono.CSharp.TypeContainer:get_CounterAnonymousMethods ()",
      "class" : "TypeContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_SkipFinally",
      "signature" : "System.Reflection.Emit.LocalBuilder Mono.CSharp.StateMachineInitializer:get_SkipFinally ()",
      "class" : "StateMachineInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Collections.Generic.List`1/Enumerator<Mono.CSharp.MovableArgument>:Dispose ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Argument:.ctor (Mono.CSharp.Expression)",
      "class" : "Argument",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "196",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Count",
      "signature" : "int Mono.CSharp.TypeParameters:get_Count ()",
      "class" : "TypeParameters",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "42",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Value",
      "signature" : "object System.Collections.Generic.KeyValuePair`2<string, object>:get_Value ()",
      "class" : "KeyValuePair`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "9",
      "inline_failures" : "0",
    },
    {
      "name" : "set_Initializer",
      "signature" : "void Mono.CSharp.Property:set_Initializer (Mono.CSharp.Expression)",
      "class" : "Property",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.InternalStringComparer:.ctor ()",
      "class" : "InternalStringComparer",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "12",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Count",
      "signature" : "int System.Collections.Generic.Dictionary`2<long, Mono.CSharp.SwitchLabel>:get_Count ()",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "get_UnwrapLeft",
      "signature" : "Mono.CSharp.Nullable.Unwrap Mono.CSharp.Nullable.LiftedBinaryOperator:get_UnwrapLeft ()",
      "class" : "LiftedBinaryOperator",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
      "inline_successes" : "28",
      "inline_failures" : "0",
    },
    {
      "name" : "get_IsVariableCapturingRequired",
      "signature" : "bool Mono.CSharp.ResolveContext:get_IsVariableCapturingRequired ()",
      "class" : "ResolveContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.ObjectEqualityComparer`1<Mono.CSharp.AnonymousMethodStorey/StoreyFieldPair>:.ctor ()",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "__castclass_wrapper_IMethodDefinition",
      "signature" : "(wrapper castclass) object object:__castclass_wrapper_IMethodDefinition (object)",
      "class" : "Object",
      "namespace" : "System",
      "wrapper_type" : "castclass",
      "inline_successes" : "16",
      "inline_failures" : "0",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Collections.Generic.List`1/Enumerator<Mono.CSharp.Field>:Dispose ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_HasGet",
      "signature" : "bool Mono.CSharp.PropertySpec:get_HasGet ()",
      "class" : "PropertySpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "9",
      "inline_failures" : "0",
    },
    {
      "name" : "get_UnderlyingType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.EnumSpec:get_UnderlyingType ()",
      "class" : "EnumSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "7",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ResumableStatement:.ctor ()",
      "class" : "ResumableStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Collections.Generic.List`1/Enumerator<System.Tuple`2<Mono.CSharp.RootNamespace, System.Reflection.Assembly>>:Dispose ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_HasSpecialClass",
      "signature" : "bool Mono.CSharp.TypeParameterSpec:get_HasSpecialClass ()",
      "class" : "TypeParameterSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : "get_OriginalExpression",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.ReducedExpression:get_OriginalExpression ()",
      "class" : "ReducedExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Undo:.ctor ()",
      "class" : "Undo",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_DocumentationBuilder",
      "signature" : "Mono.CSharp.DocumentationBuilder Mono.CSharp.ModuleContainer:get_DocumentationBuilder ()",
      "class" : "ModuleContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "15",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Current",
      "signature" : "string[] System.Collections.Generic.List`1/Enumerator<string[]>:get_Current ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "EndExceptionBlock",
      "signature" : "void System.Reflection.Emit.ILGenerator:EndExceptionBlock ()",
      "class" : "ILGenerator",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
      "inline_successes" : "8",
      "inline_failures" : "0",
    },
    {
      "name" : "get_IsAssigned",
      "signature" : "bool Mono.CSharp.HoistedParameter:get_IsAssigned ()",
      "class" : "HoistedParameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_HasInstanceConstructor",
      "signature" : "bool Mono.CSharp.TypeDefinition:get_HasInstanceConstructor ()",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Types",
      "signature" : "System.Type[] System.Reflection.ReflectionTypeLoadException:get_Types ()",
      "class" : "ReflectionTypeLoadException",
      "namespace" : "System.Reflection",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Oper",
      "signature" : "Mono.CSharp.Binary/Operator Mono.CSharp.Binary:get_Oper ()",
      "class" : "Binary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "18",
      "inline_failures" : "0",
    },
    {
      "name" : "GetParameterAttribute",
      "signature" : "System.Reflection.ParameterAttributes Mono.CSharp.AParametersCollection:GetParameterAttribute (Mono.CSharp.Parameter/Modifier)",
      "class" : "AParametersCollection",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.DocumentationParameter:.ctor (Mono.CSharp.FullNamedExpression)",
      "class" : "DocumentationParameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "5",
      "inline_failures" : "0",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.EmitContext:Emit (System.Reflection.Emit.OpCode,single)",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.DelegateCreation:.ctor ()",
      "class" : "DelegateCreation",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_IsSuggestionOnly",
      "signature" : "bool Mono.CSharp.RuntimeValueExpression:get_IsSuggestionOnly ()",
      "class" : "RuntimeValueExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "set_InstanceQualifier",
      "signature" : "void Mono.CSharp.OverloadResolver:set_InstanceQualifier (Mono.CSharp.OverloadResolver/IInstanceQualifier)",
      "class" : "OverloadResolver",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "get_ReturnType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.BlockContext:get_ReturnType ()",
      "class" : "BlockContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "7",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Count",
      "signature" : "int System.Collections.Generic.Dictionary`2<string, Mono.CSharp.SourceFile>:get_Count ()",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Parameters",
      "signature" : "Mono.CSharp.AParametersCollection Mono.CSharp.Delegate:get_Parameters ()",
      "class" : "Delegate",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "5",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Security.Cryptography.SHA1:.ctor ()",
      "class" : "SHA1",
      "namespace" : "System.Security.Cryptography",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_TypeArguments",
      "signature" : "Mono.CSharp.TypeArguments Mono.CSharp.ATypeNameExpression:get_TypeArguments ()",
      "class" : "ATypeNameExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "Equals",
      "signature" : "bool System.Reflection.Emit.Label:Equals (System.Reflection.Emit.Label)",
      "class" : "Label",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
      "inline_successes" : "5",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.ObjectEqualityComparer`1<Mono.CSharp.SourceFile/LocationRegion>:.ctor ()",
      "class" : "ObjectEqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "FlowAnalysis",
      "signature" : "void Mono.CSharp.Expression:FlowAnalysis (Mono.CSharp.FlowAnalysisContext)",
      "class" : "Expression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_DefiniteAssignment",
      "signature" : "Mono.CSharp.DefiniteAssignmentBitSet Mono.CSharp.FlowAnalysisContext:get_DefiniteAssignment ()",
      "class" : "FlowAnalysisContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "61",
      "inline_failures" : "0",
    },
    {
      "name" : "__isinst_wrapper_ICollection`1",
      "signature" : "(wrapper isinst) object object:__isinst_wrapper_ICollection`1 (object)",
      "class" : "Object",
      "namespace" : "System",
      "wrapper_type" : "isinst",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Count",
      "signature" : "int System.Collections.Generic.List`1<Mono.CSharp.Catch>:get_Count ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "5",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.EmptyCompletion:.ctor ()",
      "class" : "EmptyCompletion",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "__castclass_wrapper_IInterfaceMemberSpec",
      "signature" : "(wrapper castclass) object object:__castclass_wrapper_IInterfaceMemberSpec (object)",
      "class" : "Object",
      "namespace" : "System",
      "wrapper_type" : "castclass",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "__icall_wrapper___emul_fconv_to_u4",
      "signature" : "(wrapper managed-to-native) uint object:__icall_wrapper___emul_fconv_to_u4 (double)",
      "class" : "Object",
      "namespace" : "System",
      "wrapper_type" : "managed-to-native",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "DefineVersionInfoResource",
      "signature" : "void System.Reflection.Emit.AssemblyBuilder:DefineVersionInfoResource (object[])",
      "class" : "AssemblyBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.PendingImplementation/MissingInterfacesInfo:.ctor (Mono.CSharp.TypeSpec)",
      "class" : "MissingInterfacesInfo",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "set_PrimaryConstructorBaseArguments",
      "signature" : "void Mono.CSharp.TypeDefinition:set_PrimaryConstructorBaseArguments (Mono.CSharp.Arguments)",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_IsLocked",
      "signature" : "bool Mono.CSharp.LocalVariable:get_IsLocked ()",
      "class" : "LocalVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Statement",
      "signature" : "Mono.CSharp.Statement Mono.CSharp.LoopStatement:get_Statement ()",
      "class" : "LoopStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "24",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Block",
      "signature" : "Mono.CSharp.ToplevelBlock Mono.CSharp.MethodCore:get_Block ()",
      "class" : "MethodCore",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "17",
      "inline_failures" : "0",
    },
    {
      "name" : "EmitThis",
      "signature" : "void Mono.CSharp.EmitContext:EmitThis ()",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "21",
      "inline_failures" : "0",
    },
    {
      "name" : "set_ConditionalAccess",
      "signature" : "void Mono.CSharp.ArrayAccess:set_ConditionalAccess (bool)",
      "class" : "ArrayAccess",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "set_Formatting",
      "signature" : "void System.Xml.XmlTextWriter:set_Formatting (System.Xml.Formatting)",
      "class" : "XmlTextWriter",
      "namespace" : "System.Xml",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_TopBlock",
      "signature" : "Mono.CSharp.ToplevelBlock Mono.CSharp.ParametersBlock:get_TopBlock ()",
      "class" : "ParametersBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "27",
      "inline_failures" : "0",
    },
    {
      "name" : "get_IsAbstract",
      "signature" : "bool Mono.CSharp.MemberSpec:get_IsAbstract ()",
      "class" : "MemberSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "8",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Value",
      "signature" : "System.Security.PermissionSet System.Collections.Generic.KeyValuePair`2<System.Security.Permissions.SecurityAction, System.Security.PermissionSet>:get_Value ()",
      "class" : "KeyValuePair`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "5",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Catch/FilterStatement:.ctor (Mono.CSharp.Catch)",
      "class" : "FilterStatement",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "set_OptAttributes",
      "signature" : "void Mono.CSharp.Attributable:set_OptAttributes (Mono.CSharp.Attributes)",
      "class" : "Attributable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "5",
      "inline_failures" : "0",
    },
    {
      "name" : "get_IsReadonly",
      "signature" : "bool Mono.CSharp.LocalVariable:get_IsReadonly ()",
      "class" : "LocalVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "set_CounterAnonymousMethods",
      "signature" : "void Mono.CSharp.TypeContainer:set_CounterAnonymousMethods (int)",
      "class" : "TypeContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.This/ThisVariable:.ctor ()",
      "class" : "ThisVariable",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Collections.Generic.List`1/Enumerator<Mono.CSharp.AssemblyResource>:Dispose ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_TypedValue",
      "signature" : "System.Reflection.CustomAttributeTypedArgument System.Reflection.CustomAttributeNamedArgument:get_TypedValue ()",
      "class" : "CustomAttributeNamedArgument",
      "namespace" : "System.Reflection",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Result",
      "signature" : "string[] Mono.CSharp.CompletionResult:get_Result ()",
      "class" : "CompletionResult",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ExpressionStatement:.ctor ()",
      "class" : "ExpressionStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "22",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Types",
      "signature" : "Mono.CSharp.TypeParameterSpec[] Mono.CSharp.TypeParameters:get_Types ()",
      "class" : "TypeParameters",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "8",
      "inline_failures" : "0",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Collections.Generic.List`1/Enumerator<Mono.CSharp.TypeDefinition>:Dispose ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "__castclass_wrapper_INamedBlockVariable",
      "signature" : "(wrapper castclass) object object:__castclass_wrapper_INamedBlockVariable (object)",
      "class" : "Object",
      "namespace" : "System",
      "wrapper_type" : "castclass",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "set_UnwrapLeft",
      "signature" : "void Mono.CSharp.Nullable.LiftedBinaryOperator:set_UnwrapLeft (Mono.CSharp.Nullable.Unwrap)",
      "class" : "LiftedBinaryOperator",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.WarningRegions/DisableAll:.ctor (int)",
      "class" : "DisableAll",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "ToString",
      "signature" : "string string:ToString ()",
      "class" : "String",
      "namespace" : "System",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_HasSet",
      "signature" : "bool Mono.CSharp.PropertySpec:get_HasSet ()",
      "class" : "PropertySpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "6",
      "inline_failures" : "0",
    },
    {
      "name" : "get_DirectMethodGroupConversion",
      "signature" : "Mono.CSharp.MethodGroupExpr Mono.CSharp.AnonymousMethodBody:get_DirectMethodGroupConversion ()",
      "class" : "AnonymousMethodBody",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_HasSpecialStruct",
      "signature" : "bool Mono.CSharp.TypeParameterSpec:get_HasSpecialStruct ()",
      "class" : "TypeParameterSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "9",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Report",
      "signature" : "Mono.CSharp.Report Mono.CSharp.CompilerContext:get_Report ()",
      "class" : "CompilerContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "226",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Statement",
      "signature" : "Mono.CSharp.Statement Mono.CSharp.TryFinallyBlock:get_Statement ()",
      "class" : "TryFinallyBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "7",
      "inline_failures" : "0",
    },
    {
      "name" : "set_DocumentationBuilder",
      "signature" : "void Mono.CSharp.ModuleContainer:set_DocumentationBuilder (Mono.CSharp.DocumentationBuilder)",
      "class" : "ModuleContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "Empty",
      "signature" : "System.Type[] System.Array:Empty<System.Type> ()",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "MarkLabel",
      "signature" : "void System.Reflection.Emit.ILGenerator:MarkLabel (System.Reflection.Emit.Label)",
      "class" : "ILGenerator",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
      "inline_successes" : "100",
      "inline_failures" : "0",
    },
    {
      "name" : "set_IsAssigned",
      "signature" : "void Mono.CSharp.HoistedParameter:set_IsAssigned (bool)",
      "class" : "HoistedParameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "set_HasInstanceConstructor",
      "signature" : "void Mono.CSharp.TypeDefinition:set_HasInstanceConstructor (bool)",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1<Mono.CSharp.Field>:.ctor ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Left",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Binary:get_Left ()",
      "class" : "Binary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Collections.Generic.List`1/Enumerator<Mono.CSharp.AnonymousTypeParameter>:Dispose ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Count",
      "signature" : "int System.Collections.Generic.List`1<Mono.CSharp.AnonymousTypeParameter>:get_Count ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "5",
      "inline_failures" : "0",
    },
    {
      "name" : "get_TypeSpec",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.DocumentationParameter:get_TypeSpec ()",
      "class" : "DocumentationParameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.EmitContext:Emit (System.Reflection.Emit.OpCode,System.Reflection.Emit.Label)",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "118",
      "inline_failures" : "0",
    },
    {
      "name" : "get_MemberName",
      "signature" : "Mono.CSharp.MemberName Mono.CSharp.MemberCore:get_MemberName ()",
      "class" : "MemberCore",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "168",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.MarshalByRefObject:.ctor ()",
      "class" : "MarshalByRefObject",
      "namespace" : "System",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_IsDefined",
      "signature" : "bool Mono.CSharp.PredefinedType:get_IsDefined ()",
      "class" : "PredefinedType",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "10",
      "inline_failures" : "0",
    },
    {
      "name" : "__icall_wrapper___emul_iconv_to_r_un",
      "signature" : "(wrapper managed-to-native) double object:__icall_wrapper___emul_iconv_to_r_un (int)",
      "class" : "Object",
      "namespace" : "System",
      "wrapper_type" : "managed-to-native",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "Empty",
      "signature" : "System.Collections.Generic.IEnumerable`1<string> System.Linq.Enumerable:Empty<string> ()",
      "class" : "Enumerable",
      "namespace" : "System.Linq",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.ConstraintChecker:.ctor (Mono.CSharp.IMemberContext)",
      "class" : "ConstraintChecker",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "5",
      "inline_failures" : "0",
    },
    {
      "name" : "GetHashCode",
      "signature" : "int int:GetHashCode ()",
      "class" : "Int32",
      "namespace" : "System",
      "wrapper_type" : "none",
      "inline_successes" : "6",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Security.Cryptography.HashAlgorithm:.ctor ()",
      "class" : "HashAlgorithm",
      "namespace" : "System.Security.Cryptography",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Location",
      "signature" : "Mono.CSharp.Location Mono.CSharp.Constraints:get_Location ()",
      "class" : "Constraints",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "op_Equality",
      "signature" : "bool System.Decimal:op_Equality (System.Decimal,System.Decimal)",
      "class" : "Decimal",
      "namespace" : "System",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "op_Equality",
      "signature" : "bool System.Reflection.Emit.Label:op_Equality (System.Reflection.Emit.Label,System.Reflection.Emit.Label)",
      "class" : "Label",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "case_785",
      "signature" : "void Mono.CSharp.CSharpParser:case_785 ()",
      "class" : "CSharpParser",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.TypeInferenceContext/BoundInfo:.ctor (Mono.CSharp.TypeSpec,Mono.CSharp.TypeInferenceContext/BoundKind)",
      "class" : "BoundInfo",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "7",
      "inline_failures" : "0",
    },
    {
      "name" : "__isinst_wrapper_IInterfaceMemberSpec",
      "signature" : "(wrapper isinst) object object:__isinst_wrapper_IInterfaceMemberSpec (object)",
      "class" : "Object",
      "namespace" : "System",
      "wrapper_type" : "isinst",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_InstanceType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.ConstructorInstanceQualifier:get_InstanceType ()",
      "class" : "ConstructorInstanceQualifier",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "set_DefiniteAssignment",
      "signature" : "void Mono.CSharp.FlowAnalysisContext:set_DefiniteAssignment (Mono.CSharp.DefiniteAssignmentBitSet)",
      "class" : "FlowAnalysisContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "34",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Fixed/Emitter:.ctor (Mono.CSharp.Expression,Mono.CSharp.LocalVariable)",
      "class" : "Emitter",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "6",
      "inline_failures" : "0",
    },
    {
      "name" : "get_OriginalExpression",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.ReducedExpression/ReducedConstantExpression:get_OriginalExpression ()",
      "class" : "ReducedConstantExpression",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_ShortName",
      "signature" : "string Mono.CSharp.InterfaceMemberBase:get_ShortName ()",
      "class" : "InterfaceMemberBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "6",
      "inline_failures" : "0",
    },
    {
      "name" : "FCallCompare",
      "signature" : "(wrapper managed-to-native) int System.Decimal:FCallCompare (System.Decimal&,System.Decimal&)",
      "class" : "Decimal",
      "namespace" : "System",
      "wrapper_type" : "managed-to-native",
      "inline_successes" : "10",
      "inline_failures" : "0",
    },
    {
      "name" : "DefineDynamicModule",
      "signature" : "System.Reflection.Emit.ModuleBuilder System.Reflection.Emit.AssemblyBuilder:DefineDynamicModule (object[])",
      "class" : "AssemblyBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Current",
      "signature" : "Mono.CSharp.Constraints System.Collections.Generic.List`1/Enumerator<Mono.CSharp.Constraints>:get_Current ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_IsCLSCompliant",
      "signature" : "bool Mono.CSharp.ImportedModuleDefinition:get_IsCLSCompliant ()",
      "class" : "ImportedModuleDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_PrimaryConstructorBaseArgumentsStart",
      "signature" : "Mono.CSharp.Location Mono.CSharp.TypeDefinition:get_PrimaryConstructorBaseArgumentsStart ()",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "set_Statement",
      "signature" : "void Mono.CSharp.LoopStatement:set_Statement (Mono.CSharp.Statement)",
      "class" : "LoopStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "16",
      "inline_failures" : "0",
    },
    {
      "name" : "set_Block",
      "signature" : "void Mono.CSharp.MethodCore:set_Block (Mono.CSharp.ToplevelBlock)",
      "class" : "MethodCore",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "20",
      "inline_failures" : "0",
    },
    {
      "name" : "get_IgnorePrivateMembers",
      "signature" : "bool Mono.CSharp.MetadataImporter:get_IgnorePrivateMembers ()",
      "class" : "MetadataImporter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "7",
      "inline_failures" : "0",
    },
    {
      "name" : "SetIsUsed",
      "signature" : "void Mono.CSharp.MemberCore:SetIsUsed ()",
      "class" : "MemberCore",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Collections.Generic.HashSet`1/Enumerator<Mono.CSharp.ITypeDefinition>:Dispose ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Collections.Generic.List`1/Enumerator<Mono.CSharp.HoistedParameter>:Dispose ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "AddDeclarativeSecurity",
      "signature" : "void System.Reflection.Emit.MethodBuilder:AddDeclarativeSecurity (object[])",
      "class" : "MethodBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_IsAccessor",
      "signature" : "bool Mono.CSharp.MemberSpec:get_IsAccessor ()",
      "class" : "MemberSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "17",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Current",
      "signature" : "System.Reflection.AssemblyName System.Collections.Generic.List`1/Enumerator<System.Reflection.AssemblyName>:get_Current ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "set_TopBlock",
      "signature" : "void Mono.CSharp.ParametersBlock:set_TopBlock (Mono.CSharp.ToplevelBlock)",
      "class" : "ParametersBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Count",
      "signature" : "int System.Collections.Generic.Dictionary`2<string, Mono.CSharp.SwitchLabel>:get_Count ()",
      "class" : "Dictionary`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.This:.ctor (Mono.CSharp.Location)",
      "class" : "This",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "41",
      "inline_failures" : "0",
    },
    {
      "name" : "BeginFilterHandler",
      "signature" : "void Mono.CSharp.EmitContext:BeginFilterHandler ()",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_CounterAnonymousContainers",
      "signature" : "int Mono.CSharp.TypeContainer:get_CounterAnonymousContainers ()",
      "class" : "TypeContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Location",
      "signature" : "Mono.CSharp.Location Mono.CSharp.LocalVariable:get_Location ()",
      "class" : "LocalVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "17",
      "inline_failures" : "0",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Collections.Generic.List`1/Enumerator<Mono.CSharp.Constraints>:Dispose ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Switch/DispatchStatement:.ctor (Mono.CSharp.Switch)",
      "class" : "DispatchStatement",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_BaseText",
      "signature" : "string Mono.CSharp.CompletionResult:get_BaseText ()",
      "class" : "CompletionResult",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_IsDefaultArgument",
      "signature" : "bool Mono.CSharp.Argument:get_IsDefaultArgument ()",
      "class" : "Argument",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1<Mono.CSharp.AbstractMessage>:.ctor ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Current",
      "signature" : "Mono.CSharp.MethodSpec System.Collections.Generic.List`1/Enumerator<Mono.CSharp.MethodSpec>:get_Current ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_UnwrapRight",
      "signature" : "Mono.CSharp.Nullable.Unwrap Mono.CSharp.Nullable.LiftedBinaryOperator:get_UnwrapRight ()",
      "class" : "LiftedBinaryOperator",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
      "inline_successes" : "27",
      "inline_failures" : "0",
    },
    {
      "name" : "GetAttributeDefaultMember",
      "signature" : "string Mono.CSharp.TypeDefinition:GetAttributeDefaultMember ()",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "set_DirectMethodGroupConversion",
      "signature" : "void Mono.CSharp.AnonymousMethodBody:set_DirectMethodGroupConversion (Mono.CSharp.MethodGroupExpr)",
      "class" : "AnonymousMethodBody",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Get",
      "signature" : "Mono.CSharp.PropertyBase/PropertyMethod Mono.CSharp.PropertyBase:get_Get ()",
      "class" : "PropertyBase",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "38",
      "inline_failures" : "0",
    },
    {
      "name" : "GetPublicKey",
      "signature" : "byte[] System.Reflection.AssemblyName:GetPublicKey ()",
      "class" : "AssemblyName",
      "namespace" : "System.Reflection",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Collections.Generic.List`1/Enumerator<Mono.CSharp.DefiniteAssignmentBitSet>:Dispose ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1<Mono.CSharp.MethodSpec>:.ctor ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "5",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Settings",
      "signature" : "Mono.CSharp.CompilerSettings Mono.CSharp.CompilerContext:get_Settings ()",
      "class" : "CompilerContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "105",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Container",
      "signature" : "Mono.CSharp.NamespaceContainer Mono.CSharp.ExtensionMethodCandidates:get_Container ()",
      "class" : "ExtensionMethodCandidates",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_ILOffset",
      "signature" : "int System.Reflection.Emit.ILGenerator:get_ILOffset ()",
      "class" : "ILGenerator",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Parameter",
      "signature" : "Mono.CSharp.ParameterReference Mono.CSharp.HoistedParameter:get_Parameter ()",
      "class" : "HoistedParameter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_HasExplicitLayout",
      "signature" : "bool Mono.CSharp.TypeDefinition:get_HasExplicitLayout ()",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.OverloadResolver/NoBaseMembers:.ctor ()",
      "class" : "NoBaseMembers",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Right",
      "signature" : "Mono.CSharp.Expression Mono.CSharp.Binary:get_Right ()",
      "class" : "Binary",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "5",
      "inline_failures" : "0",
    },
    {
      "name" : "get_CurrentTypeParameters",
      "signature" : "Mono.CSharp.TypeParameters Mono.CSharp.DocumentationMemberContext:get_CurrentTypeParameters ()",
      "class" : "DocumentationMemberContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Reflection.MethodBase:.ctor ()",
      "class" : "MethodBase",
      "namespace" : "System.Reflection",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "Emit",
      "signature" : "void Mono.CSharp.EmitContext:Emit (System.Reflection.Emit.OpCode,System.Reflection.Emit.Label[])",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "8",
      "inline_failures" : "0",
    },
    {
      "name" : "get_IsConstructor",
      "signature" : "bool Mono.CSharp.MethodSpec:get_IsConstructor ()",
      "class" : "MethodSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : "get_IsReadOnly",
      "signature" : "bool Mono.CSharp.FieldSpec:get_IsReadOnly ()",
      "class" : "FieldSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : "set_VariableDeclaration",
      "signature" : "void Mono.CSharp.ArrayInitializer:set_VariableDeclaration (Mono.CSharp.BlockVariable)",
      "class" : "ArrayInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "__castclass_wrapper_IGenericMethodDefinition",
      "signature" : "(wrapper castclass) object object:__castclass_wrapper_IGenericMethodDefinition (object)",
      "class" : "Object",
      "namespace" : "System",
      "wrapper_type" : "castclass",
      "inline_successes" : "14",
      "inline_failures" : "0",
    },
    {
      "name" : "get_HasCustomAccessModifier",
      "signature" : "bool Mono.CSharp.PropertyBase/PropertyMethod:get_HasCustomAccessModifier ()",
      "class" : "PropertyMethod",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "5",
      "inline_failures" : "0",
    },
    {
      "name" : "get_MetaObject",
      "signature" : "System.Dynamic.DynamicMetaObject Mono.CSharp.RuntimeValueExpression:get_MetaObject ()",
      "class" : "RuntimeValueExpression",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_IsDelegateInvoke",
      "signature" : "bool Mono.CSharp.OverloadResolver:get_IsDelegateInvoke ()",
      "class" : "OverloadResolver",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "5",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Item1",
      "signature" : "Mono.CSharp.GotoCase System.Tuple`2<Mono.CSharp.GotoCase, Mono.CSharp.Constant>:get_Item1 ()",
      "class" : "Tuple`2",
      "namespace" : "System",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_TypeParameter",
      "signature" : "Mono.CSharp.SimpleMemberName Mono.CSharp.Constraints:get_TypeParameter ()",
      "class" : "Constraints",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "5",
      "inline_failures" : "0",
    },
    {
      "name" : "op_LessThan",
      "signature" : "bool System.Decimal:op_LessThan (System.Decimal,System.Decimal)",
      "class" : "Decimal",
      "namespace" : "System",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_HasClauseWithAwait",
      "signature" : "bool Mono.CSharp.TryCatch:get_HasClauseWithAwait ()",
      "class" : "TryCatch",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "set_InstanceType",
      "signature" : "void Mono.CSharp.ConstructorInstanceQualifier:set_InstanceType (Mono.CSharp.TypeSpec)",
      "class" : "ConstructorInstanceQualifier",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_DefiniteAssignmentOnTrue",
      "signature" : "Mono.CSharp.DefiniteAssignmentBitSet Mono.CSharp.FlowAnalysisContext:get_DefiniteAssignmentOnTrue ()",
      "class" : "FlowAnalysisContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "16",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Owner",
      "signature" : "Mono.CSharp.Attributable Mono.CSharp.Attribute:get_Owner ()",
      "class" : "Attribute",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1<Mono.CSharp.SourceFile/LocationRegion>:.ctor ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "GetVariableMangledName",
      "signature" : "string Mono.CSharp.AnonymousMethodStorey:GetVariableMangledName (Mono.CSharp.ResolveContext,Mono.CSharp.LocalVariable)",
      "class" : "AnonymousMethodStorey",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Setter",
      "signature" : "Mono.CSharp.MethodSpec Mono.CSharp.PropertyOrIndexerExpr`1<Mono.CSharp.PropertySpec>:get_Setter ()",
      "class" : "PropertyOrIndexerExpr`1",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : "get_ReturnType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.MethodOrOperator:get_ReturnType ()",
      "class" : "MethodOrOperator",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "19",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Arguments",
      "signature" : "Mono.CSharp.Arguments Mono.CSharp.DynamicExpressionStatement:get_Arguments ()",
      "class" : "DynamicExpressionStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "16",
      "inline_failures" : "0",
    },
    {
      "name" : "DefineUnmanagedResource",
      "signature" : "void System.Reflection.Emit.AssemblyBuilder:DefineUnmanagedResource (object[])",
      "class" : "AssemblyBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.EqualityComparer`1<Mono.CSharp.SourceFile/LocationRegion>:.ctor ()",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Current",
      "signature" : "Mono.CSharp.WarningRegions/PragmaCmd System.Collections.Generic.List`1/Enumerator<Mono.CSharp.WarningRegions/PragmaCmd>:get_Current ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "set_PrimaryConstructorBaseArgumentsStart",
      "signature" : "void Mono.CSharp.TypeDefinition:set_PrimaryConstructorBaseArgumentsStart (Mono.CSharp.Location)",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Key",
      "signature" : "Mono.CSharp.ArrayContainer/TypeRankPair System.Collections.Generic.KeyValuePair`2<Mono.CSharp.ArrayContainer/TypeRankPair, Mono.CSharp.ArrayContainer>:get_Key ()",
      "class" : "KeyValuePair`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Current",
      "signature" : "Mono.CompilerServices.SymbolWriter.CapturedVariable System.Collections.Generic.List`1/Enumerator<Mono.CompilerServices.SymbolWriter.CapturedVariable>:get_Current ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "set_IgnorePrivateMembers",
      "signature" : "void Mono.CSharp.MetadataImporter:set_IgnorePrivateMembers (bool)",
      "class" : "MetadataImporter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "AddInterfaceImplementation",
      "signature" : "void System.Reflection.Emit.TypeBuilder:AddInterfaceImplementation (System.Type)",
      "class" : "TypeBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.List`1<bool>:.ctor ()",
      "class" : "List`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Field",
      "signature" : "Mono.CSharp.Field Mono.CSharp.HoistedVariable:get_Field ()",
      "class" : "HoistedVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "9",
      "inline_failures" : "0",
    },
    {
      "name" : "DefineParameter",
      "signature" : "System.Reflection.Emit.ParameterBuilder System.Reflection.Emit.MethodBuilder:DefineParameter (object[])",
      "class" : "MethodBuilder",
      "namespace" : "System.Reflection.Emit",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Resolved",
      "signature" : "bool Mono.CSharp.ParametersBlock:get_Resolved ()",
      "class" : "ParametersBlock",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_ExpressionValue",
      "signature" : "Mono.CSharp.VariableReference Mono.CSharp.Switch:get_ExpressionValue ()",
      "class" : "Switch",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "BeginExceptionBlock",
      "signature" : "void Mono.CSharp.EmitContext:BeginExceptionBlock ()",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "5",
      "inline_failures" : "0",
    },
    {
      "name" : "set_CounterAnonymousContainers",
      "signature" : "void Mono.CSharp.TypeContainer:set_CounterAnonymousContainers (int)",
      "class" : "TypeContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_ErrorsCount",
      "signature" : "int Mono.CSharp.ReportPrinter:get_ErrorsCount ()",
      "class" : "ReportPrinter",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "57",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Name",
      "signature" : "string Mono.CSharp.LocalVariable:get_Name ()",
      "class" : "LocalVariable",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "27",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Current",
      "signature" : "System.Collections.Generic.List`1<Mono.CSharp.TypeSpec> System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator<string, System.Collections.Generic.List`1<Mono.CSharp.TypeSpec>>:get_Current ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.Fixed/StringEmitter:.ctor (Mono.CSharp.Expression,Mono.CSharp.LocalVariable)",
      "class" : "StringEmitter",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_IsExtensionType",
      "signature" : "bool Mono.CSharp.Argument:get_IsExtensionType ()",
      "class" : "Argument",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Collections.Generic.EqualityComparer`1<Mono.CSharp.Location>:.ctor ()",
      "class" : "EqualityComparer`1",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "3",
      "inline_failures" : "0",
    },
    {
      "name" : "get_CLSCompliantAttribute",
      "signature" : "Mono.CSharp.Attribute Mono.CSharp.AssemblyDefinition:get_CLSCompliantAttribute ()",
      "class" : "AssemblyDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "set_UnwrapRight",
      "signature" : "void Mono.CSharp.Nullable.LiftedBinaryOperator:set_UnwrapRight (Mono.CSharp.Nullable.Unwrap)",
      "class" : "LiftedBinaryOperator",
      "namespace" : "Mono.CSharp.Nullable",
      "wrapper_type" : "none",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Value",
      "signature" : "Mono.CSharp.NamedArgument System.Collections.Generic.KeyValuePair`2<Mono.CSharp.MemberExpr, Mono.CSharp.NamedArgument>:get_Value ()",
      "class" : "KeyValuePair`2",
      "namespace" : "System.Collections.Generic",
      "wrapper_type" : "none",
      "inline_successes" : "5",
      "inline_failures" : "0",
    },
    {
      "name" : "Empty",
      "signature" : "Mono.CSharp.LocatedToken[] System.Array:Empty<Mono.CSharp.LocatedToken> ()",
      "class" : "Array",
      "namespace" : "System",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : "get_MemberType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.PropertySpec:get_MemberType ()",
      "class" : "PropertySpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "6",
      "inline_failures" : "0",
    },
    {
      "name" : "Dispose",
      "signature" : "void System.Collections.Generic.List`1/Enumerator<string>:Dispose ()",
      "class" : "Enumerator",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "4",
      "inline_failures" : "0",
    },
    {
      "name" : "MarkReachable",
      "signature" : "void Mono.CSharp.ExpressionStatement:MarkReachable (Mono.CSharp.Reachability)",
      "class" : "ExpressionStatement",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_SourceFiles",
      "signature" : "System.Collections.Generic.List`1<Mono.CSharp.SourceFile> Mono.CSharp.CompilerContext:get_SourceFiles ()",
      "class" : "CompilerContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "6",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Type",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.MissingTypeSpecReference:get_Type ()",
      "class" : "MissingTypeSpecReference",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Evaluator",
      "signature" : "Mono.CSharp.Evaluator Mono.CSharp.ModuleContainer:get_Evaluator ()",
      "class" : "ModuleContainer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "10",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Context",
      "signature" : "Mono.CSharp.IMemberContext Mono.CSharp.ExtensionMethodCandidates:get_Context ()",
      "class" : "ExtensionMethodCandidates",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Arguments",
      "signature" : "Mono.CSharp.Arguments Mono.CSharp.ConstructorInitializer:get_Arguments ()",
      "class" : "ConstructorInitializer",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "2",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void Mono.CSharp.WarningRegions/PragmaCmd:.ctor (int)",
      "class" : "PragmaCmd",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "10",
      "inline_failures" : "0",
    },
    {
      "name" : "set_HasExplicitLayout",
      "signature" : "void Mono.CSharp.TypeDefinition:set_HasExplicitLayout (bool)",
      "class" : "TypeDefinition",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : ".ctor",
      "signature" : "void System.Reflection.Assembly:.ctor ()",
      "class" : "Assembly",
      "namespace" : "System.Reflection",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_ModFlags",
      "signature" : "Mono.CSharp.Modifiers Mono.CSharp.MemberCore:get_ModFlags ()",
      "class" : "MemberCore",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "241",
      "inline_failures" : "0",
    },
    {
      "name" : "get_MemberDefinition",
      "signature" : "Mono.CSharp.IMethodDefinition Mono.CSharp.MethodSpec:get_MemberDefinition ()",
      "class" : "MethodSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "15",
      "inline_failures" : "0",
    },
    {
      "name" : "get_MemberType",
      "signature" : "Mono.CSharp.TypeSpec Mono.CSharp.FieldSpec:get_MemberType ()",
      "class" : "FieldSpec",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "21",
      "inline_failures" : "0",
    },
    {
      "name" : "set_Index",
      "signature" : "void Mono.CompilerServices.SymbolWriter.MethodEntry:set_Index (int)",
      "class" : "MethodEntry",
      "namespace" : "Mono.CompilerServices.SymbolWriter",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_Property",
      "signature" : "Mono.CSharp.PropertyBase Mono.CSharp.PropertyBase/PropertyMethod:get_Property ()",
      "class" : "PropertyMethod",
      "namespace" : "",
      "wrapper_type" : "none",
      "inline_successes" : "1",
      "inline_failures" : "0",
    },
    {
      "name" : "get_MemberContext",
      "signature" : "Mono.CSharp.IMemberContext Mono.CSharp.EmitContext:get_MemberContext ()",
      "class" : "EmitContext",
      "namespace" : "Mono.CSharp",
      "wrapper_type" : "none",
      "inline_successes" : "17",
      "inline_failures" : "0",
    }]
  }